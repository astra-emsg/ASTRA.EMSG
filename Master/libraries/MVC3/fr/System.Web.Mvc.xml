<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Mvc</name>
  </assembly>
  <members>
    <member name="T:System.Web.Mvc.AcceptVerbsAttribute">
      <summary>Représente un attribut qui spécifie les verbes HTTP auxquels une méthode d'action doit répondre.</summary>
    </member>
    <member name="M:System.Web.Mvc.AcceptVerbsAttribute.#ctor(System.String[])">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.AcceptVerbsAttribute" /> en utilisant une liste de verbes HTTP auxquels la méthode d'action doit répondre.</summary>
      <param name="verbs">Verbes HTTP auxquels la méthode d'action doit répondre.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="verbs" /> a la valeur null ou de longueur nulle.</exception>
    </member>
    <member name="M:System.Web.Mvc.AcceptVerbsAttribute.#ctor(System.Web.Mvc.HttpVerbs)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.AcceptVerbsAttribute" /> en utilisant les verbes HTTP auxquels la méthode d'action doit répondre.</summary>
      <param name="verbs">Verbes HTTP auxquels la méthode d'action doit répondre.</param>
    </member>
    <member name="M:System.Web.Mvc.AcceptVerbsAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Détermine si les informations de méthode spécifiées sont valides pour le contexte du contrôleur spécifié.</summary>
      <returns>true si les informations de méthode sont valides ; sinon, false.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="methodInfo">Informations de méthode.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="controllerContext " />a la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.AcceptVerbsAttribute.Verbs">
      <summary>Obtient ou définit la liste des verbes HTTP auxquels la méthode d'action doit répondre.</summary>
      <returns>Liste des verbes HTTP auxquels la méthode d'action doit répondre.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionDescriptor">
      <summary>Fournit des informations sur une méthode d'action, par exemple son nom, son contrôleur, ses paramètres, ses attributs et ses filtres.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ActionDescriptor" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ActionDescriptor.ActionName">
      <summary>Obtient le nom de la méthode d'action.</summary>
      <returns>Nom de la méthode d'action.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionDescriptor.ControllerDescriptor">
      <summary>Obtient le descripteur du contrôleur.</summary>
      <returns>Descripteur du contrôleur.</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Exécute la méthode d'action en utilisant les paramètres et le contexte du contrôleur spécifiés.</summary>
      <returns>Résultat de l'exécution de la méthode d'action.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="parameters">Paramètres de la méthode d'action.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Retourne un tableau des attributs personnalisés définis pour ce membre, à l'exception des attributs nommés.</summary>
      <returns>Tableau d'attributs personnalisés ou tableau vide s'il n'existe aucun attribut personnalisé.</returns>
      <param name="inherit">true pour rechercher l'attribut personnalisé hérité dans la chaîne de hiérarchie ; sinon false.</param>
      <exception cref="T:System.TypeLoadException">Impossible de charger le type d'attribut personnalisé.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Il existe plusieurs attributs de type <paramref name="attributeType" /> défini pour ce membre.</exception>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Retourne un tableau des attributs personnalisés définis pour ce membre, identifiés par type.</summary>
      <returns>Tableau d'attributs personnalisés ou tableau vide en l'absence d'attributs personnalisés du type spécifié.</returns>
      <param name="attributeType">Type des attributs personnalisés.</param>
      <param name="inherit">true pour rechercher l'attribut personnalisé hérité dans la chaîne de hiérarchie ; sinon false.</param>
      <exception cref="T:System.TypeLoadException">Impossible de charger le type d'attribut personnalisé.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Il existe plusieurs attributs de type <paramref name="attributeType" /> défini pour ce membre.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="attritubeType" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetFilters">
      <summary>Retourne les filtres associés à cette méthode d'action.</summary>
      <returns>Filtres associés à cette méthode d'action.</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetParameters">
      <summary>Retourne les paramètres de la méthode d'action.</summary>
      <returns>Paramètres de la méthode d'action.</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetSelectors">
      <summary>Retourne les sélecteurs de méthode d'action.</summary>
      <returns>Sélecteurs de méthode d'action.</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Détermine si une ou plusieurs instances du type d'attribut spécifié sont définies pour ce membre.</summary>
      <returns>true si <paramref name="attributeType" /> est défini pour ce membre ; sinon, false.</returns>
      <param name="attributeType">Type de l'attribut personnalisé.</param>
      <param name="inherit">true pour rechercher l'attribut personnalisé hérité dans la chaîne de hiérarchie ; sinon false.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="attritubeType" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ActionDescriptor.UniqueId">
      <summary>Obtient l'ID unique du descripteur de l'action à l'aide de l'initialisation tardive.</summary>
      <returns>ID unique.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionExecutedContext">
      <summary>Fournit le contexte de la méthode ActionExecuted de la classe <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutedContext.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ActionExecutedContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutedContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Boolean,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ActionExecutedContext" />.</summary>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="actionDescriptor">Descripteur de la méthode d'action.</param>
      <param name="canceled">true si l'action est annulée.</param>
      <param name="exception">L'objet exception.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="actionDescriptor" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.ActionDescriptor">
      <summary>Obtient ou définit le descripteur de l'action.</summary>
      <returns>Descripteur de l'action.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.Canceled">
      <summary>Obtient ou définit une valeur qui indique que cet objet <see cref="T:System.Web.Mvc.ActionExecutedContext" /> est annulé.</summary>
      <returns>true si le contexte est annulé ; sinon, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.Exception">
      <summary>Obtient ou définit l'exception qui s'est produite lors de l'exécution de la méthode d'action, le cas échéant.</summary>
      <returns>Exception qui s'est produite lors de l'exécution de la méthode d'action.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.ExceptionHandled">
      <summary>Obtient ou définit une valeur qui indique si l'exception est gérée.</summary>
      <returns>true si l'exception est gérée ; sinon false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.Result">
      <summary>Obtient ou définit le résultat retourné par la méthode d'action.</summary>
      <returns>Résultat retourné par la méthode d'action.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionExecutingContext">
      <summary>Fournit le contexte de la méthode ActionExecuting de la classe <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutingContext.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ActionExecutingContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutingContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ActionExecutingContext" /> en utilisant le contexte du contrôleur, le descripteur d'action et les paramètres de méthode d'action spécifiés.</summary>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="actionDescriptor">Descripteur de l'action.</param>
      <param name="actionParameters">Paramètres de la méthode d'action.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="ActionParameters" /> ou <paramref name="actionDescriptor" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutingContext.ActionDescriptor">
      <summary>Obtient ou définit le descripteur de l'action.</summary>
      <returns>Descripteur de l'action.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutingContext.ActionParameters">
      <summary>Obtient ou définit les paramètres de méthode d'action.</summary>
      <returns>Paramètres de la méthode d'action.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutingContext.Result">
      <summary>Obtient ou définit le résultat retourné par la méthode d'action.</summary>
      <returns>Résultat retourné par la méthode d'action.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionFilterAttribute">
      <summary>Représente la classe de base pour tous les attributs de filtre d'action.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Appelée par l'infrastructure MVC après l'exécution de la méthode d'action.</summary>
      <param name="filterContext">Contexte du filtre.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Appelée par l'infrastructure MVC avant l'exécution de la méthode d'action.</summary>
      <param name="filterContext">Contexte du filtre.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Appelée par l'infrastructure MVC après l'exécution du résultat de l'action.</summary>
      <param name="filterContext">Contexte du filtre.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Appelée par l'infrastructure MVC avant l'exécution du résultat de l'action.</summary>
      <param name="filterContext">Contexte du filtre.</param>
    </member>
    <member name="T:System.Web.Mvc.ActionMethodSelectorAttribute">
      <summary>Représente un attribut utilisé pour influencer la sélection d'une méthode d'action.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionMethodSelectorAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ActionMethodSelectorAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionMethodSelectorAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Détermine si la sélection de la méthode d'action est valide pour le contexte du contrôleur spécifié.</summary>
      <returns>true si la sélection de la méthode d'action est valide pour le contexte du contrôleur spécifié ; sinon, false.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="methodInfo">Informations relatives à la méthode d'action.</param>
    </member>
    <member name="T:System.Web.Mvc.ActionNameAttribute">
      <summary>Représente un attribut utilisé pour le nom d'une action.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionNameAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ActionNameAttribute" />.</summary>
      <param name="name">Nom de l'action.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.ActionNameAttribute.IsValidName(System.Web.Mvc.ControllerContext,System.String,System.Reflection.MethodInfo)">
      <summary>Détermine si le nom d'action est valide dans le contexte du contrôleur spécifié.</summary>
      <returns>true si le nom d'action est valide dans le contexte du contrôleur spécifié ; sinon, false.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="actionName">Nom de l'action.</param>
      <param name="methodInfo">Informations relatives à la méthode d'action.</param>
    </member>
    <member name="P:System.Web.Mvc.ActionNameAttribute.Name">
      <summary>Obtient ou définit le nom de l'action.</summary>
      <returns>Nom de l'action.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionNameSelectorAttribute">
      <summary>Représente un attribut qui affecte la sélection d'une méthode d'action.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionNameSelectorAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ActionNameSelectorAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionNameSelectorAttribute.IsValidName(System.Web.Mvc.ControllerContext,System.String,System.Reflection.MethodInfo)">
      <summary>Détermine si le nom d'action est valide dans le contexte du contrôleur spécifié.</summary>
      <returns>true si le nom d'action est valide dans le contexte du contrôleur spécifié ; sinon, false.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="actionName">Nom de l'action.</param>
      <param name="methodInfo">Informations relatives à la méthode d'action.</param>
    </member>
    <member name="T:System.Web.Mvc.ActionResult">
      <summary>Encapsule le résultat d'une méthode d'action et permet d'exécuter une opération au niveau de l'infrastructure pour le compte de la méthode d'action.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionResult.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Permet le traitement du résultat d'une méthode d'action par un type personnalisé qui hérite de la classe <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Contexte dans lequel le résultat est exécuté. Les informations de contexte incluent le contrôleur, le contenu HTTP, le contexte de la demande et les données d'itinéraire.</param>
    </member>
    <member name="T:System.Web.Mvc.ActionSelector">
      <summary>Représente un délégué qui contient la logique de sélection d'une méthode d'action.</summary>
      <returns>true si une méthode d'action a été sélectionnée ; sinon, false.</returns>
      <param name="controllerContext">Contexte de requête HTTP actuel.</param>
    </member>
    <member name="T:System.Web.Mvc.AdditionalMetadataAttribute">
      <summary>Implémente l'interface <see cref="T:System.Web.Mvc.IMetadataAware" /> pour la prise en charge des métadonnées supplémentaires. </summary>
    </member>
    <member name="M:System.Web.Mvc.AdditionalMetadataAttribute.#ctor(System.String,System.Object)"></member>
    <member name="P:System.Web.Mvc.AdditionalMetadataAttribute.Name"></member>
    <member name="M:System.Web.Mvc.AdditionalMetadataAttribute.OnMetadataCreated(System.Web.Mvc.ModelMetadata)"></member>
    <member name="P:System.Web.Mvc.AdditionalMetadataAttribute.TypeId"></member>
    <member name="P:System.Web.Mvc.AdditionalMetadataAttribute.Value"></member>
    <member name="T:System.Web.Mvc.AjaxHelper">
      <summary>Représente la prise en charge du rendu HTML dans les scénarios AJAX au sein d'un affichage.</summary>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.AjaxHelper" /> en utilisant le contexte d'affichage et le conteneur de données d'affichage spécifiés.</summary>
      <param name="viewContext">Contexte d'affichage.</param>
      <param name="viewDataContainer">Conteneur des données d'affichage.</param>
      <exception cref="T:System.ArgumentNullException">Un des paramètres ou les deux ont la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.AjaxHelper" /> en utilisant le contexte d'affichage, le conteneur de données d'affichage et la collection d'itinéraires spécifiés.</summary>
      <param name="viewContext">Contexte d'affichage.</param>
      <param name="viewDataContainer">Conteneur des données d'affichage.</param>
      <param name="routeCollection">Collection d'itinéraires d'URL.</param>
      <exception cref="T:System.ArgumentNullException">Un ou plusieurs paramètres ont la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.GlobalizationScriptPath">
      <summary>Obtient ou définit le chemin d'accès racine pour l'emplacement à utiliser pour les fichiers de script de globalisation.</summary>
      <returns>Emplacement du dossier dans lequel les fichiers de script de globalisation sont stockés. L'emplacement par défaut est "~/Scripts/Globalization".</returns>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper.JavaScriptStringEncode(System.String)">
      <summary>Sérialise le message spécifié et retourne la chaîne au format JSON résultante.</summary>
      <returns>Message sérialisé comme chaîne au format JSON.</returns>
      <param name="message">Message à sérialiser.</param>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.RouteCollection">
      <summary>Obtient la collection d'itinéraires d'URL pour l'application.</summary>
      <returns>Collection d'itinéraires de l'application.</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewContext">
      <summary>Obtient les informations de contexte relatives à l'affichage.</summary>
      <returns>Contexte de la vue.</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewData">
      <summary>Obtient le dictionnaire de données d'affichage actuel.</summary>
      <returns>Dictionnaire des données d'affichage.</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewDataContainer">
      <summary>Obtient le conteneur de données d'affichage.</summary>
      <returns>Conteneur des données d'affichage.</returns>
    </member>
    <member name="T:System.Web.Mvc.AjaxHelper`1">
      <summary>Représente la prise en charge du rendu HTML dans les scénarios AJAX au sein d'un affichage fortement typé.</summary>
      <typeparam name="TModel">Type du modèle.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.AjaxHelper`1" /> en utilisant le contexte d'affichage et le conteneur de données d'affichage spécifiés.</summary>
      <param name="viewContext">Contexte d'affichage.</param>
      <param name="viewDataContainer">Conteneur des données d'affichage.</param>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.AjaxHelper`1" /> en utilisant le contexte d'affichage, le conteneur de données d'affichage et la collection d'itinéraires d'URL spécifiés.</summary>
      <param name="viewContext">Contexte d'affichage.</param>
      <param name="viewDataContainer">Conteneur des données d'affichage.</param>
      <param name="routeCollection">Collection d'itinéraires d'URL.</param>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper`1.ViewData">
      <summary>Obtient la version fortement typée du dictionnaire de données d'affichage.</summary>
      <returns>Dictionnaire de données fortement typé de l'affichage.</returns>
    </member>
    <member name="T:System.Web.Mvc.AjaxRequestExtensions">
      <summary>Représente une classe qui étend la classe <see cref="T:System.Web.HttpRequestBase" /> en ajoutant la possibilité de déterminer si une requête HTTP est une requête AJAX.</summary>
    </member>
    <member name="M:System.Web.Mvc.AjaxRequestExtensions.IsAjaxRequest(System.Web.HttpRequestBase)"></member>
    <member name="T:System.Web.Mvc.AreaRegistration">
      <summary>Offre un moyen d'enregistrer une ou plusieurs zones dans une application ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.AreaRegistration" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistration.AreaName">
      <summary>Obtient le nom de la zone à inscrire.</summary>
      <returns>Nom de la zone à enregistrer.</returns>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.RegisterAllAreas">
      <summary>Enregistre toutes les zones dans une application ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.RegisterAllAreas(System.Object)">
      <summary>Inscrit toutes les zones dans une application ASP.NET MVC à l'aide des informations définies par l'utilisateur spécifiées.</summary>
      <param name="state">Objet qui contient les informations définies par l'utilisateur à passer à la zone.</param>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.RegisterArea(System.Web.Mvc.AreaRegistrationContext)">
      <summary>Inscrit une zone dans une application ASP.NET MVC à l'aide des informations de contexte de la zone spécifiée.</summary>
      <param name="context">Encapsule les informations requises pour inscrire la zone.</param>
    </member>
    <member name="T:System.Web.Mvc.AreaRegistrationContext">
      <summary>Encapsule les informations requises pour inscrire une zone dans une application ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.#ctor(System.String,System.Web.Routing.RouteCollection)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.AreaRegistrationContext" /> en utilisant le nom de zone et la collection d'itinéraires spécifiés.</summary>
      <param name="areaName">Nom de la zone à enregistrer.</param>
      <param name="routes">Collection d'itinéraires de l'application.</param>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.#ctor(System.String,System.Web.Routing.RouteCollection,System.Object)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.AreaRegistrationContext" />, à l'aide du nom de zone, de la collection d'itinéraires et des données définies par l'utilisateur spécifiés.</summary>
      <param name="areaName">Nom de la zone à enregistrer.</param>
      <param name="routes">Collection d'itinéraires de l'application.</param>
      <param name="state">Objet qui contient les informations définies par l'utilisateur à passer à la zone.</param>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.AreaName">
      <summary>Obtient le nom de la zone à inscrire.</summary>
      <returns>Nom de la zone à enregistrer.</returns>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String)">
      <summary>Mappe l'itinéraire de l'URL spécifié et l'associe à la zone spécifiée par la propriété <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" />.</summary>
      <returns>Référence à l'itinéraire mappé.</returns>
      <param name="name">Nom de l'itinéraire.</param>
      <param name="url">Modèle d'URL pour l'itinéraire.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="url" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object)">
      <summary>Mappe l'itinéraire de l'URL spécifié et l'associe à la zone spécifiée par la propriété <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" />, à l'aide des valeurs par défaut de l'itinéraire spécifiées.</summary>
      <returns>Référence à l'itinéraire mappé.</returns>
      <param name="name">Nom de l'itinéraire.</param>
      <param name="url">Modèle d'URL pour l'itinéraire.</param>
      <param name="defaults">Objet qui contient les valeurs d'itinéraire par défaut.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="url" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object,System.Object)">
      <summary>Mappe l'itinéraire de l'URL spécifié et l'associe à la zone spécifiée par la propriété <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" />, à l'aide des valeurs par défaut de l'itinéraire et des contraintes spécifiées.</summary>
      <returns>Référence à l'itinéraire mappé.</returns>
      <param name="name">Nom de l'itinéraire.</param>
      <param name="url">Modèle d'URL pour l'itinéraire.</param>
      <param name="defaults">Objet qui contient les valeurs d'itinéraire par défaut.</param>
      <param name="constraints">Ensemble d'expressions qui spécifient des valeurs valides pour un paramètre d'URL.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="url" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object,System.Object,System.String[])">
      <summary>Mappe l'itinéraire de l'URL spécifié et l'associe à la zone spécifiée par la propriété <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" />, à l'aide des valeurs par défaut de l'itinéraire, des contraintes et des espaces de noms spécifiés.</summary>
      <returns>Référence à l'itinéraire mappé.</returns>
      <param name="name">Nom de l'itinéraire.</param>
      <param name="url">Modèle d'URL pour l'itinéraire.</param>
      <param name="defaults">Objet qui contient les valeurs d'itinéraire par défaut.</param>
      <param name="constraints">Ensemble d'expressions qui spécifient des valeurs valides pour un paramètre d'URL.</param>
      <param name="namespaces">Jeu énumérable des espaces de noms pour l'application.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="url" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object,System.String[])">
      <summary>Mappe l'itinéraire de l'URL spécifié et l'associe à la zone spécifiée par la propriété <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" />, à l'aide des valeurs par défaut de l'itinéraire et des espaces de noms spécifiés.</summary>
      <returns>Référence à l'itinéraire mappé.</returns>
      <param name="name">Nom de l'itinéraire.</param>
      <param name="url">Modèle d'URL pour l'itinéraire.</param>
      <param name="defaults">Objet qui contient les valeurs d'itinéraire par défaut.</param>
      <param name="namespaces">Jeu énumérable des espaces de noms pour l'application.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="url" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.String[])">
      <summary>Mappe l'itinéraire de l'URL spécifié et l'associe à la zone spécifiée par la propriété <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" />, à l'aide des espaces de noms spécifiés.</summary>
      <returns>Référence à l'itinéraire mappé.</returns>
      <param name="name">Nom de l'itinéraire.</param>
      <param name="url">Modèle d'URL pour l'itinéraire.</param>
      <param name="namespaces">Jeu énumérable des espaces de noms pour l'application.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="url" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.Namespaces">
      <summary>Obtient les espaces de noms de l'application.</summary>
      <returns>Jeu énumérable des espaces de noms pour l'application.</returns>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.Routes">
      <summary>Obtient une collection d'itinéraires définis pour l'application.</summary>
      <returns>Collection d'itinéraires définis pour l'application.</returns>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.State">
      <summary>Obtient un objet qui contient les informations définies par l'utilisateur à passer à la zone.</summary>
      <returns>Objet qui contient les informations définies par l'utilisateur à passer à la zone.</returns>
    </member>
    <member name="T:System.Web.Mvc.AssociatedMetadataProvider">
      <summary>Fournit une classe abstraite pour implémenter un fournisseur de métadonnées.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.#ctor">
      <summary>Appelée à partir des constructeurs d'une classe dérivée pour initialiser la classe <see cref="T:System.Web.Mvc.AssociatedMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func`1,System.Void,System.Object)">
      <summary>En cas de substitution dans une classe dérivée, crée les métadonnées de modèle pour la propriété.</summary>
      <returns>Métadonnées de modèle de la propriété.</returns>
      <param name="attributes">Ensemble d'attributs.</param>
      <param name="containerType">Type du conteneur.</param>
      <param name="modelAccessor">Accesseur modèle.</param>
      <param name="modelType">Type du modèle.</param>
      <param name="propertyName">Nom de la propriété.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.FilterAttributes(System.Type,System.ComponentModel.PropertyDescriptor,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Obtient une liste d'attributs.</summary>
      <returns>Liste d'attributs.</returns>
      <param name="containerType">Type du conteneur.</param>
      <param name="propertyDescriptor">Descripteur de propriété.</param>
      <param name="attributes">Conteneur d'attributs.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Retourne une liste de propriétés pour le modèle.</summary>
      <returns>Liste de propriétés du modèle.</returns>
      <param name="container">Conteneur de modèle.</param>
      <param name="containerType">Type du conteneur.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperty(System.Func`1,System.Void,System.Object)">
      <summary>Retourne les métadonnées de la propriété spécifiée à l'aide du type de conteneur et du descripteur de propriété.</summary>
      <returns>Retourne <see cref="T:System.Web.Mvc.ModelMetadata" />.</returns>
      <param name="modelAccessor">Accesseur modèle.</param>
      <param name="containerType">Type du conteneur.</param>
      <param name="propertyDescriptor">Descripteur de propriété.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForType(System.Func`1,System.Void)">
      <summary>Retourne les métadonnées pour la propriété spécifiée à l'aide du type du modèle.</summary>
      <returns>Retourne <see cref="T:System.Web.Mvc.ModelMetadata" />.</returns>
      <param name="modelAccessor">Accesseur modèle.</param>
      <param name="modelType">Type du modèle.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetTypeDescriptor(System.Type)">
      <summary>Retourne le descripteur de type à partir du type spécifié.</summary>
      <returns>Descripteur de type.</returns>
      <param name="type">Type.</param>
    </member>
    <member name="T:System.Web.Mvc.AssociatedValidatorProvider">
      <summary>Fournit une classe abstraite pour les classes qui implémentent un fournisseur de validation.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.#ctor">
      <summary>Appelée à partir des constructeurs dans des classes dérivées pour initialiser la classe <see cref="T:System.Web.Mvc.AssociatedMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.GetTypeDescriptor(System.Type)">
      <summary>Obtient un descripteur de type pour le type spécifié.</summary>
      <returns>Descripteur de type pour le type spécifié.</returns>
      <param name="type">Type du fournisseur de validation.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Obtient les validateurs du modèle à l'aide des métadonnées et du contexte de contrôleur.</summary>
      <returns>Validateurs du modèle.</returns>
      <param name="metadata">Métadonnées.</param>
      <param name="context">Contexte du contrôleur.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Obtient les validateurs du modèle à l'aide des métadonnées, du contexte de contrôleur et d'une liste d'attributs.</summary>
      <returns>Validateurs du modèle.</returns>
      <param name="metadata">Métadonnées.</param>
      <param name="context">Contexte du contrôleur.</param>
      <param name="attributes">Liste d'attributs.</param>
    </member>
    <member name="T:System.Web.Mvc.AsyncController">
      <summary>Fournit la classe de base pour les contrôleurs asynchrones.</summary>
    </member>
    <member name="M:System.Web.Mvc.AsyncController.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.AsyncController" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.AsyncController.AsyncManager">
      <summary>Obtient l'instance de gestionnaire asynchrone.</summary>
      <returns>Instance de gestionnaire asynchrone.</returns>
    </member>
    <member name="M:System.Web.Mvc.AsyncController.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
      <summary>Appelé par ASP.NET pour initialiser le traitement de la requête asynchrone.</summary>
      <returns>État de l'opération asynchrone.</returns>
      <param name="requestContext">Contexte de la requête.</param>
      <param name="callback">Méthode de rappel asynchrone.</param>
      <param name="state">Objet d'état.</param>
    </member>
    <member name="M:System.Web.Mvc.AsyncController.BeginExecuteCore(System.AsyncCallback,System.Object)">
      <summary>Appelé par ASP.NET pendant l'initialisation du traitement de la requête asynchrone.</summary>
      <returns>État de l'opération asynchrone.</returns>
      <param name="callback">Méthode de rappel asynchrone.</param>
      <param name="state">Objet d'état.</param>
    </member>
    <member name="M:System.Web.Mvc.AsyncController.CreateActionInvoker">
      <summary>Crée un demandeur d'action.</summary>
      <returns>Demandeur d'action.</returns>
    </member>
    <member name="M:System.Web.Mvc.AsyncController.EndExecute(System.IAsyncResult)">
      <summary>Annule l'exécution d'une méthode d'action asynchrone.</summary>
      <param name="asyncResult">État du résultat asynchrone.</param>
    </member>
    <member name="M:System.Web.Mvc.AsyncController.EndExecuteCore(System.IAsyncResult)">
      <summary>Appelé par ASP.NET lorsque l'action asynchrone en cours est terminée.</summary>
      <param name="asyncResult">État du résultat asynchrone.</param>
    </member>
    <member name="M:System.Web.Mvc.AsyncController.System#Web#Mvc#Async#IAsyncController#BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
      <summary>Appelée par ASP.NET pour commencer l'exécution d'une méthode d'action asynchrone.</summary>
      <returns>État de l'opération asynchrone.</returns>
      <param name="requestContext">Contexte de la requête.</param>
      <param name="callback">Méthode de rappel asynchrone.</param>
      <param name="state">Objet contenant les informations que la méthode de rappel doit utiliser. Ce paramètre peut être null.</param>
    </member>
    <member name="M:System.Web.Mvc.AsyncController.System#Web#Mvc#Async#IAsyncController#EndExecute(System.IAsyncResult)">
      <summary>Annule l'exécution d'une méthode d'action asynchrone appelée par ASP.NET à la fin de l'exécution d'une méthode d'action asynchrone.</summary>
      <param name="asyncResult">État du résultat asynchrone.</param>
    </member>
    <member name="T:System.Web.Mvc.AsyncTimeoutAttribute">
      <summary>Représente un attribut utilisé afin de définir la valeur du délai d'expiration, en millisecondes, pour une méthode asynchrone.</summary>
    </member>
    <member name="M:System.Web.Mvc.AsyncTimeoutAttribute.#ctor(System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.AsyncTimeoutAttribute" />.</summary>
      <param name="duration">Valeur du délai d'attente, en millisecondes.</param>
    </member>
    <member name="P:System.Web.Mvc.AsyncTimeoutAttribute.Duration">
      <summary>Obtient la durée du délai d'expiration, en millisecondes.</summary>
      <returns>Durée du délai d'expiration, en millisecondes.</returns>
    </member>
    <member name="M:System.Web.Mvc.AsyncTimeoutAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Appelé par ASP.NET avant l'exécution de la méthode d'action asynchrone.</summary>
      <param name="filterContext">Contexte du filtre.</param>
    </member>
    <member name="T:System.Web.Mvc.AuthorizationContext">
      <summary>Encapsule les informations requises pour l'utilisation d'un attribut <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizationContext.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.AuthorizationContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizationContext.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.AuthorizationContext" /> en utilisant le contexte du contrôleur spécifié.</summary>
      <param name="controllerContext">Contexte dans lequel le résultat est exécuté. Les informations de contexte incluent le contrôleur, le contenu HTTP, le contexte de la demande et les données d'itinéraire.</param>
    </member>
    <member name="M:System.Web.Mvc.AuthorizationContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.AuthorizationContext" /> en utilisant le contexte de contrôleur et le descripteur d'action spécifiés.</summary>
      <param name="controllerContext">Contexte dans lequel le résultat est exécuté. Les informations de contexte incluent le contrôleur, le contenu HTTP, le contexte de la demande et les données d'itinéraire.</param>
      <param name="actionDescriptor">Objet qui fournit des informations sur une méthode d'action (par exemple, son nom, son contrôleur, ses paramètres, ses attributs et ses filtres).</param>
    </member>
    <member name="P:System.Web.Mvc.AuthorizationContext.ActionDescriptor">
      <summary>Fournit des informations sur la méthode d'action qui est marquée par l'attribut <see cref="T:System.Web.Mvc.AuthorizeAttribute" /> (par exemple, son nom, son contrôleur, ses paramètres, ses attributs et ses filtres).</summary>
      <returns>Descripteur d'action de la méthode d'action qui est marquée par l'attribut <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</returns>
    </member>
    <member name="P:System.Web.Mvc.AuthorizationContext.Result">
      <summary>Obtient ou définit le résultat retourné par une méthode d'action.</summary>
      <returns>Résultat retourné par une méthode d'action.</returns>
    </member>
    <member name="T:System.Web.Mvc.AuthorizeAttribute">
      <summary>Représente un attribut utilisé pour restreindre l'accès des appelants à une méthode d'action.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.AuthorizeCore(System.Web.HttpContextBase)">
      <summary>En cas de substitution, fournit un point d'entrée aux contrôles des autorisations personnalisés.</summary>
      <returns>true si l'utilisateur est autorisé ; sinon, false.</returns>
      <param name="httpContext">Contexte HTTP qui encapsule toutes les informations spécifiques à HTTP concernant une requête HTTP individuelle.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="httpContext" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.HandleUnauthorizedRequest(System.Web.Mvc.AuthorizationContext)">
      <summary>Traite les requêtes HTTP pour lesquelles l'autorisation échoue.</summary>
      <param name="filterContext">Encapsule les informations relatives à l'utilisation de <see cref="T:System.Web.Mvc.AuthorizeAttribute" />. L'objet <paramref name="filterContext" /> contient le contrôleur, le contexte HTTP, le contexte de la requête, le résultat de l'action et les données d'itinéraire.</param>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Appelée lorsqu'un processus demande une autorisation.</summary>
      <param name="filterContext">Contexte de filtre qui encapsule les informations relatives à l'utilisation de <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="filterContext" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.OnCacheAuthorization(System.Web.HttpContextBase)">
      <summary>Appelée lorsque le module de mise en cache demande une autorisation.</summary>
      <returns>Référence à l'état de validation.</returns>
      <param name="httpContext">Contexte HTTP qui encapsule toutes les informations spécifiques à HTTP concernant une requête HTTP individuelle.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="httpContext" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.AuthorizeAttribute.Roles">
      <summary>Obtient ou définit les rôles des utilisateurs.</summary>
      <returns>Rôles des utilisateurs.</returns>
    </member>
    <member name="P:System.Web.Mvc.AuthorizeAttribute.TypeId">
      <summary>Obtient l'identificateur unique pour cet attribut.</summary>
      <returns>Identificateur unique de l'attribut.</returns>
    </member>
    <member name="P:System.Web.Mvc.AuthorizeAttribute.Users">
      <summary>Obtient ou définit les utilisateurs autorisés.</summary>
      <returns>Utilisateurs autorisés.</returns>
    </member>
    <member name="T:System.Web.Mvc.BindAttribute">
      <summary>Représente un attribut utilisé pour fournir des détails sur le mode de liaison d'un modèle à un paramètre.</summary>
    </member>
    <member name="M:System.Web.Mvc.BindAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.BindAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.BindAttribute.Exclude">
      <summary>Obtient ou définit une liste de noms de propriétés délimités par des virgules pour lesquels la liaison n'est pas autorisée.</summary>
      <returns>Liste d'exclusion.</returns>
    </member>
    <member name="P:System.Web.Mvc.BindAttribute.Include">
      <summary>Obtient ou définit une liste de noms de propriétés délimités par des virgules pour lesquels la liaison est autorisée.</summary>
      <returns>Liste d'inclusion.</returns>
    </member>
    <member name="M:System.Web.Mvc.BindAttribute.IsPropertyAllowed(System.String)">
      <summary>Détermine si la propriété spécifiée est autorisée.</summary>
      <returns>true si la propriété spécifiée est autorisée ; sinon, false.</returns>
      <param name="propertyName">Nom de la propriété.</param>
    </member>
    <member name="P:System.Web.Mvc.BindAttribute.Prefix">
      <summary>Obtient ou définit le préfixe à utiliser lors du rendu d'une balise pour la liaison à un argument d'action ou à une propriété de modèle.</summary>
      <returns>Préfixe à utiliser.</returns>
    </member>
    <member name="T:System.Web.Mvc.BuildManagerCompiledView">
      <summary>Représente la classe de base pour les vues qui sont compilées par la classe BuildManager avant d'être restituées par un moteur d'affichage.</summary>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.#ctor(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.BuildManagerCompiledView" /> en utilisant le contexte du contrôleur et le chemin d'accès à la vue spécifiés.</summary>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="viewPath">Chemin d'accès de l'affichage.</param>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.Web.Mvc.IViewPageActivator)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.BuildManagerCompiledView" /> en utilisant le contexte du contrôleur, le chemin d'accès à la vue et l'activateur de page de vue spécifiés.</summary>
      <param name="controllerContext">Informations de contexte pour le contrôleur actuel. Ces informations comprennent le contexte HTTP, le contexte de requête, les données d'itinéraire, le contexte de vue de l'action parent, etc.</param>
      <param name="viewPath">Chemin d'accès à la vue qui sera restituée.</param>
      <param name="viewPageActivator">Objet responsable de la construction dynamique de la page de vue au moment de l'exécution. </param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="controllerContext" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="viewPath" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.Render(System.Web.Mvc.ViewContext,System.IO.TextWriter)">
      <summary>Restitue le contexte d'affichage spécifié à l'aide de l'objet writer spécifié.</summary>
      <param name="viewContext">Informations relatives à la restitution d'une vue, telles que les données d'affichage, les données temporaires et le contexte de formulaire.</param>
      <param name="writer">Objet writer.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="viewContext" /> a la valeur null.</exception>
      <exception cref="T:SInvalidOperationException">Une instance du type de vue n'a pas pu être créée.</exception>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.RenderView(System.Web.Mvc.ViewContext,System.IO.TextWriter,System.Object)">
      <summary>Lors de la substitution dans une classe dérivée, restitue le contexte de vue spécifié en utilisant l'objet writer et l'instance d'objet spécifiés.</summary>
      <param name="viewContext">Informations relatives à la restitution d'une vue, telles que les données d'affichage, les données temporaires et le contexte de formulaire.</param>
      <param name="writer">Objet writer.</param>
      <param name="instance">Objet contenant des informations supplémentaires susceptibles d'être utilisées dans la vue.</param>
    </member>
    <member name="P:System.Web.Mvc.BuildManagerCompiledView.ViewPath">
      <summary>Obtient ou définit le chemin d'accès de l'affichage.</summary>
      <returns>Chemin d'accès de l'affichage.</returns>
    </member>
    <member name="T:System.Web.Mvc.BuildManagerViewEngine">
      <summary>Fournit une classe de base pour les moteurs de vue.</summary>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerViewEngine.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.BuildManagerViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerViewEngine.#ctor(System.Web.Mvc.IViewPageActivator)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.BuildManagerViewEngine" /> à l'aide de l'activateur de page de vue spécifié.</summary>
      <param name="viewPageActivator">Activateur de page de vue.</param>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerViewEngine.FileExists(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Obtient une valeur qui indique si un fichier existe dans le système de fichiers virtuel (chemin d'accès) spécifié.</summary>
      <returns>true si le fichier existe dans le système de fichiers virtuel ; sinon, false.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="virtualPath">Chemin d'accès virtuel.</param>
    </member>
    <member name="P:System.Web.Mvc.BuildManagerViewEngine.ViewPageActivator">
      <summary>Obtient l'activateur de page de vue.</summary>
      <returns>Activateur de page de vue.</returns>
    </member>
    <member name="T:System.Web.Mvc.ByteArrayModelBinder">
      <summary>Mappe une demande de navigateur à un tableau d'octets.</summary>
    </member>
    <member name="M:System.Web.Mvc.ByteArrayModelBinder.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ByteArrayModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ByteArrayModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Lie le modèle à l'aide du contexte du contrôleur et du contexte de liaison spécifiés.</summary>
      <returns>Objet de données lié.</returns>
      <param name="controllerContext">Contexte dans lequel le contrôleur opère. Les informations de contexte incluent le contrôleur, le contenu HTTP, le contexte de la demande et les données d'itinéraire.</param>
      <param name="bindingContext">Contexte dans lequel le modèle est lié. Le contexte inclut des informations telles que l'objet de modèle, le nom et le type du modèle, le filtre de propriété et le fournisseur de valeur.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="bindingContext" /> a la valeur null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ChildActionOnlyAttribute">
      <summary>Représente un attribut utilisé pour indiquer qu'une méthode d'action doit être appelée uniquement comme une action enfant.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionOnlyAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ChildActionOnlyAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionOnlyAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Appelé lorsqu'une autorisation est requise.</summary>
      <param name="filterContext">Objet qui encapsule les informations requises pour autoriser l'accès à l'action enfant.</param>
    </member>
    <member name="T:System.Web.Mvc.ClientDataTypeModelValidatorProvider">
      <summary>Retourne les validateurs de modèle de type de données clients.</summary>
    </member>
    <member name="M:System.Web.Mvc.ClientDataTypeModelValidatorProvider.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ClientDataTypeModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ClientDataTypeModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Retourne les validateurs de modèle de type de données clients.</summary>
      <returns>Validateurs de modèle de type de données clients.</returns>
      <param name="metadata">Métadonnées.</param>
      <param name="context">Contexte.</param>
    </member>
    <member name="T:System.Web.Mvc.CompareAttribute">
      <summary>Fournit un attribut qui compare deux propriétés d'un modèle.</summary>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.CompareAttribute" />.</summary>
      <param name="otherProperty">Propriété à comparer avec la propriété actuelle.</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.FormatErrorMessage(System.String)">
      <summary>Applique la mise en forme à un message d'erreur en fonction du champ de données dans lequel l'erreur de comparaison s'est produite.</summary>
      <returns>Message d'erreur mis en forme.</returns>
      <param name="name">Nom du champ ayant provoqué l'échec de validation.</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.FormatPropertyForClientValidation(System.String)">
      <summary>Met en forme la propriété pour la validation côté client en la faisant précéder d'un astérisque (*) et d'un point.</summary>
      <returns>La chaîne « *. » est ajoutée au début de la propriété.</returns>
      <param name="property">Propriété.</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.GetClientValidationRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Obtient la liste de règles de validation client par comparaison de valeurs pour la propriété à l'aide des métadonnées et du contexte de contrôleur de modèle spécifiés.</summary>
      <returns>Liste de règles de validation client par comparaison de valeurs.</returns>
      <param name="metadata">Métadonnées du modèle.</param>
      <param name="context">Contexte du contrôleur.</param>
    </member>
    <member name="P:System.Web.Mvc.CompareAttribute.OtherProperty">
      <summary>Obtient la propriété à comparer avec la propriété actuelle.</summary>
      <returns>Propriété à comparer avec la propriété actuelle.</returns>
    </member>
    <member name="T:System.Web.Mvc.ContentResult">
      <summary>Représente un type de contenu défini par l'utilisateur et qui est le résultat d'une méthode d'action.</summary>
    </member>
    <member name="M:System.Web.Mvc.ContentResult.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ContentResult" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ContentResult.Content">
      <summary>Obtient ou définit le contenu.</summary>
      <returns>Contenu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ContentResult.ContentEncoding">
      <summary>Obtient ou définit l'encodage du contenu.</summary>
      <returns>Encodage du contenu.</returns>
    </member>
    <member name="P:System.Web.Mvc.ContentResult.ContentType">
      <summary>Obtient ou définit le type du contenu.</summary>
      <returns>Type de contenu.</returns>
    </member>
    <member name="M:System.Web.Mvc.ContentResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Permet le traitement du résultat d'une méthode d'action par un type personnalisé qui hérite de la classe <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Contexte dans lequel le résultat est exécuté.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="context" /> a la valeur null.</exception>
    </member>
    <member name="T:System.Web.Mvc.Controller">
      <summary>Fournit des méthodes qui répondent aux requêtes HTTP envoyées à un site Web ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Controller.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.Controller" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.Controller.ActionInvoker">
      <summary>Obtient le demandeur d'action du contrôleur.</summary>
      <returns>Demandeur d'action.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.Binders">
      <summary>Obtient ou définit le classeur.</summary>
      <returns>Classeur.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.Content(System.String)">
      <summary>Crée un objet résultat de contenu à l'aide d'une chaîne.</summary>
      <returns>Instance de résultat de contenu.</returns>
      <param name="content">Contenu à écrire dans la réponse.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Content(System.String,System.String)">
      <summary>Crée un objet résultat de contenu à l'aide d'une chaîne et du type de contenu. </summary>
      <returns>Instance de résultat de contenu.</returns>
      <param name="content">Contenu à écrire dans la réponse.</param>
      <param name="contentType">Type de contenu (type MIME).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Content(System.String,System.String,System.Text.Encoding)">
      <summary>Crée un objet résultat de contenu à l'aide d'une chaîne, du type de contenu et de l'encodage du contenu.</summary>
      <returns>Instance de résultat de contenu.</returns>
      <param name="content">Contenu à écrire dans la réponse.</param>
      <param name="contentType">Type de contenu (type MIME).</param>
      <param name="contentEncoding">Encodage du contenu.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.CreateActionInvoker">
      <summary>Crée un demandeur d'action.</summary>
      <returns>Demandeur d'action.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.CreateTempDataProvider">
      <summary>Crée un fournisseur de données temporaire.</summary>
      <returns>Fournisseur de données temporaires.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.Dispose">
      <summary>Libère toutes les ressources qui sont utilisées par l'instance actuelle de la classe <see cref="T:System.Web.Mvc.Controller" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Controller.Dispose(System.Boolean)">
      <summary>Libère des ressources non managées et, le cas échéant, des ressources managées.</summary>
      <param name="disposing">true pour libérer à la fois les ressources managées et non managées ; false pour ne libérer que les ressources non managées.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.ExecuteCore">
      <summary>Appelle l'action dans le contexte de contrôleur actuel.</summary>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.Byte[],System.String)">
      <summary>Crée un objet <see cref="T:System.Web.Mvc.FileContentResult" /> à l'aide du contenu du fichier et du type de fichier.</summary>
      <returns>Objet résultat de contenu de fichier.</returns>
      <param name="fileContents">Contenu binaire à envoyer à la réponse.</param>
      <param name="contentType">Type de contenu (type MIME).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.Byte[],System.String,System.String)">
      <summary>Crée un objet <see cref="T:System.Web.Mvc.FileContentResult" /> à l'aide du contenu du fichier, du type de contenu et du nom du fichier de destination.</summary>
      <returns>Objet résultat de contenu de fichier.</returns>
      <param name="fileContents">Contenu binaire à envoyer à la réponse.</param>
      <param name="contentType">Type de contenu (type MIME).</param>
      <param name="fileDownloadName">Nom de fichier à utiliser dans la boîte de dialogue de téléchargement de fichier qui s'affiche dans le navigateur.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.IO.Stream,System.String)">
      <summary>Crée un objet <see cref="T:System.Web.Mvc.FileStreamResult" /> à l'aide de l'objet <see cref="T:System.IO.Stream" /> et du type de contenu.  </summary>
      <returns>Objet résultat de contenu de fichier.</returns>
      <param name="fileStream">Flux à envoyer à la réponse.</param>
      <param name="contentType">Type de contenu (type MIME).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.IO.Stream,System.String,System.String)">
      <summary>Crée un objet <see cref="T:System.Web.Mvc.FileStreamResult" /> à l'aide de l'objet <see cref="T:System.IO.Stream" />, du type de contenu et du nom du fichier cible. </summary>
      <returns>Objet résultat de flux de fichiers.</returns>
      <param name="fileStream">Flux à envoyer à la réponse.</param>
      <param name="contentType">Type de contenu (type MIME).</param>
      <param name="fileDownloadName">Nom de fichier à utiliser dans la boîte de dialogue de téléchargement de fichier qui s'affiche dans le navigateur.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.String,System.String)">
      <summary>Crée un objet <see cref="T:System.Web.Mvc.FilePathResult" /> à l'aide du nom du fichier et du type de contenu.</summary>
      <returns>Objet résultat de flux de fichiers.</returns>
      <param name="fileName">Chemin d'accès du fichier à envoyer dans la réponse.</param>
      <param name="contentType">Type de contenu (type MIME).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.String,System.String,System.String)">
      <summary>Crée un objet <see cref="T:System.Web.Mvc.FilePathResult" /> à l'aide du nom du fichier, du type de contenu et du nom de téléchargement du fichier.</summary>
      <returns>Objet résultat de flux de fichiers.</returns>
      <param name="fileName">Chemin d'accès du fichier à envoyer dans la réponse.</param>
      <param name="contentType">Type de contenu (type MIME).</param>
      <param name="fileDownloadName">Nom de fichier à utiliser dans la boîte de dialogue de téléchargement de fichier qui s'affiche dans le navigateur.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.HandleUnknownAction(System.String)">
      <summary>Méthode appelée lorsqu'une requête correspond à ce contrôleur, mais qu'aucune méthode portant le nom d'action spécifié n'est trouvée dans le contrôleur.</summary>
      <param name="actionName">Nom de l'action tentée.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.HttpContext">
      <summary>Obtient des informations spécifiques à HTTP concernant une requête HTTP individuelle.</summary>
      <returns>Contexte HTTP.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.HttpNotFound"></member>
    <member name="M:System.Web.Mvc.Controller.HttpNotFound(System.String)">
      <summary>Retourne une instance de la classe <see cref="T:System.Web.Mvc.HttpNotFoundResult" />.</summary>
      <returns>Instance de la classe <see cref="T:System.Web.Mvc.HttpNotFoundResult" />.</returns>
      <param name="statusDescription">Description de l'état.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Initialize(System.Web.Routing.RequestContext)">
      <summary>Initialise des données qui peuvent ne pas être disponibles lorsque le constructeur est appelé.</summary>
      <param name="requestContext">Contexte HTTP et données d'itinéraire.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.JavaScript(System.String)">
      <summary>Crée un objet <see cref="T:System.Web.Mvc.JavaScriptResult" />.</summary>
      <returns>Objet <see cref="T:System.Web.Mvc.JavaScriptResult" /> qui écrit le script dans la réponse.</returns>
      <param name="script">Code JavaScript à exécuter sur le client.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object)">
      <summary>Crée un objet <see cref="T:System.Web.Mvc.JsonResult" /> qui sérialise l'objet spécifié au format JSON (JavaScript Object Notation).</summary>
      <returns>Objet résultat JSON qui sérialise l'objet spécifié au format JSON. L'objet résultat préparé par cette méthode est écrit dans la réponse par l'infrastructure ASP.NET MVC lorsque l'objet est exécuté.</returns>
      <param name="data">Graphique d'objets JavaScript à sérialiser.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String)">
      <summary>Crée un objet <see cref="T:System.Web.Mvc.JsonResult" /> qui sérialise l'objet spécifié au format JSON (JavaScript Object Notation).</summary>
      <returns>Objet résultat JSON qui sérialise l'objet spécifié au format JSON.</returns>
      <param name="data">Graphique d'objets JavaScript à sérialiser.</param>
      <param name="contentType">Type de contenu (type MIME).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding)">
      <summary>Crée un objet <see cref="T:System.Web.Mvc.JsonResult" /> qui sérialise l'objet spécifié au format JSON (JavaScript Object Notation).</summary>
      <returns>Objet résultat JSON qui sérialise l'objet spécifié au format JSON.</returns>
      <param name="data">Graphique d'objets JavaScript à sérialiser.</param>
      <param name="contentType">Type de contenu (type MIME).</param>
      <param name="contentEncoding">Encodage du contenu.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)">
      <summary>Crée un objet <see cref="T:System.Web.Mvc.JsonResult" /> qui sérialise l'objet spécifié au format JSON (JavaScript Object Notation) à l'aide du type de contenu, de l'encodage du contenu et du comportement de demande JSON.</summary>
      <returns>Objet résultat qui sérialise l'objet spécifié au format JSON.</returns>
      <param name="data">Graphique d'objets JavaScript à sérialiser.</param>
      <param name="contentType">Type de contenu (type MIME).</param>
      <param name="contentEncoding">Encodage du contenu.</param>
      <param name="behavior">Comportement de demande JSON. </param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Web.Mvc.JsonRequestBehavior)">
      <summary>Crée un objet <see cref="T:System.Web.Mvc.JsonResult" /> qui sérialise l'objet spécifié au format JSON (JavaScript Object Notation) à l'aide du type de contenu et du comportement de demande JSON spécifiés.</summary>
      <returns>Objet résultat qui sérialise l'objet spécifié au format JSON.</returns>
      <param name="data">Graphique d'objets JavaScript à sérialiser.</param>
      <param name="contentType">Type de contenu (type MIME).</param>
      <param name="behavior">Comportement de demande JSON.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.Web.Mvc.JsonRequestBehavior)">
      <summary>Crée un objet <see cref="T:System.Web.Mvc.JsonResult" /> qui sérialise l'objet spécifié au format JSON (JavaScript Object Notation) à l'aide du comportement de demande JSON spécifié.</summary>
      <returns>Objet résultat qui sérialise l'objet spécifié au format JSON.</returns>
      <param name="data">Graphique d'objets JavaScript à sérialiser.</param>
      <param name="behavior">Type de contenu (type MIME).</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.ModelState">
      <summary>Obtient l'objet de dictionnaire d'états du modèle qui contient l'état du modèle et de la validation de liaison associée.</summary>
      <returns>Dictionnaire d'états du modèle.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Méthode appelée après la méthode d'action.</summary>
      <param name="filterContext">Informations sur les requête et action actuelles.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Méthode appelée avant la méthode d'action.</summary>
      <param name="filterContext">Informations sur les requête et action actuelles.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Méthode appelée lors de l'autorisation.</summary>
      <param name="filterContext">Informations sur les requête et action actuelles.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Méthode appelée lorsqu'une exception non gérée se produit au cours de l'action.</summary>
      <param name="filterContext">Informations sur les requête et action actuelles.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Méthode appelée après l'exécution du résultat d'action qui est retourné par une méthode d'action.</summary>
      <param name="filterContext">Informations relatives à la requête et au résultat d'action actuels.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Méthode appelée avant l'exécution du résultat d'action qui est retourné par une méthode d'action.</summary>
      <param name="filterContext">Informations relatives à la requête et au résultat d'action actuels.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView">
      <summary>Crée un objet <see cref="T:System.Web.Mvc.PartialViewResult" /> qui restitue une vue partielle.</summary>
      <returns>Objet résultat de vue partielle.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView(System.Object)">
      <summary>Crée un objet <see cref="T:System.Web.Mvc.PartialViewResult" /> qui restitue une vue partielle à l'aide du modèle spécifié. </summary>
      <returns>Objet résultat de vue partielle.</returns>
      <param name="model">Modèle qui est restitué par la vue partielle.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView(System.String)">
      <summary>Crée un objet <see cref="T:System.Web.Mvc.PartialViewResult" /> qui restitue une vue partielle à l'aide du nom de vue spécifié. </summary>
      <returns>Objet résultat de vue partielle.</returns>
      <param name="viewName">Nom de la vue restituée dans la réponse.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView(System.String,System.Object)">
      <summary>Crée un objet <see cref="T:System.Web.Mvc.PartialViewResult" /> qui restitue une vue partielle à l'aide du modèle et du nom de vue spécifiés. </summary>
      <returns>Objet résultat de vue partielle.</returns>
      <param name="viewName">Nom de la vue restituée dans la réponse.</param>
      <param name="model">Modèle qui est restitué par la vue partielle.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Redirect(System.String)">
      <summary>Crée un objet <see cref="T:System.Web.Mvc.RedirectResult" /> qui effectue une redirection vers l'URL spécifiée.</summary>
      <returns>Objet résultat de la redirection.</returns>
      <param name="url">URL vers laquelle la redirection doit être effectuée.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectPermanent(System.String)">
      <summary>Retourne une instance de la classe <see cref="T:System.Web.Mvc.RedirectResult" /> avec la valeur true affectée à la propriété <see cref="P:System.Web.Mvc.RedirectResult.Permanent" />.</summary>
      <returns>Instance de la classe <see cref="T:System.Web.Mvc.RedirectResult" /> avec la valeur true affectée à la propriété <see cref="P:System.Web.Mvc.RedirectResult.Permanent" />.</returns>
      <param name="url">URL vers laquelle la redirection doit être effectuée.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String)">
      <summary>Effectue une redirection vers l'action spécifiée à l'aide du nom d'action.</summary>
      <returns>Objet résultat de la redirection.</returns>
      <param name="actionName">Nom de l'action.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.Object)">
      <summary>Effectue une redirection vers l'action spécifiée à l'aide du nom d'action et des valeurs d'itinéraire.</summary>
      <returns>Objet résultat de la redirection.</returns>
      <param name="actionName">Nom de l'action.</param>
      <param name="routeValues">Paramètres d'un itinéraire. </param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String)">
      <summary>Effectue une redirection vers l'action spécifiée à l'aide du nom d'action et du nom de contrôleur.</summary>
      <returns>Objet résultat de la redirection.</returns>
      <param name="actionName">Nom de l'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Object)">
      <summary>Effectue une redirection vers l'action spécifiée à l'aide du nom d'action, du nom de contrôleur et des valeurs d'itinéraire.</summary>
      <returns>Objet résultat de la redirection.</returns>
      <param name="actionName">Nom de l'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="routeValues">Paramètres d'un itinéraire. </param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Effectue une redirection vers l'action spécifiée à l'aide du nom d'action, du nom de contrôleur et du dictionnaire d'itinéraires.</summary>
      <returns>Objet résultat de la redirection.</returns>
      <param name="actionName">Nom de l'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="routeValues">Paramètres d'un itinéraire.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Effectue une redirection vers l'action spécifiée à l'aide du nom d'action et du dictionnaire d'itinéraires.</summary>
      <returns>Objet résultat de la redirection.</returns>
      <param name="actionName">Nom de l'action.</param>
      <param name="routeValues">Paramètres d'un itinéraire.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String)"></member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Object)"></member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String)"></member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Object)">
      <summary>Retourne une instance de la classe <see cref="T:System.Web.Mvc.RedirectResult" /> avec la valeur true affectée à la propriété <see cref="P:System.Web.Mvc.RedirectResult.Permanent" /> à l'aide du nom d'action, du nom de contrôleur et des valeurs d'itinéraire spécifiés.</summary>
      <returns>Instance de la classe <see cref="T:System.Web.Mvc.RedirectResult" /> avec la valeur true affectée à la propriété <see cref="P:System.Web.Mvc.RedirectResult.Permanent" />.</returns>
      <param name="actionName">Nom de l'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="routeValues">Valeurs d'itinéraire.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary)"></member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Web.Routing.RouteValueDictionary)"></member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.Object)">
      <summary>Effectue une redirection vers l'itinéraire spécifié à l'aide des valeurs d'itinéraire indiquées.</summary>
      <returns>Objet résultat de la redirection vers l'itinéraire.</returns>
      <param name="routeValues">Paramètres d'un itinéraire. </param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.String)">
      <summary>Effectue une redirection vers l'itinéraire spécifié à l'aide du nom d'itinéraire.</summary>
      <returns>Objet résultat de la redirection vers l'itinéraire.</returns>
      <param name="routeName">Nom de l'itinéraire.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Object)">
      <summary>Effectue une redirection vers l'itinéraire spécifié à l'aide du nom d'itinéraire et des valeurs d'itinéraire.</summary>
      <returns>Objet résultat de la redirection vers l'itinéraire.</returns>
      <param name="routeName">Nom de l'itinéraire.</param>
      <param name="routeValues">Paramètres d'un itinéraire. </param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Effectue une redirection vers l'itinéraire spécifié à l'aide du nom d'itinéraire et du dictionnaire d'itinéraires.</summary>
      <returns>Objet résultat de la redirection vers l'itinéraire.</returns>
      <param name="routeName">Nom de l'itinéraire.</param>
      <param name="routeValues">Paramètres d'un itinéraire.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.Web.Routing.RouteValueDictionary)">
      <summary>Effectue une redirection vers l'itinéraire spécifié à l'aide du dictionnaire d'itinéraires.</summary>
      <returns>Objet résultat de la redirection vers l'itinéraire.</returns>
      <param name="routeValues">Paramètres d'un itinéraire.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Object)"></member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String)"></member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Object)">
      <summary>Retourne une instance de la classe <see cref="T:System.Web.Mvc.RedirectResult" /> avec la valeur true affectée à la propriété <see cref="P:System.Web.Mvc.RedirectResult.Permanent" /> à l'aide du nom d'itinéraire et des valeurs d'itinéraire spécifiés.</summary>
      <returns>Instance de la classe <see cref="T:System.Web.Mvc.RedirectResult" /> avec la valeur true affectée à la propriété <see cref="P:System.Web.Mvc.RedirectResult.Permanent" />.</returns>
      <param name="routeName">Nom de l'itinéraire.</param>
      <param name="routeValues">Valeurs d'itinéraire.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)"></member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)"></member>
    <member name="P:System.Web.Mvc.Controller.Request">
      <summary>Obtient l'objet <see cref="T:System.Web.HttpRequestBase" /> pour la requête HTTP en cours.</summary>
      <returns>Objet de requête.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.Response">
      <summary>Obtient l'objet <see cref="T:System.Web.HttpResponseBase" /> pour la réponse HTTP actuelle.</summary>
      <returns>Objet de réponse.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.RouteData">
      <summary>Obtient les données d'itinéraire de la requête actuelle.</summary>
      <returns>Données d'itinéraire.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.Server">
      <summary>Obtient l'objet <see cref="T:System.Web.HttpServerUtilityBase" /> qui fournit les méthodes utilisées lors du traitement des requêtes Web.</summary>
      <returns>Objet serveur HTTP.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.Session">
      <summary>Obtient l'objet <see cref="T:System.Web.HttpSessionStateBase" /> pour la requête HTTP actuelle.</summary>
      <returns>Objet d'état de session HTTP correspondant à la requête HTTP actuelle.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Cette API prend en charge l'infrastructure ASP.NET MVC et n'est pas conçue pour être utilisée directement à partir de votre code. Cette méthode appelle la méthode <see cref="M:System.Web.Mvc.Controller.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)" />.</summary>
      <param name="filterContext">Contexte du filtre.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Cette API prend en charge l'infrastructure ASP.NET MVC et n'est pas conçue pour être utilisée directement à partir de votre code. Cette méthode appelle la méthode <see cref="M:System.Web.Mvc.Controller.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)" />.</summary>
      <param name="filterContext">Contexte du filtre.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IAuthorizationFilter#OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Cette API prend en charge l'infrastructure ASP.NET MVC et n'est pas conçue pour être utilisée directement à partir de votre code. Cette méthode appelle la méthode <see cref="M:System.Web.Mvc.Controller.OnAuthorization(System.Web.Mvc.AuthorizationContext)" />.</summary>
      <param name="filterContext">Contexte du filtre.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IExceptionFilter#OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Cette API prend en charge l'infrastructure ASP.NET MVC et n'est pas conçue pour être utilisée directement à partir de votre code. Cette méthode appelle la méthode <see cref="M:System.Web.Mvc.Controller.OnException(System.Web.Mvc.ExceptionContext)" />.</summary>
      <param name="filterContext">Contexte du filtre.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Cette API prend en charge l'infrastructure ASP.NET MVC et n'est pas conçue pour être utilisée directement à partir de votre code. Cette méthode appelle la méthode <see cref="M:System.Web.Mvc.Controller.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)" />.</summary>
      <param name="filterContext">Contexte du filtre.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Cette API prend en charge l'infrastructure ASP.NET MVC et n'est pas conçue pour être utilisée directement à partir de votre code. Cette méthode appelle la méthode <see cref="M:System.Web.Mvc.Controller.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)" />.</summary>
      <param name="filterContext">Contexte du filtre.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.TempDataProvider">
      <summary>Obtient l'objet fournisseur de données temporaires qui est utilisé pour stocker les données de la requête suivante.</summary>
      <returns>Fournisseur de données temporaires.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0)">
      <summary>Met à jour l'instance de modèle spécifiée à l'aide de valeurs provenant du fournisseur de valeur actuel du contrôleur.</summary>
      <returns>true si la mise à jour réussit ; sinon, false.</returns>
      <param name="model">Instance de modèle à mettre à jour.</param>
      <typeparam name="TModel">Type de l'objet de modèle.</typeparam>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="model" /> ou la propriété <see cref="P:System.Web.Mvc.ControllerBase.ValueProvider" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String)">
      <summary>Met à jour l'instance de modèle spécifiée en utilisant des valeurs du fournisseur de valeurs actuel du contrôleur et un préfixe.</summary>
      <returns>true si la mise à jour réussit ; sinon, false.</returns>
      <param name="model">Instance de modèle à mettre à jour.</param>
      <param name="prefix">Préfixe à utiliser lors de la recherche de valeurs dans le fournisseur de valeurs.</param>
      <typeparam name="TModel">Type de l'objet de modèle.</typeparam>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="model" /> ou la propriété <see cref="P:System.Web.Mvc.ControllerBase.ValueProvider" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[])">
      <summary>Met à jour l'instance de modèle spécifiée en utilisant des valeurs du fournisseur de valeurs actuel du contrôleur, un préfixe et des propriétés incluses.</summary>
      <returns>true si la mise à jour réussit ; sinon, false.</returns>
      <param name="model">Instance de modèle à mettre à jour.</param>
      <param name="prefix">Préfixe à utiliser lors de la recherche de valeurs dans le fournisseur de valeurs.</param>
      <param name="includeProperties">Liste de propriétés du modèle à mettre à jour.</param>
      <typeparam name="TModel">Type de l'objet de modèle.</typeparam>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="model" /> ou la propriété <see cref="P:System.Web.Mvc.ControllerBase.ValueProvider" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[])">
      <summary>Met à jour l'instance de modèle spécifiée en utilisant des valeurs du fournisseur de valeurs actuel du contrôleur, un préfixe, une liste des propriétés à exclure et une liste des propriétés à inclure.</summary>
      <returns>true si la mise à jour réussit ; sinon, false.</returns>
      <param name="model">Instance de modèle à mettre à jour.</param>
      <param name="prefix">Préfixe à utiliser lors de la recherche de valeurs dans le fournisseur de valeurs</param>
      <param name="includeProperties">Liste de propriétés du modèle à mettre à jour.</param>
      <param name="excludeProperties">Liste des propriétés à exclure explicitement de la mise à jour. Celles-ci sont exclues même si elles figurent dans la liste de paramètres <paramref name="includeProperties" />.</param>
      <typeparam name="TModel">Type de l'objet de modèle.</typeparam>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="model" /> ou la propriété <see cref="P:System.Web.Mvc.ControllerBase.ValueProvider" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Met à jour l'instance de modèle spécifiée en utilisant des valeurs du fournisseur de valeurs, un préfixe, une liste des propriétés à exclure et une liste des propriétés à inclure.</summary>
      <returns>true si la mise à jour réussit ; sinon, false.</returns>
      <param name="model">Instance de modèle à mettre à jour.</param>
      <param name="prefix">Préfixe à utiliser lors de la recherche de valeurs dans le fournisseur de valeurs.</param>
      <param name="includeProperties">Liste de propriétés du modèle à mettre à jour.</param>
      <param name="excludeProperties">Liste des propriétés à exclure explicitement de la mise à jour. Celles-ci sont exclues même si elles figurent dans la liste de paramètres <paramref name="includeProperties" />.</param>
      <param name="valueProvider">Dictionnaire de valeurs utilisé pour mettre à jour le modèle.</param>
      <typeparam name="TModel">Type de l'objet de modèle.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Met à jour l'instance de modèle spécifiée en utilisant des valeurs du fournisseur de valeurs, un préfixe et des propriétés incluses.</summary>
      <returns>true si la mise à jour réussit ; sinon, false.</returns>
      <param name="model">Instance de modèle à mettre à jour.</param>
      <param name="prefix">Préfixe à utiliser lors de la recherche de valeurs dans le fournisseur de valeurs.</param>
      <param name="includeProperties">Liste de propriétés du modèle à mettre à jour.</param>
      <param name="valueProvider">Dictionnaire de valeurs utilisé pour mettre à jour le modèle.</param>
      <typeparam name="TModel">Type de l'objet de modèle.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)">
      <summary>Met à jour l'instance de modèle spécifiée en utilisant des valeurs du fournisseur de valeurs et un préfixe.</summary>
      <returns>true si la mise à jour réussit ; sinon, false.</returns>
      <param name="model">Instance de modèle à mettre à jour.</param>
      <param name="prefix">Préfixe à utiliser lors de la recherche de valeurs dans le fournisseur de valeurs.</param>
      <param name="valueProvider">Dictionnaire de valeurs utilisé pour mettre à jour le modèle.</param>
      <typeparam name="TModel">Type de l'objet de modèle.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[])">
      <summary>Met à jour l'instance de modèle spécifiée en utilisant des valeurs du fournisseur de valeurs actuel du contrôleur et des propriétés incluses.</summary>
      <returns>true si la mise à jour réussit ; sinon, false.</returns>
      <param name="model">Instance de modèle à mettre à jour.</param>
      <param name="includeProperties">Liste de propriétés du modèle à mettre à jour.</param>
      <typeparam name="TModel">Type de l'objet de modèle.</typeparam>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="model" /> ou la propriété <see cref="P:System.Web.Mvc.ControllerBase.ValueProvider" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Met à jour l'instance de modèle spécifiée en utilisant des valeurs du fournisseur de valeurs et une liste des propriétés à inclure.</summary>
      <returns>true si la mise à jour réussit ; sinon, false.</returns>
      <param name="model">Instance de modèle à mettre à jour.</param>
      <param name="includeProperties">Liste de propriétés du modèle à mettre à jour.</param>
      <param name="valueProvider">Dictionnaire de valeurs utilisé pour mettre à jour le modèle.</param>
      <typeparam name="TModel">Type de l'objet de modèle.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.Web.Mvc.IValueProvider)">
      <summary>Met à jour l'instance de modèle spécifiée en utilisant des valeurs du fournisseur de valeurs.</summary>
      <returns>true si la mise à jour réussit ; sinon, false.</returns>
      <param name="model">Instance de modèle à mettre à jour.</param>
      <param name="valueProvider">Dictionnaire de valeurs utilisé pour mettre à jour le modèle.</param>
      <typeparam name="TModel">Type de l'objet de modèle.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryValidateModel(System.Object)">
      <summary>Valide l'instance de modèle spécifiée.</summary>
      <returns>true si la validation de modèle réussit ; sinon, false.</returns>
      <param name="model">Instance de modèle à valider.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryValidateModel(System.Object,System.String)">
      <summary>Valide l'instance de modèle spécifiée à l'aide d'un préfixe HTML.</summary>
      <returns>true si la validation de modèle réussit ; sinon, false.</returns>
      <param name="model">Modèle à valider.</param>
      <param name="prefix">Préfixe à utiliser lors de la recherche de valeurs dans le fournisseur de modèles.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0)">
      <summary>Met à jour l'instance de modèle spécifiée à l'aide de valeurs provenant du fournisseur de valeur actuel du contrôleur.</summary>
      <param name="model">Instance de modèle à mettre à jour.</param>
      <typeparam name="TModel">Type de l'objet de modèle.</typeparam>
      <exception cref="T:System.InvalidOperationException">Le modèle n'a pas été mis à jour avec succès.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String)">
      <summary>Met à jour l'instance de modèle spécifiée en utilisant des valeurs du fournisseur de valeurs actuel du contrôleur et un préfixe.</summary>
      <param name="model">Instance de modèle à mettre à jour.</param>
      <param name="prefix">Préfixe à utiliser lors de la recherche de valeurs dans le fournisseur de valeurs.</param>
      <typeparam name="TModel">Type de l'objet de modèle.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[])">
      <summary>Met à jour l'instance de modèle spécifiée en utilisant des valeurs du fournisseur de valeurs actuel du contrôleur, un préfixe et des propriétés incluses.</summary>
      <param name="model">Instance de modèle à mettre à jour.</param>
      <param name="prefix">Préfixe à utiliser lors de la recherche de valeurs dans le fournisseur de valeurs.</param>
      <param name="includeProperties">Liste de propriétés du modèle à mettre à jour.</param>
      <typeparam name="TModel">Type de l'objet de modèle.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[])">
      <summary>Met à jour l'instance de modèle spécifiée en utilisant des valeurs du fournisseur de valeurs actuel du contrôleur, un préfixe, une liste des propriétés à exclure et une liste des propriétés à inclure.</summary>
      <param name="model">Instance de modèle à mettre à jour.</param>
      <param name="prefix">Préfixe à utiliser lors de la recherche de valeurs dans le fournisseur de valeurs.</param>
      <param name="includeProperties">Liste de propriétés du modèle à mettre à jour.</param>
      <param name="excludeProperties">Liste des propriétés à exclure explicitement de la mise à jour. Celles-ci sont exclues même si elles figurent dans la liste <paramref name="includeProperties" />.</param>
      <typeparam name="TModel">Type de l'objet de modèle.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Met à jour l'instance de modèle spécifiée en utilisant des valeurs du fournisseur de valeurs, un préfixe, une liste des propriétés à exclure et une liste des propriétés à inclure.</summary>
      <param name="model">Instance de modèle à mettre à jour.</param>
      <param name="prefix">Préfixe à utiliser lors de la recherche de valeurs dans le fournisseur de valeurs.</param>
      <param name="includeProperties">Liste de propriétés du modèle à mettre à jour.</param>
      <param name="excludeProperties">Liste des propriétés à exclure explicitement de la mise à jour. Celles-ci sont exclues même si elles figurent dans la liste de paramètres <paramref name="includeProperties" />.</param>
      <param name="valueProvider">Dictionnaire de valeurs utilisé pour mettre à jour le modèle.</param>
      <typeparam name="TModel">Type de l'objet de modèle.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Met à jour l'instance de modèle spécifiée en utilisant des valeurs du fournisseur de valeurs, un préfixe et une liste des propriétés à inclure.</summary>
      <param name="model">Instance de modèle à mettre à jour.</param>
      <param name="prefix">Préfixe à utiliser lors de la recherche de valeurs dans le fournisseur de valeurs.</param>
      <param name="includeProperties">Liste de propriétés du modèle à mettre à jour.</param>
      <param name="valueProvider">Dictionnaire de valeurs utilisé pour mettre à jour le modèle.</param>
      <typeparam name="TModel">Type de l'objet de modèle.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)">
      <summary>Met à jour l'instance de modèle spécifiée en utilisant des valeurs du fournisseur de valeurs et un préfixe.</summary>
      <param name="model">Instance de modèle à mettre à jour.</param>
      <param name="prefix">Préfixe à utiliser lors de la recherche de valeurs dans le fournisseur de valeurs.</param>
      <param name="valueProvider">Dictionnaire de valeurs utilisé pour mettre à jour le modèle.</param>
      <typeparam name="TModel">Type de l'objet de modèle.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[])">
      <summary>Met à jour l'instance de modèle spécifiée en utilisant des valeurs du fournisseur de valeurs actuel de l'objet contrôleur.</summary>
      <param name="model">Instance de modèle à mettre à jour.</param>
      <param name="includeProperties">Liste de propriétés du modèle à mettre à jour.</param>
      <typeparam name="TModel">Type de l'objet de modèle.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Met à jour l'instance de modèle spécifiée en utilisant des valeurs du fournisseur de valeurs, un préfixe et une liste des propriétés à inclure.</summary>
      <param name="model">Instance de modèle à mettre à jour.</param>
      <param name="includeProperties">Liste de propriétés du modèle à mettre à jour.</param>
      <param name="valueProvider">Dictionnaire de valeurs utilisé pour mettre à jour le modèle.</param>
      <typeparam name="TModel">Type de l'objet de modèle.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.Web.Mvc.IValueProvider)">
      <summary>Met à jour l'instance de modèle spécifiée en utilisant des valeurs du fournisseur de valeurs.</summary>
      <param name="model">Instance de modèle à mettre à jour.</param>
      <param name="valueProvider">Dictionnaire de valeurs utilisé pour mettre à jour le modèle.</param>
      <typeparam name="TModel">Type de l'objet de modèle.</typeparam>
    </member>
    <member name="P:System.Web.Mvc.Controller.Url">
      <summary>Obtient l'objet d'assistance d'URL qui est utilisé pour générer des URL au moyen du routage.</summary>
      <returns>Objet d'assistance d'URL.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.User">
      <summary>Obtient les informations sur la sécurité utilisateur pour la requête HTTP actuelle.</summary>
      <returns>Informations sur la sécurité utilisateur correspondant à la requête HTTP actuelle.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.ValidateModel(System.Object)">
      <summary>Valide l'instance de modèle spécifiée.</summary>
      <param name="model">Modèle à valider.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.ValidateModel(System.Object,System.String)">
      <summary>Valide l'instance de modèle spécifiée à l'aide d'un préfixe HTML.</summary>
      <param name="model">Modèle à valider.</param>
      <param name="prefix">Préfixe à utiliser lors de la recherche de valeurs dans le fournisseur de modèles.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View">
      <summary>Crée un objet <see cref="T:System.Web.Mvc.ViewResult" /> qui restitue une vue dans la réponse.</summary>
      <returns>Résultat de vue qui restitue une vue dans la réponse.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.Object)">
      <summary>Crée un objet <see cref="T:System.Web.Mvc.ViewResult" /> à l'aide du modèle qui restitue une vue dans la réponse.</summary>
      <returns>Résultat de vue.</returns>
      <param name="model">Modèle qui est restitué par la vue.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String)">
      <summary>Crée un objet <see cref="T:System.Web.Mvc.ViewResult" /> à l'aide du nom de vue qui restitue une vue.</summary>
      <returns>Résultat de vue.</returns>
      <param name="viewName">Nom de la vue restituée dans la réponse.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String,System.Object)">
      <summary>Crée un objet <see cref="T:System.Web.Mvc.ViewResult" /> à l'aide du nom de vue et du modèle qui restituent une vue dans la réponse.</summary>
      <returns>Résultat de vue.</returns>
      <param name="viewName">Nom de la vue restituée dans la réponse.</param>
      <param name="model">Modèle qui est restitué par la vue.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String,System.String)">
      <summary>Crée un objet <see cref="T:System.Web.Mvc.ViewResult" /> à l'aide du nom de vue et du nom de page maître qui restituent une vue dans la réponse.</summary>
      <returns>Résultat de vue.</returns>
      <param name="viewName">Nom de la vue restituée dans la réponse.</param>
      <param name="masterName">Nom de la page maître ou du modèle à utiliser lorsque la vue est restituée.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String,System.String,System.Object)">
      <summary>Crée un objet <see cref="T:System.Web.Mvc.ViewResult" /> à l'aide du nom de vue, du nom de page maître et du modèle qui restituent une vue.</summary>
      <returns>Résultat de vue.</returns>
      <param name="viewName">Nom de la vue restituée dans la réponse.</param>
      <param name="masterName">Nom de la page maître ou du modèle à utiliser lorsque la vue est restituée.</param>
      <param name="model">Modèle qui est restitué par la vue.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.Web.Mvc.IView)">
      <summary>Crée un objet <see cref="T:System.Web.Mvc.ViewResult" /> qui restitue l'objet <see cref="T:System.Web.Mvc.IView" /> spécifié.</summary>
      <returns>Résultat de vue.</returns>
      <param name="view">Vue restituée dans la réponse.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.Web.Mvc.IView,System.Object)">
      <summary>Crée un objet <see cref="T:System.Web.Mvc.ViewResult" /> qui restitue l'objet <see cref="T:System.Web.Mvc.IView" /> spécifié.</summary>
      <returns>Résultat de vue.</returns>
      <param name="view">Vue restituée dans la réponse.</param>
      <param name="model">Modèle qui est restitué par la vue.</param>
    </member>
    <member name="T:System.Web.Mvc.ControllerActionInvoker">
      <summary>Représente une classe qui est chargée d'appeler les méthodes d'action d'un contrôleur.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ControllerActionInvoker" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerActionInvoker.Binders">
      <summary>Obtient ou définit les binders de modèles associés à l'action.</summary>
      <returns>Binders de modèles associés à l'action.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.CreateActionResult(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Object)">
      <summary>Crée le résultat de l'action.</summary>
      <returns>Objet résultat de l'action.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="actionDescriptor">Descripteur de l'action.</param>
      <param name="actionReturnValue">Valeur de retour de l'action.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.FindAction(System.Web.Mvc.ControllerContext,System.Web.Mvc.ControllerDescriptor,System.String)">
      <summary>Recherche les informations relatives à la méthode d'action.</summary>
      <returns>Informations relatives à la méthode d'action.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="controllerDescriptor">Descripteur du contrôleur.</param>
      <param name="actionName">Nom de l'action.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetControllerDescriptor(System.Web.Mvc.ControllerContext)">
      <summary>Récupère les informations relatives au contrôleur à l'aide du contexte du contrôleur spécifié.</summary>
      <returns>Informations relatives au contrôleur.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Récupère les informations relatives aux filtres d'action.</summary>
      <returns>Informations relatives aux filtres d'action.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="actionDescriptor">Descripteur de l'action.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetParameterValue(System.Web.Mvc.ControllerContext,System.Web.Mvc.ParameterDescriptor)">
      <summary>Obtient la valeur du paramètre de méthode d'action spécifié.</summary>
      <returns>Valeur du paramètre de méthode d'action.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="parameterDescriptor">Descripteur du paramètre.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetParameterValues(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Obtient les valeurs des paramètres de méthode d'action.</summary>
      <returns>Valeurs des paramètres de méthode d'action.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="actionDescriptor">Descripteur de l'action.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Appelle l'action spécifiée à l'aide du contexte du contrôleur spécifié.</summary>
      <returns>Résultat de l'exécution de l'action.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="actionName">Nom de l'action à appeler.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="controllerContext" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="actionName" /> a la valeur null ou est vide.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">Le thread a été abandonné pendant l'appel de l'action.</exception>
      <exception cref="T:System.Exception">Une erreur non spécifiée s'est produite lors de l'appel de l'action.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Appelle la méthode d'action spécifiée à l'aide des paramètres et du contexte du contrôleur spécifiés.</summary>
      <returns>Résultat de l'exécution de la méthode d'action.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="actionDescriptor">Descripteur de l'action.</param>
      <param name="parameters">Paramètres.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IActionFilter},System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Appelle la méthode d'action spécifiée à l'aide des paramètres, du contexte du contrôleur et des filtres d'action spécifiés.</summary>
      <returns>Contexte de la méthode ActionExecuted de la classe <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="filters">Filtres d'action.</param>
      <param name="actionDescriptor">Descripteur de l'action.</param>
      <param name="parameters">Paramètres.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionResult(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionResult)">
      <summary>Appelle le résultat d'action spécifié à l'aide du contexte du contrôleur spécifié.</summary>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="actionResult">Résultat de l'action.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionResultWithFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IResultFilter},System.Web.Mvc.ActionResult)">
      <summary>Appelle le résultat d'action spécifié à l'aide des filtres d'action et du contexte du contrôleur spécifiés.</summary>
      <returns>Contexte de la méthode ResultExecuted de la classe <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="filters">Filtres d'action.</param>
      <param name="actionResult">Résultat de l'action.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeAuthorizationFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IAuthorizationFilter},System.Web.Mvc.ActionDescriptor)">
      <summary>Appelle les filtres d'autorisation spécifiés à l'aide du descripteur d'action et du contexte du contrôleur spécifiés.</summary>
      <returns>Contexte de l'objet <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="filters">Filtres d'autorisation.</param>
      <param name="actionDescriptor">Descripteur de l'action.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeExceptionFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IExceptionFilter},System.Exception)">
      <summary>Appelle les filtres d'exception spécifiés à l'aide de l'exception et du contexte du contrôleur spécifiés.</summary>
      <returns>Contexte de l'objet <see cref="T:System.Web.Mvc.HandleErrorAttribute" />.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="filters">Filtres d'exception.</param>
      <param name="exception">Exception.</param>
    </member>
    <member name="T:System.Web.Mvc.ControllerBase">
      <summary>Représente la classe de base pour tous les contrôleurs MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ControllerBase" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ControllerContext">
      <summary>Obtient ou définit le contexte du contrôleur.</summary>
      <returns>Contexte du contrôleur.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.Execute(System.Web.Routing.RequestContext)">
      <summary>Exécute le contexte de la requête spécifiée.</summary>
      <param name="requestContext">Contexte de la requête.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="requestContext" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.ExecuteCore">
      <summary>Exécute la requête.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.Initialize(System.Web.Routing.RequestContext)">
      <summary>Initialise le contexte de requête spécifié.</summary>
      <param name="requestContext">Contexte de la requête.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.System#Web#Mvc#IController#Execute(System.Web.Routing.RequestContext)">
      <summary>Exécute le contexte de la requête spécifiée.</summary>
      <param name="requestContext">Contexte de la requête.</param>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.TempData">
      <summary>Obtient ou définit le dictionnaire pour les données temporaires.</summary>
      <returns>Dictionnaire pour les données temporaires.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ValidateRequest">
      <summary>Obtient ou définit une valeur qui indique si la validation de requête est activée pour cette requête.</summary>
      <returns>true si la validation de requête est activée pour cette requête ; sinon, false. La valeur par défaut est true.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ValueProvider">
      <summary>Obtient ou définit le fournisseur de valeurs du contrôleur.</summary>
      <returns>Fournisseur de valeurs du contrôleur.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ViewData">
      <summary>Obtient ou définit le dictionnaire pour les données d'affichage.</summary>
      <returns>Dictionnaire pour les données d'affichage.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ViewModel">
      <summary>Obtient le dictionnaire de données d'affichage dynamique.</summary>
      <returns>Dictionnaire de données d'affichage dynamique.</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerBuilder">
      <summary>Représente une classe chargée de la création dynamique d'un contrôleur.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ControllerBuilder" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerBuilder.Current">
      <summary>Obtient l'objet générateur du contrôleur actuel.</summary>
      <returns>Objet générateur du contrôleur actuel.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBuilder.DefaultNamespaces">
      <summary>Obtient les espaces de noms par défaut.</summary>
      <returns>Espaces de noms par défaut</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.GetControllerFactory">
      <summary>Obtient la fabrique de contrôleurs associée.</summary>
      <returns>Fabrique de contrôleurs.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.SetControllerFactory(System.Type)">
      <summary>Définit la fabrique de contrôleurs à l'aide du type spécifié.</summary>
      <param name="controllerFactoryType">Type de la fabrique de contrôleurs.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="controllerFactoryType" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">La fabrique de contrôleurs ne peut pas être assignée à partir du type du paramètre <paramref name="controllerFactoryType" />.</exception>
      <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors de la définition de la fabrique de contrôleurs.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.SetControllerFactory(System.Web.Mvc.IControllerFactory)">
      <summary>Définit la fabrique de contrôleurs spécifiée.</summary>
      <param name="controllerFactory">Fabrique de contrôleurs.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="controllerFactory" /> a la valeur null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ControllerContext">
      <summary>Encapsule les informations relatives à une requête HTTP qui correspond aux instances spécifiées de <see cref="T:System.Web.Routing.RouteBase" /> et <see cref="T:System.Web.Mvc.ControllerBase" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ControllerContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor(System.Web.HttpContextBase,System.Web.Routing.RouteData,System.Web.Mvc.ControllerBase)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ControllerContext" /> en utilisant le contexte HTTP, les données d'itinéraire d'URL et le contrôleur spécifiés.</summary>
      <param name="httpContext">Contexte HTTP.</param>
      <param name="routeData">Données d'itinéraire.</param>
      <param name="controller">Contrôleur.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ControllerContext" /> en utilisant le contexte du contrôleur spécifié.</summary>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="controllerContext" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor(System.Web.Routing.RequestContext,System.Web.Mvc.ControllerBase)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ControllerContext" /> en utilisant le contexte de requête et le contexte du contrôleur spécifiés.</summary>
      <param name="requestContext">Contexte de la requête.</param>
      <param name="controller">Contrôleur.</param>
      <exception cref="T:System.ArgumentNullException">Un des paramètres ou les deux ont la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.Controller">
      <summary>Obtient ou définit le contrôleur.</summary>
      <returns>Contrôleur.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.HttpContext">
      <summary>Obtient ou définit le contexte HTTP.</summary>
      <returns>Contexte HTTP.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.IsChildAction">
      <summary>Obtient une valeur qui indique si la méthode d'action associée est une action enfant.</summary>
      <returns>true si la méthode d'action associée est une action enfant ; sinon, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.ParentActionViewContext">
      <summary>Obtient un objet qui contient les informations de contexte d'affichage pour la méthode d'action parent.</summary>
      <returns>Objet qui contient les informations de contexte d'affichage pour la méthode d'action parent.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.RequestContext">
      <summary>Obtient ou définit le contexte de requête.</summary>
      <returns>Contexte de la requête.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.RouteData">
      <summary>Obtient ou définit les données d'itinéraire d'URL.</summary>
      <returns>Données d'itinéraire de l'URL.</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerDescriptor">
      <summary>Encapsule les informations qui décrivent un contrôleur, par exemple son nom, son type et ses actions.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ControllerDescriptor" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerDescriptor.ControllerName">
      <summary>Obtient le nom du contrôleur.</summary>
      <returns>Nom du contrôleur.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerDescriptor.ControllerType">
      <summary>Obtient le type du contrôleur.</summary>
      <returns>Type du contrôleur.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.FindAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Recherche une méthode d'action à l'aide du nom et du contexte du contrôleur spécifiés.</summary>
      <returns>Informations relatives à la méthode d'action.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="actionName">Nom de l'action.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetCanonicalActions">
      <summary>Récupère une liste de descripteurs de méthode d'action dans le contrôleur.</summary>
      <returns>Liste de descripteurs de méthode d'action dans le contrôleur.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Récupère les attributs personnalisés définis pour ce membre, à l'exception des attributs nommés.</summary>
      <returns>Tableau d'attributs personnalisés ou tableau vide s'il n'existe aucun attribut personnalisé.</returns>
      <param name="inherit">true pour rechercher l'attribut personnalisé hérité dans la chaîne de hiérarchie ; sinon false.</param>
      <exception cref="T:System.TypeLoadException">Impossible de charger le type d'attribut personnalisé.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Il existe plusieurs attributs de type <paramref name="attributeType" /> défini pour ce membre.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Récupère les attributs personnalisés d'un type spécifique définis pour ce membre, à l'exclusion des attributs nommés.</summary>
      <returns>Tableau d'attributs personnalisés ou tableau vide s'il n'existe aucun attribut personnalisé.</returns>
      <param name="attributeType">Type des attributs personnalisés.</param>
      <param name="inherit">true pour rechercher l'attribut personnalisé hérité dans la chaîne de hiérarchie ; sinon false.</param>
      <exception cref="T:System.TypeLoadException">Impossible de charger le type d'attribut personnalisé.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Il existe plusieurs attributs de type <paramref name="attributeType" /> définis pour ce membre.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="attributeType" /> a la valeur null (Nothing dans Visual Basic).</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Récupère une valeur qui indique si une ou plusieurs instances de l'attribut personnalisé spécifié sont définies pour ce membre.</summary>
      <returns>true si <paramref name="attributeType" /> est défini pour ce membre ; sinon, false.</returns>
      <param name="attributeType">Type de l'attribut personnalisé.</param>
      <param name="inherit">true pour rechercher l'attribut personnalisé hérité dans la chaîne de hiérarchie ; sinon false.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="attributeType" /> a la valeur null (Nothing dans Visual Basic).</exception>
    </member>
    <member name="P:System.Web.Mvc.ControllerDescriptor.UniqueId">
      <summary>En cas d'implémentation dans une classe dérivée, obtient l'ID unique du descripteur de contrôleur à l'aide de l'initialisation tardive.</summary>
      <returns>ID unique.</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerInstanceFilterProvider">
      <summary>Ajoute le contrôleur à l'instance de <see cref="T:System.Web.Mvc.FilterProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerInstanceFilterProvider.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ControllerInstanceFilterProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerInstanceFilterProvider.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Retourne la collection de filtres d'instance du contrôleur.</summary>
      <returns>Collection de filtres d'instance du contrôleur.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="actionDescriptor">Descripteur de l'action.</param>
    </member>
    <member name="T:System.Web.Mvc.ControllerSessionStateAttribute">
      <summary>Spécifie l'état de session du contrôleur.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerSessionStateAttribute.#ctor(System.Web.SessionState.SessionStateBehavior)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ControllerSessionStateAttribute" />.</summary>
      <param name="behavior">Type de l'état de session.</param>
    </member>
    <member name="P:System.Web.Mvc.ControllerSessionStateAttribute.Behavior">
      <summary>Obtient le comportement d'état de session du contrôleur.</summary>
      <returns>Comportement d'état de session du contrôleur.</returns>
    </member>
    <member name="T:System.Web.Mvc.CustomModelBinderAttribute">
      <summary>Représente un attribut qui appelle un binder de modèle personnalisé.</summary>
    </member>
    <member name="M:System.Web.Mvc.CustomModelBinderAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.CustomModelBinderAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.CustomModelBinderAttribute.GetBinder">
      <summary>Récupère le binder de modèle associé.</summary>
      <returns>Référence à un objet qui implémente l'interface <see cref="T:System.Web.Mvc.IModelBinder" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelMetadata">
      <summary>Fournit un conteneur pour les métadonnées communes, la classe <see cref="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider" /> et la classe <see cref="T:System.Web.Mvc.DataAnnotationsModelValidator" /> d'un modèle de données.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadata.#ctor(System.Web.Mvc.DataAnnotationsModelMetadataProvider,System.Type,System.Func`1,System.Void,System.Object,System.Type)"></member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadata.GetSimpleDisplayText">
      <summary>Retourne le texte simple pour les données du modèle.</summary>
      <returns>Texte simple pour les données du modèle.</returns>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider">
      <summary>Implémente le fournisseur de métadonnées de modèle par défaut pour ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadataProvider.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func`1,System.Void,System.Object)"></member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidationFactory">
      <summary>Représente la méthode qui crée une instance <see cref="T:System.Web.Mvc.DataAnnotationsModelValidatorProvider" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidator">
      <summary>Fournit un validateur de modèle.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.ValidationAttribute)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.DataAnnotationsModelValidator" />.</summary>
      <param name="metadata">Métadonnées du modèle.</param>
      <param name="context">Contexte de contrôleur du modèle.</param>
      <param name="attribute">Attribut de validation du modèle.</param>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator.Attribute">
      <summary>Obtient l'attribut de validation du validateur de modèle.</summary>
      <returns>Attribut de validation du validateur de modèle.</returns>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator.ErrorMessage">
      <summary>Obtient le message d'erreur correspondant à l'échec de validation.</summary>
      <returns>Message d'erreur correspondant à l'échec de validation.</returns>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator.GetClientValidationRules">
      <summary>Récupère une collection de règles de validation côté client.</summary>
      <returns>Collection de règles de validation côté client.</returns>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator.IsRequired">
      <summary>Obtient une valeur qui indique si la validation de modèle est requise.</summary>
      <returns>true si la validation de modèle est requise ; sinon, false.</returns>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator.Validate(System.Object)">
      <summary>Retourne une liste de messages d'erreur de validation pour le modèle.</summary>
      <returns>Liste de messages d'erreur de validation pour le modèle ou liste vide si aucune erreur ne s'est produite.</returns>
      <param name="container">Conteneur du modèle.</param>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidator`1">
      <summary>Fournit un validateur de modèle pour un type de validation spécifié.</summary>
      <typeparam name="TAttribute"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator`1.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,`0)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.DataAnnotationsModelValidator" />.</summary>
      <param name="metadata">Métadonnées du modèle.</param>
      <param name="context">Contexte de contrôleur du modèle.</param>
      <param name="attribute">Attribut de validation du modèle.</param>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator`1.Attribute">
      <summary>Obtient l'attribut de validation à partir du validateur de modèle.</summary>
      <returns>Attribut de validation du validateur de modèle.</returns>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidatorProvider">
      <summary>Implémente le fournisseur de validation par défaut pour ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.DataAnnotationsModelValidatorProvider" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidatorProvider.AddImplicitRequiredAttributeForValueTypes">
      <summary>Obtient ou définit une valeur qui indique si les types valeur non Nullable sont obligatoires.</summary>
      <returns>true si les types valeur non Nullable sont obligatoires ; sinon, false.</returns>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Obtient une liste de validateurs.</summary>
      <returns>Liste de validateurs.</returns>
      <param name="metadata">Métadonnées.</param>
      <param name="context">Contexte.</param>
      <param name="attributes">Liste d'attributs de validation.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterAdapter(System.Type,System.Type)">
      <summary>Inscrit un adaptateur pour fournir la validation côté client.</summary>
      <param name="attributeType">Type de l'attribut de validation.</param>
      <param name="adapterType">Type de l'adaptateur.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterAdapterFactory(System.Type,System.Web.Mvc.DataAnnotationsModelValidationFactory)">
      <summary>Inscrit une fabrique d'adaptateur pour le fournisseur de validation.</summary>
      <param name="attributeType">Type de l'attribut.</param>
      <param name="factory">Fabrique qui sera utilisée pour créer l'objet <see cref="T:System.Web.Mvc.ModelValidator" /> pour l'attribut spécifié.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultAdapter(System.Type)">
      <summary>Inscrit l'adaptateur par défaut.</summary>
      <param name="adapterType">Type de l'adaptateur.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultAdapterFactory(System.Web.Mvc.DataAnnotationsModelValidationFactory)">
      <summary>Inscrit la fabrique d'adaptateur par défaut.</summary>
      <param name="factory">Fabrique qui sera utilisée pour créer l'objet <see cref="T:System.Web.Mvc.ModelValidator" /> pour l'adaptateur par défaut.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultValidatableObjectAdapter(System.Type)">
      <summary>Inscrit un adaptateur pour fournir la validation d'objet par défaut.</summary>
      <param name="adapterType">Type de l'adaptateur.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultValidatableObjectAdapterFactory(System.Web.Mvc.DataAnnotationsValidatableObjectAdapterFactory)">
      <summary>Inscrit une fabrique d'adaptateur pour le fournisseur de validation d'objet par défaut.</summary>
      <param name="factory">Fabrique.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterValidatableObjectAdapter(System.Type,System.Type)">
      <summary>Inscrit un adaptateur pour fournir la validation d'objet.</summary>
      <param name="modelType">Type du modèle.</param>
      <param name="adapterType">Type de l'adaptateur.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterValidatableObjectAdapterFactory(System.Type,System.Web.Mvc.DataAnnotationsValidatableObjectAdapterFactory)">
      <summary>Inscrit une fabrique d'adaptateur pour le fournisseur de validation d'objet.</summary>
      <param name="modelType">Type du modèle.</param>
      <param name="factory">Fabrique.</param>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsValidatableObjectAdapterFactory">
      <summary>Fournit une fabrique pour les validateurs basés sur <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.DataErrorInfoModelValidatorProvider">
      <summary>Fournit un conteneur pour le validateur de modèle d'informations d'erreur.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataErrorInfoModelValidatorProvider.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.DataErrorInfoModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataErrorInfoModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Obtient une liste de validateurs de modèle d'informations d'erreur.</summary>
      <returns>Liste de validateurs de modèle d'informations d'erreur.</returns>
      <param name="metadata">Métadonnées du modèle.</param>
      <param name="context">Contexte du contrôleur.</param>
    </member>
    <member name="T:System.Web.Mvc.DefaultControllerFactory">
      <summary>Représente la fabrique de contrôleurs inscrite par défaut.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.DefaultControllerFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.#ctor(System.Web.Mvc.IControllerActivator)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.DefaultControllerFactory" /> à l'aide d'un activateur de contrôleur.</summary>
      <param name="controllerActivator">Objet qui implémente l'interface d'activateur de contrôleur.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.CreateController(System.Web.Routing.RequestContext,System.String)">
      <summary>Crée le contrôleur spécifié à l'aide du contexte de requête spécifié.</summary>
      <returns>Contrôleur.</returns>
      <param name="requestContext">Contexte de la requête HTTP, qui inclut le contexte HTTP et les données d'itinéraire.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="requestContext" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="controllerName" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.GetControllerInstance(System.Web.Routing.RequestContext,System.Type)">
      <summary>Récupère l'instance de contrôleur pour le contexte de requête et le type de contrôleur spécifiés.</summary>
      <returns>Instance de contrôleur.</returns>
      <param name="requestContext">Contexte de la requête HTTP, qui inclut le contexte HTTP et les données d'itinéraire.</param>
      <param name="controllerType">Type du contrôleur.</param>
      <exception cref="T:System.Web.HttpException">
        <paramref name="controllerType" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="controllerType" /> ne peut pas être assigné.</exception>
      <exception cref="T:System.InvalidOperationException">Vous ne pouvez pas créer une instance de <paramref name="controllerType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.Type)">
      <summary>Retourne le comportement de session du contrôleur.</summary>
      <returns>Comportement de session du contrôleur.</returns>
      <param name="requestContext">Contexte de la requête.</param>
      <param name="controllerType">Type du contrôleur.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.GetControllerType(System.Web.Routing.RequestContext,System.String)">
      <summary>Récupère le type de contrôleur pour le nom et le contexte de requête spécifiés.</summary>
      <returns>Type du contrôleur.</returns>
      <param name="requestContext">Contexte de la requête HTTP, qui inclut le contexte HTTP et les données d'itinéraire.</param>
      <param name="controllerName">Nom du contrôleur.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.ReleaseController(System.Web.Mvc.IController)">
      <summary>Libère le contrôleur spécifié.</summary>
      <param name="controller">Contrôleur à libérer.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.System#Web#Mvc#IControllerFactory#GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.String)">
      <summary>Cette API prend en charge l'infrastructure ASP.NET MVC et n'est pas conçue pour être utilisée directement à partir de votre code. Cette méthode appelle la méthode <see cref="M:System.Web.Mvc.DefaultControllerFactory.GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.Type)" />.</summary>
      <returns>Comportement de session du contrôleur.</returns>
      <param name="requestContext">Contexte de la requête.</param>
      <param name="controllerName">Nom du contrôleur.</param>
    </member>
    <member name="T:System.Web.Mvc.DefaultModelBinder">
      <summary>Mappe une demande de navigateur à un objet de données. Cette classe fournit une implémentation concrète d'un classeur de modèles.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.DefaultModelBinder" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.DefaultModelBinder.Binders">
      <summary>Obtient ou définit les binders de modèles pour l'application.</summary>
      <returns>Binders de modèles pour l'application.</returns>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Lie le modèle à l'aide du contexte du contrôleur et du contexte de liaison spécifiés.</summary>
      <returns>Objet lié.</returns>
      <param name="controllerContext">Contexte dans lequel le contrôleur opère. Les informations de contexte incluent le contrôleur, le contenu HTTP, le contexte de la demande et les données d'itinéraire.</param>
      <param name="bindingContext">Contexte dans lequel le modèle est lié. Le contexte inclut des informations telles que l'objet de modèle, le nom et le type du modèle, le filtre de propriété et le fournisseur de valeur.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="bindingContext " />a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.BindProperty(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor)">
      <summary>Lie la propriété spécifiée à l'aide du contexte de contrôleur, du contexte de liaison et du descripteur de propriété spécifiés.</summary>
      <param name="controllerContext">Contexte dans lequel le contrôleur opère. Les informations de contexte incluent le contrôleur, le contenu HTTP, le contexte de la demande et les données d'itinéraire.</param>
      <param name="bindingContext">Contexte dans lequel le modèle est lié. Le contexte inclut des informations telles que l'objet de modèle, le nom et le type du modèle, le filtre de propriété et le fournisseur de valeur.</param>
      <param name="propertyDescriptor">Décrit une propriété à lier. Le descripteur fournit des informations telles que le type du composant, le type de la propriété et la valeur de la propriété. Il fournit également les méthodes permettant d'obtenir ou de définir la valeur de la propriété.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.Type)">
      <summary>Crée le type de modèle spécifié à l'aide du contexte du contrôleur et du contexte de liaison spécifiés.</summary>
      <returns>Objet de données du type spécifié.</returns>
      <param name="controllerContext">Contexte dans lequel le contrôleur opère. Les informations de contexte incluent le contrôleur, le contenu HTTP, le contexte de la demande et les données d'itinéraire.</param>
      <param name="bindingContext">Contexte dans lequel le modèle est lié. Le contexte inclut des informations telles que l'objet de modèle, le nom et le type du modèle, le filtre de propriété et le fournisseur de valeur.</param>
      <param name="modelType">Type de l'objet de modèle à retourner.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateSubIndexName(System.String,System.Int32)">
      <summary>Crée un index (sous-index) à partir d'une catégorie de composants qui composent un index plus grand, où la valeur d'index spécifiée est un entier.</summary>
      <returns>Nom du sous-index.</returns>
      <param name="prefix">Préfixe du sous-index.</param>
      <param name="index">Valeur d'index.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateSubIndexName(System.String,System.String)">
      <summary>Crée un index (sous-index) à partir d'une catégorie de composants qui composent un index plus grand, où la valeur d'index spécifiée est une chaîne.</summary>
      <returns>Nom du sous-index.</returns>
      <param name="prefix">Préfixe du sous-index.</param>
      <param name="index">Valeur d'index.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateSubPropertyName(System.String,System.String)">
      <summary>Crée le nom de la sous-propriété à l'aide du préfixe et du nom de propriété spécifiés.</summary>
      <returns>Nom de la sous-propriété.</returns>
      <param name="prefix">Préfixe de la sous-propriété.</param>
      <param name="propertyName">Nom de la propriété.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetFilteredModelProperties(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Retourne un jeu de propriétés correspondant aux restrictions du filtre de propriétés qui sont établies par le paramètre <paramref name="binding context" /> spécifié.</summary>
      <returns>Jeu énumérable de descripteurs de propriété.</returns>
      <param name="controllerContext">Contexte dans lequel le contrôleur opère. Les informations de contexte incluent le contrôleur, le contenu HTTP, le contexte de la demande et les données d'itinéraire.</param>
      <param name="bindingContext">Contexte dans lequel le modèle est lié. Le contexte inclut des informations telles que l'objet de modèle, le nom et le type du modèle, le filtre de propriété et le fournisseur de valeur.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetModelProperties(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Retourne les propriétés du modèle à l'aide du contexte de contrôleur et du contexte de liaison spécifiés.</summary>
      <returns>Collection de descripteurs de propriété.</returns>
      <param name="controllerContext">Contexte dans lequel le contrôleur opère. Les informations de contexte incluent le contrôleur, le contenu HTTP, le contexte de la demande et les données d'itinéraire.</param>
      <param name="bindingContext">Contexte dans lequel le modèle est lié. Le contexte inclut des informations telles que l'objet de modèle, le nom et le type du modèle, le filtre de propriété et le fournisseur de valeur.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetPropertyValue(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Web.Mvc.IModelBinder)">
      <summary>Retourne la valeur d'une propriété à l'aide du contexte de contrôleur, du contexte de liaison, du descripteur de propriété et du classeur de propriétés spécifiés.</summary>
      <returns>Objet qui représente la valeur de la propriété.</returns>
      <param name="controllerContext">Contexte dans lequel le contrôleur opère. Les informations de contexte incluent le contrôleur, le contenu HTTP, le contexte de la demande et les données d'itinéraire.</param>
      <param name="bindingContext">Contexte dans lequel le modèle est lié. Le contexte inclut des informations telles que l'objet de modèle, le nom et le type du modèle, le filtre de propriété et le fournisseur de valeur.</param>
      <param name="propertyDescriptor">Descripteur de la propriété à laquelle accéder. Le descripteur fournit des informations telles que le type du composant, le type de la propriété et la valeur de la propriété. Il fournit également les méthodes permettant d'obtenir ou de définir la valeur de la propriété.</param>
      <param name="propertyBinder">Objet qui permet de lier la propriété.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetTypeDescriptor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Retourne l'objet descripteur correspondant à un type qui est spécifié par son contexte de contrôleur et son contexte de liaison.</summary>
      <returns>Objet descripteur de type personnalisé.</returns>
      <param name="controllerContext">Contexte dans lequel le contrôleur opère. Les informations de contexte incluent le contrôleur, le contenu HTTP, le contexte de la demande et les données d'itinéraire.</param>
      <param name="bindingContext">Contexte dans lequel le modèle est lié. Le contexte inclut des informations telles que l'objet de modèle, le nom et le type du modèle, le filtre de propriété et le fournisseur de valeur.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.IsModelValid(System.Web.Mvc.ModelBindingContext)">
      <summary>Détermine si un modèle de données est valide pour le contexte de liaison spécifié.</summary>
      <returns>true si le modèle est valide ; sinon, false.</returns>
      <param name="bindingContext">Contexte dans lequel le modèle est lié. Le contexte inclut des informations telles que l'objet de modèle, le nom et le type du modèle, le filtre de propriété et le fournisseur de valeur.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="bindingContext" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnModelUpdated(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Appelée lorsque le modèle est mis à jour.</summary>
      <param name="controllerContext">Contexte dans lequel le contrôleur opère. Les informations de contexte incluent le contrôleur, le contenu HTTP, le contexte de la demande et les données d'itinéraire.</param>
      <param name="bindingContext">Contexte dans lequel le modèle est lié. Le contexte inclut des informations telles que l'objet de modèle, le nom et le type du modèle, le filtre de propriété et le fournisseur de valeur.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnModelUpdating(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Appelée lorsque le modèle est en cours de mise à jour.</summary>
      <returns>true si le modèle est en cours de mise à jour ; sinon, false.</returns>
      <param name="controllerContext">Contexte dans lequel le contrôleur opère. Les informations de contexte incluent le contrôleur, le contenu HTTP, le contexte de la demande et les données d'itinéraire.</param>
      <param name="bindingContext">Contexte dans lequel le modèle est lié. Le contexte inclut des informations telles que l'objet de modèle, le nom et le type du modèle, le filtre de propriété et le fournisseur de valeur.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnPropertyValidated(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Appelée lorsque la propriété spécifiée est validée.</summary>
      <param name="controllerContext">Contexte dans lequel le contrôleur opère. Les informations de contexte incluent le contrôleur, le contenu HTTP, le contexte de la demande et les données d'itinéraire.</param>
      <param name="bindingContext">Contexte dans lequel le modèle est lié. Le contexte inclut des informations telles que l'objet de modèle, le nom et le type du modèle, le filtre de propriété et le fournisseur de valeur.</param>
      <param name="propertyDescriptor">Décrit une propriété à valider. Le descripteur fournit des informations telles que le type du composant, le type de la propriété et la valeur de la propriété. Il fournit également les méthodes permettant d'obtenir ou de définir la valeur de la propriété.</param>
      <param name="value">Valeur à définir pour la propriété.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnPropertyValidating(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Appelée lorsque la propriété spécifiée est en cours de validation.</summary>
      <returns>true si la propriété est en cours de validation ; sinon, false.</returns>
      <param name="controllerContext">Contexte dans lequel le contrôleur opère. Les informations de contexte incluent le contrôleur, le contenu HTTP, le contexte de la demande et les données d'itinéraire.</param>
      <param name="bindingContext">Contexte dans lequel le modèle est lié. Le contexte inclut des informations telles que l'objet de modèle, le nom et le type du modèle, le filtre de propriété et le fournisseur de valeur.</param>
      <param name="propertyDescriptor">Décrit une propriété en cours de validation. Le descripteur fournit des informations telles que le type du composant, ainsi que le type et la valeur de la propriété. Il fournit également les méthodes permettant d'obtenir ou de définir la valeur de la propriété.</param>
      <param name="value">Valeur à définir pour la propriété.</param>
    </member>
    <member name="P:System.Web.Mvc.DefaultModelBinder.ResourceClassKey">
      <summary>Obtient ou définit le nom du fichier de ressources (clé de classe) qui contient des valeurs de chaînes localisées.</summary>
      <returns>Nom du fichier de ressources (clé de classe).</returns>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.SetProperty(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Définit la propriété spécifiée à l'aide du contexte du contrôleur, du contexte de liaison et de la valeur de propriété spécifiés.</summary>
      <param name="controllerContext">Contexte dans lequel le contrôleur opère. Les informations de contexte incluent le contrôleur, le contenu HTTP, le contexte de la demande et les données d'itinéraire.</param>
      <param name="bindingContext">Contexte dans lequel le modèle est lié. Le contexte inclut des informations telles que l'objet de modèle, le nom et le type du modèle, le filtre de propriété et le fournisseur de valeur.</param>
      <param name="propertyDescriptor">Décrit une propriété à définir. Le descripteur fournit des informations telles que le type du composant, le type de la propriété et la valeur de la propriété. Il fournit également les méthodes permettant d'obtenir ou de définir la valeur de la propriété.</param>
      <param name="value">Valeur à définir pour la propriété.</param>
    </member>
    <member name="T:System.Web.Mvc.DefaultViewLocationCache">
      <summary>Représente un cache mémoire pour les emplacements d'affichages.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.DefaultViewLocationCache" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.#ctor(System.TimeSpan)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.DefaultViewLocationCache" /> en utilisant la période de mise en cache spécifiée.</summary>
      <param name="timeSpan">Période de mise en cache.</param>
      <exception cref="T:System.InvalidOperationException">L'attribut Ticks du paramètre <paramref name="timeSpan" /> a pour valeur un nombre négatif.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.GetViewLocation(System.Web.HttpContextBase,System.String)">
      <summary>Récupère l'emplacement d'affichage par défaut à l'aide du contexte HTTP et de la clé de cache spécifiés.</summary>
      <returns>Emplacement d'affichage par défaut.</returns>
      <param name="httpContext">Contexte HTTP.</param>
      <param name="key">Clé de cache.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="httpContext" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.InsertViewLocation(System.Web.HttpContextBase,System.String,System.String)">
      <summary>Insère l'affichage dans le chemin d'accès virtuel spécifié à l'aide du contexte HTTP, de la clé de cache et du chemin d'accès virtuel spécifiés.</summary>
      <param name="httpContext">Contexte HTTP.</param>
      <param name="key">Clé de cache.</param>
      <param name="virtualPath">Chemin d'accès virtuel.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="httpContext" /> a la valeur null.</exception>
    </member>
    <member name="F:System.Web.Mvc.DefaultViewLocationCache.Null">
      <summary>Crée un cache d'emplacements d'affichages vide.</summary>
    </member>
    <member name="P:System.Web.Mvc.DefaultViewLocationCache.TimeSpan">
      <summary>Obtient ou définit la période de mise en cache.</summary>
      <returns>Période de mise en cache.</returns>
    </member>
    <member name="T:System.Web.Mvc.DependencyResolver">
      <summary>Fournit un point d'inscription pour les programmes de résolution des dépendances qui implémentent <see cref="T:System.Web.Mvc.IDependencyResolver" /> ou l'interface IServiceLocator du Common Service Locator.</summary>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.DependencyResolver" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.DependencyResolver.Current">
      <summary>Obtient l'implémentation du programme de résolution des dépendances.</summary>
      <returns>Implémentation du programme de résolution des dépendances.</returns>
    </member>
    <member name="P:System.Web.Mvc.DependencyResolver.InnerCurrent">
      <summary>Cette API prend en charge l'infrastructure ASP.NET MVC et n'est pas conçue pour être utilisée directement à partir de votre code.</summary>
      <returns>Implémentation du programme de résolution des dépendances.</returns>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Func`2,System.Boolean)">
      <summary>Cette API prend en charge l'infrastructure ASP.NET MVC et n'est pas conçue pour être utilisée directement à partir de votre code.</summary>
      <param name="getService">Fonction qui fournit le service.</param>
      <param name="getServices">Fonction qui fournit les services.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Object)">
      <summary>Cette API prend en charge l'infrastructure ASP.NET MVC et n'est pas conçue pour être utilisée directement à partir de votre code.</summary>
      <param name="commonServiceLocator">Localisateur de service commun.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Web.Mvc.IDependencyResolver)">
      <summary>Cette API prend en charge l'infrastructure ASP.NET MVC et n'est pas conçue pour être utilisée directement à partir de votre code.</summary>
      <param name="resolver">Objet qui implémente le programme de résolution des dépendances.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.SetResolver(System.Func`2,System.Boolean)">
      <summary>Fournit un point d'inscription pour les programmes de résolution des dépendances à l'aide du délégué de service spécifié et des délégués de collection de services spécifiés.</summary>
      <param name="getService">Délégué de service.</param>
      <param name="getServices">Délégués des services.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.SetResolver(System.Object)">
      <summary>Fournit un point d'inscription pour les programmes de résolution des dépendances à l'aide du Common Service Locator lors de l'utilisation d'une interface de localisation de service.</summary>
      <param name="commonServiceLocator">Localisateur de service commun.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.SetResolver(System.Web.Mvc.IDependencyResolver)">
      <summary>Fournit un point d'inscription pour les programmes de résolution des dépendances, à l'aide de l'interface du programme de résolution des dépendances spécifiée.</summary>
      <param name="resolver">Programme de résolution des dépendances.</param>
    </member>
    <member name="T:System.Web.Mvc.DependencyResolverExtensions">
      <summary>Fournit une implémentation de type sécurisé <see cref="M:System.Web.Mvc.IDependencyResolver.GetService(System.Type)" /> et <see cref="M:System.Web.Mvc.IDependencyResolver.GetServices(System.Type)" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolverExtensions.GetService``1(System.Web.Mvc.IDependencyResolver)">
      <summary>Résout des services enregistrés uniques qui prennent en charge la création d'objet arbitraire.</summary>
      <returns>Service ou objet demandé.</returns>
      <param name="resolver">Instance du programme de résolution des dépendances que cette méthode étend.</param>
      <typeparam name="TService">Type du service ou de l'objet demandé.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolverExtensions.GetServices``1(System.Web.Mvc.IDependencyResolver)">
      <summary>Résout plusieurs services enregistrés.</summary>
      <returns>Services demandés.</returns>
      <param name="resolver">Instance du programme de résolution des dépendances que cette méthode étend.</param>
      <typeparam name="TService">Type des services demandés.</typeparam>
    </member>
    <member name="T:System.Web.Mvc.DictionaryValueProvider`1">
      <summary>Représente la classe de base pour les fournisseurs de valeur dont les valeurs proviennent d'une collection qui implémente l'interface <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <typeparam name="TValue">Type de la valeur.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.#ctor(System.Collections.Generic.IDictionary{System.String,`0},System.Globalization.CultureInfo)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.DictionaryValueProvider`1" />.</summary>
      <param name="dictionary">Paires nom/valeur utilisées pour initialiser le fournisseur de valeur.</param>
      <param name="culture">Informations sur une culture spécifique, telles que les noms de la culture, le système d'écriture et le calendrier utilisé.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="dictionary" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.ContainsPrefix(System.String)">
      <summary>Détermine si la collection contient le préfixe spécifié.</summary>
      <returns>true si la collection contient le préfixe spécifié ; sinon, false.</returns>
      <param name="prefix">Préfixe à rechercher.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="prefix" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.GetValue(System.String)">
      <summary>Retourne un objet de valeur à l'aide de la clé et du contexte de contrôleur spécifiés.</summary>
      <returns>Objet de valeur pour la clé spécifiée.</returns>
      <param name="key">Clé de l'objet de valeur à récupérer.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="key" /> a la valeur null.</exception>
    </member>
    <member name="T:System.Web.Mvc.EmptyModelMetadataProvider">
      <summary>Offre un fournisseur de métadonnées vide pour les modèles de données qui ne requièrent pas de métadonnées.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelMetadataProvider.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.EmptyModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func`1,System.Void,System.Object)">
      <summary>Crée une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ModelMetadata" />.</summary>
      <returns>Retourne <see cref="T:System.Web.Mvc.ModelMetadata" />.</returns>
      <param name="attributes">Attributs.</param>
      <param name="containerType">Type du conteneur.</param>
      <param name="modelAccessor">Accesseur modèle.</param>
      <param name="modelType">Type du modèle.</param>
      <param name="propertyName">Nom du modèle.</param>
    </member>
    <member name="T:System.Web.Mvc.EmptyModelValidatorProvider">
      <summary>Fournit un fournisseur de validation vide pour les modèles qui ne nécessitent pas de validateur.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelValidatorProvider.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.EmptyModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Obtient le validateur de modèle vide.</summary>
      <returns>Validateur de modèle vide.</returns>
      <param name="metadata">Métadonnées.</param>
      <param name="context">Contexte.</param>
    </member>
    <member name="T:System.Web.Mvc.EmptyResult">
      <summary>Représente un résultat qui ne débouche sur rien, par exemple une méthode d'action d'un contrôleur qui ne retourne rien.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyResult.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.EmptyResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Exécute le contexte de résultat spécifié.</summary>
      <param name="context">Contexte de résultat.</param>
    </member>
    <member name="T:System.Web.Mvc.ExceptionContext">
      <summary>Fournit le contexte d'utilisation de la classe <see cref="T:System.Web.Mvc.HandleErrorAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ExceptionContext.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ExceptionContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ExceptionContext.#ctor(System.Web.Mvc.ControllerContext,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ExceptionContext" /> pour l'exception spécifiée en utilisant le contexte du contrôleur spécifié.</summary>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="exception">Exception.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="exception" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ExceptionContext.Exception">
      <summary>Obtient ou définit l'objet exception.</summary>
      <returns>L'objet exception.</returns>
    </member>
    <member name="P:System.Web.Mvc.ExceptionContext.ExceptionHandled">
      <summary>Obtient ou définit une valeur qui indique si l'exception a été gérée.</summary>
      <returns>true si l'exception a été gérée ; sinon, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ExceptionContext.Result">
      <summary>Obtient ou définit le résultat de l'action.</summary>
      <returns>Résultat de l'action.</returns>
    </member>
    <member name="T:System.Web.Mvc.ExpressionHelper">
      <summary>Fournit une classe d'assistance pour obtenir le nom de modèle à partir d'une expression.</summary>
    </member>
    <member name="M:System.Web.Mvc.ExpressionHelper.GetExpressionText(System.Linq.Expressions.LambdaExpression)">
      <summary>Obtient le nom de modèle à partir d'une expression lambda.</summary>
      <returns>Nom du modèle.</returns>
      <param name="expression">Expression.</param>
    </member>
    <member name="M:System.Web.Mvc.ExpressionHelper.GetExpressionText(System.String)">
      <summary>Obtient le nom de modèle à partir d'une expression de chaîne.</summary>
      <returns>Nom du modèle.</returns>
      <param name="expression">Expression.</param>
    </member>
    <member name="T:System.Web.Mvc.FieldValidationMetadata">
      <summary>Fournit un conteneur pour les métadonnées de validation de champ côté client.</summary>
    </member>
    <member name="M:System.Web.Mvc.FieldValidationMetadata.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.FieldValidationMetadata" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.FieldName">
      <summary>Obtient ou définit le nom du champ de données.</summary>
      <returns>Nom du champ de données.</returns>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.ReplaceValidationMessageContents">
      <summary>Obtient ou définit une valeur qui indique si le contenu du message de validation doit être remplacé par l'erreur de validation client.</summary>
      <returns>true si le contenu du message de validation doit être remplacé par l'erreur de validation client ; sinon, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.ValidationMessageId">
      <summary>Obtient ou définit l'ID de message du validateur.</summary>
      <returns>ID de message du validateur.</returns>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.ValidationRules">
      <summary>Obtient les règles de validation client.</summary>
      <returns>Règles de validation client.</returns>
    </member>
    <member name="T:System.Web.Mvc.FileContentResult">
      <summary>Envoie le contenu d'un fichier binaire à la réponse.</summary>
    </member>
    <member name="M:System.Web.Mvc.FileContentResult.#ctor(System.Byte[],System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.FileContentResult" /> en utilisant le contenu du fichier et le type de contenu spécifiés.</summary>
      <param name="fileContents">Tableau d'octets à envoyer dans la réponse.</param>
      <param name="contentType">Type de contenu à utiliser pour la réponse.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="fileContents" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileContentResult.FileContents">
      <summary>Contenu binaire à envoyer à la réponse.</summary>
      <returns>Contenu du fichier.</returns>
    </member>
    <member name="M:System.Web.Mvc.FileContentResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>Écrit le contenu du fichier dans la réponse.</summary>
      <param name="response">Réponse.</param>
    </member>
    <member name="T:System.Web.Mvc.FilePathResult">
      <summary>Envoie le contenu d'un fichier à la réponse.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilePathResult.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.FilePathResult" /> en utilisant le nom de fichier et le type de contenu spécifiés.</summary>
      <param name="fileName">Nom du fichier à envoyer à la réponse.</param>
      <param name="contentType">Type de contenu de la réponse.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="fileName" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="P:System.Web.Mvc.FilePathResult.FileName">
      <summary>Obtient ou définit le chemin d'accès du fichier envoyé à la réponse.</summary>
      <returns>Chemin d'accès du fichier envoyé à la réponse.</returns>
    </member>
    <member name="M:System.Web.Mvc.FilePathResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>Écrit le fichier dans la réponse.</summary>
      <param name="response">Réponse.</param>
    </member>
    <member name="T:System.Web.Mvc.FileResult">
      <summary>Représente une classe de base utilisée pour envoyer le contenu d'un fichier binaire à la réponse.</summary>
    </member>
    <member name="M:System.Web.Mvc.FileResult.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.FileResult" />.</summary>
      <param name="contentType">Type de contenu.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="contentType" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileResult.ContentType">
      <summary>Obtient le type de contenu à utiliser pour la réponse.</summary>
      <returns>Type de contenu.</returns>
    </member>
    <member name="M:System.Web.Mvc.FileResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Permet le traitement du résultat d'une méthode d'action par un type personnalisé qui hérite de la classe <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Contexte dans lequel le résultat est exécuté.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="context" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileResult.FileDownloadName">
      <summary>Obtient ou définit l'en-tête de disposition de contenu afin qu'une boîte de dialogue de téléchargement de fichier s'affiche dans le navigateur avec le nom de fichier spécifié.</summary>
      <returns>Nom du fichier.</returns>
    </member>
    <member name="M:System.Web.Mvc.FileResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>Écrit le fichier dans la réponse.</summary>
      <param name="response">Réponse.</param>
    </member>
    <member name="T:System.Web.Mvc.FileStreamResult">
      <summary>Envoie un contenu binaire à la réponse à l'aide d'une instance de <see cref="T:System.IO.Stream" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FileStreamResult.#ctor(System.IO.Stream,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.FileStreamResult" />.</summary>
      <param name="fileStream">Flux à envoyer à la réponse.</param>
      <param name="contentType">Type de contenu à utiliser pour la réponse.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="fileStream" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileStreamResult.FileStream">
      <summary>Obtient le flux à envoyer à la réponse.</summary>
      <returns>Flux de fichiers.</returns>
    </member>
    <member name="M:System.Web.Mvc.FileStreamResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>Écrit le fichier dans la réponse.</summary>
      <param name="response">Réponse.</param>
    </member>
    <member name="T:System.Web.Mvc.Filter">
      <summary>Représente une classe de métadonnées qui contient une référence à l'implémentation d'une ou plusieurs interfaces de filtres, l'ordre et la portée du filtre.</summary>
    </member>
    <member name="M:System.Web.Mvc.Filter.#ctor(System.Object,System.Web.Mvc.FilterScope,System.Nullable{System.Int32})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.Filter" />.</summary>
      <param name="instance">Instance.</param>
      <param name="scope">Portée.</param>
      <param name="order">Ordre.</param>
    </member>
    <member name="F:System.Web.Mvc.Filter.DefaultOrder">
      <summary>Représente une constante utilisée pour spécifier l'ordre par défaut des filtres.</summary>
    </member>
    <member name="P:System.Web.Mvc.Filter.Instance">
      <summary>Obtient l'instance de cette classe.</summary>
      <returns>Instance de cette classe.</returns>
    </member>
    <member name="P:System.Web.Mvc.Filter.Order">
      <summary>Obtient l'ordre d'application du filtre.</summary>
      <returns>Ordre d'application du filtre.</returns>
    </member>
    <member name="P:System.Web.Mvc.Filter.Scope">
      <summary>Obtient l'ordre de portée du filtre.</summary>
      <returns>Ordre de portée du filtre.</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterAttribute">
      <summary>Représente la classe de base pour les attributs de filtre d'action.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.FilterAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.FilterAttribute.AllowMultiple">
      <summary>Obtient ou définit une valeur qui indique s'il est possible de spécifier plusieurs instances de l'attribut de filtre.</summary>
      <returns>true s'il est possible de spécifier plusieurs instances de l'attribut de filtre ; sinon, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterAttribute.Order">
      <summary>Obtient ou définit l'ordre dans lequel les filtres d'action sont exécutés.</summary>
      <returns>Ordre dans lequel les filtres d'action sont exécutés.</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterAttributeFilterProvider">
      <summary>Définit un fournisseur de filtres pour des attributs de filtre.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.FilterAttributeFilterProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.GetActionAttributes(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Obtient une collection d'attributs d'action personnalisée.</summary>
      <returns>Collection d'attributs d'action personnalisée.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="actionDescriptor">Descripteur de l'action.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.GetControllerAttributes(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Obtient une collection d'attributs de contrôleur.</summary>
      <returns>Collection d'attributs de contrôleur.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="actionDescriptor">Descripteur de l'action.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Regroupe les filtres de tous les fournisseurs de filtres en une seule collection.</summary>
      <returns>Collection des filtres de tous les fournisseurs de filtres.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="actionDescriptor">Descripteur de l'action.</param>
    </member>
    <member name="T:System.Web.Mvc.FilterInfo">
      <summary>Encapsule les informations relatives aux filtres d'action disponibles.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterInfo.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.FilterInfo" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterInfo.#ctor(System.Collections.Generic.IEnumerable{System.Web.Mvc.Filter})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.FilterInfo" /> à l'aide de la collection de filtres spécifiée.</summary>
      <param name="filters">Collection de filtres.</param>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.ActionFilters">
      <summary>Obtient tous les filtres d'action de l'application.</summary>
      <returns>Filtres d'action.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.AuthorizationFilters">
      <summary>Obtient tous les filtres d'autorisation de l'application.</summary>
      <returns>Filtres d'autorisation.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.ExceptionFilters">
      <summary>Obtient tous les filtres d'exception de l'application.</summary>
      <returns>Filtres d'exception.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.ResultFilters">
      <summary>Obtient tous les filtres de résultat de l'application.</summary>
      <returns>Filtres de résultat.</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterProviderCollection">
      <summary>Représente la collection de fournisseurs de filtres pour l'application.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.FilterProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IFilterProvider})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.FilterProviderCollection" /> à l'aide de la collection de fournisseurs de filtres.</summary>
      <param name="providers">Collection de fournisseurs de filtres.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Retourne la collection de fournisseurs de filtres.</summary>
      <returns>Collection de fournisseurs de filtres.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="actionDescriptor">Descripteur de l'action.</param>
    </member>
    <member name="T:System.Web.Mvc.FilterProviders">
      <summary>Fournit un point d'inscription pour les filtres.</summary>
    </member>
    <member name="P:System.Web.Mvc.FilterProviders.Providers">
      <summary>Fournit un point d'inscription pour les filtres.</summary>
      <returns>Collection de filtres.</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterScope">
      <summary>Définit des valeurs qui spécifient l'ordre dans lequel les filtres ASP.NET MVC sont exécutés dans le même type de filtre et ordre de filtre.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.First">
      <summary>Spécifie en premier.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Global">
      <summary>Spécifie un ordre avant <see cref="F:System.Web.Mvc.FilterScope.Controller" /> et après <see cref="F:System.Web.Mvc.FilterScope.First" />.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Controller">
      <summary>Spécifie un ordre avant <see cref="F:System.Web.Mvc.FilterScope.Action" /> et après <see cref="F:System.Web.Mvc.FilterScope.Global" />.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Action">
      <summary>Spécifie un ordre avant <see cref="F:System.Web.Mvc.FilterScope.Last" /> et après <see cref="F:System.Web.Mvc.FilterScope.Controller" />.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Last">
      <summary>Spécifie en dernier.</summary>
    </member>
    <member name="T:System.Web.Mvc.FormCollection">
      <summary>Contient les fournisseurs de valeurs de formulaire de l'application.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.FormCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.FormCollection" />.</summary>
      <param name="collection">Collection.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="collection" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.GetValue(System.String)">
      <summary>Obtient le fournisseur de valeurs spécifié.</summary>
      <returns>Fournisseur de valeurs.</returns>
      <param name="name">Nom du fournisseur de valeurs à obtenir.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.System#Web#Mvc#IValueProvider#ContainsPrefix(System.String)">
      <summary>Obtient une valeur qui indique si le fournisseur de valeur contient une entrée qui a le préfixe spécifié.</summary>
      <returns>true si le fournisseur de valeur contient une entrée qui a le préfixe spécifié ; sinon, false.</returns>
      <param name="prefix">Préfixe à rechercher.</param>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.System#Web#Mvc#IValueProvider#GetValue(System.String)">
      <summary>Obtient une valeur d'un fournisseur de valeur à l'aide de la clé spécifiée.</summary>
      <returns>Valeur d'un fournisseur de valeur.</returns>
      <param name="key">Clé.</param>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.ToValueProvider">
      <summary>Retourne un dictionnaire qui contient les fournisseurs de valeurs.</summary>
      <returns>Dictionnaire des fournisseurs de valeurs.</returns>
    </member>
    <member name="T:System.Web.Mvc.FormContext">
      <summary>Encapsule les informations requises pour valider et traiter les données d'entrée d'un formulaire HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormContext.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.FormContext" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.FormContext.FieldValidators">
      <summary>Obtient les validateurs de champ pour le formulaire.</summary>
      <returns>Dictionnaire de validateurs de champs du formulaire.</returns>
    </member>
    <member name="P:System.Web.Mvc.FormContext.FormId">
      <summary>Obtient ou définit l'identificateur du formulaire.</summary>
      <returns>Identificateur du formulaire.</returns>
    </member>
    <member name="M:System.Web.Mvc.FormContext.GetJsonValidationMetadata">
      <summary>Retourne un objet sérialisé contenant l'identificateur du formulaire et ses valeurs de validation de champs.</summary>
      <returns>Objet sérialisé contenant l'identificateur du formulaire et ses valeurs de validation de champs.</returns>
    </member>
    <member name="M:System.Web.Mvc.FormContext.GetValidationMetadataForField(System.String)">
      <summary>Retourne la valeur de validation du champ d'entrée spécifié.</summary>
      <returns>Valeur utilisée pour la validation du champ d'entrée.</returns>
      <param name="fieldName">Nom du champ dont la valeur de validation doit être récupérée.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="fieldName" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormContext.GetValidationMetadataForField(System.String,System.Boolean)">
      <summary>Retourne la valeur de validation du champ d'entrée spécifié et une valeur qui indique la procédure à suivre si la valeur de validation est introuvable.</summary>
      <returns>Valeur utilisée pour la validation du champ d'entrée.</returns>
      <param name="fieldName">Nom du champ dont la valeur de validation doit être récupérée.</param>
      <param name="createIfNotFound">true pour créer une valeur de validation si celle-ci est introuvable ; sinon, false.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="fieldName" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormContext.RenderedField(System.String)">
      <summary>Retourne une valeur qui indique si le champ spécifié a été restitué dans le formulaire.</summary>
      <returns>true si le champ a été restitué ; sinon, false.</returns>
      <param name="fieldName">Nom du champ.</param>
    </member>
    <member name="M:System.Web.Mvc.FormContext.RenderedField(System.String,System.Boolean)">
      <summary>Définit une valeur qui indique si le champ spécifié a été restitué dans le formulaire.</summary>
      <param name="fieldName">Nom du champ.</param>
      <param name="value">true pour spécifier que le champ a été restitué dans le formulaire ; sinon, false.</param>
    </member>
    <member name="P:System.Web.Mvc.FormContext.ReplaceValidationSummary">
      <summary>Détermine si les erreurs de validation client doivent être ajoutées dynamiquement au résumé des validations.</summary>
      <returns>true si les erreurs de validation client doivent être ajoutées au résumé des validations ; sinon, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.FormContext.ValidationSummaryId">
      <summary>Obtient ou définit l'identificateur pour le résumé des validations.</summary>
      <returns>Identificateur pour le résumé des validations.</returns>
    </member>
    <member name="T:System.Web.Mvc.FormMethod">
      <summary>Énumère les types de requêtes HTTP pour un formulaire.</summary>
    </member>
    <member name="F:System.Web.Mvc.FormMethod.Get">
      <summary>Spécifie une requête GET.</summary>
    </member>
    <member name="F:System.Web.Mvc.FormMethod.Post">
      <summary>Spécifie une requête POST.</summary>
    </member>
    <member name="T:System.Web.Mvc.FormValueProvider">
      <summary>Représente un fournisseur de valeur pour les valeurs de formulaire contenues dans un objet <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.FormValueProvider" />.</summary>
      <param name="controllerContext">Objet qui encapsule des informations sur la requête HTTP en cours.</param>
    </member>
    <member name="T:System.Web.Mvc.FormValueProviderFactory">
      <summary>Représente une classe qui est chargée de la création d'une nouvelle instance d'un objet de fournisseur de valeur de formulaire.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormValueProviderFactory.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.FormValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Retourne un objet de fournisseur de valeur de formulaire pour le contexte de contrôleur spécifié.</summary>
      <returns>Objet de fournisseur de valeur de formulaire.</returns>
      <param name="controllerContext">Objet qui encapsule des informations sur la requête HTTP en cours.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="controllerContext" /> a la valeur null.</exception>
    </member>
    <member name="T:System.Web.Mvc.GlobalFilterCollection">
      <summary>Représente une classe qui contient tous les filtres globaux.</summary>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.GlobalFilterCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Add(System.Object)">
      <summary>Ajoute le filtre spécifié à la collection de filtres globaux.</summary>
      <param name="filter">Filtre.</param>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Add(System.Object,System.Int32)">
      <summary>Ajoute le filtre spécifié à la collection de filtres globaux en utilisant l'ordre spécifié d'exécution des filtres.</summary>
      <param name="filter">Filtre.</param>
      <param name="order">Ordre d'exécution du filtre.</param>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Clear">
      <summary>Supprime tous les filtres de la collection de filtres globaux.</summary>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Contains(System.Object)">
      <summary>Détermine si un filtre se trouve dans la collection de filtres globaux.</summary>
      <returns>true si <paramref name="filter" /> se trouve dans la collection de filtres globaux ; sinon, false.</returns>
      <param name="filter">Filtre.</param>
    </member>
    <member name="P:System.Web.Mvc.GlobalFilterCollection.Count">
      <summary>Obtient le nombre de filtres de la collection de filtres globaux.</summary>
      <returns>Nombre de filtres de la collection de filtres globaux.</returns>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.GetEnumerator">
      <summary>Retourne un énumérateur qui itère au sein de la collection de filtres globaux.</summary>
      <returns>Énumérateur qui itère au sein de la collection de filtres globaux.</returns>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Remove(System.Object)">
      <summary>Supprime tous les filtres qui correspondent au filtre spécifié.</summary>
      <param name="filter">Filtre à supprimer.</param>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Cette API prend en charge l'infrastructure ASP.NET MVC et n'est pas conçue pour être utilisée directement à partir de votre code. </summary>
      <returns>Énumérateur qui itère au sein de la collection de filtres globaux.</returns>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.System#Web#Mvc#IFilterProvider#GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Cette API prend en charge l'infrastructure ASP.NET MVC et n'est pas conçue pour être utilisée directement à partir de votre code.</summary>
      <returns>Énumérateur qui itère au sein de la collection de filtres globaux.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="actionDescriptor">Descripteur de l'action.</param>
    </member>
    <member name="T:System.Web.Mvc.GlobalFilters">
      <summary>Représente la collection de filtres globaux.</summary>
    </member>
    <member name="P:System.Web.Mvc.GlobalFilters.Filters">
      <summary>Obtient ou définit la collection de filtres globaux.</summary>
      <returns>Collection de filtres globaux.</returns>
    </member>
    <member name="T:System.Web.Mvc.HandleErrorAttribute">
      <summary>Représente un attribut utilisé pour gérer une exception levée par une méthode d'action.</summary>
    </member>
    <member name="M:System.Web.Mvc.HandleErrorAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.HandleErrorAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.ExceptionType">
      <summary>Obtient ou définit le type de l'exception.</summary>
      <returns>Type de l'exception.</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.Master">
      <summary>Obtient ou définit l'affichage maître pour l'affichage des informations sur l'exception.</summary>
      <returns>Affichage maître.</returns>
    </member>
    <member name="M:System.Web.Mvc.HandleErrorAttribute.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Appelée lorsqu'une exception se produit.</summary>
      <param name="filterContext">Contexte du filtre d'action.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="filterContext" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.TypeId">
      <summary>Obtient l'identificateur unique pour cet attribut.</summary>
      <returns>Identificateur unique de l'attribut.</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.View">
      <summary>Obtient ou définit l'affichage de la page pour l'affichage des informations sur l'exception.</summary>
      <returns>Vue de page.</returns>
    </member>
    <member name="T:System.Web.Mvc.HandleErrorInfo">
      <summary>Encapsule des informations pour la gestion d'une erreur générée par une méthode d'action.</summary>
    </member>
    <member name="M:System.Web.Mvc.HandleErrorInfo.#ctor(System.Exception,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.HandleErrorInfo" />.</summary>
      <param name="exception">Exception.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="actionName">Nom de l'action.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="exception" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="controllerName" /> ou <paramref name="actionName" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorInfo.ActionName">
      <summary>Obtient ou définit le nom de l'action exécutée lorsque l'exception a été levée.</summary>
      <returns>Nom de l'action.</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorInfo.ControllerName">
      <summary>Obtient ou définit le nom du contrôleur qui contient la méthode d'action qui a levé l'exception.</summary>
      <returns>Nom du contrôleur.</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorInfo.Exception">
      <summary>Obtient ou définit l'objet exception.</summary>
      <returns>L'objet exception.</returns>
    </member>
    <member name="T:System.Web.Mvc.HiddenInputAttribute">
      <summary>Représente un attribut qui est utilisé pour indiquer si une valeur de propriété ou de champ doit être restituée sous la forme d'un élément input masqué.</summary>
    </member>
    <member name="M:System.Web.Mvc.HiddenInputAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.HiddenInputAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.HiddenInputAttribute.DisplayValue">
      <summary>Obtient ou définit une valeur qui indique si la valeur de l'élément input masqué doit être affichée.</summary>
      <returns>true si la valeur doit s'afficher ; sinon, false.</returns>
    </member>
    <member name="T:System.Web.Mvc.HtmlHelper">
      <summary>Représente la prise en charge du rendu des contrôles HTML dans une vue.</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.HtmlHelper" /> en utilisant le contexte d'affichage et le conteneur de données d'affichage spécifiés.</summary>
      <param name="viewContext">Contexte d'affichage.</param>
      <param name="viewDataContainer">Conteneur des données d'affichage.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="viewContext" /> ou <paramref name="viewDataContainer" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.HtmlHelper" /> à l'aide du contexte d'affichage, du conteneur de données d'affichage et de la collection d'itinéraires spécifiés.</summary>
      <param name="viewContext">Contexte d'affichage.</param>
      <param name="viewDataContainer">Conteneur des données d'affichage.</param>
      <param name="routeCollection">Collection d'itinéraires.</param>
      <exception cref="T:System.ArgumentNullException">Un ou plusieurs paramètres ont la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AnonymousObjectToHtmlAttributes(System.Object)">
      <summary>Remplace les traits de soulignement par le tiret pour la conformité avec HTML5.</summary>
      <returns>Attributs HTML avec les traits de soulignement remplacés par des tirets.</returns>
      <param name="htmlAttributes">Attributs HTML.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AntiForgeryToken">
      <summary>Génère un champ de formulaire caché (jeton anti-contrefaçon) validé lorsque le formulaire est envoyé.</summary>
      <returns>Champ de formulaire généré (jeton anti-contrefaçon).</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AntiForgeryToken(System.String)">
      <summary>Génère un champ de formulaire caché (jeton anti-contrefaçon) validé lorsque le formulaire est envoyé. La valeur de champ est générée à l'aide de la valeur salt spécifiée.</summary>
      <returns>Champ de formulaire généré (jeton anti-contrefaçon).</returns>
      <param name="salt">Valeur salt qui peut correspondre à toute chaîne non vide.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AntiForgeryToken(System.String,System.String,System.String)">
      <summary>Génère un champ de formulaire caché (jeton anti-contrefaçon) validé lorsque le formulaire est envoyé. La valeur de champ est générée à l'aide de la valeur salt, du domaine et du chemin d'accès spécifiés.</summary>
      <returns>Champ de formulaire généré (jeton anti-contrefaçon).</returns>
      <param name="salt">Valeur salt qui peut correspondre à toute chaîne non vide.</param>
      <param name="domain">Domaine d'application.</param>
      <param name="path">Chemin d'accès virtuel.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AttributeEncode(System.Object)">
      <summary>Convertit l'objet d'attribut spécifié en chaîne encodée au format HTML.</summary>
      <returns>Chaîne encodée au format HTML. Si le paramètre value est null ou vide, cette méthode retourne une chaîne vide.</returns>
      <param name="value">Objet à encoder.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AttributeEncode(System.String)">
      <summary>Convertit la chaîne d'attribut spécifiée en chaîne encodée au format HTML.</summary>
      <returns>Chaîne encodée au format HTML. Si le paramètre value est null ou vide, cette méthode retourne une chaîne vide.</returns>
      <param name="value">Chaîne à encoder.</param>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ClientValidationEnabled">
      <summary>Obtient ou définit la validation côté client.</summary>
      <returns>true si la validation côté client est activée ; sinon, false.</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableClientValidation">
      <summary>Permet la validation d'entrée exécutée en utilisant le script client dans le navigateur.</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableClientValidation(System.Boolean)">
      <param name="enabled">true pour activer la validation client ; sinon, false.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableUnobtrusiveJavaScript">
      <summary>Active JavaScript non obstrusif.</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableUnobtrusiveJavaScript(System.Boolean)">
      <param name="enabled">true pour activer JavaScript non obstructif ; sinon, false.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Encode(System.Object)">
      <summary>Convertit la valeur de l'objet spécifié en chaîne encodée au format HTML.</summary>
      <returns>Chaîne encodée au format HTML.</returns>
      <param name="value">Objet à encoder.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Encode(System.String)">
      <summary>Convertit la chaîne spécifiée en chaîne encodée au format HTML.</summary>
      <returns>Chaîne encodée au format HTML.</returns>
      <param name="value">Chaîne à encoder.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateIdFromName(System.String)">
      <summary>Crée un ID d'élément HTML utilisant le nom d'élément spécifié.</summary>
      <returns>ID de l'élément HTML.</returns>
      <param name="name">Nom de l'élément HTML.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="name" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateIdFromName(System.String,System.String)">
      <summary>Crée un ID d'élément HTML à l'aide du nom d'élément spécifié et d'une chaîne qui remplace les points dans le nom.</summary>
      <returns>ID de l'élément HTML.</returns>
      <param name="name">Nom de l'élément HTML.</param>
      <param name="idAttributeDotReplacement">La chaîne remplace les points (.) dans le paramètre <paramref name="name" />.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="name" /> ou <paramref name="idAttributeDotReplacement" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Génère un élément d'ancrage HTML (élément a) qui établit un lien vers la méthode d'action spécifiée et permet à l'utilisateur de spécifier le protocole de communication, le nom de l'hôte et un fragment d'URL.</summary>
      <returns>Élément HTML qui établit un lien vers la méthode d'action spécifiée.</returns>
      <param name="requestContext">Contexte de la requête HTTP.</param>
      <param name="routeCollection">Collection d'itinéraires d'URL.</param>
      <param name="linkText">Légende de texte à afficher pour le lien.</param>
      <param name="routeName">Nom de l'itinéraire utilisé pour retourner un chemin d'accès virtuel.</param>
      <param name="actionName">Nom de la méthode d'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="protocol">Protocole de communication (par exemple, HTTP ou HTTPS). Si ce paramètre est null, le protocole HTTP est défini par défaut.</param>
      <param name="hostName">Nom de l'hôte.</param>
      <param name="fragment">Identificateur de fragment.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML de l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Génère un élément d'ancrage HTML (élément a) qui établit un lien vers la méthode d'action spécifiée.</summary>
      <returns>Élément HTML qui établit un lien vers la méthode d'action spécifiée.</returns>
      <param name="requestContext">Contexte de la requête HTTP.</param>
      <param name="routeCollection">Collection d'itinéraires d'URL.</param>
      <param name="linkText">Légende de texte à afficher pour le lien.</param>
      <param name="routeName">Nom de l'itinéraire utilisé pour retourner un chemin d'accès virtuel.</param>
      <param name="actionName">Nom de la méthode d'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML de l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateRouteLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Génère un élément d'ancrage HTML (élément a) qui établit un lien vers l'itinéraire d'URL spécifié et permet à l'utilisateur de spécifier le protocole de communication, le nom de l'hôte et un fragment d'URL.</summary>
      <returns>Élément HTML qui établit un lien vers l'itinéraire d'URL spécifié.</returns>
      <param name="requestContext">Contexte de la requête HTTP.</param>
      <param name="routeCollection">Collection d'itinéraires d'URL.</param>
      <param name="linkText">Légende de texte à afficher pour le lien.</param>
      <param name="routeName">Nom de l'itinéraire utilisé pour retourner un chemin d'accès virtuel.</param>
      <param name="protocol">Protocole de communication (par exemple, HTTP ou HTTPS). Si ce paramètre est null, le protocole HTTP est défini par défaut.</param>
      <param name="hostName">Nom de l'hôte.</param>
      <param name="fragment">Identificateur de fragment.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML de l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateRouteLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Génère un élément d'ancrage HTML (élément a) qui établit un lien vers l'itinéraire d'URL spécifié.</summary>
      <returns>Élément HTML qui établit un lien vers l'itinéraire d'URL spécifié.</returns>
      <param name="requestContext">Contexte de la requête HTTP.</param>
      <param name="routeCollection">Collection d'itinéraires d'URL.</param>
      <param name="linkText">Légende de texte à afficher pour le lien.</param>
      <param name="routeName">Nom de l'itinéraire utilisé pour retourner un chemin d'accès virtuel.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML de l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetFormMethodString(System.Web.Mvc.FormMethod)">
      <summary>Retourne la méthode HTTP qui gère l'entrée de formulaire (GET ou POST) en tant que chaîne.</summary>
      <returns>Chaîne de méthode de formulaire ("get" ou "post").</returns>
      <param name="method">Méthode HTTP qui gère le formulaire.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetInputTypeString(System.Web.Mvc.InputType)">
      <summary>Retourne le type de contrôle d'entrée HTML en tant que chaîne.</summary>
      <returns>Chaîne de type d'entrée ("checkbox", "hidden", "password", "radio" ou "text").</returns>
      <param name="inputType">Type d'entrée énuméré.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetUnobtrusiveValidationAttributes(System.String)">
      <summary>Obtient la collection d'attributs de validation JavaScript non obstrusive à l'aide de l'attribut name HTML spécifié.</summary>
      <returns>Collection d'attributs de validation JavaScript non obstrusive.</returns>
      <param name="name">Attribut name HTML.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetUnobtrusiveValidationAttributes(System.String,System.Web.Mvc.ModelMetadata)">
      <summary>Obtient la collection d'attributs de validation JavaScript non obstrusive à l'aide de l'attribut name HTML et des métadonnées du modèle spécifiés.</summary>
      <returns>Collection d'attributs de validation JavaScript non obstrusive.</returns>
      <param name="name">Attribut name HTML.</param>
      <param name="metadata">Métadonnées du modèle.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.HttpMethodOverride(System.String)">
      <summary>Retourne un élément input masqué qui identifie la méthode override pour la méthode de transfert de données HTTP spécifiée utilisée par le client.</summary>
      <returns>Méthode override qui utilise la méthode de transfert de données HTTP utilisée par le client.</returns>
      <param name="httpMethod">Méthode de transfert de données HTTP utilisée par le client (DELETE, HEAD ou PUT).</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="httpVerb" /> n'est pas « PUT », « DELETE » ou « HEAD ».</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.HttpMethodOverride(System.Web.Mvc.HttpVerbs)">
      <summary>Retourne un élément input masqué qui identifie la méthode override pour le verbe spécifié qui représente la méthode de transfert de données HTTP utilisée par le client.</summary>
      <returns>Méthode override utilisant le verbe qui représente la méthode de transfert de données HTTP utilisée par le client.</returns>
      <param name="httpVerb">Verbe qui représente la méthode de transfert de données HTTP utilisée par le client.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="httpVerb" /> n'est pas « PUT », « DELETE » ou « HEAD ».</exception>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.IdAttributeDotReplacement">
      <summary>Obtient ou définit le caractère qui remplace les points dans l'attribut d'ID d'un élément.</summary>
      <returns>Caractère qui remplace les points dans l'attribut d'ID d'un élément.</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.RouteCollection">
      <summary>Obtient ou définit la collection d'itinéraires de l'application.</summary>
      <returns>Collection d'itinéraires de l'application.</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.UnobtrusiveJavaScriptEnabled">
      <summary>Obtient ou définit un script JavaScript non obstrusif.</summary>
      <returns>true si le script JavaScript non obstructif est activé ; sinon, false.</returns>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationInputCssClassName">
      <summary>Nom de la classe CSS utilisée pour définir le style d'un champ d'entrée lorsqu'une erreur de validation se produit.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationInputValidCssClassName">
      <summary>Nom de la classe CSS utilisée pour définir le style d'un champ d'entrée lorsque l'entrée est valide.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationMessageCssClassName">
      <summary>Nom de la classe CSS utilisée pour définir le style du message d'erreur lorsqu'une erreur de validation se produit.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationMessageValidCssClassName">
      <summary>Nom de la classe CSS utilisée pour définir le style du message de validation lorsque l'entrée est valide.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationSummaryCssClassName">
      <summary>Nom de la classe CSS utilisée pour définir le style des messages d'erreur de résumé des validations.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationSummaryValidCssClassName">
      <summary>Nom de la classe CSS utilisée pour définir le style du résumé des validations lorsque l'entrée est valide.</summary>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewContext">
      <summary>Obtient ou définit les informations de contexte relatives à la vue.</summary>
      <returns>Contexte de la vue.</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewData">
      <summary>Obtient le dictionnaire de données d'affichage actuel.</summary>
      <returns>Dictionnaire des données d'affichage.</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewDataContainer">
      <summary>Obtient ou définit le conteneur de données d'affichage.</summary>
      <returns>Conteneur des données d'affichage.</returns>
    </member>
    <member name="T:System.Web.Mvc.HtmlHelper`1">
      <summary>Représente la prise en charge du rendu des contrôles HTML dans une vue fortement typée.</summary>
      <typeparam name="TModel">Type du modèle.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.HtmlHelper`1" /> en utilisant le contexte d'affichage et le conteneur de données d'affichage spécifiés.</summary>
      <param name="viewContext">Contexte d'affichage.</param>
      <param name="viewDataContainer">Conteneur des données d'affichage.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.HtmlHelper`1" /> à l'aide du contexte d'affichage, du conteneur de données d'affichage et de la collection d'itinéraires spécifiés.</summary>
      <param name="viewContext">Contexte d'affichage.</param>
      <param name="viewDataContainer">Conteneur des données d'affichage.</param>
      <param name="routeCollection">Collection d'itinéraires.</param>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper`1.ViewData">
      <summary>Obtient le dictionnaire de données d'affichage fortement typées.</summary>
      <returns>Dictionnaire de données d'affichage fortement typées.</returns>
    </member>
    <member name="T:System.Web.Mvc.HttpAntiForgeryException">
      <summary>Représente une exception anti-contrefaçon HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpAntiForgeryException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.HttpAntiForgeryException" /> en utilisant un message système qui décrit l'erreur.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpAntiForgeryException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.HttpAntiForgeryException" /> en utilisant un message spécifique qui décrit l'erreur.</summary>
      <param name="message">Message décrivant l'exception. L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture système en cours.</param>
    </member>
    <member name="M:System.Web.Mvc.HttpAntiForgeryException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.HttpAntiForgeryException" /> en utilisant un message d'erreur spécifique et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message décrivant l'exception. L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture système en cours. </param>
      <param name="innerException">Exception ayant provoqué l'exception en cours. Si le paramètre <paramref name="innerException" /> n'est pas null, l'exception en cours est levée dans un bloc catch qui gère l'exception interne. </param>
    </member>
    <member name="T:System.Web.Mvc.HttpDeleteAttribute">
      <summary>Représente un attribut qui est utilisé pour restreindre une méthode d'action afin qu'elle gère uniquement les requêtes DELETE HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpDeleteAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.HttpDeleteAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpDeleteAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Détermine si une requête est une requête DELETE HTTP valide.</summary>
      <returns>true si la requête est valide ; sinon, false.</returns>
      <param name="controllerContext">Contexte dans lequel le contrôleur opère. Les informations de contexte incluent le contrôleur, le contenu HTTP, le contexte de la demande et les données d'itinéraire.</param>
      <param name="methodInfo">Encapsule les informations relatives à une méthode, comme son type, son type de retour et ses arguments.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpFileCollectionValueProvider">
      <summary>Représente un fournisseur de valeur à utiliser avec des valeurs provenant d'une collection de fichiers HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpFileCollectionValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.HttpFileCollectionValueProvider" />.</summary>
      <param name="controllerContext">Objet qui encapsule des informations sur la requête HTTP en cours.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpFileCollectionValueProviderFactory">
      <summary>Représente une classe qui est chargée de la création d'une nouvelle instance d'un objet de fournisseur de valeur de collection de fichiers HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpFileCollectionValueProviderFactory.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.HttpFileCollectionValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpFileCollectionValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Retourne un objet de fournisseur de valeur pour le contexte de contrôleur spécifié.</summary>
      <returns>Fournisseur de valeur de collection de fichiers HTTP.</returns>
      <param name="controllerContext">Objet qui encapsule des informations sur la requête HTTP.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="controllerContext" /> a la valeur null.</exception>
    </member>
    <member name="T:System.Web.Mvc.HttpGetAttribute">
      <summary>Représente un attribut qui est utilisé pour restreindre une méthode d'action afin qu'elle gère uniquement les requêtes GET HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpGetAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.HttpGetAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpGetAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Détermine si une requête est une requête GET HTTP valide.</summary>
      <returns>true si la requête est valide ; sinon, false.</returns>
      <param name="controllerContext">Contexte dans lequel le contrôleur opère. Les informations de contexte incluent le contrôleur, le contenu HTTP, le contexte de la demande et les données d'itinéraire.</param>
      <param name="methodInfo">Encapsule les informations relatives à une méthode, comme son type, son type de retour et ses arguments.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpNotFoundResult">
      <summary>Définit un objet utilisé pour indiquer que la ressource demandée est introuvable.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpNotFoundResult.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.HttpNotFoundResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpNotFoundResult.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.HttpNotFoundResult" /> à l'aide d'une description de l'état.</summary>
      <param name="statusDescription">Description de l'état.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpPostAttribute">
      <summary>Représente un attribut qui est utilisé pour restreindre une méthode d'action afin qu'elle gère uniquement les requêtes HTTP POST.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.HttpPostAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Détermine si une requête est une requête POST HTTP valide.</summary>
      <returns>true si la requête est valide ; sinon, false.</returns>
      <param name="controllerContext">Contexte dans lequel le contrôleur opère. Les informations de contexte incluent le contrôleur, le contenu HTTP, le contexte de la demande et les données d'itinéraire.</param>
      <param name="methodInfo">Encapsule les informations relatives à une méthode, comme son type, son type de retour et ses arguments.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpPostedFileBaseModelBinder">
      <summary>Lie un modèle à un fichier publié.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostedFileBaseModelBinder.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.HttpPostedFileBaseModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostedFileBaseModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Lie le modèle.</summary>
      <returns>Valeur liée.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="bindingContext">Contexte de liaison.</param>
      <exception cref="T:System.ArgumentNullException">Un des paramètres ou les deux ont la valeur null.</exception>
    </member>
    <member name="T:System.Web.Mvc.HttpPutAttribute">
      <summary>Représente un attribut qui est utilisé pour restreindre une méthode d'action afin qu'elle gère uniquement les requêtes HTTP PUT.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPutAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.HttpPutAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPutAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Détermine si une requête est une requête PUT HTTP valide.</summary>
      <returns>true si la requête est valide ; sinon, false.</returns>
      <param name="controllerContext">Contexte dans lequel le contrôleur opère. Les informations de contexte incluent le contrôleur, le contenu HTTP, le contexte de la demande et les données d'itinéraire.</param>
      <param name="methodInfo">Encapsule les informations relatives à une méthode, comme son type, son type de retour et ses arguments.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpRequestExtensions">
      <summary>Étend la classe <see cref="T:System.Web.HttpRequestBase" /> qui contient les valeurs HTTP envoyées par un client lors d'une requête Web.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpRequestExtensions.GetHttpMethodOverride(System.Web.HttpRequestBase)">
      <summary>Récupère la substitution de méthode de transfert de données HTTP utilisée par le client.</summary>
      <returns>Substitution de méthode de transfert de données HTTP utilisée par le client.</returns>
      <param name="request">Objet contenant les valeurs HTTP envoyées par un client lors d'une requête Web.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="request" /> a la valeur null.</exception>
      <exception cref="T:System.NotImplementedException">La méthode override de transfert de données HTTP n'a pas été implémentée.</exception>
    </member>
    <member name="T:System.Web.Mvc.HttpStatusCodeResult">
      <summary>Fournit un moyen de retourner le résultat d'une action avec un code et une description d'état spécifiques de réponse HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.#ctor(System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.HttpStatusCodeResult" /> à l'aide d'un code d'état.</summary>
      <param name="statusCode">Code d'état.</param>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.#ctor(System.Int32,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.HttpStatusCodeResult" /> à l'aide d'un code d'état et d'une description de l'état.</summary>
      <param name="statusCode">Code d'état.</param>
      <param name="statusDescription">Description de l'état.</param>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Permet le traitement du résultat d'une méthode d'action par un type personnalisé qui hérite de la classe <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Contexte dans lequel le résultat est exécuté. Les informations de contexte incluent le contrôleur, le contenu HTTP, le contexte de la demande et les données d'itinéraire.</param>
    </member>
    <member name="P:System.Web.Mvc.HttpStatusCodeResult.StatusCode">
      <summary>Obtient le code d'état HTTP.</summary>
      <returns>Code d'état HTTP.</returns>
    </member>
    <member name="P:System.Web.Mvc.HttpStatusCodeResult.StatusDescription">
      <summary>Obtient la description de l'état HTTP.</summary>
      <returns>Description de l'état HTTP.</returns>
    </member>
    <member name="T:System.Web.Mvc.HttpUnauthorizedResult">
      <summary>Représente le résultat d'une requête HTTP non autorisée.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpUnauthorizedResult.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.HttpUnauthorizedResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpUnauthorizedResult.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.HttpUnauthorizedResult" /> à l'aide de la description de l'état.</summary>
      <param name="statusDescription">Description de l'état.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpVerbs">
      <summary>Énumère les verbes HTTP.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Get">
      <summary>Récupère les informations ou l'entité identifiées par l'URI de la requête.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Post">
      <summary>Publie une nouvelle entité à ajouter à un URI.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Put">
      <summary>Remplace une entité identifiée par un URI.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Delete">
      <summary>Requiert la suppression d'un URI spécifique.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Head">
      <summary>Récupère les en-têtes de message pour les informations ou l'entité identifiées par l'URI de la requête.</summary>
    </member>
    <member name="T:System.Web.Mvc.IActionFilter">
      <summary>Définit les méthodes utilisées dans un filtre d'action.</summary>
    </member>
    <member name="M:System.Web.Mvc.IActionFilter.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Appelée après l'exécution de la méthode d'action.</summary>
      <param name="filterContext">Contexte du filtre.</param>
    </member>
    <member name="M:System.Web.Mvc.IActionFilter.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Appelée avant l'exécution d'une méthode d'action.</summary>
      <param name="filterContext">Contexte du filtre.</param>
    </member>
    <member name="T:System.Web.Mvc.IActionInvoker">
      <summary>Définit le contrat d'un demandeur d'action, qui permet d'appeler une action en réponse à une requête HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.IActionInvoker.InvokeAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Appelle l'action spécifiée à l'aide du contexte du contrôleur spécifié.</summary>
      <returns>true si l'action a été trouvée ; sinon, false.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="actionName">Nom de l'action.</param>
    </member>
    <member name="T:System.Web.Mvc.IAuthorizationFilter">
      <summary>Définit les méthodes requises pour un filtre d'autorisation.</summary>
    </member>
    <member name="M:System.Web.Mvc.IAuthorizationFilter.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Appelé lorsqu'une autorisation est requise.</summary>
      <param name="filterContext">Contexte du filtre.</param>
    </member>
    <member name="T:System.Web.Mvc.IClientValidatable">
      <summary>Fournit à l'infrastructure de validation ASP.NET MVC un moyen de découvrir au moment de l'exécution si un validateur prend en charge la validation côté client.</summary>
    </member>
    <member name="M:System.Web.Mvc.IClientValidatable.GetClientValidationRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>En cas d'implémentation dans une classe, retourne les règles de validation côté client pour cette classe.</summary>
      <returns>Règles de validation côté client pour ce validateur.</returns>
      <param name="metadata">Métadonnées du modèle.</param>
      <param name="context">Contexte du contrôleur.</param>
    </member>
    <member name="T:System.Web.Mvc.IController">
      <summary>Définit les méthodes requises pour un contrôleur.</summary>
    </member>
    <member name="M:System.Web.Mvc.IController.Execute(System.Web.Routing.RequestContext)">
      <summary>Exécute le contexte de la requête spécifiée.</summary>
      <param name="requestContext">Contexte de la requête.</param>
    </member>
    <member name="T:System.Web.Mvc.IControllerActivator">
      <summary>Fournit un contrôle affiné sur la façon dont les contrôleurs de vue sont instanciés à l'aide d'une injection de dépendance.</summary>
    </member>
    <member name="M:System.Web.Mvc.IControllerActivator.Create(System.Web.Routing.RequestContext,System.Type)">
      <summary>En cas d'implémentation dans une classe, crée un contrôleur.</summary>
      <returns>Contrôleur créé.</returns>
      <param name="requestContext">Contexte de la requête.</param>
      <param name="controllerType">Type du contrôleur.</param>
    </member>
    <member name="T:System.Web.Mvc.IControllerFactory">
      <summary>Définit les méthodes requises pour une fabrique de contrôleurs.</summary>
    </member>
    <member name="M:System.Web.Mvc.IControllerFactory.CreateController(System.Web.Routing.RequestContext,System.String)">
      <summary>Crée le contrôleur spécifié à l'aide du contexte de requête spécifié.</summary>
      <returns>Contrôleur.</returns>
      <param name="requestContext">Contexte de la requête.</param>
      <param name="controllerName">Nom du contrôleur.</param>
    </member>
    <member name="M:System.Web.Mvc.IControllerFactory.GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.String)">
      <summary>Obtient le comportement de session du contrôleur.</summary>
      <returns>Comportement de session du contrôleur.</returns>
      <param name="requestContext">Contexte de la requête.</param>
      <param name="controllerName">Nom du contrôleur dont vous souhaitez obtenir le comportement de la session.</param>
    </member>
    <member name="M:System.Web.Mvc.IControllerFactory.ReleaseController(System.Web.Mvc.IController)">
      <summary>Libère le contrôleur spécifié.</summary>
      <param name="controller">Contrôleur.</param>
    </member>
    <member name="T:System.Web.Mvc.IDependencyResolver">
      <summary>Définit les méthodes qui simplifient la localisation de service et la résolution de dépendance.</summary>
    </member>
    <member name="M:System.Web.Mvc.IDependencyResolver.GetService(System.Type)">
      <summary>Résout des services enregistrés uniques qui prennent en charge la création d'objet arbitraire.</summary>
      <returns>Service ou objet demandé.</returns>
      <param name="serviceType">Type du service ou de l'objet demandé.</param>
    </member>
    <member name="M:System.Web.Mvc.IDependencyResolver.GetServices(System.Type)">
      <summary>Résout plusieurs services enregistrés.</summary>
      <returns>Services demandés.</returns>
      <param name="serviceType">Type des services demandés.</param>
    </member>
    <member name="T:System.Web.Mvc.IExceptionFilter">
      <summary>Définit les méthodes requises pour un filtre d'exception.</summary>
    </member>
    <member name="M:System.Web.Mvc.IExceptionFilter.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Appelée lorsqu'une exception se produit.</summary>
      <param name="filterContext">Contexte du filtre.</param>
    </member>
    <member name="T:System.Web.Mvc.IFilterProvider">
      <summary>Fournit une interface permettant de rechercher des filtres.</summary>
    </member>
    <member name="M:System.Web.Mvc.IFilterProvider.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Retourne un énumérateur qui contient toutes les instances <see cref="T:System.Web.Mvc.IFilterProvider" /> du localisateur de service.</summary>
      <returns>Énumérateur qui contient toutes les instances <see cref="T:System.Web.Mvc.IFilterProvider" /> du localisateur de service.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="actionDescriptor">Descripteur de l'action.</param>
    </member>
    <member name="T:System.Web.Mvc.IMetadataAware">
      <summary>Fournit une interface pour l'exposition des attributs à la classe <see cref="T:System.Web.Mvc.AssociatedMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.IMetadataAware.OnMetadataCreated(System.Web.Mvc.ModelMetadata)">
      <summary>En cas d'implémentation dans une classe, fournit les métadonnées au processus de création des métadonnées de modèle.</summary>
      <param name="metadata">Métadonnées du modèle.</param>
    </member>
    <member name="T:System.Web.Mvc.IModelBinder">
      <summary>Définit les méthodes requises pour un binder de modèle.</summary>
    </member>
    <member name="M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Lie le modèle à une valeur à l'aide du contexte du contrôleur et du contexte de liaison spécifiés.</summary>
      <returns>Valeur liée.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="bindingContext">Contexte de liaison.</param>
    </member>
    <member name="T:System.Web.Mvc.IModelBinderProvider">
      <summary>Définit des méthodes qui activent des implémentations dynamiques de liaison de modèle pour les classes qui implémentent l'interface <see cref="T:System.Web.Mvc.IModelBinder" />. </summary>
    </member>
    <member name="M:System.Web.Mvc.IModelBinderProvider.GetBinder(System.Type)">
      <summary>Retourne le binder de modèle pour le type spécifié.</summary>
      <returns>Binder de modèle pour le type spécifié.</returns>
      <param name="modelType">Type du modèle.</param>
    </member>
    <member name="T:System.Web.Mvc.IMvcFilter">
      <summary>Définit des membres qui spécifient l'ordre des filtres et si plusieurs filtres sont autorisés.</summary>
    </member>
    <member name="P:System.Web.Mvc.IMvcFilter.AllowMultiple">
      <summary>Lors de l'implémentation dans une classe, obtient ou définit une valeur qui indique si plusieurs filtres sont autorisés.</summary>
      <returns>true si plusieurs filtres sont autorisés ; sinon false.</returns>
    </member>
    <member name="P:System.Web.Mvc.IMvcFilter.Order">
      <summary>Lors de l'implémentation dans une classe, obtient un ordre de filtre.</summary>
      <returns>Ordre de filtre.</returns>
    </member>
    <member name="T:System.Web.Mvc.InputType">
      <summary>Énumère les types de contrôles d'entrée.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.CheckBox">
      <summary>Case à cocher.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Hidden">
      <summary>Champ masqué.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Password">
      <summary>Zone de mot de passe.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Radio">
      <summary>Case d'option.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Text">
      <summary>Zone de texte.</summary>
    </member>
    <member name="T:System.Web.Mvc.IResultFilter">
      <summary>Définit les méthodes requises pour un filtre de résultat.</summary>
    </member>
    <member name="M:System.Web.Mvc.IResultFilter.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Appelée après l'exécution d'un résultat d'action.</summary>
      <param name="filterContext">Contexte du filtre.</param>
    </member>
    <member name="M:System.Web.Mvc.IResultFilter.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Appelée avant l'exécution d'un résultat d'action.</summary>
      <param name="filterContext">Contexte du filtre.</param>
    </member>
    <member name="T:System.Web.Mvc.IRouteWithArea">
      <summary>Associe un itinéraire à une zone dans une application ASP.NET MVC.</summary>
    </member>
    <member name="P:System.Web.Mvc.IRouteWithArea.Area">
      <summary>Obtient le nom de la zone à laquelle l'itinéraire doit être associé.</summary>
      <returns>Nom de la zone à laquelle l'itinéraire doit être associé.</returns>
    </member>
    <member name="T:System.Web.Mvc.ITempDataProvider">
      <summary>Définit le contrat des fournisseurs de données temporaires qui stockent les données affichées à la prochaine requête.</summary>
    </member>
    <member name="M:System.Web.Mvc.ITempDataProvider.LoadTempData(System.Web.Mvc.ControllerContext)">
      <summary>Charge les données temporaires.</summary>
      <returns>Données temporaires.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
    </member>
    <member name="M:System.Web.Mvc.ITempDataProvider.SaveTempData(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Enregistre les données temporaires.</summary>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="values">Valeurs.</param>
    </member>
    <member name="T:System.Web.Mvc.IUnvalidatedValueProvider">
      <summary>Représente une interface <see cref="T:System.Web.Mvc.IValueProvider" /> qui peut ignorer la validation de la demande.</summary>
    </member>
    <member name="M:System.Web.Mvc.IUnvalidatedValueProvider.GetValue(System.String,System.Boolean)">
      <summary>Récupère la valeur de l'objet associé à la clé spécifiée.</summary>
      <returns>Valeur de l'objet pour la clé spécifiée.</returns>
      <param name="key">Clé.</param>
      <param name="skipValidation">true si la validation doit être ignorée ; sinon, false.</param>
    </member>
    <member name="T:System.Web.Mvc.IValueProvider">
      <summary>Définit les méthodes requises pour un fournisseur de valeur dans ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.IValueProvider.ContainsPrefix(System.String)">
      <summary>Détermine si la collection contient le préfixe spécifié.</summary>
      <returns>true si la collection contient le préfixe spécifié ; sinon, false.</returns>
      <param name="prefix">Préfixe à rechercher.</param>
    </member>
    <member name="M:System.Web.Mvc.IValueProvider.GetValue(System.String)">
      <summary>Récupère un objet de valeur à l'aide de la clé spécifiée.</summary>
      <returns>Objet de valeur pour la clé spécifiée.</returns>
      <param name="key">Clé de l'objet de valeur à récupérer.</param>
    </member>
    <member name="T:System.Web.Mvc.IView">
      <summary>Définit les méthodes requises pour un affichage.</summary>
    </member>
    <member name="M:System.Web.Mvc.IView.Render(System.Web.Mvc.ViewContext,System.IO.TextWriter)">
      <summary>Restitue le contexte d'affichage spécifié à l'aide de l'objet writer spécifié.</summary>
      <param name="viewContext">Contexte d'affichage.</param>
      <param name="writer">Objet writer.</param>
    </member>
    <member name="T:System.Web.Mvc.IViewDataContainer">
      <summary>Définit les méthodes requises pour un dictionnaire de données d'affichage.</summary>
    </member>
    <member name="P:System.Web.Mvc.IViewDataContainer.ViewData">
      <summary>Obtient ou définit le dictionnaire de données d'affichage.</summary>
      <returns>Dictionnaire des données d'affichage.</returns>
    </member>
    <member name="T:System.Web.Mvc.IViewEngine">
      <summary>Définit les méthodes requises pour un moteur d'affichage.</summary>
    </member>
    <member name="M:System.Web.Mvc.IViewEngine.FindPartialView(System.Web.Mvc.ControllerContext,System.String,System.Boolean)">
      <summary>Recherche la vue partielle spécifiée à l'aide du contexte du contrôleur spécifié.</summary>
      <returns>Affichage partiel.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="partialViewName">Nom de la vue partielle.</param>
      <param name="useCache">true pour spécifier que le moteur d'affichage doit retourner l'affichage mis en cache, si ce dernier existe ; sinon, false.</param>
    </member>
    <member name="M:System.Web.Mvc.IViewEngine.FindView(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean)">
      <summary>Recherche l'affichage spécifié à l'aide du contexte du contrôleur spécifié.</summary>
      <returns>Affichage de la page.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="viewName">Nom de la vue.</param>
      <param name="masterName">Nom du maître.</param>
      <param name="useCache">true pour spécifier que le moteur d'affichage doit retourner l'affichage mis en cache, si ce dernier existe ; sinon, false.</param>
    </member>
    <member name="M:System.Web.Mvc.IViewEngine.ReleaseView(System.Web.Mvc.ControllerContext,System.Web.Mvc.IView)">
      <summary>Libère la vue spécifiée à l'aide du contexte de contrôleur spécifié.</summary>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="view">Affichage.</param>
    </member>
    <member name="T:System.Web.Mvc.IViewLocationCache">
      <summary>Définit les méthodes requises pour mettre en cache les emplacements d'affichages en mémoire.</summary>
    </member>
    <member name="M:System.Web.Mvc.IViewLocationCache.GetViewLocation(System.Web.HttpContextBase,System.String)">
      <summary>Obtient l'emplacement d'affichage à l'aide du contexte HTTP et de la clé de cache spécifiés.</summary>
      <returns>Emplacement d'affichage.</returns>
      <param name="httpContext">Contexte HTTP.</param>
      <param name="key">Clé de cache.</param>
    </member>
    <member name="M:System.Web.Mvc.IViewLocationCache.InsertViewLocation(System.Web.HttpContextBase,System.String,System.String)">
      <summary>Insère l'emplacement d'affichage spécifié dans le cache à l'aide du contexte HTTP et de la clé de cache spécifiés.</summary>
      <param name="httpContext">Contexte HTTP.</param>
      <param name="key">Clé de cache.</param>
      <param name="virtualPath">Chemin d'accès virtuel.</param>
    </member>
    <member name="T:System.Web.Mvc.IViewPageActivator">
      <summary>Fournit un contrôle affiné sur la façon dont les pages de vue sont instanciées à l'aide d'une injection de dépendance.</summary>
    </member>
    <member name="M:System.Web.Mvc.IViewPageActivator.Create(System.Web.Mvc.ControllerContext,System.Type)">
      <returns>Page de vue créée.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="type">Type du contrôleur.</param>
    </member>
    <member name="T:System.Web.Mvc.JavaScriptResult">
      <summary>Envoie du contenu JavaScript à la réponse.</summary>
    </member>
    <member name="M:System.Web.Mvc.JavaScriptResult.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.JavaScriptResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.JavaScriptResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Permet le traitement du résultat d'une méthode d'action par un type personnalisé qui hérite de la classe <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Contexte dans lequel le résultat est exécuté.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="context" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.JavaScriptResult.Script">
      <summary>Obtient ou définit le script.</summary>
      <returns>Script.</returns>
    </member>
    <member name="T:System.Web.Mvc.JsonRequestBehavior">
      <summary>Spécifie si les requêtes GET HTTP du client sont autorisées.</summary>
    </member>
    <member name="F:System.Web.Mvc.JsonRequestBehavior.AllowGet">
      <summary>Les requêtes GET HTTP du client sont autorisées.</summary>
    </member>
    <member name="F:System.Web.Mvc.JsonRequestBehavior.DenyGet">
      <summary>Les requêtes GET HTTP du client ne sont pas autorisées.</summary>
    </member>
    <member name="T:System.Web.Mvc.JsonResult">
      <summary>Représente une classe utilisée pour envoyer un contenu au format JSON (JavaScript Object Notation) à la réponse.</summary>
    </member>
    <member name="M:System.Web.Mvc.JsonResult.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.JsonResult" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.ContentEncoding">
      <summary>Obtient ou définit l'encodage du contenu.</summary>
      <returns>Encodage du contenu.</returns>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.ContentType">
      <summary>Obtient ou définit le type du contenu.</summary>
      <returns>Type de contenu.</returns>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.Data">
      <summary>Obtient ou définit les données.</summary>
      <returns>Données.</returns>
    </member>
    <member name="M:System.Web.Mvc.JsonResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Permet le traitement du résultat d'une méthode d'action par un type personnalisé qui hérite de la classe <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Contexte dans lequel le résultat est exécuté.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="context" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.JsonRequestBehavior">
      <summary>Obtient ou définit une valeur qui indique si les requêtes GET HTTP du client sont autorisées.</summary>
      <returns>Valeur qui indique si les requêtes GET HTTP du client sont autorisées.</returns>
    </member>
    <member name="T:System.Web.Mvc.JsonValueProviderFactory">
      <summary>Permet aux méthodes d'action d'envoyer et de recevoir du texte au format JSON et de lier par modèle le texte JSON à des paramètres de méthodes d'action.</summary>
    </member>
    <member name="M:System.Web.Mvc.JsonValueProviderFactory.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.JsonValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.JsonValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Retourne un objet de fournisseur de valeur JSON pour le contexte de contrôleur spécifié.</summary>
      <returns>Objet de fournisseur de valeur JSON pour le contexte de contrôleur spécifié.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
    </member>
    <member name="T:System.Web.Mvc.LinqBinaryModelBinder">
      <summary>Mappe une demande de navigateur à un objet <see cref="T:System.Data.Linq.Binary" /> LINQ.</summary>
    </member>
    <member name="M:System.Web.Mvc.LinqBinaryModelBinder.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.LinqBinaryModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.LinqBinaryModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Lie le modèle à l'aide du contexte du contrôleur et du contexte de liaison spécifiés.</summary>
      <returns>Objet de données lié. Si le modèle ne peut pas être lié, cette méthode retourne la valeur null.</returns>
      <param name="controllerContext">Contexte dans lequel le contrôleur opère. Les informations de contexte incluent le contrôleur, le contenu HTTP, le contexte de la demande et les données d'itinéraire.</param>
      <param name="bindingContext">Contexte dans lequel le modèle est lié. Le contexte inclut des informations telles que l'objet de modèle, le nom et le type du modèle, le filtre de propriété et le fournisseur de valeur.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderAttribute">
      <summary>Représente un attribut utilisé pour associer un type de modèle à un type de générateur de modèles.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderAttribute.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ModelBinderAttribute" />.</summary>
      <param name="binderType">Type du binder.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="binderType" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderAttribute.BinderType">
      <summary>Obtient ou définit le type du binder.</summary>
      <returns>Type du binder.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderAttribute.GetBinder">
      <summary>Récupère une instance du binder de modèle.</summary>
      <returns>Référence à un objet qui implémente l'interface <see cref="T:System.Web.Mvc.IModelBinder" />.</returns>
      <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors de la création d'une instance du binder de modèle.</exception>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderDictionary">
      <summary>Représente une classe qui contient tous les binders de modèles de l'application, listés par type de binder.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ModelBinderDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Add(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder})">
      <summary>Ajoute l'élément spécifié au dictionnaire de binders de modèles.</summary>
      <param name="item">Objet à ajouter à l'instance de <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">L'objet <see cref="T:System.Collections.Generic.ICollection`1" /> est en lecture seule.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Add(System.Type,System.Web.Mvc.IModelBinder)">
      <summary>Ajoute l'élément spécifié au dictionnaire de binders de modèles à l'aide de la clé spécifiée.</summary>
      <param name="key">Clé de l'élément à ajouter.</param>
      <param name="value">Valeur de l'élément à ajouter.</param>
      <exception cref="T:System.NotSupportedException">L'objet <see cref="T:System.Collections.Generic.IDictionary`2" /> est en lecture seule.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">Un élément possédant la même clé existe déjà dans l'objet <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Clear">
      <summary>Supprime tous les éléments du dictionnaire de binders de modèles.</summary>
      <exception cref="T:System.NotSupportedException">L'objet <see cref="T:System.Collections.Generic.ICollection`1" /> est en lecture seule.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder})">
      <summary>Détermine si le dictionnaire de binders de modèles contient une valeur spécifique.</summary>
      <returns>true si <paramref name="item" /> existe dans le dictionnaire de binders de modèles ; sinon, false.</returns>
      <param name="item">Objet à trouver dans l'objet <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.ContainsKey(System.Type)">
      <summary>Détermine si le dictionnaire de binders de modèles contient un élément qui a la clé spécifiée.</summary>
      <returns>true si le dictionnaire de binders de modèles contient un élément qui possède la clé spécifiée ; sinon, false.</returns>
      <param name="key">Clé à trouver dans l'objet <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder}[],System.Int32)">
      <summary>Copie les éléments du dictionnaire de binders de modèles dans un tableau, en commençant à l'index spécifié.</summary>
      <param name="array">Tableau unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Collections.Generic.ICollection`1" />. Le tableau doit comporter un index de base zéro.</param>
      <param name="arrayIndex">Index de base zéro de <paramref name="array" /> à partir duquel la copie commence.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> est inférieur à 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> est multidimensionnel.-ou- <paramref name="arrayIndex" /> est supérieur ou égal à la longueur de <paramref name="array" />.-ou- Le nombre d'éléments contenus dans l'objet <see cref="T:System.Collections.Generic.ICollection`1" /> source est supérieur à la quantité d'espace disponible à partir de <paramref name="arrayIndex" /> jusqu'à la fin du tableau de destination. -ou- Le cast automatique du type <paramref name="T" /> en type du tableau de destination est impossible.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Count">
      <summary>Obtient le nombre d'éléments contenus dans le dictionnaire de binders de modèles.</summary>
      <returns>Nombre d'éléments contenus dans le dictionnaire de binders de modèles.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.DefaultBinder">
      <summary>Obtient ou définit le binder de modèle par défaut.</summary>
      <returns>Binder de modèle par défaut.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.GetBinder(System.Type)">
      <summary>Récupère le binder de modèle pour le type spécifié.</summary>
      <returns>Binder de modèle.</returns>
      <param name="modelType">Type du modèle à récupérer.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="modelType" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.GetBinder(System.Type,System.Boolean)">
      <summary>Récupère le binder de modèle pour le type spécifié ou récupère le binder de modèle par défaut.</summary>
      <returns>Binder de modèle.</returns>
      <param name="modelType">Type du modèle à récupérer.</param>
      <param name="fallbackToDefault">true pour récupérer le binder de modèle par défaut.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="modelType" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.GetEnumerator">
      <summary>Retourne un énumérateur qui peut être utilisé pour itérer au sein de la collection.</summary>
      <returns>Énumérateur permettant d'itérer au sein de la collection.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.IsReadOnly">
      <summary>Obtient une valeur qui indique si le dictionnaire de binders de modèles est en lecture seule.</summary>
      <returns>true si le dictionnaire de binders de modèles est en lecture seule ; sinon, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Item(System.Type)">
      <summary>Obtient ou définit la clé spécifiée dans un objet qui implémente l'interface <see cref="T:System.Web.Mvc.IModelBinder" />.</summary>
      <returns>Clé de l'élément spécifié.</returns>
      <param name="key">Clé d'élément.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Keys">
      <summary>Obtient une collection qui contient les clés dans le dictionnaire de binders de modèles.</summary>
      <returns>Collection qui contient les clés dans le dictionnaire de binders de modèles.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder})">
      <summary>Supprime la première occurrence de l'élément spécifié dans le dictionnaire de binders de modèles.</summary>
      <returns>true si <paramref name="item" /> a été correctement supprimé du dictionnaire de binders de modèles ; sinon, false. Cette méthode retourne également false si <paramref name="item" /> est introuvable dans le dictionnaire de binders de modèles.</returns>
      <param name="item">Objet à supprimer de l'objet <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">L'objet <see cref="T:System.Collections.Generic.ICollection`1" /> est en lecture seule.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Remove(System.Type)">
      <summary>Supprime l'élément comportant la clé spécifiée du dictionnaire du binder de modèle.</summary>
      <returns>true si la suppression de l'élément réussit ; sinon, false. Cette méthode retourne également false si <paramref name="key" /> est introuvable dans le dictionnaire de binders de modèles.</returns>
      <param name="key">Clé de l'élément à supprimer.</param>
      <exception cref="T:System.NotSupportedException">L'objet <see cref="T:System.Collections.Generic.IDictionary`2" /> est en lecture seule.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retourne un énumérateur qui peut être utilisé pour itérer au sein d'une collection.</summary>
      <returns>Énumérateur permettant d'itérer au sein de la collection.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.TryGetValue(System.Type,System.Web.Mvc.IModelBinder@)">
      <summary>Obtient la valeur associée à la clé spécifiée.</summary>
      <returns>true si l'objet qui implémente <see cref="T:System.Collections.Generic.IDictionary`2" /> contient un élément comportant la clé spécifiée ; sinon, false.</returns>
      <param name="key">Clé de la valeur à obtenir.</param>
      <param name="value">Lorsque cette méthode est retournée, valeur associée à la clé spécifiée, si la clé est trouvée ; sinon, valeur par défaut pour le type du paramètre <paramref name="value" />. Ce paramètre est passé sans être initialisé.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Values">
      <summary>Obtient une collection qui contient les valeurs dans le dictionnaire de binders de modèles.</summary>
      <returns>Collection qui contient les valeurs dans le dictionnaire de binders de modèles.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderProviderCollection">
      <summary>Fournit un conteneur aux fournisseurs de binder de modèle.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ModelBinderProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IModelBinderProvider})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ModelBinderProviderCollection" /> à l'aide d'une liste de fournisseurs de binder de modèle.</summary>
      <param name="list">Liste de fournisseurs de binder de modèle.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.GetBinder(System.Type)">
      <summary>Retourne un binder de modèle du type spécifié.</summary>
      <returns>Binder de modèle du type spécifié.</returns>
      <param name="modelType">Type du binder de modèle.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.InsertItem(System.Int32,System.Web.Mvc.IModelBinderProvider)">
      <summary>Insère un fournisseur de binder de modèle dans le <see cref="T:System.Web.Mvc.ModelBinderProviderCollection" /> à l'index spécifié.</summary>
      <param name="index">Index.</param>
      <param name="item">Fournisseur de binder de modèle.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.SetItem(System.Int32,System.Web.Mvc.IModelBinderProvider)">
      <summary>Remplace l'élément de fournisseur de binder de modèle à l'index spécifié.</summary>
      <param name="index">Index.</param>
      <param name="item">Fournisseur de binder de modèle.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderProviders">
      <summary>Fournit un conteneur aux fournisseurs de binder de modèle.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderProviders.BinderProviders">
      <summary>Fournit un point d'inscription pour les fournisseurs de binder de modèle des applications qui n'utilisent pas l'injection de dépendance.</summary>
      <returns>Collection de fournisseurs de binder de modèle.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBinders">
      <summary>Fournit l'accès global aux binders de modèles pour l'application.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelBinders.Binders">
      <summary>Obtient les binders de modèles pour l'application.</summary>
      <returns>Binders de modèles pour l'application.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBindingContext">
      <summary>Fournit le contexte de fonctionnement d'un binder de modèle.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBindingContext.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ModelBindingContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBindingContext.#ctor(System.Web.Mvc.ModelBindingContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ModelBindingContext" /> à l'aide du contexte de liaison.</summary>
      <param name="bindingContext">Contexte de liaison.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.FallbackToEmptyPrefix">
      <summary>Obtient ou définit une valeur qui indique si le binder doit utiliser un préfixe vide.</summary>
      <returns>true si le binder doit utiliser un préfixe vide ; sinon, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.Model">
      <summary>Obtient ou définit le modèle.</summary>
      <returns>Modèle.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelMetadata">
      <summary>Obtient ou définit les métadonnées du modèle.</summary>
      <returns>Métadonnées du modèle.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelName">
      <summary>Obtient ou définit le nom du modèle.</summary>
      <returns>Nom du modèle.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelState">
      <summary>Obtient ou définit l'état du modèle.</summary>
      <returns>État du modèle.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelType">
      <summary>Obtient ou définit le type du modèle.</summary>
      <returns>Type du modèle.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.PropertyFilter">
      <summary>Obtient ou définit le filtre de propriétés.</summary>
      <returns>Filtre de propriétés.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.PropertyMetadata">
      <summary>Obtient les métadonnées de la propriété.</summary>
      <returns>Les métadonnées de propriété.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ValueProvider">
      <summary>Obtient ou définit le fournisseur de valeurs.</summary>
      <returns>Fournisseur de valeurs.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationEqualToRule">
      <summary>Fournit un conteneur pour une règle de validation d'égalité envoyée au navigateur.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationEqualToRule.#ctor(System.String,System.Object)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ModelClientValidationEqualToRule" />.</summary>
      <param name="errorMessage">Message d'erreur.</param>
      <param name="other">Valeur de modèle utilisée pour la comparaison d'égalité.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRangeRule">
      <summary>Fournit un conteneur pour une règle de validation de plage envoyée au navigateur.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRangeRule.#ctor(System.String,System.Object,System.Object)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ModelClientValidationRangeRule" />.</summary>
      <param name="errorMessage">Message d'erreur.</param>
      <param name="minValue">Valeur minimale.</param>
      <param name="maxValue">Valeur maximale.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRegexRule">
      <summary>Fournit un conteneur pour une règle de validation de l'expression régulière client envoyée au navigateur.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRegexRule.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ModelClientValidationRegexRule" />.</summary>
      <param name="errorMessage">Message d'erreur à afficher en cas d'échec de validation de l'expression régulière.</param>
      <param name="pattern">Expression régulière.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRemoteRule">
      <summary>Fournit un conteneur pour une règle de validation à distance envoyée au navigateur.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRemoteRule.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ModelClientValidationRemoteRule" />.</summary>
      <param name="errorMessage">Message d'erreur.</param>
      <param name="url">URL des paramètres de validation.</param>
      <param name="httpMethod">Méthode HTTP des paramètres de validation.</param>
      <param name="fields">Champs de paramètres de validation.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRequiredRule">
      <summary>Fournit un conteneur pour la validation client concernant le champ obligatoire.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRequiredRule.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ModelClientValidationRule" />.</summary>
      <param name="errorMessage">Message d'erreur à afficher lorsqu'aucune valeur n'est fournie pour le champ obligatoire.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRule">
      <summary>Fournit un conteneur de classe de base pour une règle de validation client envoyée au navigateur.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRule.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ModelClientValidationRule" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelClientValidationRule.ErrorMessage">
      <summary>Obtient ou définit le message d'erreur de la règle de validation client.</summary>
      <returns>Message d'erreur de la règle de validation client.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelClientValidationRule.ValidationParameters">
      <summary>Obtient la liste de paramètres de validation.</summary>
      <returns>Liste de paramètres de validation.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelClientValidationRule.ValidationType">
      <summary>Obtient ou définit le type de validation.</summary>
      <returns>Type de validation.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationStringLengthRule">
      <summary>Fournit un conteneur pour une règle de validation de longueur de chaîne envoyée au navigateur.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationStringLengthRule.#ctor(System.String,System.Int32,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ModelClientValidationStringLengthRule" />.</summary>
      <param name="errorMessage">Message d'erreur de validation.</param>
      <param name="minimumLength">Longueur minimale de la chaîne.</param>
      <param name="maximumLength">Longueur maximale de la chaîne.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelError">
      <summary>Représente une erreur qui se produit lors de la liaison d'un modèle.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelError.#ctor(System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ModelError" /> à l'aide de l'exception spécifiée.</summary>
      <param name="exception">Exception.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="exception" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelError.#ctor(System.Exception,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ModelError" /> en utilisant l'exception et le message d'erreur spécifiés.</summary>
      <param name="exception">Exception.</param>
      <param name="errorMessage">Message d'erreur.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="exception" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelError.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ModelError" /> en utilisant le message d'erreur spécifié.</summary>
      <param name="errorMessage">Message d'erreur.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelError.ErrorMessage">
      <summary>Obtient ou définit le message d'erreur.</summary>
      <returns>Message d'erreur.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelError.Exception">
      <summary>Obtient ou définit l'objet exception.</summary>
      <returns>L'objet exception.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelErrorCollection">
      <summary>Collection d'instances de <see cref="T:System.Web.Mvc.ModelError" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelErrorCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ModelErrorCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelErrorCollection.Add(System.Exception)">
      <summary>Ajoute l'objet <see cref="T:System.Exception" /> spécifié à la collection d'erreurs de modèle.</summary>
      <param name="exception">Exception.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelErrorCollection.Add(System.String)">
      <summary>Ajoute le message d'erreur spécifié à la collection d'erreurs de modèle.</summary>
      <param name="errorMessage">Message d'erreur.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelMetadata">
      <summary>Fournit un conteneur pour les métadonnées communes, la classe <see cref="T:System.Web.Mvc.ModelMetadataProvider" /> et la classe <see cref="T:System.Web.Mvc.ModelValidator" /> d'un modèle de données.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.#ctor(System.Web.Mvc.ModelMetadataProvider,System.Type,System.Func`1,System.Void,System.Object)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ModelMetadata" />.</summary>
      <param name="provider">Fournisseur.</param>
      <param name="containerType">Type du conteneur.</param>
      <param name="modelAccessor">Accesseur modèle.</param>
      <param name="modelType">Type du modèle.</param>
      <param name="propertyName">Nom du modèle.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.AdditionalValues">
      <summary>Obtient un dictionnaire qui contient des métadonnées supplémentaires relatives au modèle.</summary>
      <returns>Dictionnaire qui contient des métadonnées supplémentaires relatives au modèle.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ContainerType">
      <summary>Obtient ou définit le type du conteneur du modèle.</summary>
      <returns>Type du conteneur du modèle.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ConvertEmptyStringToNull">
      <summary>Obtient ou définit une valeur qui indique si les chaînes vides publiées dans les formulaires doivent être converties en chaînes null.</summary>
      <returns>true si les chaînes vides publiées dans les formulaires doivent être converties en chaînes null ; sinon, false. La valeur par défaut est true.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.DataTypeName">
      <summary>Obtient ou définit les méta-informations relatives au type de données. </summary>
      <returns>Méta-informations relatives au type de données. </returns>
    </member>
    <member name="F:System.Web.Mvc.ModelMetadata.DefaultOrder"></member>
    <member name="P:System.Web.Mvc.ModelMetadata.Description">
      <summary>Obtient ou définit la description du modèle.</summary>
      <returns>Description du modèle. La valeur par défaut est null.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.DisplayFormatString">
      <summary>Obtient ou définit la chaîne de format d'affichage du modèle.</summary>
      <returns>Chaîne de format d'affichage du modèle.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.DisplayName">
      <summary>Obtient ou définit le nom complet du modèle.</summary>
      <returns>Nom complet du modèle.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.EditFormatString">
      <summary>Obtient ou définit la chaîne de format de modification du modèle.</summary>
      <returns>Chaîne de format de modification du modèle.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.FromLambdaExpression``2(System.Linq.Expressions.Expression{System.Func`2},System.Boolean)">
      <summary>Obtient les métadonnées du modèle à partir du paramètre <see cref="T:System.Linq.Expressions.Expression" />.</summary>
      <returns>Retourne <see cref="T:System.Web.Mvc.ModelMetadata" />.</returns>
      <param name="expression">Expression qui identifie le modèle.</param>
      <param name="viewData">Dictionnaire des données d'affichage.</param>
      <typeparam name="TParameter">Type du paramètre.</typeparam>
      <typeparam name="TValue">Type de la valeur.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.FromStringExpression(System.String,System.Web.Mvc.ViewDataDictionary)">
      <summary>Obtient les métadonnées du modèle à partir du paramètre d'expression.</summary>
      <returns>Métadonnées du modèle.</returns>
      <param name="expression">Expression qui identifie le modèle.</param>
      <param name="viewData">Dictionnaire des données d'affichage.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.GetDisplayName">
      <summary>Obtient le nom complet du modèle.</summary>
      <returns>Nom complet du modèle.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.GetSimpleDisplayText">
      <summary>Retourne la description simple du modèle.</summary>
      <returns>Description simple du modèle.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.GetValidators(System.Web.Mvc.ControllerContext)">
      <summary>Obtient une liste de validateurs pour le modèle.</summary>
      <returns>Liste de validateurs du modèle.</returns>
      <param name="context">Contexte du contrôleur.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.HideSurroundingHtml">
      <summary>Obtient ou définit une valeur qui indique si l'objet modèle doit être restitué à l'aide des éléments HTML associés.</summary>
      <returns>true, si les éléments HTML associés qui contiennent l'objet modèle doivent être inclus avec l'objet ; sinon, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsComplexType">
      <summary>Obtient ou définit une valeur qui indique si le modèle est un type complexe.</summary>
      <returns>Valeur qui indique si le modèle est considéré comme un type complexe par l'infrastructure MVC.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsNullableValueType">
      <summary>Obtient une valeur qui indique si le type est Nullable.</summary>
      <returns>true si le type est Nullable ; sinon, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsReadOnly">
      <summary>Obtient ou définit une valeur qui indique si le modèle est en lecture seule.</summary>
      <returns>true si le modèle est en lecture seule ; sinon, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsRequired">
      <summary>Obtient ou définit une valeur qui indique si le modèle est requis.</summary>
      <returns>true si le modèle est requis ; sinon, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Model">
      <summary>Obtient la valeur du modèle.</summary>
      <returns>Valeur du modèle. Pour plus d'informations sur <see cref="T:System.Web.Mvc.ModelMetadata" />, consultez l'entrée Modèles ASP.NET MVC 2, Partie 2 : ModelMetadata (page éventuellement en anglais) sur le blog de Brad Wilson.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ModelType">
      <summary>Obtient le type du modèle.</summary>
      <returns>Type du modèle.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.NullDisplayText">
      <summary>Obtient ou définit la chaîne à afficher pour les valeurs Null.</summary>
      <returns>Chaîne à afficher pour les valeurs Null.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Order">
      <summary>Obtient ou définit une valeur qui représente l'ordre des métadonnées actuelles.</summary>
      <returns>Retourne <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Properties">
      <summary>Obtient une collection d'objets de métadonnées de modèle qui décrivent les propriétés du modèle.</summary>
      <returns>Collection d'objets de métadonnées de modèle qui décrivent les propriétés du modèle.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.PropertyName">
      <summary>Obtient le nom de la propriété.</summary>
      <returns>Nom de propriété.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Provider">
      <summary>Obtient ou définit le fournisseur.</summary>
      <returns>Fournisseur.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.RequestValidationEnabled"></member>
    <member name="P:System.Web.Mvc.ModelMetadata.ShortDisplayName">
      <summary>Obtient ou définit un nom complet court.</summary>
      <returns>Nom complet court.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ShowForDisplay">
      <summary>Obtient ou définit une valeur qui indique si la propriété doit s'afficher dans les vues en lecture seule telles que Liste et Détail.</summary>
      <returns>true si le modèle doit s'afficher dans les vues en lecture seule ; sinon, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ShowForEdit">
      <summary>Obtient ou définit une valeur qui indique si le modèle doit s'afficher dans les vues modifiables.</summary>
      <returns>true si le modèle doit s'afficher dans les vues modifiables ; sinon, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.SimpleDisplayText">
      <summary>Obtient ou définit la chaîne d'affichage simple du modèle.</summary>
      <returns>Chaîne d'affichage simple du modèle.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.TemplateHint">
      <summary>Obtient ou définit une indication qui suggère quel modèle utiliser pour ce modèle.</summary>
      <returns>Indication qui suggère quel modèle utiliser pour ce modèle.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Watermark">
      <summary>Obtient ou définit une valeur qui peut être utilisée comme filigrane.</summary>
      <returns>Filigrane.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelMetadataProvider">
      <summary>Fournit une classe de base abstraite pour un fournisseur de métadonnées personnalisé.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.#ctor">
      <summary>En cas de substitution dans une classe dérivée, initialise une nouvelle instance de l'objet dérivé de la classe <see cref="T:System.Web.Mvc.ModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Obtient un objet <see cref="T:System.Web.Mvc.ModelMetadata" /> pour chaque propriété d'un modèle.</summary>
      <returns>Objet <see cref="T:System.Web.Mvc.ModelMetadata" /> correspondant à chaque propriété d'un modèle.</returns>
      <param name="container">Conteneur.</param>
      <param name="containerType">Type du conteneur.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.GetMetadataForProperty(System.Func`1,System.Void,System.Object)">
      <summary>Obtient les métadonnées de la propriété spécifiée.</summary>
      <returns>Retourne <see cref="T:System.Web.Mvc.ModelMetadata" />.</returns>
      <param name="modelAccessor">Accesseur modèle.</param>
      <param name="containerType">Type du conteneur.</param>
      <param name="propertyName">Propriété pour laquelle obtenir le modèle de métadonnées.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.GetMetadataForType(System.Func`1,System.Void)">
      <summary>Obtient les métadonnées pour l'accesseur modèle et le type de modèle spécifiés.</summary>
      <returns>Retourne <see cref="T:System.Web.Mvc.ModelMetadata" />.</returns>
      <param name="modelAccessor">Accesseur modèle.</param>
      <param name="modelType">Type du modèle.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelMetadataProviders">
      <summary>Fournit un conteneur pour l'instance de <see cref="T:System.Web.Mvc.ModelMetadataProvider" /> actuelle.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadataProviders.Current">
      <summary>Obtient ou définit l'objet <see cref="T:System.Web.Mvc.ModelMetadataProvider" /> actuel.</summary>
      <returns>Objet <see cref="T:System.Web.Mvc.ModelMetadataProvider" /> actuel.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelSpan">
      <summary>Fournit une classe <see cref="T:System.Web.Razor.Parser.SyntaxTree.Span" /> prenant en charge le modèle pour ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelSpan.#ctor(System.Web.Razor.Text.SourceLocation,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ModelSpan" />.</summary>
      <param name="start">Départ de l'étendue.</param>
      <param name="content">Contenu.</param>
      <param name="modelTypeName">Nom de type du modèle.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelSpan.Equals(System.Object)">
      <summary>Obtient une valeur qui indique si l'objet <see cref="T:System.Web.Mvc.ModelSpan" /> actuel est identique à l'objet spécifié.</summary>
      <returns>true si l'objet <see cref="T:System.Web.Mvc.ModelSpan" /> actuel est identique à l'objet spécifié ; sinon, false.</returns>
      <param name="obj">Objet d'étendue du modèle.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelSpan.GetHashCode">
      <summary>Retourne le code de hachage de l'objet <see cref="T:System.Web.Mvc.ModelSpan" />.</summary>
      <returns>Code de hachage de l'objet <see cref="T:System.Web.Mvc.ModelSpan" />.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelSpan.ModelTypeName">
      <summary>Obtient le nom de type du modèle.</summary>
      <returns>Nom de type du modèle.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelState">
      <summary>Encapsule l'état de la liaison du modèle dans une propriété d'un argument de méthode d'action, ou dans l'argument lui-même.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelState.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ModelState" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelState.Errors">
      <summary>Retourne un objet <see cref="T:System.Web.Mvc.ModelErrorCollection" /> qui contient les erreurs qui se sont produites pendant la liaison du modèle.</summary>
      <returns>Erreurs.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelState.Value">
      <summary>Retourne un objet <see cref="T:System.Web.Mvc.ValueProviderResult" /> qui encapsule la valeur liée pendant la liaison du modèle.</summary>
      <returns>Valeur.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelStateDictionary">
      <summary>Représente l'état d'une tentative de liaison d'un formulaire publié à une méthode d'action, qui inclut les informations de validation.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.#ctor(System.Web.Mvc.ModelStateDictionary)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ModelStateDictionary" /> en utilisant les valeurs copiées à partir du dictionnaire d'états de modèles spécifié.</summary>
      <param name="dictionary">Dictionnaire d'états de modèles.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="dictionary " />a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState})">
      <summary>Ajoute l'élément spécifié au dictionnaire d'états de modèles.</summary>
      <param name="item">Objet à ajouter au dictionnaire d'états de modèles.</param>
      <exception cref="T:System.NotSupportedException">Le dictionnaire d'états de modèles est en lecture seule.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Add(System.String,System.Web.Mvc.ModelState)">
      <summary>Ajoute un élément qui a la clé et la valeur spécifiées au dictionnaire d'états de modèles.</summary>
      <param name="key">Clé de l'élément à ajouter.</param>
      <param name="value">Valeur de l'élément à ajouter.</param>
      <exception cref="T:System.NotSupportedException">Le dictionnaire d'états de modèles est en lecture seule.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">Un élément qui dispose de la clé spécifiée se produit déjà dans le dictionnaire d'états de modèles.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.AddModelError(System.String,System.Exception)">
      <summary>Ajoute l'erreur de modèle spécifiée à la collection d'erreurs pour le dictionnaire d'états de modèles associé à la clé spécifiée.</summary>
      <param name="key">Clé.</param>
      <param name="exception">Exception.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.AddModelError(System.String,System.String)">
      <summary>Ajoute le message d'erreur spécifié à la collection d'erreurs pour le dictionnaire d'états de modèles associé à la clé spécifiée.</summary>
      <param name="key">Clé.</param>
      <param name="errorMessage">Message d'erreur.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Clear">
      <summary>Supprime tous les éléments du dictionnaire d'états de modèles.</summary>
      <exception cref="T:System.NotSupportedException">Le dictionnaire d'états de modèles est en lecture seule.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState})">
      <summary>Détermine si le dictionnaire d'états de modèles contient une valeur spécifique.</summary>
      <returns>true si <paramref name="item" /> existe dans le dictionnaire d'états de modèles ; sinon, false.</returns>
      <param name="item">Objet à trouver dans le dictionnaire d'états de modèles.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.ContainsKey(System.String)">
      <summary>Détermine si le dictionnaire d'états de modèles contient la clé spécifiée.</summary>
      <returns>true si le dictionnaire d'états de modèles contient la clé spécifiée ; sinon, false.</returns>
      <param name="key">Clé à trouver dans le dictionnaire d'états de modèles. </param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState}[],System.Int32)">
      <summary>Copie les éléments du dictionnaire d'états de modèles dans un tableau, en commençant à l'index spécifié.</summary>
      <param name="array">Tableau unidimensionnel qui constitue la destination des éléments copiés à partir de <see cref="T:System.Collections.Generic.ICollection`1" />. Le tableau doit comporter un index de base zéro.</param>
      <param name="arrayIndex">Index de base zéro de <paramref name="array" /> à partir duquel la copie commence.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> est inférieur à 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> est multidimensionnel.-ou- <paramref name="arrayIndex" /> est supérieur ou égal à la longueur de <paramref name="array" />.-ou- Le nombre d'éléments dans la collection source est supérieur à la quantité d'espace disponible entre <paramref name="arrayIndex" /> et la fin du <paramref name="array" /> de destination.-ou- Le cast automatique du type <paramref name="T" /> en type du <paramref name="array" /> de destination est impossible.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Count">
      <summary>Obtient le nombre de paires clé/valeur dans la collection.</summary>
      <returns>Nombre de paires clé/valeur dans la collection.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.GetEnumerator">
      <summary>Retourne un énumérateur qui peut être utilisé pour itérer au sein de la collection.</summary>
      <returns>Énumérateur permettant d'itérer au sein de la collection.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.IsReadOnly">
      <summary>Obtient une valeur qui indique si la collection est en lecture seule.</summary>
      <returns>true si la collection est en lecture seule ; sinon, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.IsValid">
      <summary>Obtient une valeur qui indique si cette instance du dictionnaire d'états de modèles est valide.</summary>
      <returns>true si cette instance est valide ; sinon, false.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.IsValidField(System.String)">
      <summary>Détermine s'il existe des objets <see cref="T:System.Web.Mvc.ModelError" /> associés à la clé spécifiée ou précédés par cette dernière.</summary>
      <returns>true si le dictionnaire d'états de modèles contient une valeur associée à la clé spécifiée ; sinon, false.</returns>
      <param name="key">Clé.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="key" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Item(System.String)">
      <summary>Obtient ou définit la valeur associée à la clé spécifiée.</summary>
      <returns>Élément d'état de modèle.</returns>
      <param name="key">Clé.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Keys">
      <summary>Obtient une collection qui contient les clés dans le dictionnaire.</summary>
      <returns>Collection qui contient les clés du dictionnaire d'états de modèles.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Merge(System.Web.Mvc.ModelStateDictionary)">
      <summary>Copie les valeurs de l'objet <see cref="T:System.Web.Mvc.ModelStateDictionary" /> spécifié dans ce dictionnaire, en remplaçant les valeurs existantes si les clés sont les mêmes.</summary>
      <param name="dictionary">Dictionnaire.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState})">
      <summary>Supprime la première occurrence de l'objet spécifié dans le dictionnaire d'états de modèles.</summary>
      <returns>true si <paramref name="item" /> a été correctement supprimé du dictionnaire d'états de modèles ; sinon, false. Cette méthode retourne également false si <paramref name="item" /> est introuvable dans le dictionnaire d'états de modèles.</returns>
      <param name="item">Objet à supprimer du dictionnaire d'états de modèles.</param>
      <exception cref="T:System.NotSupportedException">Le dictionnaire d'états de modèles est en lecture seule.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Remove(System.String)">
      <summary>Supprime l'élément comportant la clé spécifiée du dictionnaire d'états de modèles.</summary>
      <returns>true si la suppression de l'élément réussit ; sinon, false. Cette méthode retourne également false si <paramref name="key" /> est introuvable dans le dictionnaire d'états de modèles.</returns>
      <param name="key">Clé de l'élément à supprimer.</param>
      <exception cref="T:System.NotSupportedException">Le dictionnaire d'états de modèles est en lecture seule.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.SetModelValue(System.String,System.Web.Mvc.ValueProviderResult)">
      <summary>Définit la valeur de la clé spécifiée à l'aide du dictionnaire de fournisseurs de valeurs spécifié.</summary>
      <param name="key">Clé.</param>
      <param name="value">Valeur.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retourne un énumérateur qui peut être utilisé pour itérer au sein de la collection.</summary>
      <returns>Énumérateur permettant d'itérer au sein de la collection.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.TryGetValue(System.String,System.Web.Mvc.ModelState@)">
      <summary>Tente d'obtenir la valeur associée à la clé spécifiée.</summary>
      <returns>true si l'objet qui implémente <see cref="T:System.Collections.Generic.IDictionary`2" /> contient un élément comportant la clé spécifiée ; sinon, false.</returns>
      <param name="key">Clé de la valeur à obtenir.</param>
      <param name="value">Lorsque cette méthode est retournée, valeur associée à la clé spécifiée, si la clé est trouvée ; sinon, valeur par défaut pour le type du paramètre <paramref name="value" />. Ce paramètre est passé sans être initialisé.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Values">
      <summary>Obtient une collection qui contient les valeurs dans le dictionnaire.</summary>
      <returns>Collection qui contient les valeurs du dictionnaire d'états de modèles.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelValidationResult">
      <summary>Fournit un conteneur pour un résultat de validation.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidationResult.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ModelValidationResult" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelValidationResult.MemberName">
      <summary>Obtient ou définit le nom du membre.</summary>
      <returns>Nom du membre.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelValidationResult.Message">
      <summary>Obtient ou définit le message du résultat de validation.</summary>
      <returns>Message du résultat de validation.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelValidator">
      <summary>Fournit une classe de base pour l'implémentation de la logique de validation.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Appelée à partir des constructeurs dans des classes dérivées pour initialiser la classe <see cref="T:System.Web.Mvc.ModelValidator" />.</summary>
      <param name="metadata">Métadonnées.</param>
      <param name="controllerContext">Contexte du contrôleur.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelValidator.ControllerContext">
      <summary>Obtient le contexte du contrôleur.</summary>
      <returns>Contexte du contrôleur.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.GetClientValidationRules">
      <summary>En cas d'implémentation dans une classe dérivée, retourne les métadonnées de la validation client.</summary>
      <returns>Métadonnées de la validation client.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.GetModelValidator(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Retourne un validateur de modèle composite pour le modèle.</summary>
      <returns>Validateur de modèle composite pour le modèle.</returns>
      <param name="metadata">Métadonnées.</param>
      <param name="context">Contexte du contrôleur.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelValidator.IsRequired">
      <summary>Obtient ou définit une valeur qui indique si une propriété de modèle est requise.</summary>
      <returns>true si la propriété de modèle est requise ; sinon, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelValidator.Metadata">
      <summary>Obtient les métadonnées pour le validateur de modèle.</summary>
      <returns>Métadonnées du validateur de modèle.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.Validate(System.Object)">
      <summary>En cas d'implémentation dans une classe dérivée, valide l'objet.</summary>
      <returns>Liste de résultats de validation.</returns>
      <param name="container">Conteneur.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelValidatorProvider">
      <summary>Fournit une liste de validateurs pour un modèle.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProvider.#ctor">
      <summary>En cas d'implémentation dans une classe dérivée, initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Obtient une liste de validateurs.</summary>
      <returns>Liste de validateurs.</returns>
      <param name="metadata">Métadonnées.</param>
      <param name="context">Contexte.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelValidatorProviderCollection">
      <summary>Fournit un conteneur pour une liste de fournisseurs de validation.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ModelValidatorProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.ModelValidatorProvider})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ModelValidatorProviderCollection" /> à l'aide d'une liste de fournisseurs de validation de modèle.</summary>
      <param name="list">Liste de fournisseurs de validation de modèle.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Retourne la liste de validateurs du modèle.</summary>
      <returns>Liste des validateurs de modèle.</returns>
      <param name="metadata">Métadonnées du modèle.</param>
      <param name="context">Contexte du contrôleur.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.InsertItem(System.Int32,System.Web.Mvc.ModelValidatorProvider)">
      <summary>Insère un fournisseur de validateur de modèle dans la collection.</summary>
      <param name="index">Index de base zéro au niveau duquel l'élément doit être inséré.</param>
      <param name="item">Objet fournisseur de validateur de modèle à insérer.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.SetItem(System.Int32,System.Web.Mvc.ModelValidatorProvider)">
      <summary>Remplace l'élément de fournisseur de validateur de modèle à l'index spécifié.</summary>
      <param name="index">Index de base zéro de l'élément de fournisseur de validateur de modèle à remplacer.</param>
      <param name="item">Nouvelle valeur pour l'élément de fournisseur de validateur de modèle.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelValidatorProviders">
      <summary>Fournit un conteneur pour le fournisseur de validation actuel.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelValidatorProviders.Providers">
      <summary>Obtient la collection de fournisseurs de validateur de modèle.</summary>
      <returns>Collection de fournisseurs de validateur de modèle.</returns>
    </member>
    <member name="T:System.Web.Mvc.MultiSelectList">
      <summary>Représente une liste d'éléments dans laquelle les utilisateurs peuvent sélectionner plusieurs éléments.</summary>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.MultiSelectList" /> en utilisant les éléments spécifiés à inclure dans la liste.</summary>
      <param name="items">Éléments.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="items" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.MultiSelectList" /> en utilisant les éléments spécifiés à inclure dans la liste et les valeurs sélectionnées.</summary>
      <param name="items">Éléments.</param>
      <param name="selectedValues">Valeurs sélectionnées.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="items" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.MultiSelectList" /> en utilisant les éléments à inclure dans la liste, le champ de valeur des données et le champ de texte des données.</summary>
      <param name="items">Éléments.</param>
      <param name="dataValueField">Champ de valeur des données.</param>
      <param name="dataTextField">Champ de texte des données.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="items" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Collections.IEnumerable)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.MultiSelectList" /> en utilisant les éléments à inclure dans la liste, le champ de valeur des données, le champ de texte des données et les valeurs sélectionnées.</summary>
      <param name="items">Éléments.</param>
      <param name="dataValueField">Champ de valeur des données.</param>
      <param name="dataTextField">Champ de texte des données.</param>
      <param name="selectedValues">Valeurs sélectionnées.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="items" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DataTextField">
      <summary>Obtient ou définit le champ de texte des données.</summary>
      <returns>Champ de texte des données.</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DataValueField">
      <summary>Obtient ou définit le champ de valeur des données.</summary>
      <returns>Champ de valeur des données.</returns>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.GetEnumerator">
      <summary>Retourne un énumérateur qui peut être utilisé pour itérer au sein de la collection.</summary>
      <returns>Énumérateur permettant d'itérer au sein de la collection.</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.Items">
      <summary>Obtient ou définit les éléments de la liste.</summary>
      <returns>Éléments de la liste.</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.SelectedValues">
      <summary>Obtient ou définit les valeurs sélectionnées.</summary>
      <returns>Valeurs sélectionnées.</returns>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retourne un énumérateur permettant d'itérer au sein d'une collection.</summary>
      <returns>Énumérateur permettant d'itérer au sein de la collection.</returns>
    </member>
    <member name="T:System.Web.Mvc.MvcCSharpRazorCodeGenerator">
      <summary>Compile des vues ASP.NET Razor en classes.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcCSharpRazorCodeGenerator.#ctor(System.String,System.String,System.String,System.Web.Razor.RazorEngineHost)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.MvcCSharpRazorCodeGenerator" />.</summary>
      <param name="className">Nom de la classe.</param>
      <param name="rootNamespaceName">Espace de noms racine.</param>
      <param name="sourceFileName">Nom du fichier source.</param>
      <param name="host">Hôte du moteur ASP.NET Razor.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcCSharpRazorCodeGenerator.TryVisitSpecialSpan(System.Web.Razor.Parser.SyntaxTree.Span)">
      <summary>Retourne une valeur indiquant si l'étendue de modèle spécifiée est une instance de <see cref="T:System.Web.Mvc.ModelSpan" />.</summary>
      <returns>true si la valeur du paramètre <paramref name="span" /> est une instance de <see cref="T:System.Web.Mvc.ModelSpan" /> ; sinon, false.</returns>
      <param name="span">Étendue du modèle.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcCSharpRazorCodeParser">
      <summary>Étend la classe CSharpCodeParser en ajoutant une prise en charge du mot clé @model.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcCSharpRazorCodeParser.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.MvcCSharpRazorCodeParser" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcCSharpRazorCodeParser.ParseInheritsStatement(System.Web.Razor.Parser.CodeBlockInfo)">
      <summary>Détermine si le bloc et le modèle de code actuels doivent être hérités à l'aide du bloc de code spécifié.</summary>
      <returns>true si le bloc et le modèle de code sont hérités ; sinon, false.</returns>
      <param name="block">Informations sur le bloc de code.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcFilter">
      <summary>En cas d'implémentation dans une classe dérivée, fournit une classe de métadonnées qui contient une référence à l'implémentation d'une ou plusieurs interfaces de filtres, l'ordre et la portée du filtre.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcFilter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.MvcFilter" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcFilter.#ctor(System.Boolean,System.Int32)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.MvcFilter" /> et spécifie l'ordre des filtres et si plusieurs filtres sont autorisés.</summary>
      <param name="allowMultiple">true pour spécifier que plusieurs filtres du même type sont autorisés ; sinon, false.</param>
      <param name="order">Ordre de filtre.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcFilter.AllowMultiple">
      <summary>Obtient une valeur qui indique s'il est possible de spécifier plusieurs instances de l'attribut de filtre.</summary>
      <returns>true si plusieurs instances de l'attribut de filtre sont autorisées ; sinon, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.MvcFilter.Order">
      <summary>Obtient une valeur qui indique l'ordre d'application d'un filtre.</summary>
      <returns>Valeur qui indique l'ordre d'application d'un filtre.</returns>
    </member>
    <member name="T:System.Web.Mvc.MvcHandler">
      <summary>Sélectionne le contrôleur qui doit gérer une requête HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.#ctor(System.Web.Routing.RequestContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.MvcHandler" />.</summary>
      <param name="requestContext">Contexte de la requête.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="requestContext" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.AddVersionHeader(System.Web.HttpContextBase)">
      <summary>Ajoute l'en-tête de version à l'aide du contexte HTTP spécifié.</summary>
      <param name="httpContext">Contexte HTTP.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>Appelé par ASP.NET pour commencer le traitement de la requête asynchrone.</summary>
      <returns>État de l'appel asynchrone.</returns>
      <param name="httpContext">Contexte HTTP.</param>
      <param name="callback">Méthode de rappel asynchrone.</param>
      <param name="state">État de l'objet asynchrone.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.BeginProcessRequest(System.Web.HttpContextBase,System.AsyncCallback,System.Object)">
      <summary>Appelée par ASP.NET pour commencer le traitement de la requête asynchrone à l'aide du contexte HTTP de base.</summary>
      <returns>État de l'appel asynchrone.</returns>
      <param name="httpContext">Contexte HTTP.</param>
      <param name="callback">Méthode de rappel asynchrone.</param>
      <param name="state">État de l'objet asynchrone.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.DisableMvcResponseHeader">
      <summary>Obtient ou définit une valeur qui indique si l'en-tête de réponse MVC est désactivé.</summary>
      <returns>true si l'en-tête de réponse MVC est désactivé ; sinon, false.</returns>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.EndProcessRequest(System.IAsyncResult)">
      <summary>Appelée par ASP.NET lorsque le traitement de la requête asynchrone est terminé.</summary>
      <param name="asyncResult">Résultat asynchrone.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.IsReusable">
      <summary>Obtient une valeur qui indique si une autre requête peut utiliser l'instance de <see cref="T:System.Web.IHttpHandler" />.</summary>
      <returns>true si l'instance <see cref="T:System.Web.IHttpHandler" /> est réutilisable ; sinon false.</returns>
    </member>
    <member name="F:System.Web.Mvc.MvcHandler.MvcVersionHeaderName">
      <summary>Contient le nom d'en-tête de la version MVC ASP.NET.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.ProcessRequest(System.Web.HttpContext)">
      <summary>Traite la requête à l'aide du contexte de requête HTTP spécifié.</summary>
      <param name="httpContext">Contexte HTTP.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.ProcessRequest(System.Web.HttpContextBase)">
      <summary>Traite la requête à l'aide du contexte de requête HTTP de base spécifié.</summary>
      <param name="httpContext">Contexte HTTP.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.RequestContext">
      <summary>Obtient le contexte de la requête.</summary>
      <returns>Contexte de la requête.</returns>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>Appelée par ASP.NET pour commencer le traitement de la requête asynchrone à l'aide du contexte HTTP de base.</summary>
      <returns>État de l'appel asynchrone.</returns>
      <param name="context">Contexte HTTP.</param>
      <param name="cb">Méthode de rappel asynchrone.</param>
      <param name="extraData">Données.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
      <summary>Appelée par ASP.NET lorsque le traitement de la requête asynchrone est terminé.</summary>
      <param name="result">Résultat asynchrone.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.System#Web#IHttpHandler#IsReusable">
      <summary>Obtient une valeur qui indique si une autre requête peut utiliser l'instance de <see cref="T:System.Web.IHttpHandler" />.</summary>
      <returns>true si l'instance <see cref="T:System.Web.IHttpHandler" /> est réutilisable ; sinon false.</returns>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
      <summary>Active le traitement des requêtes Web HTTP par le biais d'un gestionnaire HTTP personnalisé qui implémente l'interface <see cref="T:System.Web.IHttpHandler" />.</summary>
      <param name="httpContext">Objet <see cref="T:System.Web.HttpContext" /> qui fournit des références aux objets serveur intrinsèques (par exemple Request, Response, Session et Server) utilisés pour traiter des requêtes HTTP.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcHtmlString">
      <summary>Représente une chaîne encodée au format HTML qui ne doit plus être encodée.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHtmlString.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.MvcHtmlString" />.</summary>
      <param name="value">Chaîne à créer. Si aucune valeur n'est assignée, l'objet est créé à l'aide d'une valeur de chaîne vide.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHtmlString.Create(System.String)">
      <summary>Crée une chaîne encodée au format HTML à l'aide de la valeur texte spécifiée.</summary>
      <returns>Chaîne encodée au format HTML.</returns>
      <param name="value">Valeur de la chaîne à créer.</param>
    </member>
    <member name="F:System.Web.Mvc.MvcHtmlString.Empty">
      <summary>Contient une chaîne HTML vide.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHtmlString.IsNullOrEmpty(System.Web.Mvc.MvcHtmlString)">
      <summary>Détermine si la chaîne spécifiée dispose d'un contenu ou est null ou vide.</summary>
      <returns>true si la chaîne est null ou vide ; sinon, false.</returns>
      <param name="value">Chaîne.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcHttpHandler">
      <summary>Vérifie et traite une requête HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.MvcHttpHandler" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>Appelé par ASP.NET pour commencer le traitement de la requête asynchrone.</summary>
      <returns>État de l'appel asynchrone.</returns>
      <param name="httpContext">Contexte HTTP.</param>
      <param name="callback">Méthode de rappel asynchrone.</param>
      <param name="state">État.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.BeginProcessRequest(System.Web.HttpContextBase,System.AsyncCallback,System.Object)">
      <summary>Appelé par ASP.NET pour commencer le traitement de la requête asynchrone.</summary>
      <returns>État de l'appel asynchrone.</returns>
      <param name="httpContext">Contexte HTTP de base.</param>
      <param name="callback">Méthode de rappel asynchrone.</param>
      <param name="state">État.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.EndProcessRequest(System.IAsyncResult)">
      <summary>Appelée par ASP.NET lorsque le traitement de la requête asynchrone est terminé.</summary>
      <param name="asyncResult">Résultat asynchrone.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>Appelé par ASP.NET pour commencer le traitement de la requête asynchrone.</summary>
      <returns>État de l'appel asynchrone.</returns>
      <param name="context">Contexte.</param>
      <param name="cb">Méthode de rappel asynchrone.</param>
      <param name="extraData">Objet qui contient les données.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
      <summary>Appelée par ASP.NET lorsque le traitement de la requête asynchrone est terminé.</summary>
      <param name="result">État des opérations asynchrones.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.VerifyAndProcessRequest(System.Web.IHttpHandler,System.Web.HttpContextBase)">
      <summary>Vérifie et traite une requête HTTP.</summary>
      <param name="httpHandler">Gestionnaire HTTP.</param>
      <param name="httpContext">Contexte HTTP.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcRouteHandler">
      <summary>Crée un objet qui implémente l'interface IHttpHandler et lui passe le contexte de requête.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.MvcRouteHandler" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.#ctor(System.Web.Mvc.IControllerFactory)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.MvcRouteHandler" /> en utilisant l'objet de contrôleur de fabrique spécifié.</summary>
      <param name="controllerFactory">Fabrique de contrôleurs.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)">
      <summary>Retourne le gestionnaire HTTP à l'aide du contexte HTTP spécifié.</summary>
      <returns>Gestionnaire HTTP.</returns>
      <param name="requestContext">Contexte de la requête.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.GetSessionStateBehavior(System.Web.Routing.RequestContext)">
      <summary>Retourne le comportement de la session.</summary>
      <returns>Comportement de la session.</returns>
      <param name="requestContext">Contexte de la requête.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.System#Web#Routing#IRouteHandler#GetHttpHandler(System.Web.Routing.RequestContext)">
      <summary>Retourne le gestionnaire HTTP à l'aide du contexte de requête spécifié.</summary>
      <returns>Gestionnaire HTTP.</returns>
      <param name="requestContext">Contexte de la requête.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcVBRazorCodeGenerator">
      <summary>Compile des vues ASP.NET Razor en classes.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcVBRazorCodeGenerator.#ctor(System.String,System.String,System.String,System.Web.Razor.RazorEngineHost)"></member>
    <member name="M:System.Web.Mvc.MvcVBRazorCodeGenerator.TryVisitSpecialSpan(System.Web.Razor.Parser.SyntaxTree.Span)"></member>
    <member name="T:System.Web.Mvc.MvcVBRazorCodeParser">
      <summary>Étend la classe VBCodeParser en ajoutant une prise en charge du mot clé @model.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcVBRazorCodeParser.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.MvcVBRazorCodeParser" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcVBRazorCodeParser.ParseInheritsStatement(System.Web.Razor.Parser.CodeBlockInfo)"></member>
    <member name="T:System.Web.Mvc.MvcWebPageRazorHost">
      <summary>Configure l'analyseur et le générateur de code ASP.NET Razor pour un fichier spécifié.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcWebPageRazorHost.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.MvcWebPageRazorHost" />. </summary>
      <param name="virtualPath">Chemin d'accès virtuel du fichier ASP.NET Razor.</param>
      <param name="physicalPath">Chemin d'accès physique du fichier ASP.NET Razor.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcWebPageRazorHost.DecorateCodeGenerator(System.Web.Razor.Generator.RazorCodeGenerator)"></member>
    <member name="M:System.Web.Mvc.MvcWebPageRazorHost.DecorateCodeParser(System.Web.Razor.Parser.ParserBase)"></member>
    <member name="T:System.Web.Mvc.MvcWebRazorHostFactory">
      <summary>Crée des instances de fichiers <see cref="T:System.Web.Mvc.MvcWebPageRazorHost" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcWebRazorHostFactory.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.MvcWebRazorHostFactory" />. </summary>
    </member>
    <member name="M:System.Web.Mvc.MvcWebRazorHostFactory.CreateHost(System.String,System.String)">
      <summary>Crée un hôte Razor.</summary>
      <returns>Hôte Razor.</returns>
      <param name="virtualPath">Chemin d'accès virtuel au fichier cible.</param>
      <param name="physicalPath">Chemin d'accès physique au fichier cible.</param>
    </member>
    <member name="T:System.Web.Mvc.NameValueCollectionExtensions">
      <summary>Étend un objet NameValueCollection afin que la collection puisse être copiée dans le dictionnaire spécifié.</summary>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionExtensions.CopyTo(System.Collections.Specialized.NameValueCollection,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Copie la collection spécifiée vers la destination spécifiée.</summary>
      <param name="collection">Collection.</param>
      <param name="destination">Destination.</param>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionExtensions.CopyTo(System.Collections.Specialized.NameValueCollection,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
      <summary>Copie la collection spécifiée vers la destination spécifiée et remplace éventuellement les entrées précédentes.</summary>
      <param name="collection">Collection.</param>
      <param name="destination">Destination.</param>
      <param name="replaceEntries">true pour remplacer les entrées précédentes ; sinon, false.</param>
    </member>
    <member name="T:System.Web.Mvc.NameValueCollectionValueProvider">
      <summary>Représente la classe de base pour les fournisseurs de valeur dont les valeurs proviennent d'un objet <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.#ctor(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.Globalization.CultureInfo)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.NameValueCollectionValueProvider" /> à l'aide de la collection non validée spécifiée.</summary>
      <param name="collection">Collection qui contient les valeurs qui permettent d'initialiser le fournisseur.</param>
      <param name="unvalidatedCollection">Collection qui contient les valeurs qui permettent d'initialiser le fournisseur. Cette collection ne sera pas validée.</param>
      <param name="culture">Objet qui contient les informations relatives à la culture cible.</param>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.#ctor(System.Collections.Specialized.NameValueCollection,System.Globalization.CultureInfo)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.NameValueCollectionValueProvider" />.</summary>
      <param name="collection">Collection qui contient les valeurs qui permettent d'initialiser le fournisseur.</param>
      <param name="culture">Objet qui contient les informations relatives à la culture cible.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="collection" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.ContainsPrefix(System.String)">
      <summary>Détermine si la collection contient le préfixe spécifié.</summary>
      <returns>true si la collection contient le préfixe spécifié ; sinon, false.</returns>
      <param name="prefix">Préfixe à rechercher.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="prefix" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.GetValue(System.String)">
      <summary>Retourne un objet de valeur à l'aide de la clé spécifiée.</summary>
      <returns>Objet de valeur pour la clé spécifiée.</returns>
      <param name="key">Clé de l'objet de valeur à récupérer.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="key" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.GetValue(System.String,System.Boolean)">
      <summary>Retourne un objet de valeur à l'aide de la clé et de la directive de validation spécifiés.</summary>
      <returns>Objet de valeur pour la clé spécifiée.</returns>
      <param name="key">Clé.</param>
      <param name="skipValidation">true si la validation doit être ignorée ; sinon, false.</param>
    </member>
    <member name="T:System.Web.Mvc.NoAsyncTimeoutAttribute">
      <summary>Fournit un wrapper pratique pour l'attribut <see cref="T:System.Web.Mvc.AsyncTimeoutAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.NoAsyncTimeoutAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.NoAsyncTimeoutAttribute" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.NonActionAttribute">
      <summary>Représente un attribut utilisé pour indiquer qu'une méthode de contrôleur n'est pas une méthode d'action.</summary>
    </member>
    <member name="M:System.Web.Mvc.NonActionAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.NonActionAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.NonActionAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Détermine si l'attribut marque une méthode qui n'est pas une méthode d'action à l'aide du contexte du contrôleur spécifié.</summary>
      <returns>true si l'attribut marque une méthode valide qui n'est pas une méthode d'action ; sinon, false.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="methodInfo">Informations de méthode.</param>
    </member>
    <member name="T:System.Web.Mvc.OutputCacheAttribute">
      <summary>Représente un attribut utilisé pour marquer une méthode d'action dont la sortie doit être mise en cache.</summary>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.OutputCacheAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.CacheProfile">
      <summary>Obtient ou définit le nom de profil du cache.</summary>
      <returns>Nom de profil du cache.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.ChildActionCache">
      <summary>Obtient ou définit le cache des actions enfants.</summary>
      <returns>Cache des actions enfants.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.Duration">
      <summary>Obtient ou définit la durée du cache, en secondes.</summary>
      <returns>Durée du cache.</returns>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.IsChildActionCacheActive(System.Web.Mvc.ControllerContext)">
      <summary>Retourne une valeur qui indique si un cache d'actions enfants est actif.</summary>
      <returns>true si le cache des actions enfants est actif ; sinon, false.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.Location">
      <summary>Obtient ou définit l'emplacement.</summary>
      <returns>Emplacement.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.NoStore">
      <summary>Obtient ou définit une valeur qui indique s'il faut stocker le cache.</summary>
      <returns>true si le cache doit être stocké ; sinon, false.</returns>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Cette méthode est une implémentation de <see cref="M:System.Web.Mvc.IActionFilter.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)" /> et prend en charge l'infrastructure ASP.NET MVC. Il n'est pas destiné à être utilisé directement à partir de votre code. </summary>
      <param name="filterContext">Contexte du filtre.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Cette méthode est une implémentation de <see cref="M:System.Web.Mvc.IActionFilter.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)" /> et prend en charge l'infrastructure ASP.NET MVC. Il n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="filterContext">Contexte du filtre.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Cette méthode est une implémentation de <see cref="M:System.Web.Mvc.IExceptionFilter.OnException(System.Web.Mvc.ExceptionContext)" /> et prend en charge l'infrastructure ASP.NET MVC. Il n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="filterContext">Contexte du filtre.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Cette méthode est une implémentation de <see cref="M:System.Web.Mvc.IResultFilter.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)" /> et prend en charge l'infrastructure ASP.NET MVC. Il n'est pas destiné à être utilisé directement à partir de votre code.</summary>
      <param name="filterContext">Contexte du filtre.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Appelée avant l'exécution du résultat de l'action.</summary>
      <param name="filterContext">Contexte de filtre qui encapsule les informations relatives à l'utilisation de <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="filterContext" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.SqlDependency">
      <summary>Obtient ou définit la dépendance SQL.</summary>
      <returns>Dépendance SQL.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByContentEncoding">
      <summary>Obtient ou définit l'encodage variable en fonction du contenu.</summary>
      <returns>Encodage variable en fonction du contenu.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByCustom">
      <summary>Obtient ou définit la valeur variable en fonction de la personnalisation.</summary>
      <returns>Valeur variable en fonction de la personnalisation.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByHeader">
      <summary>Obtient ou définit la valeur variable en fonction de l'en-tête.</summary>
      <returns>Valeur variable en fonction de l'en-tête.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByParam">
      <summary>Obtient ou définit la valeur variable en fonction du paramètre.</summary>
      <returns>Valeur variable en fonction du paramètre.</returns>
    </member>
    <member name="T:System.Web.Mvc.ParameterBindingInfo">
      <summary>Encapsule les informations pour la liaison des paramètres de méthode d'action à un modèle de données.</summary>
    </member>
    <member name="M:System.Web.Mvc.ParameterBindingInfo.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ParameterBindingInfo" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Binder">
      <summary>Obtient le binder de modèle.</summary>
      <returns>Binder de modèle.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Exclude">
      <summary>Obtient une liste de noms de propriétés délimités par des virgules pour lesquels la liaison est désactivée.</summary>
      <returns>Liste d'exclusion.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Include">
      <summary>Obtient une liste de noms de propriétés délimités par des virgules pour lesquels la liaison est activée.</summary>
      <returns>Liste d'inclusion.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Prefix">
      <summary>Obtient le préfixe à utiliser lorsque l'infrastructure MVC lie une valeur à un paramètre d'action ou une propriété de modèle.</summary>
      <returns>Préfixe.</returns>
    </member>
    <member name="T:System.Web.Mvc.ParameterDescriptor">
      <summary>Contient des informations qui décrivent un paramètre.</summary>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ParameterDescriptor" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.ActionDescriptor">
      <summary>Obtient le descripteur de l'action.</summary>
      <returns>Descripteur de l'action.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.BindingInfo">
      <summary>Obtient les informations de liaison.</summary>
      <returns>Informations de liaison.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.DefaultValue">
      <summary>Obtient la valeur par défaut du paramètre.</summary>
      <returns>La valeur par défaut du paramètre.</returns>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Retourne un tableau des attributs personnalisés définis pour ce membre, à l'exception des attributs nommés.</summary>
      <returns>Tableau d'attributs personnalisés ou tableau vide s'il n'existe aucun attribut personnalisé.</returns>
      <param name="inherit">true pour rechercher l'attribut personnalisé hérité dans la chaîne de hiérarchie ; sinon false.</param>
      <exception cref="T:System.TypeLoadException">Impossible de charger le type d'attribut personnalisé.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Il existe plusieurs attributs de type <paramref name="attributeType" /> défini pour ce membre.</exception>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Retourne un tableau des attributs personnalisés définis pour ce membre, identifiés par type.</summary>
      <returns>Tableau d'attributs personnalisés ou tableau vide s'il n'existe aucun attribut personnalisé.</returns>
      <param name="attributeType">Type des attributs personnalisés.</param>
      <param name="inherit">true pour rechercher l'attribut personnalisé hérité dans la chaîne de hiérarchie ; sinon false.</param>
      <exception cref="T:System.TypeLoadException">Impossible de charger le type d'attribut personnalisé.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Il existe plusieurs attributs de type <paramref name="attributeType" /> défini pour ce membre.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="attributeType" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Indique si une ou plusieurs instances d'un type d'attribut personnalisé sont définies pour ce membre.</summary>
      <returns>true si le type d'attribut personnalisé est défini pour ce membre ; sinon, false.</returns>
      <param name="attributeType">Type des attributs personnalisés.</param>
      <param name="inherit">true pour rechercher l'attribut personnalisé hérité dans la chaîne de hiérarchie ; sinon false.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="attributeType" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.ParameterName">
      <summary>Obtient le nom du paramètre.</summary>
      <returns>Nom du paramètre.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.ParameterType">
      <summary>Obtient le type du paramètre.</summary>
      <returns>Type du paramètre.</returns>
    </member>
    <member name="T:System.Web.Mvc.PartialViewResult">
      <summary>Représente une classe de base utilisée pour envoyer un affichage partiel à la réponse.</summary>
    </member>
    <member name="M:System.Web.Mvc.PartialViewResult.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.PartialViewResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.PartialViewResult.FindView(System.Web.Mvc.ControllerContext)">
      <summary>Retourne l'objet <see cref="T:System.Web.Mvc.ViewEngineResult" /> utilisé pour restituer la vue.</summary>
      <returns>Résultat du moteur d'affichage.</returns>
      <param name="context">Contexte du contrôleur.</param>
      <exception cref="T:System.InvalidOperationException">Une erreur s'est produite tandis que la méthode essayait de rechercher la vue.</exception>
    </member>
    <member name="T:System.Web.Mvc.PreApplicationStartCode">
      <summary>Fournit un point d'inscription pour le code de pré-démarrage de l'application ASP.NET Razor.</summary>
    </member>
    <member name="M:System.Web.Mvc.PreApplicationStartCode.Start">
      <summary>Inscrit le code de pré-démarrage de l'application Razor.</summary>
    </member>
    <member name="T:System.Web.Mvc.QueryStringValueProvider">
      <summary>Représente un fournisseur de valeur pour les chaînes de requête contenues dans un objet <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.QueryStringValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.QueryStringValueProvider" />.</summary>
      <param name="controllerContext">Objet qui encapsule des informations sur la requête HTTP en cours.</param>
    </member>
    <member name="T:System.Web.Mvc.QueryStringValueProviderFactory">
      <summary>Représente une classe qui est chargée de la création d'une nouvelle instance d'un objet de fournisseur de valeur de chaîne de requête.</summary>
    </member>
    <member name="M:System.Web.Mvc.QueryStringValueProviderFactory.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.QueryStringValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.QueryStringValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Retourne un objet de fournisseur de valeur pour le contexte de contrôleur spécifié.</summary>
      <returns>Objet de fournisseur de valeur de chaîne de requête.</returns>
      <param name="controllerContext">Objet qui encapsule des informations sur la requête HTTP en cours.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="controllerContext" /> a la valeur null.</exception>
    </member>
    <member name="T:System.Web.Mvc.RangeAttributeAdapter">
      <summary>Fournit un adaptateur pour l'attribut <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RangeAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.RangeAttribute)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" />.</summary>
      <param name="metadata">Métadonnées du modèle.</param>
      <param name="context">Contexte du contrôleur.</param>
      <param name="attribute">Attribut de plage.</param>
    </member>
    <member name="M:System.Web.Mvc.RangeAttributeAdapter.GetClientValidationRules">
      <summary>Obtient une liste de règles de validation client pour un contrôle de plage.</summary>
      <returns>Liste de règles de validation client pour un contrôle de plage.</returns>
    </member>
    <member name="T:System.Web.Mvc.RazorView">
      <summary>Représente la classe utilisée pour créer des vues qui utilisent la syntaxe Razor.</summary>
    </member>
    <member name="M:System.Web.Mvc.RazorView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.RazorView" />.</summary>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="viewPath">Chemin d'accès de l'affichage.</param>
      <param name="layoutPath">Disposition ou page maître.</param>
      <param name="runViewStartPages">Valeur qui indique si les fichiers de démarrage de vue doivent être exécutés avant la vue.</param>
      <param name="viewStartFileExtensions">Jeu d'extensions qui sera utilisé lors de la consultation des fichiers de démarrage de vue.</param>
    </member>
    <member name="M:System.Web.Mvc.RazorView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Web.Mvc.IViewPageActivator)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.RazorView" /> à l'aide de l'activateur de page de vue.</summary>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="viewPath">Chemin d'accès de l'affichage.</param>
      <param name="layoutPath">Disposition ou page maître.</param>
      <param name="runViewStartPages">Valeur qui indique si les fichiers de démarrage de vue doivent être exécutés avant la vue.</param>
      <param name="viewStartFileExtensions">Jeu d'extensions qui sera utilisé lors de la consultation des fichiers de démarrage de vue.</param>
      <param name="viewPageActivator">Activateur de page de vue.</param>
    </member>
    <member name="P:System.Web.Mvc.RazorView.LayoutPath">
      <summary>Obtient la disposition ou la page maître.</summary>
      <returns>Disposition ou page maître.</returns>
    </member>
    <member name="M:System.Web.Mvc.RazorView.RenderView(System.Web.Mvc.ViewContext,System.IO.TextWriter,System.Object)">
      <summary>Restitue le contexte d'affichage spécifié à l'aide du writer spécifié et de l'instance <see cref="T:System.Web.Mvc.WebViewPage" />.</summary>
      <param name="viewContext">Contexte d'affichage.</param>
      <param name="writer">Writer utilisé afin de restituer l'affichage pour la réponse.</param>
      <param name="instance">Instance <see cref="T:System.Web.Mvc.WebViewPage" />.</param>
    </member>
    <member name="P:System.Web.Mvc.RazorView.RunViewStartPages">
      <summary>Obtient une valeur qui indique si les fichiers de démarrage de vue doivent être exécutés avant la vue.</summary>
      <returns>Valeur qui indique si les fichiers de démarrage de vue doivent être exécutés avant la vue.</returns>
    </member>
    <member name="P:System.Web.Mvc.RazorView.ViewStartFileExtensions">
      <summary>Obtient ou définit le jeu d'extensions de fichiers qui sera utilisé lors de la consultation des fichiers de démarrage de vue.</summary>
      <returns>Jeu d'extensions de fichiers qui sera utilisé lors de la consultation des fichiers de démarrage de vue.</returns>
    </member>
    <member name="T:System.Web.Mvc.RazorViewEngine">
      <summary>Représente un moteur de vue permettant de restituer une page Web qui utilise la syntaxe ASP.NET Razor.</summary>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.RazorViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.#ctor(System.Web.Mvc.IViewPageActivator)"></member>
    <member name="M:System.Web.Mvc.RazorViewEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Crée une vue partielle à l'aide du contexte du contrôleur et du chemin d'accès partiel spécifiés.</summary>
      <returns>Vue partielle.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="partialPath">Chemin d'accès de la vue partielle.</param>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Crée un affichage à l'aide du contexte du contrôleur, du chemin d'accès de l'affichage et du chemin d'accès de l'affichage maître spécifiés.</summary>
      <returns>Vue.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="viewPath">Chemin d'accès de la vue.</param>
      <param name="masterPath">Chemin d'accès de la vue principale.</param>
    </member>
    <member name="T:System.Web.Mvc.RedirectResult">
      <summary>Contrôle le traitement des actions d'application en effectuant une redirection vers l'URI spécifié.</summary>
    </member>
    <member name="M:System.Web.Mvc.RedirectResult.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.RedirectResult" />.</summary>
      <param name="url">URL cible.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="url" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RedirectResult.#ctor(System.String,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.RedirectResult" /> à l'aide de l'URL et de l'indicateur de redirection permanente spécifiés.</summary>
      <param name="url">URL.</param>
      <param name="permanent">Valeur qui indique si la redirection est permanente.</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Permet le traitement du résultat d'une méthode d'action par un type personnalisé qui hérite de la classe <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Contexte dans lequel le résultat est exécuté.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="context" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.RedirectResult.Permanent">
      <summary>Obtient une valeur qui indique si la redirection est permanente.</summary>
      <returns>true si la redirection doit être permanente ; sinon, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.RedirectResult.Url">
      <summary>Obtient ou définit l'URL cible.</summary>
      <returns>URL cible.</returns>
    </member>
    <member name="T:System.Web.Mvc.RedirectToRouteResult">
      <summary>Représente un résultat qui effectue une redirection à l'aide du dictionnaire de valeurs d'itinéraire spécifié.</summary>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.#ctor(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.RedirectToRouteResult" /> en utilisant le nom d'itinéraire et les valeurs d'itinéraire spécifiés.</summary>
      <param name="routeName">Nom de l'itinéraire.</param>
      <param name="routeValues">Valeurs d'itinéraire.</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.#ctor(System.String,System.Web.Routing.RouteValueDictionary,System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.RedirectToRouteResult" /> à l'aide du nom d'itinéraire, des valeurs d'itinéraire et de l'indicateur de redirection permanente spécifiés.</summary>
      <param name="routeName">Nom de l'itinéraire.</param>
      <param name="routeValues">Valeurs d'itinéraire.</param>
      <param name="permanent">Valeur qui indique si la redirection est permanente.</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.#ctor(System.Web.Routing.RouteValueDictionary)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.RedirectToRouteResult" /> en utilisant les valeurs d'itinéraire spécifiées.</summary>
      <param name="routeValues">Valeurs d'itinéraire.</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Permet le traitement du résultat d'une méthode d'action par un type personnalisé qui hérite de la classe <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">Contexte dans lequel le résultat est exécuté.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="context" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.RedirectToRouteResult.Permanent">
      <summary>Obtient une valeur qui indique si la redirection est permanente.</summary>
      <returns>true si la redirection doit être permanente ; sinon, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.RedirectToRouteResult.RouteName">
      <summary>Obtient ou définit le nom de l'itinéraire.</summary>
      <returns>Nom de l'itinéraire.</returns>
    </member>
    <member name="P:System.Web.Mvc.RedirectToRouteResult.RouteValues">
      <summary>Obtient ou définit les valeurs d'itinéraire.</summary>
      <returns>Valeurs d'itinéraire.</returns>
    </member>
    <member name="T:System.Web.Mvc.ReflectedActionDescriptor">
      <summary>Contient des informations qui décrivent une méthode d'action reflétée.</summary>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.#ctor(System.Reflection.MethodInfo,System.String,System.Web.Mvc.ControllerDescriptor)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ReflectedActionDescriptor" />.</summary>
      <param name="methodInfo">Informations relatives à la méthode d'action.</param>
      <param name="actionName">Nom de l'action.</param>
      <param name="controllerDescriptor">Descripteur du contrôleur.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="methodInfo" /> ou <paramref name="controllerDescriptor" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="actionName" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.ActionName">
      <summary>Obtient le nom de l'action.</summary>
      <returns>Nom de l'action.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.ControllerDescriptor">
      <summary>Obtient le descripteur du contrôleur.</summary>
      <returns>Descripteur du contrôleur.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Exécute le contexte du contrôleur spécifié en utilisant les paramètres de méthode d'action spécifiés.</summary>
      <returns>Valeur de retour de l'action.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="parameters">Paramètres.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="parameters" /> ou <paramref name="controllerContext" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Retourne un tableau des attributs personnalisés définis pour ce membre, à l'exception des attributs nommés.</summary>
      <returns>Tableau d'attributs personnalisés ou tableau vide s'il n'existe aucun attribut personnalisé.</returns>
      <param name="inherit">true pour rechercher l'attribut personnalisé hérité dans la chaîne de hiérarchie ; sinon false.</param>
      <exception cref="T:System.TypeLoadException">Impossible de charger le type d'attribut personnalisé.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Il existe plusieurs attributs de type <paramref name="attributeType" /> défini pour ce membre.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Retourne un tableau des attributs personnalisés définis pour ce membre, identifiés par type.</summary>
      <returns>Tableau d'attributs personnalisés ou tableau vide s'il n'existe aucun attribut personnalisé.</returns>
      <param name="attributeType">Type des attributs personnalisés.</param>
      <param name="inherit">true pour rechercher l'attribut personnalisé hérité dans la chaîne de hiérarchie ; sinon false.</param>
      <exception cref="T:System.TypeLoadException">Impossible de charger le type d'attribut personnalisé.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Il existe plusieurs attributs de type <paramref name="attributeType" /> défini pour ce membre.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetParameters">
      <summary>Récupère les paramètres de la méthode d'action.</summary>
      <returns>Paramètres de la méthode d'action.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetSelectors">
      <summary>Récupère les sélecteurs d'action.</summary>
      <returns>Sélecteurs d'action.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Indique si une ou plusieurs instances d'un type d'attribut personnalisé sont définies pour ce membre.</summary>
      <returns>true si le type d'attribut personnalisé est défini pour ce membre ; sinon, false.</returns>
      <param name="attributeType">Type des attributs personnalisés.</param>
      <param name="inherit">true pour rechercher l'attribut personnalisé hérité dans la chaîne de hiérarchie ; sinon false.</param>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.MethodInfo">
      <summary>Obtient ou définit les informations relatives à la méthode d'action.</summary>
      <returns>Informations relatives à la méthode d'action.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.UniqueId">
      <summary>Obtient l'ID unique du descripteur de l'action reflété à l'aide de l'initialisation tardive.</summary>
      <returns>ID unique.</returns>
    </member>
    <member name="T:System.Web.Mvc.ReflectedControllerDescriptor">
      <summary>Contient des informations qui décrivent un contrôleur reflété.</summary>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ReflectedControllerDescriptor" />.</summary>
      <param name="controllerType">Type du contrôleur.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="controllerType" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ReflectedControllerDescriptor.ControllerType">
      <summary>Obtient le type du contrôleur.</summary>
      <returns>Type du contrôleur.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.FindAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Recherche l'action spécifiée pour le contexte du contrôleur spécifié.</summary>
      <returns>Informations relatives à l'action.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="actionName">Nom de l'action.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="controllerContext" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="actionName" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetCanonicalActions">
      <summary>Retourne la liste des actions pour le contrôleur.</summary>
      <returns>Liste de descripteurs d'action pour le contrôleur.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Retourne un tableau des attributs personnalisés définis pour ce membre, à l'exception des attributs nommés.</summary>
      <returns>Tableau d'attributs personnalisés ou tableau vide s'il n'existe aucun attribut personnalisé.</returns>
      <param name="inherit">true pour rechercher l'attribut personnalisé hérité dans la chaîne de hiérarchie ; sinon false.</param>
      <exception cref="T:System.TypeLoadException">Impossible de charger le type d'attribut personnalisé.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Il existe plusieurs attributs de type <paramref name="attributeType" /> défini pour ce membre.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Retourne un tableau des attributs personnalisés définis pour ce membre, identifiés par type.</summary>
      <returns>Tableau d'attributs personnalisés ou tableau vide s'il n'existe aucun attribut personnalisé.</returns>
      <param name="attributeType">Type des attributs personnalisés.</param>
      <param name="inherit">true pour rechercher l'attribut personnalisé hérité dans la chaîne de hiérarchie ; sinon false.</param>
      <exception cref="T:System.TypeLoadException">Impossible de charger le type d'attribut personnalisé.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Il existe plusieurs attributs de type <paramref name="attributeType" /> défini pour ce membre.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Retourne une valeur qui indique si une ou plusieurs instances d'un type d'attribut personnalisé sont définies pour ce membre.</summary>
      <returns>true si le type d'attribut personnalisé est défini pour ce membre ; sinon, false.</returns>
      <param name="attributeType">Type des attributs personnalisés.</param>
      <param name="inherit">true pour rechercher l'attribut personnalisé hérité dans la chaîne de hiérarchie ; sinon false.</param>
    </member>
    <member name="T:System.Web.Mvc.ReflectedParameterDescriptor">
      <summary>Contient des informations qui décrivent un paramètre de méthode d'action reflété.</summary>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.#ctor(System.Reflection.ParameterInfo,System.Web.Mvc.ActionDescriptor)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ReflectedParameterDescriptor" />.</summary>
      <param name="parameterInfo">Informations du paramètre.</param>
      <param name="actionDescriptor">Descripteur de l'action.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="parameterInfo" /> ou <paramref name="actionDescriptor" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ActionDescriptor">
      <summary>Obtient le descripteur de l'action.</summary>
      <returns>Descripteur de l'action.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.BindingInfo">
      <summary>Obtient les informations de liaison.</summary>
      <returns>Informations de liaison.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.DefaultValue">
      <summary>Obtient la valeur par défaut du paramètre reflété.</summary>
      <returns>Valeur par défaut du paramètre reflété.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Retourne un tableau des attributs personnalisés définis pour ce membre, à l'exception des attributs nommés.</summary>
      <returns>Tableau d'attributs personnalisés ou tableau vide s'il n'existe aucun attribut personnalisé.</returns>
      <param name="inherit">true pour rechercher l'attribut personnalisé hérité dans la chaîne de hiérarchie ; sinon false.</param>
      <exception cref="T:System.TypeLoadException">Impossible de charger le type d'attribut personnalisé.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Il existe plusieurs attributs de type <paramref name="attributeType" /> défini pour ce membre.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Retourne un tableau des attributs personnalisés définis pour ce membre, identifiés par type.</summary>
      <returns>Tableau d'attributs personnalisés ou tableau vide s'il n'existe aucun attribut personnalisé.</returns>
      <param name="attributeType">Type des attributs personnalisés.</param>
      <param name="inherit">true pour rechercher l'attribut personnalisé hérité dans la chaîne de hiérarchie ; sinon false.</param>
      <exception cref="T:System.TypeLoadException">Impossible de charger le type d'attribut personnalisé.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Il existe plusieurs attributs de type <paramref name="attributeType" /> défini pour ce membre.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Retourne une valeur qui indique si une ou plusieurs instances d'un type d'attribut personnalisé sont définies pour ce membre.</summary>
      <returns>true si le type d'attribut personnalisé est défini pour ce membre ; sinon, false.</returns>
      <param name="attributeType">Type des attributs personnalisés.</param>
      <param name="inherit">true pour rechercher l'attribut personnalisé hérité dans la chaîne de hiérarchie ; sinon false.</param>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ParameterInfo">
      <summary>Obtient ou définit les informations du paramètre.</summary>
      <returns>Informations du paramètre.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ParameterName">
      <summary>Obtient le nom du paramètre.</summary>
      <returns>Nom du paramètre.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ParameterType">
      <summary>Obtient le type du paramètre.</summary>
      <returns>Type du paramètre.</returns>
    </member>
    <member name="T:System.Web.Mvc.RegularExpressionAttributeAdapter">
      <summary>Fournit un adaptateur pour l'attribut <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RegularExpressionAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.RegularExpressionAttribute)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.RegularExpressionAttributeAdapter" />.</summary>
      <param name="metadata">Métadonnées du modèle.</param>
      <param name="context">Contexte du contrôleur.</param>
      <param name="attribute">Attribut de l'expression régulière.</param>
    </member>
    <member name="M:System.Web.Mvc.RegularExpressionAttributeAdapter.GetClientValidationRules">
      <summary>Obtient la liste de règles de validation client de l'expression régulière.</summary>
      <returns>Liste de règles de validation client de l'expression régulière.</returns>
    </member>
    <member name="T:System.Web.Mvc.RemoteAttribute">
      <summary>Fournit un attribut qui utilise le validateur à distance du plug-in de validation jQuery. </summary>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.RemoteAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.RemoteAttribute" /> à l'aide du nom d'itinéraire spécifié.</summary>
      <param name="routeName">Nom de l'itinéraire.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.RemoteAttribute" /> en utilisant le nom de méthode d'action et le nom de contrôleur spécifiés.</summary>
      <param name="action">Nom de la méthode d'action.</param>
      <param name="controller">Nom du contrôleur.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.RemoteAttribute" /> en utilisant le nom de méthode d'action, le nom de contrôleur et le nom de zone spécifiés.</summary>
      <param name="action">Nom de la méthode d'action.</param>
      <param name="controller">Nom du contrôleur.</param>
      <param name="areaName">Nom de la zone.</param>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.Fields">
      <summary>Obtient ou définit les champs requis pour la validation.</summary>
      <returns>Champs requis pour la validation.</returns>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.FormatErrorMessage(System.String)">
      <summary>Met en forme le message d'erreur affiché en cas d'échec de la validation.</summary>
      <returns>Message d'erreur mis en forme.</returns>
      <param name="name">Nom à afficher avec le message d'erreur.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.FormatFieldsForClientValidation(System.String)">
      <summary>Retourne une chaîne délimitée par des virgules de noms de champs de validation.</summary>
      <returns>Chaîne délimitée par des virgules de noms de champs de validation.</returns>
      <param name="property">Nom de la propriété de validation.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.FormatPropertyForClientValidation(System.String)">
      <summary>Met en forme la propriété pour la validation côté client en la faisant précéder d'un astérisque (*) et d'un point.</summary>
      <returns>Chaîne « *. » Est ajouté au début de la propriété.</returns>
      <param name="property">Propriété.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.GetClientValidationRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Obtient la liste de règles de validation du client distant pour la propriété.</summary>
      <returns>Liste de règles de validation du client distant pour la propriété.</returns>
      <param name="metadata">Métadonnées du modèle.</param>
      <param name="context">Contexte du contrôleur.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.GetUrl(System.Web.Mvc.ControllerContext)">
      <summary>Obtient l'URL pour l'appel de la validation à distance.</summary>
      <returns>URL pour l'appel de la validation à distance.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.HttpMethod">
      <summary>Obtient ou définit la méthode HTTP utilisée pour la validation à distance.</summary>
      <returns>Méthode HTTP utilisée pour la validation à distance. La valeur par défaut est Get.</returns>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.IsValid(System.Object)">
      <summary>Cette méthode retourne toujours true.</summary>
      <returns>true</returns>
      <param name="value">Cible de validation.</param>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.RouteData">
      <summary>Obtient le dictionnaire de données d'itinéraires.</summary>
      <returns>Dictionnaire de données d'itinéraires.</returns>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.RouteName">
      <summary>Obtient ou définit le nom de l'itinéraire.</summary>
      <returns>Nom de l'itinéraire.</returns>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.Routes">
      <summary>Obtient de la table d'itinéraires la collection d'itinéraires.</summary>
      <returns>Collection d'itinéraires de la table d'itinéraires.</returns>
    </member>
    <member name="T:System.Web.Mvc.RequiredAttributeAdapter">
      <summary>Fournit un adaptateur pour l'attribut <see cref="T:System.Runtime.CompilerServices.RequiredAttributeAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RequiredAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.RequiredAttribute)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.CompilerServices.RequiredAttributeAttribute" />.</summary>
      <param name="metadata">Métadonnées du modèle.</param>
      <param name="context">Contexte du contrôleur.</param>
      <param name="attribute">Attribut requis.</param>
    </member>
    <member name="M:System.Web.Mvc.RequiredAttributeAdapter.GetClientValidationRules">
      <summary>Obtient une liste de règles de validation client de valeur obligatoire.</summary>
      <returns>Liste de règles de validation client de valeur obligatoire.</returns>
    </member>
    <member name="T:System.Web.Mvc.RequireHttpsAttribute">
      <summary>Représente un attribut qui force le renvoi d'une requête HTTP non protégée via HTTPS.</summary>
    </member>
    <member name="M:System.Web.Mvc.RequireHttpsAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.RequireHttpsAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RequireHttpsAttribute.HandleNonHttpsRequest(System.Web.Mvc.AuthorizationContext)">
      <summary>Gère les requêtes HTTP non sécurisées qui sont envoyées à la méthode d'action.</summary>
      <param name="filterContext">Objet qui encapsule les informations requises pour l'utilisation de l'attribut <see cref="T:System.Web.Mvc.RequireHttpsAttribute" />.</param>
      <exception cref="T:System.InvalidOperationException">La requête HTTP contient une substitution de méthode de transfert non valide. Toutes les requêtes GET sont considérées comme non valides.</exception>
    </member>
    <member name="M:System.Web.Mvc.RequireHttpsAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Détermine si une requête est sécurisée (HTTPS) et, si elle ne l'est pas, appelle la méthode <see cref="M:System.Web.Mvc.RequireHttpsAttribute.HandleNonHttpsRequest(System.Web.Mvc.AuthorizationContext)" />.</summary>
      <param name="filterContext">Objet qui encapsule les informations requises pour l'utilisation de l'attribut <see cref="T:System.Web.Mvc.RequireHttpsAttribute" />.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="filterContext" /> a la valeur null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ResultExecutedContext">
      <summary>Fournit le contexte de la méthode <see cref="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)" /> de la classe <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutedContext.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ResultExecutedContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutedContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionResult,System.Boolean,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ResultExecutedContext" />.</summary>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="result">Objet résultat.</param>
      <param name="canceled">true pour annuler l'exécution ; sinon, false.</param>
      <param name="exception">L'objet exception.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="result" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.Canceled">
      <summary>Obtient ou définit une valeur qui indique si cette instance de <see cref="T:System.Web.Mvc.ResultExecutedContext" /> est annulée.</summary>
      <returns>true si l'instance est annulée ; sinon false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.Exception">
      <summary>Obtient ou définit l'objet exception.</summary>
      <returns>L'objet exception.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.ExceptionHandled">
      <summary>Obtient ou définit une valeur qui indique si l'exception a été gérée.</summary>
      <returns>true si l'exception a été gérée ; sinon, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.Result">
      <summary>Obtient ou définit le résultat de l'action.</summary>
      <returns>Résultat de l'action.</returns>
    </member>
    <member name="T:System.Web.Mvc.ResultExecutingContext">
      <summary>Fournit le contexte de la méthode <see cref="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)" /> de la classe <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutingContext.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ResultExecutingContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutingContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionResult)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ResultExecutingContext" /> en utilisant le contexte du contrôleur et le résultat d'action spécifiés.</summary>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="result">Résultat de l'action.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="result" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutingContext.Cancel">
      <summary>Obtient ou définit une valeur qui indique si cette valeur <see cref="T:System.Web.Mvc.ResultExecutingContext" /> est « cancel ».</summary>
      <returns>true si la valeur est « cancel » ; sinon, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutingContext.Result">
      <summary>Obtient ou définit le résultat de l'action.</summary>
      <returns>Résultat de l'action.</returns>
    </member>
    <member name="T:System.Web.Mvc.RouteCollectionExtensions">
      <summary>Étend un objet <see cref="T:System.Web.Routing.RouteCollection" /> pour le routage MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.GetVirtualPathForArea(System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Retourne un objet qui contient les informations relatives à l'itinéraire et au chemin d'accès virtuel qui sont le résultat de la génération d'une URL dans la zone actuelle.</summary>
      <returns>Objet qui contient les informations relatives à l'itinéraire et au chemin d'accès virtuel qui sont le résultat de la génération d'une URL dans la zone actuelle.</returns>
      <param name="routes">Objet qui contient les itinéraires des applications.</param>
      <param name="requestContext">Objet qui encapsule des informations sur l'itinéraire demandé.</param>
      <param name="name">Nom de l'itinéraire à utiliser lorsque les informations sur le chemin d'accès d'URL sont extraites.</param>
      <param name="values">Objet qui contient les paramètres d'un itinéraire.</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.GetVirtualPathForArea(System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)">
      <summary>Retourne un objet qui contient les informations relatives à l'itinéraire et au chemin d'accès virtuel qui sont le résultat de la génération d'une URL dans la zone actuelle.</summary>
      <returns>Objet qui contient les informations relatives à l'itinéraire et au chemin d'accès virtuel qui sont le résultat de la génération d'une URL dans la zone actuelle.</returns>
      <param name="routes">Objet qui contient les itinéraires des applications.</param>
      <param name="requestContext">Objet qui encapsule des informations sur l'itinéraire demandé.</param>
      <param name="values">Objet qui contient les paramètres d'un itinéraire.</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.IgnoreRoute(System.Web.Routing.RouteCollection,System.String)">
      <summary>Ignore l'itinéraire d'URL spécifié pour la liste donnée des itinéraires disponibles.</summary>
      <param name="routes">Collection d'itinéraires de l'application.</param>
      <param name="url">Modèle d'URL de l'itinéraire à ignorer.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="routes" /> ou <paramref name="url" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.IgnoreRoute(System.Web.Routing.RouteCollection,System.String,System.Object)">
      <summary>Ignore l'itinéraire d'URL spécifié pour la liste donnée des itinéraires disponibles et une liste de contraintes.</summary>
      <param name="routes">Collection d'itinéraires de l'application.</param>
      <param name="url">Modèle d'URL de l'itinéraire à ignorer.</param>
      <param name="constraints">Ensemble d'expressions qui spécifient des valeurs pour le paramètre <paramref name="url" />.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="routes" /> ou <paramref name="url" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String)">
      <summary>Mappe l'itinéraire de l'URL spécifiée.</summary>
      <returns>Référence à l'itinéraire mappé.</returns>
      <param name="routes">Collection d'itinéraires de l'application.</param>
      <param name="name">Nom de l'itinéraire à mapper.</param>
      <param name="url">Modèle d'URL pour l'itinéraire.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="routes" /> ou <paramref name="url" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object)">
      <summary>Mappe l'itinéraire d'URL spécifié et définit des valeurs d'itinéraire par défaut.</summary>
      <returns>Référence à l'itinéraire mappé.</returns>
      <param name="routes">Collection d'itinéraires de l'application.</param>
      <param name="name">Nom de l'itinéraire à mapper.</param>
      <param name="url">Modèle d'URL pour l'itinéraire.</param>
      <param name="defaults">Objet qui contient les valeurs d'itinéraire par défaut.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="routes" /> ou <paramref name="url" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.Object)">
      <summary>Mappe l'itinéraire d'URL spécifié et définit des valeurs d'itinéraire par défaut et des contraintes.</summary>
      <returns>Référence à l'itinéraire mappé.</returns>
      <param name="routes">Collection d'itinéraires de l'application.</param>
      <param name="name">Nom de l'itinéraire à mapper.</param>
      <param name="url">Modèle d'URL pour l'itinéraire.</param>
      <param name="defaults">Objet qui contient les valeurs d'itinéraire par défaut.</param>
      <param name="constraints">Ensemble d'expressions qui spécifient des valeurs pour le paramètre <paramref name="url" />.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="routes" /> ou <paramref name="url" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.Object,System.String[])">
      <summary>Mappe l'itinéraire d'URL spécifié et définit des valeurs d'itinéraire par défaut, des contraintes et des espaces de noms.</summary>
      <returns>Référence à l'itinéraire mappé.</returns>
      <param name="routes">Collection d'itinéraires de l'application.</param>
      <param name="name">Nom de l'itinéraire à mapper.</param>
      <param name="url">Modèle d'URL pour l'itinéraire.</param>
      <param name="defaults">Objet qui contient les valeurs d'itinéraire par défaut.</param>
      <param name="constraints">Ensemble d'expressions qui spécifient des valeurs pour le paramètre <paramref name="url" />.</param>
      <param name="namespaces">Ensemble d'espaces de noms de l'application.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="routes" /> ou <paramref name="url" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.String[])">
      <summary>Mappe l'itinéraire d'URL spécifié et définit des valeurs d'itinéraire par défaut et des espaces de noms.</summary>
      <returns>Référence à l'itinéraire mappé.</returns>
      <param name="routes">Collection d'itinéraires de l'application.</param>
      <param name="name">Nom de l'itinéraire à mapper.</param>
      <param name="url">Modèle d'URL pour l'itinéraire.</param>
      <param name="defaults">Objet qui contient les valeurs d'itinéraire par défaut.</param>
      <param name="namespaces">Ensemble d'espaces de noms de l'application.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="routes" /> ou <paramref name="url" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.String[])">
      <summary>Mappe l'itinéraire d'URL spécifié et définit les espaces de noms.</summary>
      <returns>Référence à l'itinéraire mappé.</returns>
      <param name="routes">Collection d'itinéraires de l'application.</param>
      <param name="name">Nom de l'itinéraire à mapper.</param>
      <param name="url">Modèle d'URL pour l'itinéraire.</param>
      <param name="namespaces">Ensemble d'espaces de noms de l'application.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="routes" /> ou <paramref name="url" /> a la valeur null.</exception>
    </member>
    <member name="T:System.Web.Mvc.RouteDataValueProvider">
      <summary>Représente un fournisseur de valeur pour les données d'itinéraire contenues dans un objet qui implémente l'interface <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteDataValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.RouteDataValueProvider" />.</summary>
      <param name="controllerContext">Objet qui contient des informations sur la requête HTTP.</param>
    </member>
    <member name="T:System.Web.Mvc.RouteDataValueProviderFactory">
      <summary>Représente une fabrique pour la création d'objets de fournisseur de valeur de données d'itinéraire.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteDataValueProviderFactory.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.RouteDataValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteDataValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Retourne un objet de fournisseur de valeur pour le contexte de contrôleur spécifié.</summary>
      <returns>Objet de fournisseur de valeur.</returns>
      <param name="controllerContext">Objet qui encapsule des informations sur la requête HTTP en cours.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="controllerContext" /> a la valeur null.</exception>
    </member>
    <member name="T:System.Web.Mvc.SelectList">
      <summary>Représente une liste qui permet aux utilisateurs de sélectionner un élément.</summary>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.SelectList" /> en utilisant les éléments spécifiés pour la liste.</summary>
      <param name="items">Éléments.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.Object)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.SelectList" /> en utilisant les éléments spécifiés pour la liste et une valeur sélectionnée.</summary>
      <param name="items">Éléments.</param>
      <param name="selectedValue">Valeur sélectionnée.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.SelectList" /> en utilisant les éléments spécifiés pour la liste, le champ de valeur des données et le champ de texte des données.</summary>
      <param name="items">Éléments.</param>
      <param name="dataValueField">Champ de valeur des données.</param>
      <param name="dataTextField">Champ de texte des données.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Object)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.SelectList" /> en utilisant les éléments spécifiés pour la liste, le champ de valeur des données, le champ de texte des données et une valeur sélectionnée.</summary>
      <param name="items">Éléments.</param>
      <param name="dataValueField">Champ de valeur des données.</param>
      <param name="dataTextField">Champ de texte des données.</param>
      <param name="selectedValue">Valeur sélectionnée.</param>
    </member>
    <member name="P:System.Web.Mvc.SelectList.SelectedValue">
      <summary>Obtient la valeur de liste qui a été sélectionnée par l'utilisateur.</summary>
      <returns>Valeur sélectionnée.</returns>
    </member>
    <member name="T:System.Web.Mvc.SelectListItem">
      <summary>Représente l'élément sélectionné dans une instance de la classe <see cref="T:System.Web.Mvc.SelectList" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.SelectListItem.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.SelectListItem" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Selected">
      <summary>Obtient ou définit une valeur qui indique si <see cref="T:System.Web.Mvc.SelectListItem" /> est sélectionné.</summary>
      <returns>true si l'élément est sélectionné ; sinon, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Text">
      <summary>Obtient ou définit le texte de l'élément sélectionné.</summary>
      <returns>Texte.</returns>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Value">
      <summary>Obtient ou définit la valeur de l'élément sélectionné.</summary>
      <returns>Valeur.</returns>
    </member>
    <member name="T:System.Web.Mvc.SessionStateTempDataProvider">
      <summary>Fournit des données d'état de session à l'objet <see cref="T:System.Web.Mvc.TempDataDictionary" /> actif.</summary>
    </member>
    <member name="M:System.Web.Mvc.SessionStateTempDataProvider.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.SessionStateTempDataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.SessionStateTempDataProvider.LoadTempData(System.Web.Mvc.ControllerContext)">
      <summary>Charge les données temporaires à l'aide du contexte du contrôleur spécifié.</summary>
      <returns>Données temporaires.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors de la récupération du contexte de session.</exception>
    </member>
    <member name="M:System.Web.Mvc.SessionStateTempDataProvider.SaveTempData(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Enregistre les valeurs spécifiées dans le dictionnaire de données temporaires à l'aide du contexte du contrôleur spécifié.</summary>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="values">Valeurs.</param>
      <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors de la récupération du contexte de session.</exception>
    </member>
    <member name="T:System.Web.Mvc.SkipRequestValidationAttribute">
      <summary>Ignore la validation des demandes pour la propriété.</summary>
    </member>
    <member name="M:System.Web.Mvc.SkipRequestValidationAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.SkipRequestValidationAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.SkipRequestValidationAttribute.OnMetadataCreated(System.Web.Mvc.ModelMetadata)">
      <summary>Cette méthode prend en charge l'infrastructure de validation ASP.NET MVC et n'est pas conçue pour être directement utilisée à partir de votre code.</summary>
      <param name="metadata">Métadonnées du modèle.</param>
    </member>
    <member name="T:System.Web.Mvc.StringLengthAttributeAdapter">
      <summary>Fournit un adaptateur pour l'attribut <see cref="T:System.ComponentModel.DataAnnotations.StringLengthAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.StringLengthAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.StringLengthAttribute)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.StringLengthAttributeAdapter" />.</summary>
      <param name="metadata">Métadonnées du modèle.</param>
      <param name="context">Contexte du contrôleur.</param>
      <param name="attribute">Attribut de la longueur de chaîne.</param>
    </member>
    <member name="M:System.Web.Mvc.StringLengthAttributeAdapter.GetClientValidationRules">
      <summary>Obtient la liste des règles de validation client de la longueur de chaîne.</summary>
      <returns>Liste des règles de validation client de la longueur de chaîne.</returns>
    </member>
    <member name="T:System.Web.Mvc.TempDataDictionary">
      <summary>Représente un groupe de données qui persiste uniquement d'une requête à l'autre.</summary>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.TempDataDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Add(System.String,System.Object)">
      <summary>Ajoute un élément qui a la clé et la valeur spécifiées à l'objet <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <param name="key">Clé de l'élément à ajouter.</param>
      <param name="value">Valeur de l'élément à ajouter.</param>
      <exception cref="T:System.NotSupportedException">L'objet <see cref="T:System.Collections.Generic.IDictionary`2" /> est en lecture seule.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">Un élément possédant la même clé existe déjà dans l'objet <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Clear">
      <summary>Supprime tous les éléments de l'instance de <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <exception cref="T:System.NotSupportedException">L'objet <see cref="T:System.Collections.Generic.ICollection`1" /> est en lecture seule.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.ContainsKey(System.String)">
      <summary>Détermine si l'instance de <see cref="T:System.Collections.Generic.IDictionary`2" /> contient un élément ayant la clé spécifiée.</summary>
      <returns>true si l'instance de <see cref="T:System.Collections.Generic.IDictionary`2" /> contient un élément qui possède la clé spécifiée ; sinon, false.</returns>
      <param name="key">Clé à rechercher dans l'instance de <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.ContainsValue(System.Object)">
      <summary>Détermine si le dictionnaire contient la valeur spécifiée.</summary>
      <returns>true si le dictionnaire contient la valeur spécifiée ; sinon, false.</returns>
      <param name="value">Valeur.</param>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Count">
      <summary>Obtient le nombre d'éléments dans l'objet <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <returns>Nombre d'éléments dans l'objet <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.GetEnumerator">
      <summary>Obtient l'énumérateur.</summary>
      <returns>Énumérateur.</returns>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Item(System.String)">
      <summary>Obtient ou définit l'objet qui contient la clé spécifiée.</summary>
      <returns>Objet qui contient la clé spécifiée.</returns>
      <param name="key">Clé pour l'accès.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Keep">
      <summary>Marque toutes les clés dans le dictionnaire pour la rétention.</summary>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Keep(System.String)">
      <summary>Marque la clé spécifiée dans le dictionnaire pour la rétention.</summary>
      <param name="key">Clé à conserver dans le dictionnaire.</param>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Keys">
      <summary>Obtient un objet <see cref="T:System.Collections.Generic.ICollection`1" /> qui contient les clés des éléments dans l'objet <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Clés des éléments dans l'objet <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Load(System.Web.Mvc.ControllerContext,System.Web.Mvc.ITempDataProvider)">
      <summary>Charge le contexte du contrôleur spécifié à l'aide du fournisseur de données spécifié.</summary>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="tempDataProvider">Fournisseur de données temporaires.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Peek(System.String)">
      <summary>Retourne un objet qui contient l'élément associé à la clé spécifiée, sans marquer la clé pour la suppression.</summary>
      <returns>Objet qui contient l'élément associé à la clé spécifiée.</returns>
      <param name="key">Clé de l'élément à retourner.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Remove(System.String)">
      <summary>Supprime de l'objet <see cref="T:System.Collections.Generic.IDictionary`2" /> l'élément comportant la clé spécifiée.</summary>
      <returns>true si l'élément a été correctement supprimé ; sinon, false. Cette méthode retourne également false si <paramref name="key" /> est introuvable dans l'instance de <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
      <param name="key">Clé de l'élément à supprimer.</param>
      <exception cref="T:System.NotSupportedException">L'objet <see cref="T:System.Collections.Generic.IDictionary`2" /> est en lecture seule.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Save(System.Web.Mvc.ControllerContext,System.Web.Mvc.ITempDataProvider)">
      <summary>Enregistre le contexte du contrôleur spécifié à l'aide du fournisseur de données spécifié.</summary>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="tempDataProvider">Fournisseur de données temporaires.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Ajoute la paire clé/valeur spécifiée au dictionnaire.</summary>
      <param name="keyValuePair">Paire clé/valeur.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Détermine si une séquence contient un élément spécifié à l'aide du comparateur d'égalité par défaut.</summary>
      <returns>true si le dictionnaire contient la paire clé/valeur spécifiée ; sinon, false.</returns>
      <param name="keyValuePair">Paire clé/valeur à rechercher.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Copie une paire clé/valeur dans le tableau spécifié à l'index spécifié.</summary>
      <param name="array">Tableau cible.</param>
      <param name="index">Index.</param>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Obtient une valeur indiquant si le dictionnaire est en lecture seule.</summary>
      <returns>true si le dictionnaire est en lecture seule ; sinon, false.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Supprime la paire clé/valeur spécifiée du dictionnaire.</summary>
      <returns>true si la paire clé/valeur est correctement supprimée ; sinon, false.</returns>
      <param name="keyValuePair">Paire clé/valeur.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retourne un énumérateur qui peut être utilisé pour itérer au sein d'une collection.</summary>
      <returns>Objet <see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour itérer au sein de la collection.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.TryGetValue(System.String,System.Object@)">
      <summary>Obtient la valeur de l'élément qui contient la clé spécifiée.</summary>
      <returns>true si l'objet qui implémente <see cref="T:System.Collections.Generic.IDictionary`2" /> contient un élément comportant la clé spécifiée ; sinon, false.</returns>
      <param name="key">Clé de la valeur à obtenir.</param>
      <param name="value">Lorsque cette méthode est retournée, valeur associée à la clé spécifiée, si la clé est trouvée ; sinon, valeur par défaut pour le type du paramètre <paramref name="value" />. Ce paramètre est passé sans être initialisé.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Values">
      <summary>Obtient l'objet <see cref="T:System.Collections.Generic.ICollection`1" /> qui contient les valeurs dans l'objet <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Valeurs des éléments dans l'objet qui implémente <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.TemplateInfo">
      <summary>Encapsule les informations relatives au contexte de modèle actuel.</summary>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.TemplateInfo" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.TemplateInfo.FormattedModelValue">
      <summary>Obtient ou définit la valeur de modèle mise en forme.</summary>
      <returns>Valeur de modèle mise en forme.</returns>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.GetFullHtmlFieldId(System.String)">
      <summary>Récupère l'ID DOM complet d'un champ à l'aide de l'attribut HTML name spécifié.</summary>
      <returns>ID DOM complet.</returns>
      <param name="partialFieldName">Valeur de l'attribut HTML name.</param>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.GetFullHtmlFieldName(System.String)">
      <summary>Extrait le nom qualifié complet (notamment un préfixe) d'un champ à l'aide de l'attribut HTML name spécifié.</summary>
      <returns>Nom avec préfixe du champ.</returns>
      <param name="partialFieldName">Valeur de l'attribut HTML name.</param>
    </member>
    <member name="P:System.Web.Mvc.TemplateInfo.HtmlFieldPrefix">
      <summary>Obtient ou définit le préfixe de champ HTML.</summary>
      <returns>Préfixe de champ HTML.</returns>
    </member>
    <member name="P:System.Web.Mvc.TemplateInfo.TemplateDepth">
      <summary>Contient le nombre d'objets visités par l'utilisateur.</summary>
      <returns>Nombre d'objets.</returns>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.Visited(System.Web.Mvc.ModelMetadata)">
      <summary>Détermine si le modèle a été visité par l'utilisateur.</summary>
      <returns>true si le modèle a été visité par l'utilisateur ; sinon, false.</returns>
      <param name="metadata">Objet qui encapsule des informations décrivant le modèle.</param>
    </member>
    <member name="T:System.Web.Mvc.UrlHelper">
      <summary>Contient des méthodes pour générer des URL pour MVC ASP.NET dans une application.</summary>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.#ctor(System.Web.Routing.RequestContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.UrlHelper" /> en utilisant le contexte de requête spécifié.</summary>
      <param name="requestContext">Objet qui contient des informations sur la requête actuelle et l'itinéraire correspondant.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="requestContext" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.#ctor(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.UrlHelper" /> en utilisant le contexte de requête et la collection d'itinéraires spécifiés.</summary>
      <param name="requestContext">Objet qui contient des informations sur la requête actuelle et l'itinéraire correspondant.</param>
      <param name="routeCollection">Collection d'itinéraires.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="requestContext" /> ou <paramref name="routeCollection" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String)">
      <summary>Génère une URL qualifiée complète pour une méthode d'action à l'aide du nom d'action spécifié.</summary>
      <returns>URL qualifiée complète d'une méthode d'action.</returns>
      <param name="actionName">Nom de la méthode d'action.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.Object)">
      <summary>Génère une URL qualifiée complète pour une méthode d'action à l'aide du nom d'action et des valeurs d'itinéraire spécifiés.</summary>
      <returns>URL qualifiée complète d'une méthode d'action.</returns>
      <param name="actionName">Nom de la méthode d'action.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. L'objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String)">
      <summary>Génère une URL qualifiée complète pour une méthode d'action à l'aide du nom d'action et du nom de contrôleur spécifiés.</summary>
      <returns>URL qualifiée complète d'une méthode d'action.</returns>
      <param name="actionName">Nom de la méthode d'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Object)">
      <summary>Génère une URL qualifiée complète pour une méthode d'action à l'aide du nom d'action, du nom de contrôleur et des valeurs d'itinéraire spécifiés.</summary>
      <returns>URL qualifiée complète d'une méthode d'action.</returns>
      <param name="actionName">Nom de la méthode d'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. L'objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Object,System.String)">
      <summary>Génère une URL qualifiée complète pour une méthode d'action à l'aide du nom d'action, du nom de contrôleur, des valeurs d'itinéraire et du protocole spécifiés.</summary>
      <returns>URL qualifiée complète d'une méthode d'action.</returns>
      <param name="actionName">Nom de la méthode d'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. L'objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
      <param name="protocol">Protocole de l'URL, par exemple "http" ou "https".</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Génère une URL qualifiée complète pour une méthode d'action à l'aide du nom d'action, du nom de contrôleur et des valeurs d'itinéraire spécifiés.</summary>
      <returns>URL qualifiée complète d'une méthode d'action.</returns>
      <param name="actionName">Nom de la méthode d'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Web.Routing.RouteValueDictionary,System.String,System.String)">
      <summary>Génère une URL qualifiée complète pour une méthode d'action à l'aide du nom d'action, du nom de contrôleur, des valeurs d'itinéraire, du protocole et du nom d'hôte spécifiés.</summary>
      <returns>URL qualifiée complète d'une méthode d'action.</returns>
      <param name="actionName">Nom de la méthode d'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
      <param name="protocol">Protocole de l'URL, par exemple "http" ou "https".</param>
      <param name="hostName">Nom d'hôte de l'URL.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Génère l'URL qualifiée complète d'une méthode d'action pour le nom d'action et les valeurs d'itinéraire spécifiés.</summary>
      <returns>URL qualifiée complète d'une méthode d'action.</returns>
      <param name="actionName">Nom de la méthode d'action.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Content(System.String)">
      <summary>Convertit un chemin d'accès (relatif) virtuel en chemin d'accès absolu d'application.</summary>
      <returns>Chemin d'accès absolu de l'application.</returns>
      <param name="contentPath">Chemin d'accès virtuel du contenu.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Encode(System.String)">
      <summary>Encode les caractères spéciaux d'une chaîne d'URL en entités de caractères équivalentes.</summary>
      <returns>Chaîne d'URL encodée.</returns>
      <param name="url">Texte à encoder.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.GenerateContentUrl(System.String,System.Web.HttpContextBase)">
      <summary>Retourne une chaîne qui contient une URL de contenu.</summary>
      <returns>Chaîne qui contient une URL de contenu.</returns>
      <param name="contentPath">Chemin d'accès au contenu.</param>
      <param name="httpContext">Contexte HTTP.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.GenerateUrl(System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.Boolean)">
      <summary>Retourne une chaîne qui contient une URL.</summary>
      <returns>Chaîne qui contient une URL.</returns>
      <param name="routeName">Nom de l'itinéraire.</param>
      <param name="actionName">Nom de l'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="protocol">Protocole HTTP.</param>
      <param name="hostName">Nom de l'hôte.</param>
      <param name="fragment">Fragment.</param>
      <param name="routeValues">Valeurs d'itinéraire.</param>
      <param name="routeCollection">Collection d'itinéraires.</param>
      <param name="requestContext">Contexte de la requête.</param>
      <param name="includeImplicitMvcValues">true pour inclure des valeurs MVC implicites ; sinon false.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.GenerateUrl(System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.Boolean)">
      <summary>Retourne une chaîne qui contient une URL.</summary>
      <returns>Chaîne qui contient une URL.</returns>
      <param name="routeName">Nom de l'itinéraire.</param>
      <param name="actionName">Nom de l'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="routeValues">Valeurs d'itinéraire.</param>
      <param name="routeCollection">Collection d'itinéraires.</param>
      <param name="requestContext">Contexte de la requête.</param>
      <param name="includeImplicitMvcValues">true pour inclure des valeurs MVC implicites ; sinon false.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.IsLocalUrl(System.String)"></member>
    <member name="P:System.Web.Mvc.UrlHelper.RequestContext">
      <summary>Obtient des informations sur une requête HTTP qui correspond à un itinéraire défini.</summary>
      <returns>Contexte de la requête.</returns>
    </member>
    <member name="P:System.Web.Mvc.UrlHelper.RouteCollection">
      <summary>Obtient une collection qui contient les itinéraires inscrits pour l'application.</summary>
      <returns>Collection d'itinéraires.</returns>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.Object)">
      <summary>Génère une URL qualifiée complète pour les valeurs d'itinéraire spécifiées.</summary>
      <returns>URL qualifiée complète.</returns>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. L'objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String)">
      <summary>Génère une URL qualifiée complète pour le nom d'itinéraire spécifié.</summary>
      <returns>URL qualifiée complète.</returns>
      <param name="routeName">Nom de l'itinéraire utilisé pour générer l'URL.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Object)">
      <summary>Génère une URL qualifiée complète pour les valeurs d'itinéraire spécifiées à l'aide d'un nom d'itinéraire.</summary>
      <returns>URL qualifiée complète.</returns>
      <param name="routeName">Nom de l'itinéraire utilisé pour générer l'URL.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. L'objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Object,System.String)">
      <summary>Génère une URL qualifiée complète pour les valeurs d'itinéraire spécifiées à l'aide d'un nom d'itinéraire et du protocole à utiliser.</summary>
      <returns>URL qualifiée complète.</returns>
      <param name="routeName">Nom de l'itinéraire utilisé pour générer l'URL.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. L'objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
      <param name="protocol">Protocole de l'URL, par exemple "http" ou "https".</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Génère une URL qualifiée complète pour les valeurs d'itinéraire spécifiées à l'aide d'un nom d'itinéraire.</summary>
      <returns>URL qualifiée complète.</returns>
      <param name="routeName">Nom de l'itinéraire utilisé pour générer l'URL.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Web.Routing.RouteValueDictionary,System.String,System.String)">
      <summary>Génère une URL qualifiée complète pour les valeurs d'itinéraire spécifiées à l'aide du nom d'itinéraire, du protocole et du nom d'hôte spécifiés.</summary>
      <returns>URL qualifiée complète.</returns>
      <param name="routeName">Nom de l'itinéraire utilisé pour générer l'URL.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
      <param name="protocol">Protocole de l'URL, par exemple "http" ou "https".</param>
      <param name="hostName">Nom d'hôte de l'URL.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.Web.Routing.RouteValueDictionary)">
      <summary>Génère une URL qualifiée complète pour les valeurs d'itinéraire spécifiées.</summary>
      <returns>URL qualifiée complète.</returns>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
    </member>
    <member name="T:System.Web.Mvc.UrlParameter">
      <summary>Représente un paramètre optionnel utilisé par la classe <see cref="T:System.Web.Mvc.MvcHandler" /> lors du routage.</summary>
    </member>
    <member name="F:System.Web.Mvc.UrlParameter.Optional">
      <summary>Contient la valeur en lecture seule du paramètre optionnel.</summary>
    </member>
    <member name="T:System.Web.Mvc.ValidatableObjectAdapter">
      <summary>Fournit un adaptateur d'objet qui peut être validé.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidatableObjectAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ValidatableObjectAdapter" />.</summary>
      <param name="metadata">Métadonnées du modèle.</param>
      <param name="context">Contexte du contrôleur.</param>
    </member>
    <member name="M:System.Web.Mvc.ValidatableObjectAdapter.Validate(System.Object)">
      <summary>Valide l'objet spécifié.</summary>
      <returns>Liste de résultats de validation.</returns>
      <param name="container">Conteneur.</param>
    </member>
    <member name="T:System.Web.Mvc.ValidateAntiForgeryTokenAttribute">
      <summary>Représente un attribut utilisé pour détecter si la requête d'un serveur a été falsifiée.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ValidateAntiForgeryTokenAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidateAntiForgeryTokenAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Appelé lorsqu'une autorisation est requise.</summary>
      <param name="filterContext">Contexte du filtre.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="filterContext" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValidateAntiForgeryTokenAttribute.Salt">
      <summary>Obtient ou définit la chaîne salt.</summary>
      <returns>Chaîne salt.</returns>
    </member>
    <member name="T:System.Web.Mvc.ValidateInputAttribute">
      <summary>Représente un attribut utilisé pour marquer les méthodes d'action dont l'entrée doit être validée.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidateInputAttribute.#ctor(System.Boolean)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ValidateInputAttribute" />.</summary>
      <param name="enableValidation">true pour activer la validation.</param>
    </member>
    <member name="P:System.Web.Mvc.ValidateInputAttribute.EnableValidation">
      <summary>Obtient ou définit une valeur qui indique s'il faut activer la validation.</summary>
      <returns>true si la validation est activée ; sinon, false.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValidateInputAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Appelé lorsqu'une autorisation est requise.</summary>
      <param name="filterContext">Contexte du filtre.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="filterContext" /> a la valeur null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderCollection">
      <summary>Représente la collection d'objets de fournisseur de valeur pour l'application.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ValueProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IValueProvider})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ValueProviderCollection" /> et inscrit les fournisseurs de valeur spécifiés.</summary>
      <param name="list">Liste de fournisseurs de valeur à inscrire.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.ContainsPrefix(System.String)">
      <summary>Détermine si la collection contient le préfixe spécifié.</summary>
      <returns>true si la collection contient le préfixe spécifié ; sinon, false.</returns>
      <param name="prefix">Préfixe à rechercher.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.GetValue(System.String)">
      <summary>Retourne un objet de valeur à l'aide de la clé spécifiée.</summary>
      <returns>Objet de valeur pour la clé spécifiée.</returns>
      <param name="key">Clé de l'objet de valeur à récupérer.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.GetValue(System.String,System.Boolean)">
      <summary>Retourne un objet de valeur à l'aide de la clé et du paramètre d'ignorance de validation spécifiés.</summary>
      <returns>Objet de valeur pour la clé spécifiée.</returns>
      <param name="key">Clé de l'objet de valeur à récupérer.</param>
      <param name="skipValidation">true pour spécifier que la validation doit être ignorée ; sinon, false.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.InsertItem(System.Int32,System.Web.Mvc.IValueProvider)">
      <summary>Insère l'objet de fournisseur de valeur indiqué dans la collection à l'emplacement d'index spécifié.</summary>
      <param name="index">Emplacement d'index de base zéro auquel insérer le fournisseur de valeur dans la collection.</param>
      <param name="item">Objet de fournisseur de valeur à insérer.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="item" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.SetItem(System.Int32,System.Web.Mvc.IValueProvider)">
      <summary>Remplace le fournisseur de valeur à l'emplacement d'index spécifié par un nouveau fournisseur de valeur.</summary>
      <param name="index">Index de base zéro de l'élément à remplacer.</param>
      <param name="item">Nouvelle valeur de l'élément à l'index spécifié.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="item" /> a la valeur null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderDictionary">
      <summary>Représente un dictionnaire des fournisseurs de valeurs de l'application.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ValueProviderDictionary" />.</summary>
      <param name="controllerContext">Contexte du contrôleur.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult})">
      <summary>Ajoute l'élément spécifié à la collection de fournisseurs de valeurs.</summary>
      <param name="item">Objet à ajouter à l'objet <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">L'objet <see cref="T:System.Collections.Generic.ICollection`1" /> est en lecture seule.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Add(System.String,System.Object)">
      <summary>Ajoute un élément qui a la clé et la valeur spécifiées à la collection de fournisseurs de valeurs.</summary>
      <param name="key">Clé de l'élément à ajouter.</param>
      <param name="value">Valeur de l'élément à ajouter.</param>
      <exception cref="T:System.NotSupportedException">L'objet <see cref="T:System.Collections.Generic.IDictionary`2" /> est en lecture seule.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">Un élément possédant la clé spécifiée existe déjà dans l'objet <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Add(System.String,System.Web.Mvc.ValueProviderResult)">
      <summary>Ajoute un élément qui a la clé et la valeur spécifiées à la collection de fournisseurs de valeurs.</summary>
      <param name="key">Clé de l'élément à ajouter.</param>
      <param name="value">Valeur de l'élément à ajouter.</param>
      <exception cref="T:System.NotSupportedException">L'objet <see cref="T:System.Collections.Generic.IDictionary`2" /> est en lecture seule.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">Un élément possédant la clé spécifiée existe déjà dans l'objet <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Clear">
      <summary>Supprime tous les éléments de la collection de fournisseurs de valeurs.</summary>
      <exception cref="T:System.NotSupportedException">L'objet <see cref="T:System.Collections.Generic.ICollection`1" /> est en lecture seule.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult})">
      <summary>Détermine si la collection de fournisseurs de valeurs contient l'élément spécifié.</summary>
      <returns>true si <paramref name="item" /> existe dans la collection de fournisseurs de valeurs ; sinon, false.</returns>
      <param name="item">Objet à trouver dans l'instance de <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.ContainsKey(System.String)">
      <summary>Détermine si la collection de fournisseurs de valeurs contient un élément qui a la clé spécifiée.</summary>
      <returns>true si la collection de fournisseurs de valeurs contient un élément qui a la clé ; sinon, false.</returns>
      <param name="key">Clé de l'élément à trouver dans l'instance de <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.ControllerContext">
      <summary>Obtient ou définit le contexte du contrôleur.</summary>
      <returns>Contexte du contrôleur.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult}[],System.Int32)">
      <summary>Copie les éléments de la collection au niveau de l'index spécifié dans un tableau.</summary>
      <param name="array">Tableau unidimensionnel qui constitue la destination des éléments copiés à partir de l'objet <see cref="T:System.Collections.Generic.ICollection`1" />. Le tableau doit comporter un index de base zéro.</param>
      <param name="arrayIndex">Index de base zéro de <paramref name="array" /> à partir duquel la copie commence.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> est inférieur à 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> est multidimensionnel.-ou-<paramref name="arrayIndex" /> est supérieur ou égal à la longueur de <paramref name="array" />.-ou-Le nombre d'éléments dans la collection source est supérieur à la quantité d'espace disponible entre <paramref name="arrayIndex" /> et la fin du <paramref name="array" /> de destination.-ou-Le cast automatique du type <paramref name="T" /> en type du tableau de destination est impossible.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Count">
      <summary>Obtient le nombre d'éléments de la collection.</summary>
      <returns>Nombre d'éléments de la collection.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.GetEnumerator">
      <summary>Retourne un énumérateur qui peut être utilisé pour itérer au sein de la collection.</summary>
      <returns>Énumérateur permettant d'itérer au sein de la collection.</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.IsReadOnly">
      <summary>Obtient une valeur qui indique si la collection est en lecture seule.</summary>
      <returns>true si la collection est en lecture seule ; sinon false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Item(System.String)">
      <summary>Obtient ou définit l'objet <see cref="T:System.Web.Mvc.ValueProviderResult" /> qui contient la clé spécifiée.</summary>
      <returns>Objet <see cref="T:System.Web.Mvc.ValueProviderResult" />.</returns>
      <param name="key">Clé.</param>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Keys">
      <summary>Obtient une collection qui contient les clés de l'instance de <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Collection qui contient les clés de l'objet qui implémente l'interface <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult})">
      <summary>Supprime la première occurrence de l'élément spécifié dans la collection de fournisseurs de valeurs.</summary>
      <returns>true si <paramref name="item" /> a été correctement supprimé de la collection ; sinon, false. Cette méthode retourne également false si <paramref name="item" /> est introuvable dans la collection.</returns>
      <param name="item">Objet à supprimer de l'instance de <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">L'objet <see cref="T:System.Collections.Generic.ICollection`1" /> est en lecture seule.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Remove(System.String)">
      <summary>Supprime l'élément qui a la clé spécifiée dans la collection de fournisseurs de valeurs.</summary>
      <returns>true si l'élément a été correctement supprimé ; sinon, false. Cette méthode retourne également false si <paramref name="key" /> est introuvable dans la collection.</returns>
      <param name="key">Clé de l'élément à supprimer.</param>
      <exception cref="T:System.NotSupportedException">L'objet <see cref="T:System.Collections.Generic.IDictionary`2" /> est en lecture seule.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retourne un énumérateur qui peut être utilisé pour itérer au sein d'une collection.</summary>
      <returns>Énumérateur permettant d'itérer au sein de la collection.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.System#Web#Mvc#IValueProvider#ContainsPrefix(System.String)">
      <summary>Détermine si la collection contient le préfixe spécifié.</summary>
      <returns>true si la collection contient le préfixe spécifié ; sinon, false.</returns>
      <param name="prefix">Préfixe à rechercher.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.System#Web#Mvc#IValueProvider#GetValue(System.String)">
      <summary>Retourne un objet de valeur à l'aide de la clé spécifiée.</summary>
      <returns>Objet de valeur pour la clé spécifiée.</returns>
      <param name="key">Clé de l'objet de valeur à retourner.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.TryGetValue(System.String,System.Web.Mvc.ValueProviderResult@)">
      <summary>Obtient la valeur de l'élément qui contient la clé spécifiée.</summary>
      <returns>true si l'objet qui implémente <see cref="T:System.Collections.Generic.IDictionary`2" /> contient un élément comportant la clé spécifiée ; sinon, false.</returns>
      <param name="key">Clé de l'élément à obtenir.</param>
      <param name="value">Lorsque cette méthode est retournée, valeur associée à la clé spécifiée, si la clé est trouvée ; sinon, valeur par défaut pour le type du paramètre <paramref name="value" />. Ce paramètre est passé sans être initialisé.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Values">
      <summary>Obtient une collection qui contient les valeurs de l'objet <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Collection des valeurs de l'objet qui implémente l'interface <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderFactories">
      <summary>Représente un conteneur pour les objets de fabrique de fournisseur de valeur.</summary>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderFactories.Factories">
      <summary>Obtient la collection de fabriques de fournisseur de valeur pour l'application.</summary>
      <returns>Collection d'objets de fabrique de fournisseur de valeur.</returns>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderFactory">
      <summary>Représente une fabrique pour la création d'objets de fournisseur de valeur.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactory.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Retourne un objet de fournisseur de valeur pour le contexte de contrôleur spécifié.</summary>
      <returns>Objet de fournisseur de valeur.</returns>
      <param name="controllerContext">Objet qui encapsule des informations sur la requête HTTP en cours.</param>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderFactoryCollection">
      <summary>Représente la collection de fabriques de fournisseur de valeur pour l'application.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ValueProviderFactoryCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.ValueProviderFactory})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ValueProviderFactoryCollection" /> à l'aide de la liste spécifiée de fabriques de fournisseur de valeur.</summary>
      <param name="list">Liste de fabriques de fournisseur de valeur à utiliser pour initialiser la collection.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Retourne la fabrique de fournisseur de valeur pour le contexte de contrôleur spécifié.</summary>
      <returns>Objet de fabrique de fournisseur de valeur pour le contexte de contrôleur spécifié.</returns>
      <param name="controllerContext">Objet qui encapsule des informations sur la requête HTTP en cours.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.InsertItem(System.Int32,System.Web.Mvc.ValueProviderFactory)">
      <summary>Insère l'objet de fabrique de fournisseur de valeur indiqué à l'emplacement d'index spécifié.</summary>
      <param name="index">Emplacement d'index de base zéro auquel insérer le fournisseur de valeur dans la collection.</param>
      <param name="item">Objet de fabrique de fournisseur de valeur à insérer.</param>
      <exception cref="ArgumentNullException">Le paramètre <paramref name="item" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.SetItem(System.Int32,System.Web.Mvc.ValueProviderFactory)">
      <summary>Définit l'objet de fabrique de fournisseur de valeur indiqué à l'emplacement d'index spécifié.</summary>
      <param name="index">Emplacement d'index de base zéro auquel insérer le fournisseur de valeur dans la collection.</param>
      <param name="item">Objet de fabrique de fournisseur de valeur à définir.</param>
      <exception cref="ArgumentNullException">Le paramètre <paramref name="item" /> a la valeur null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderResult">
      <summary>Représente le résultat de la liaison d'une valeur (par exemple une publication de formulaire ou une chaîne de requête) à une propriété d'argument de méthode d'action, ou à l'argument lui-même.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ValueProviderResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.#ctor(System.Object,System.String,System.Globalization.CultureInfo)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ValueProviderResult" /> en utilisant la valeur brute, la valeur tentée et les informations de culture spécifiées.</summary>
      <param name="rawValue">Valeur brute.</param>
      <param name="attemptedValue">Valeur tentée.</param>
      <param name="culture">Culture.</param>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderResult.AttemptedValue">
      <summary>Obtient ou définit la valeur brute convertie en chaîne pour l'affichage.</summary>
      <returns>Valeur brute.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.ConvertTo(System.Type)">
      <summary>Convertit la valeur encapsulée par ce résultat vers le type spécifié.</summary>
      <returns>Valeur convertie.</returns>
      <param name="type">Type cible.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="type" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.ConvertTo(System.Type,System.Globalization.CultureInfo)">
      <summary>Convertit la valeur encapsulée par ce résultat vers le type spécifié à l'aide des informations de culture spécifiées.</summary>
      <returns>Valeur convertie.</returns>
      <param name="type">Type cible.</param>
      <param name="culture">Culture à utiliser lors de la conversion.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="type" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderResult.Culture">
      <summary>Obtient ou définit la culture.</summary>
      <returns>Culture.</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderResult.RawValue">
      <summary>Obtient ou définit la valeur brute donnée par le fournisseur de valeurs.</summary>
      <returns>Valeur brute.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewContext">
      <summary>Encapsule les informations relatives au rendu d'un affichage.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewContext.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ViewContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.IView,System.Web.Mvc.ViewDataDictionary,System.Web.Mvc.TempDataDictionary,System.IO.TextWriter)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ViewContext" /> en utilisant le contexte du contrôleur, l'affichage, le dictionnaire de données d'affichage, le dictionnaire de données temporaires et le TextWriter spécifiés.</summary>
      <param name="controllerContext">Encapsule les informations sur la requête HTTP.</param>
      <param name="view">Vue à restituer.</param>
      <param name="viewData">Dictionnaire qui contient les données requises pour restituer la vue.</param>
      <param name="tempData">Dictionnaire qui contient les données temporaires pour la vue.</param>
      <param name="writer">Objet TextWriter utilisé pour écrire la sortie HTML.</param>
      <exception cref="T:System.ArgumentNullException">L'un des paramètres a la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ClientValidationEnabled">
      <summary>Obtient ou définit une valeur indiquant si la validation côté client est activée.</summary>
      <returns>true si la validation côté client est activée ; sinon, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.FormContext">
      <summary>Obtient ou définit un objet qui encapsule les informations requises pour valider et traiter les données d'entrée d'un formulaire HTML.</summary>
      <returns>Objet qui encapsule les informations requises pour valider et traiter les données d'entrée d'un formulaire HTML.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewContext.OutputClientValidation">
      <summary>Écrit les informations de validation du client dans la réponse HTTP.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.TempData">
      <summary>Obtient les données associées à cette requête et qui sont disponibles pour une seule requête.</summary>
      <returns>Données temporaires.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.UnobtrusiveJavaScriptEnabled"></member>
    <member name="P:System.Web.Mvc.ViewContext.View">
      <summary>Obtient un objet qui implémente l'interface <see cref="T:System.Web.Mvc.IView" /> à restituer dans le navigateur.</summary>
      <returns>Vue.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ViewData">
      <summary>Obtient les données d'affichage passées à l'affichage.</summary>
      <returns>Données d'affichage.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.Writer">
      <summary>Obtient ou définit l'objet TextWriter utilisé pour écrire la sortie HTML.</summary>
      <returns>Objet utilisé pour écrire la sortie HTML.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewDataDictionary">
      <summary>Représente un conteneur utilisé pour passer des données entre un contrôleur et un affichage.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.#ctor(System.Object)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ViewDataDictionary" /> en utilisant le modèle spécifié.</summary>
      <param name="model">Modèle.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.#ctor(System.Web.Mvc.ViewDataDictionary)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ViewDataDictionary" /> en utilisant le dictionnaire spécifié.</summary>
      <param name="dictionary">Dictionnaire.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="dictionary" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Ajoute l'élément spécifié à la collection.</summary>
      <param name="item">Objet à ajouter à la collection.</param>
      <exception cref="T:System.NotSupportedException">La collection est en lecture seule.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Add(System.String,System.Object)">
      <summary>Ajoute un élément à la collection avec la clé et la valeur spécifiées.</summary>
      <param name="key">Clé de l'élément à ajouter.</param>
      <param name="value">Valeur de l'élément à ajouter.</param>
      <exception cref="T:System.NotSupportedException">L'objet <see cref="T:System.Collections.Generic.IDictionary`2" /> est en lecture seule.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">Un élément possédant la même clé existe déjà dans l'objet <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Clear">
      <summary>Supprime tous les éléments de la collection.</summary>
      <exception cref="T:System.NotSupportedException">L'objet <see cref="T:System.Collections.Generic.ICollection`1" /> est en lecture seule.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Détermine si la collection contient l'élément spécifié.</summary>
      <returns>true si <paramref name="item" /> existe dans la collection ; sinon, false.</returns>
      <param name="item">Objet à localiser dans la collection.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.ContainsKey(System.String)">
      <summary>Détermine si la collection contient un élément avec la clé spécifiée.</summary>
      <returns>true si la collection contient un élément qui possède la clé spécifiée ; sinon, false.</returns>
      <param name="key">Clé de l'élément à trouver dans la collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Copie les éléments de la collection dans un tableau, en commençant à un index particulier.</summary>
      <param name="array">Tableau unidimensionnel qui constitue la destination des éléments copiés à partir de la collection. Le tableau doit comporter un index de base zéro.</param>
      <param name="arrayIndex">Index de base zéro dans <paramref name="array" /> au niveau duquel commence la copie.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> est inférieur à 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> est multidimensionnel.-ou- <paramref name="arrayIndex" /> est supérieur ou égal à la longueur de <paramref name="array" />.-ou- Le nombre d'éléments dans la collection source est supérieur à la quantité d'espace disponible entre <paramref name="arrayIndex" /> et la fin du <paramref name="array" /> de destination.-ou- Le cast automatique du type <paramref name="T" /> en type du <paramref name="array" /> de destination est impossible.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Count">
      <summary>Obtient le nombre d'éléments de la collection.</summary>
      <returns>Nombre d'éléments de la collection.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Eval(System.String)">
      <summary>Évalue l'expression spécifiée.</summary>
      <returns>Résultats de l'évaluation.</returns>
      <param name="expression">Expression.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="expression" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Eval(System.String,System.String)">
      <summary>Évalue l'expression spécifiée à l'aide du format spécifié.</summary>
      <returns>Résultats de l'évaluation.</returns>
      <param name="expression">Expression.</param>
      <param name="format">Format.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.GetEnumerator">
      <summary>Retourne un énumérateur qui peut être utilisé pour itérer au sein de la collection.</summary>
      <returns>Énumérateur permettant d'itérer au sein de la collection.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.GetViewDataInfo(System.String)">
      <summary>Retourne les informations relatives aux données d'affichage qui sont définies par le paramètre <paramref name="expression" />.</summary>
      <returns>Objet contenant les informations relatives aux données d'affichage qui sont définies par le paramètre <paramref name="expression" />.</returns>
      <param name="expression">Jeu de paires clé/valeur qui définissent les informations relatives aux données d'affichage à retourner.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="expression" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.IsReadOnly">
      <summary>Obtient une valeur qui indique si la collection est en lecture seule.</summary>
      <returns>true si la collection est en lecture seule ; sinon, false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Item(System.String)">
      <summary>Obtient ou définit l'élément associé à la clé spécifiée.</summary>
      <returns>Valeur de l'élément sélectionné.</returns>
      <param name="key">Clé.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Keys">
      <summary>Obtient une collection qui contient les clés de ce dictionnaire.</summary>
      <returns>Collection qui contient les clés de l'objet qui implémente <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Model">
      <summary>Obtient ou définit le modèle qui est associé aux données d'affichage.</summary>
      <returns>Modèle associé aux données d'affichage.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.ModelMetadata">
      <summary>Obtient ou définit les informations relatives au modèle.</summary>
      <returns>Informations relatives au modèle.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.ModelState">
      <summary>Obtient l'état du modèle.</summary>
      <returns>État du modèle.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Supprime la première occurrence de l'objet spécifié dans la collection.</summary>
      <returns>true si <paramref name="item" /> a été correctement supprimé de la collection ; sinon, false. Cette méthode retourne également false si <paramref name="item" /> est introuvable dans la collection.</returns>
      <param name="item">Objet à supprimer de la collection.</param>
      <exception cref="T:System.NotSupportedException">La collection est en lecture seule.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Remove(System.String)">
      <summary>Supprime l'élément avec la clé spécifiée de la collection.</summary>
      <returns>true si la suppression de l'élément réussit ; sinon, false. Cette méthode retourne également false si <paramref name="key" /> est introuvable dans la collection d'origine.</returns>
      <param name="key">Clé de l'élément à supprimer.</param>
      <exception cref="T:System.NotSupportedException">La collection est en lecture seule.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.SetModel(System.Object)">
      <summary>Définit le modèle de données à utiliser pour la vue.</summary>
      <param name="value">Modèle de données à utiliser pour la vue.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retourne un énumérateur qui peut être utilisé pour itérer au sein de la collection.</summary>
      <returns>Énumérateur permettant d'itérer au sein de la collection.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.TemplateInfo">
      <summary>Obtient ou définit un objet qui encapsule les informations relatives au contexte de modèle actuel.</summary>
      <returns>Objet qui contient les informations relatives au modèle actuel.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.TryGetValue(System.String,System.Object@)">
      <summary>Tente de récupérer la valeur associée à la clé spécifiée.</summary>
      <returns>true si la collection contient un élément avec la clé spécifiée ; sinon, false.</returns>
      <param name="key">Clé de la valeur à obtenir.</param>
      <param name="value">Lorsque cette méthode est retournée, valeur associée à la clé spécifiée, si la clé est trouvée ; sinon, valeur par défaut pour le type du paramètre <paramref name="value" />. Ce paramètre est passé sans être initialisé.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Values">
      <summary>Obtient une collection qui contient les valeurs de ce dictionnaire.</summary>
      <returns>Collection qui contient les valeurs de l'objet qui implémente <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewDataDictionary`1">
      <summary>Représente un conteneur utilisé pour passer des données fortement typées entre un contrôleur et un affichage.</summary>
      <typeparam name="TModel">Type du modèle.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.#ctor(System.Web.Mvc.ViewDataDictionary)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> en utilisant le dictionnaire de données d'affichage spécifié.</summary>
      <param name="viewDataDictionary">Dictionnaire de données d'affichage existant à copier dans cette instance.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.#ctor(`0)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> en utilisant le modèle spécifié.</summary>
      <param name="model">Modèle de données à utiliser pour la vue.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary`1.Model">
      <summary>Obtient ou définit le modèle.</summary>
      <returns>Référence au modèle de données.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary`1.ModelMetadata">
      <summary>Obtient ou définit les informations relatives au modèle.</summary>
      <returns>Informations relatives au modèle.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.SetModel(System.Object)">
      <summary>Définit le modèle de données à utiliser pour la vue.</summary>
      <param name="value">Modèle de données à utiliser pour la vue.</param>
      <exception cref="T:System.InvalidOperationException">Une erreur s'est produite lors de la définition du modèle.</exception>
    </member>
    <member name="T:System.Web.Mvc.ViewDataInfo">
      <summary>Encapsule les informations relatives au contenu de modèle actuel qui est utilisé pour développer des modèles et aux programmes d'assistance HTML qui interagissent avec les modèles.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataInfo.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ViewDataInfo" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataInfo.#ctor(System.Func`1)"></member>
    <member name="P:System.Web.Mvc.ViewDataInfo.Container">
      <summary>Obtient ou définit l'objet qui contient les valeurs devant être affichées par le modèle.</summary>
      <returns>Objet qui contient les valeurs devant être affichées par le modèle.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataInfo.PropertyDescriptor">
      <summary>Obtient ou définit la description de la propriété devant être affichée par le modèle.</summary>
      <returns>Description de la propriété devant être affichée par le modèle.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataInfo.Value">
      <summary>Obtient ou définit la valeur actuelle devant être affichée par le modèle.</summary>
      <returns>Valeur actuelle devant être affichée par le modèle.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewEngineCollection">
      <summary>Représente une collection des moteurs d'affichage disponibles pour l'application.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ViewEngineCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IViewEngine})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ViewEngineCollection" /> en utilisant la liste de moteurs d'affichage spécifiée.</summary>
      <param name="list">Liste encapsulée par la nouvelle collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.FindPartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Recherche la vue partielle spécifiée à l'aide du contexte du contrôleur spécifié.</summary>
      <returns>Vue partielle.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="partialViewName">Nom de la vue partielle.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="controllerContext" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="partialViewName" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.FindView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Recherche l'affichage spécifié à l'aide du contexte du contrôleur et de l'affichage maître spécifiés.</summary>
      <returns>Vue.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="viewName">Nom de la vue.</param>
      <param name="masterName">Nom de la vue principale.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="controllerContext" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="viewName" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.InsertItem(System.Int32,System.Web.Mvc.IViewEngine)">
      <summary>Insère un élément dans la collection à l'index spécifié.</summary>
      <param name="index">Index de base zéro auquel <paramref name="item" /> doit être inséré.</param>
      <param name="item">Objet à insérer. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro.-ou-<paramref name="index" /> est supérieur au nombre d'éléments de la collection.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="item" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.SetItem(System.Int32,System.Web.Mvc.IViewEngine)">
      <summary>Remplace l'élément au niveau de l'index spécifié.</summary>
      <param name="index">Index de base zéro de l'élément à remplacer.</param>
      <param name="item">Nouvelle valeur de l'élément à l'index spécifié. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> est inférieur à zéro.-ou-<paramref name="index" /> est supérieur au nombre d'éléments de la collection.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="item" /> a la valeur null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ViewEngineResult">
      <summary>Représente le résultat de la recherche d'un moteur d'affichage.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineResult.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ViewEngineResult" /> en utilisant les emplacements de recherche spécifiés.</summary>
      <param name="searchedLocations">Emplacements de recherche.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="searchedLocations" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineResult.#ctor(System.Web.Mvc.IView,System.Web.Mvc.IViewEngine)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ViewEngineResult" /> en utilisant l'affichage et le moteur d'affichage spécifiés.</summary>
      <param name="view">Affichage.</param>
      <param name="viewEngine">Moteur d'affichage.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="view " />ou <paramref name="viewEngine" /> a la valeur null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewEngineResult.SearchedLocations">
      <summary>Obtient ou définit les emplacements de recherche.</summary>
      <returns>Emplacements de recherche.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewEngineResult.View">
      <summary>Obtient ou définit l'affichage.</summary>
      <returns>Affichage.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewEngineResult.ViewEngine">
      <summary>Obtient ou définit le moteur d'affichage.</summary>
      <returns>Moteur d'affichage.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewEngines">
      <summary>Représente une collection des moteurs d'affichage disponibles pour l'application.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewEngines.Engines">
      <summary>Obtient les moteurs d'affichage.</summary>
      <returns>Moteurs d'affichage.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewMasterPage">
      <summary>Représente les informations nécessaires pour générer une page d'affichage maître.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewMasterPage.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ViewMasterPage" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Ajax">
      <summary>Obtient le script AJAX pour la page maître.</summary>
      <returns>Script AJAX pour la page maître.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Html">
      <summary>Obtient le contenu HTML pour la page maître.</summary>
      <returns>Contenu HTML pour la page maître.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Model">
      <summary>Obtient le modèle.</summary>
      <returns>Modèle.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.TempData">
      <summary>Obtient les données temporaires.</summary>
      <returns>Données temporaires.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Url">
      <summary>Obtient l'URL.</summary>
      <returns>URL.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.View"></member>
    <member name="P:System.Web.Mvc.ViewMasterPage.ViewContext">
      <summary>Obtient le contexte d'affichage.</summary>
      <returns>Contexte d'affichage.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.ViewData">
      <summary>Obtient les données d'affichage.</summary>
      <returns>Données d'affichage.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Writer">
      <summary>Obtient le writer utilisé pour restituer la page maître.</summary>
      <returns>Writer utilisé pour restituer la page maître.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewMasterPage`1">
      <summary>Représente les informations nécessaires pour générer une page d'affichage maître fortement typée.</summary>
      <typeparam name="TModel">Type du modèle.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewMasterPage`1.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ViewMasterPage`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.Ajax">
      <summary>Obtient le script AJAX pour la page maître.</summary>
      <returns>Script AJAX pour la page maître.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.Html">
      <summary>Obtient le contenu HTML pour la page maître.</summary>
      <returns>Contenu HTML pour la page maître.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.Model">
      <summary>Obtient le modèle.</summary>
      <returns>Référence au modèle de données.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.ViewData">
      <summary>Obtient les données d'affichage.</summary>
      <returns>Données d'affichage.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewPage">
      <summary>Représente les propriétés et méthodes requises pour restituer une vue sous forme de page Web Forms.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ViewPage" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Ajax">
      <summary>Obtient ou définit l'objet <see cref="T:System.Web.Mvc.AjaxHelper" /> qui est utilisé pour restituer le contenu HTML dans les scénarios AJAX.</summary>
      <returns>Objet d'assistance Ajax associé à la vue.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Html">
      <summary>Obtient ou définit l'objet <see cref="T:System.Web.Mvc.HtmlHelper" /> qui est utilisé pour restituer les éléments HTML.</summary>
      <returns>Objet d'assistance HTML associé à la vue.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.InitHelpers">
      <summary>Initialise les propriétés <see cref="P:System.Web.Mvc.ViewPage.Ajax" />, <see cref="P:System.Web.Mvc.ViewPage.Html" /> et <see cref="P:System.Web.Mvc.ViewPage.Url" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.MasterLocation">
      <summary>Obtient ou définit le chemin d'accès de la vue principale.</summary>
      <returns>Chemin d'accès de la vue principale.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Model">
      <summary>Obtient la propriété Model de l'objet <see cref="T:System.Web.Mvc.ViewDataDictionary" /> associé.</summary>
      <returns>Propriété Model de l'objet <see cref="T:System.Web.Mvc.ViewDataDictionary" /> associé.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.OnPreInit(System.EventArgs)">
      <summary>Déclenche l'événement <see cref="E:System.Web.UI.Page.PreInit" /> au début de l'initialisation de la page.</summary>
      <param name="e">Données d'événement.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.ProcessRequest(System.Web.HttpContext)">
      <summary>Permet le traitement de la requête HTTP spécifiée par l'infrastructure ASP.NET MVC.</summary>
      <param name="context">Objet qui encapsule des informations spécifiques à HTTP sur la requête HTTP en cours.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Initialise l'objet <see cref="T:System.Web.UI.HtmlTextWriter" /> qui reçoit le contenu de la page à restituer.</summary>
      <param name="writer">Objet qui reçoit le contenu de la page.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.RenderView(System.Web.Mvc.ViewContext)">
      <summary>Restitue la page d'affichage dans la réponse à l'aide du contexte d'affichage spécifié.</summary>
      <param name="viewContext">Objet qui encapsule les informations requises pour restituer la vue ; celles-ci incluent le contexte de contrôleur, le contexte de formulaire, les données temporaires et les données d'affichage de la vue associée.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.SetTextWriter(System.IO.TextWriter)">
      <summary>Définit le TextWriter qui est utilisé pour restituer la vue dans la réponse.</summary>
      <param name="textWriter">Writer utilisé afin de restituer l'affichage pour la réponse.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Définit le dictionnaire de données d'affichage de la vue associée.</summary>
      <param name="viewData">Dictionnaire de données à passer à la vue.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.TempData">
      <summary>Obtient les données temporaires à passer à la vue.</summary>
      <returns>Données temporaires à passer à la vue.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Url">
      <summary>Obtient ou définit l'URL de la page restituée.</summary>
      <returns>URL de la page restituée.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.View"></member>
    <member name="P:System.Web.Mvc.ViewPage.ViewContext">
      <summary>Obtient ou définit les informations qui sont utilisées pour restituer la vue.</summary>
      <returns>Informations utilisées pour restituer la vue, telles que le contexte de formulaire, les données temporaires et les données d'affichage de la vue associée.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.ViewData">
      <summary>Obtient ou définit un dictionnaire qui contient les données à passer entre le contrôleur et la vue.</summary>
      <returns>Dictionnaire qui contient les données à passer entre le contrôleur et la vue.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Writer">
      <summary>Obtient le TextWriter qui est utilisé pour restituer la vue dans la réponse.</summary>
      <returns>TextWriter utilisé pour restituer la vue dans la réponse.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewPage`1">
      <summary>Représente les informations qui sont requises pour restituer une vue fortement typée sous forme de page Web Forms.</summary>
      <typeparam name="TModel">Type du modèle.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewPage`1.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ViewPage`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.Ajax">
      <summary>Obtient ou définit l'objet <see cref="T:System.Web.Mvc.AjaxHelper`1" /> qui prend en charge le rendu HTML dans les scénarios AJAX.</summary>
      <returns>Objet d'assistance Ajax associé à la vue.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.Html">
      <summary>Obtient ou définit l'objet <see cref="T:System.Web.Mvc.HtmlHelper" /> qui fournit la prise en charge du rendu des éléments.</summary>
      <returns>Objet d'assistance HTML associé à la vue.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage`1.InitHelpers">
      <summary>Instancie et initialise les propriétés <see cref="P:System.Web.Mvc.ViewPage`1.Ajax" /> et <see cref="P:System.Web.Mvc.ViewPage`1.Html" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.Model">
      <summary>Obtient la propriété <see cref="P:System.Web.Mvc.ViewDataDictionary`1.Model" /> de l'objet <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> associé.</summary>
      <returns>Référence au modèle de données.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage`1.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Définit le dictionnaire de données d'affichage de la vue associée.</summary>
      <param name="viewData">Dictionnaire de données à passer à la vue.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.ViewData">
      <summary>Obtient ou définit un dictionnaire qui contient les données à passer entre le contrôleur et la vue.</summary>
      <returns>Dictionnaire qui contient les données à passer entre le contrôleur et la vue.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewResult">
      <summary>Représente une classe utilisée pour restituer un affichage à l'aide d'une instance de <see cref="T:System.Web.Mvc.IView" /> retournée par un objet <see cref="T:System.Web.Mvc.IViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResult.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ViewResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResult.FindView(System.Web.Mvc.ControllerContext)">
      <summary>Recherche les moteurs d'affichage inscrits et retourne l'objet utilisé pour restituer l'affichage.</summary>
      <returns>Objet utilisé pour restituer l'affichage.</returns>
      <param name="context">Contexte du contrôleur.</param>
      <exception cref="T:System.InvalidOperationException">Une erreur s'est produite tandis que la méthode recherchait la vue.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewResult.MasterName">
      <summary>Obtient le nom de la vue principale (par exemple, page maître ou modèle) à utiliser lorsque la vue est restituée.</summary>
      <returns>Nom de la vue principale.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewResultBase">
      <summary>Représente une classe de base qui est utilisée pour fournir le modèle à la vue, puis pour restituer la vue dans la réponse.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResultBase.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ViewResultBase" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResultBase.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>En cas d'appel par le demandeur de l'action, restitue la vue dans la réponse.</summary>
      <param name="context">Contexte d'exécution du résultat.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="context" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewResultBase.FindView(System.Web.Mvc.ControllerContext)">
      <summary>Retourne l'objet <see cref="T:System.Web.Mvc.ViewEngineResult" /> utilisé pour restituer la vue.</summary>
      <returns>Moteur d'affichage.</returns>
      <param name="context">Contexte.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.TempData">
      <summary>Obtient ou définit l'objet <see cref="T:System.Web.Mvc.TempDataDictionary" /> pour ce résultat.</summary>
      <returns>Données temporaires.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.View">
      <summary>Obtient ou définit l'objet <see cref="T:System.Web.Mvc.IView" /> qui est restitué dans la réponse.</summary>
      <returns>Vue.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewData">
      <summary>Obtient ou définit l'objet <see cref="T:System.Web.Mvc.ViewDataDictionary" /> des données d'affichage pour ce résultat.</summary>
      <returns>Données d'affichage.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewEngineCollection">
      <summary>Obtient ou définit la collection des moteurs d'affichage associés à ce résultat.</summary>
      <returns>Collection des moteurs d'affichage.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewName">
      <summary>Obtient ou définit le nom de la vue à restituer.</summary>
      <returns>Nom de la vue.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewStartPage">
      <summary>Fournit une classe abstraite qui peut être utilisée pour implémenter une page de démarrage de vue (maître).</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewStartPage.#ctor">
      <summary>En cas d'implémentation dans une classe dérivée, initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ViewStartPage" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewStartPage.Html">
      <summary>En cas d'implémentation dans une classe dérivée, obtient le balisage HTML de la page de démarrage de vue.</summary>
      <returns>Balisage HTML de la page de démarrage de vue.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewStartPage.Url">
      <summary>En cas d'implémentation dans une classe dérivée, obtient l'URL de la page de démarrage de vue.</summary>
      <returns>URL de la page de démarrage de vue.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewStartPage.ViewContext">
      <summary>En cas d'implémentation dans une classe dérivée, obtient le contexte d'affichage de la page de démarrage de vue.</summary>
      <returns>Contexte d'affichage de la page de démarrage de vue.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewTemplateUserControl">
      <summary>Fournit un conteneur pour les objets <see cref="T:System.Web.Mvc.TemplateInfo" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewTemplateUserControl.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ViewTemplateUserControl" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.ViewTemplateUserControl`1">
      <summary>Fournit un conteneur pour les objets <see cref="T:System.Web.Mvc.TemplateInfo" />.</summary>
      <typeparam name="TModel">Type du modèle.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewTemplateUserControl`1.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ViewTemplateUserControl`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewTemplateUserControl`1.FormattedModelValue">
      <summary>Obtient la valeur mise en forme.</summary>
      <returns>Valeur mise en forme.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewType">
      <summary>Représente le type d'un affichage.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewType.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ViewType" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewType.TypeName">
      <summary>Obtient ou définit le nom du type.</summary>
      <returns>Nom du type.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewUserControl">
      <summary>Représente les informations nécessaires pour générer un contrôle utilisateur.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ViewUserControl" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Ajax">
      <summary>Obtient le script AJAX pour l'affichage.</summary>
      <returns>Script AJAX pour l'affichage.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.EnsureViewData">
      <summary>Vérifie que les données d'affichage sont ajoutées à l'objet <see cref="T:System.Web.Mvc.ViewDataDictionary" /> du contrôle utilisateur, si elles existent.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Html">
      <summary>Obtient le contenu HTML pour l'affichage.</summary>
      <returns>Contenu HTML pour l'affichage.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Model">
      <summary>Obtient le modèle.</summary>
      <returns>Modèle.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.RenderView(System.Web.Mvc.ViewContext)">
      <summary>Restitue l'affichage à l'aide du contexte d'affichage spécifié.</summary>
      <param name="viewContext">Contexte d'affichage.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.SetTextWriter(System.IO.TextWriter)">
      <summary>Définit le TextWriter qui est utilisé pour restituer la vue dans la réponse.</summary>
      <param name="textWriter">Writer utilisé afin de restituer l'affichage pour la réponse.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Définit le dictionnaire de données d'affichage à l'aide des données d'affichage spécifiées.</summary>
      <param name="viewData">Données d'affichage.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.TempData">
      <summary>Obtient le dictionnaire de données temporaires.</summary>
      <returns>Dictionnaire de données temporaires.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Url">
      <summary>Obtient l'URL pour l'affichage.</summary>
      <returns>URL pour l'affichage.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.View"></member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewContext">
      <summary>Obtient ou définit le contexte d'affichage.</summary>
      <returns>Contexte d'affichage.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewData">
      <summary>Obtient ou définit le dictionnaire de données d'affichage.</summary>
      <returns>Dictionnaire de données d'affichage.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewDataKey">
      <summary>Obtient ou définit la clé des données d'affichage.</summary>
      <returns>Clé des données d'affichage.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Writer">
      <summary>Obtient le writer utilisé afin de restituer l'affichage pour la réponse.</summary>
      <returns>Writer utilisé afin de restituer l'affichage pour la réponse.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewUserControl`1">
      <summary>Représente les informations nécessaires pour générer un contrôle utilisateur fortement typé.</summary>
      <typeparam name="TModel">Type du modèle.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl`1.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.ViewUserControl`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.Ajax">
      <summary>Obtient le script AJAX pour l'affichage.</summary>
      <returns>Script AJAX pour l'affichage.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.Html">
      <summary>Obtient le contenu HTML pour l'affichage.</summary>
      <returns>Contenu HTML pour l'affichage.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.Model">
      <summary>Obtient le modèle.</summary>
      <returns>Référence au modèle de données.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl`1.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Définit les données d'affichage pour l'affichage.</summary>
      <param name="viewData">Données d'affichage.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.ViewData">
      <summary>Obtient ou définit les données d'affichage.</summary>
      <returns>Données d'affichage.</returns>
    </member>
    <member name="T:System.Web.Mvc.VirtualPathProviderViewEngine">
      <summary>Représente une implémentation de la classe de base abstraite de l'interface <see cref="T:System.Web.Mvc.IViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.VirtualPathProviderViewEngine" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.AreaMasterLocationFormats">
      <summary>Obtient ou définit les formats d'emplacement principaux activés pour une zone.</summary>
      <returns>Formats d'emplacement principaux activés pour une zone.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.AreaPartialViewLocationFormats">
      <summary>Obtient ou définit les formats d'emplacement de vue partielle activés pour une zone.</summary>
      <returns>Formats d'emplacement de vue partielle activés pour une zone.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.AreaViewLocationFormats">
      <summary>Obtient ou définit les formats d'emplacement de vue activés pour une zone.</summary>
      <returns>Formats d'emplacement de vue activés pour une zone.</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Crée la vue partielle spécifiée à l'aide du contexte de contrôleur indiqué.</summary>
      <returns>Référence à la vue partielle.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="partialPath">Chemin d'accès partiel de la nouvelle vue partielle.</param>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Crée la vue partielle spécifiée à l'aide du contexte du contrôleur, du chemin d'accès de la vue et du chemin d'accès de la vue principale.</summary>
      <returns>Référence à la vue.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="viewPath">Chemin d'accès de la vue.</param>
      <param name="masterPath">Chemin d'accès de la vue principale.</param>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.FileExists(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Retourne une valeur qui indique si le fichier existe dans le chemin d'accès spécifié à l'aide du contexte du contrôleur spécifié.</summary>
      <returns>true si le fichier existe dans le chemin d'accès spécifié ; sinon, false.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="virtualPath">Chemin d'accès virtuel.</param>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.FileExtensions">
      <summary>Obtient ou définit les extensions de nom de fichier utilisées pour trouver une vue.</summary>
      <returns>Extensions de nom de fichier utilisées pour trouver une vue.</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.FindPartialView(System.Web.Mvc.ControllerContext,System.String,System.Boolean)">
      <summary>Recherche la vue partielle spécifiée à l'aide du contexte du contrôleur spécifié.</summary>
      <returns>Vue partielle.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="partialViewName">Nom de la vue partielle.</param>
      <param name="useCache">true pour utiliser la vue partielle mise en cache.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="controllerContext" /> a la valeur null (Nothing dans Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="partialViewName" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.FindView(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean)">
      <summary>Recherche la vue spécifiée à l'aide du contexte du contrôleur et du nom de vue principale spécifiés.</summary>
      <returns>Vue de page.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="viewName">Nom de la vue.</param>
      <param name="masterName">Nom de la vue principale.</param>
      <param name="useCache">true pour utiliser la vue mise en cache.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="controllerContext" /> a la valeur null (Nothing dans Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="viewName" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.MasterLocationFormats">
      <summary>Obtient ou définit les formats d'emplacement principaux.</summary>
      <returns>Formats d'emplacement principaux.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.PartialViewLocationFormats">
      <summary>Obtient ou définit les formats d'emplacement de vue partielle.</summary>
      <returns>Formats d'emplacement de vue partielle.</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.ReleaseView(System.Web.Mvc.ControllerContext,System.Web.Mvc.IView)">
      <summary>Libère la vue spécifiée à l'aide du contexte de contrôleur spécifié.</summary>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="view">Vue à libérer.</param>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.ViewLocationCache">
      <summary>Obtient ou définit le cache d'emplacements de vue.</summary>
      <returns>Cache d'emplacements de vue.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.ViewLocationFormats">
      <summary>Obtient ou définit les formats d'emplacement de vue.</summary>
      <returns>Formats d'emplacement de vue.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.VirtualPathProvider">
      <summary>Obtient ou définit le fournisseur de chemins d'accès virtuels.</summary>
      <returns>Fournisseur de chemins d'accès virtuels.</returns>
    </member>
    <member name="T:System.Web.Mvc.WebFormView">
      <summary>Représente les informations nécessaires pour générer une page Web Forms dans ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.#ctor(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.WebFormView" /> en utilisant le contexte du contrôleur et le chemin d'accès à la vue.</summary>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="viewPath">Chemin d'accès de l'affichage.</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.WebFormView" /> en utilisant le contexte du contrôleur, le chemin d'accès à la vue et le chemin d'accès à la page maître.</summary>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="viewPath">Chemin d'accès de l'affichage.</param>
      <param name="masterPath">Chemin d'accès à la page maître.</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String,System.Web.Mvc.IViewPageActivator)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.WebFormView" /> en utilisant le contexte du contrôleur, le chemin d'accès à la vue, le chemin d'accès à la page maître et une instance de <see cref="T:System.Web.Mvc.IViewPageActivator" />.</summary>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="viewPath">Chemin d'accès de l'affichage.</param>
      <param name="masterPath">Chemin d'accès à la page maître.</param>
      <param name="viewPageActivator">Instance de l'interface d'activateur de page de vue.</param>
    </member>
    <member name="P:System.Web.Mvc.WebFormView.MasterPath">
      <summary>Obtient ou définit le chemin d'accès maître.</summary>
      <returns>Chemin d'accès maître.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.RenderView(System.Web.Mvc.ViewContext,System.IO.TextWriter,System.Object)">
      <summary>Restitue la vue à la réponse.</summary>
      <param name="viewContext">Objet qui encapsule les informations requises pour restituer la vue ; celles-ci incluent le contexte de contrôleur, le contexte de formulaire, les données temporaires et les données d'affichage de la vue associée.</param>
      <param name="writer">Objet TextWriter utilisé pour écrire la sortie HTML.</param>
      <param name="instance">Instance de page de vue.</param>
    </member>
    <member name="T:System.Web.Mvc.WebFormViewEngine">
      <summary>Représente un moteur d'affichage permettant de restituer une page Web Forms pour la réponse.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.WebFormViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.#ctor(System.Web.Mvc.IViewPageActivator)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.WebFormViewEngine" /> à l'aide de l'activateur de page de vue spécifié.</summary>
      <param name="viewPageActivator">Instance d'une classe qui implémente l'interface <see cref="T:System.Web.Mvc.IViewPageActivator" />.</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Crée la vue partielle spécifiée à l'aide du contexte de contrôleur indiqué.</summary>
      <returns>Affichage partiel.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="partialPath">Chemin d'accès partiel.</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Crée l'affichage partiel spécifié à l'aide du contexte du contrôleur, du chemin d'accès de l'affichage et du chemin d'accès de l'affichage maître spécifiés.</summary>
      <returns>Vue.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="viewPath">Chemin d'accès de l'affichage.</param>
      <param name="masterPath">Chemin d'accès de l'affichage maître.</param>
    </member>
    <member name="T:System.Web.Mvc.WebViewPage">
      <summary>Représente les propriétés et méthodes requises pour restituer une vue qui utilise la syntaxe ASP.NET Razor.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.WebViewPage" />. </summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Ajax">
      <summary>Obtient ou définit l'objet <see cref="T:System.Web.Mvc.AjaxHelper" /> qui est utilisé pour restituer les éléments HTML en utilisant Ajax. </summary>
      <returns>Objet <see cref="T:System.Web.Mvc.AjaxHelper" /> qui est utilisé pour restituer les éléments HTML en utilisant Ajax.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.ConfigurePage(System.Web.WebPages.WebPageBase)">
      <summary>Définit le contexte et les données d'affichage de la page.</summary>
      <param name="parentPage">Page parente.</param>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Context">
      <summary>Obtient l'objet <see cref="T:System.Web.HttpContext" /> qui est associé à la page.</summary>
      <returns>Objet <see cref="T:System.Web.HttpContext" /> associé à la page.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.ExecutePageHierarchy">
      <summary>Exécute la hiérarchie de la page pour le pipeline d'exécution ASP.NET Razor.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Html">
      <summary>Obtient ou définit l'objet <see cref="T:System.Web.Mvc.HtmlHelper" /> qui est utilisé pour restituer les éléments HTML.</summary>
      <returns>Objet <see cref="T:System.Web.Mvc.HtmlHelper" /> qui est utilisé pour restituer les éléments HTML.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.InitHelpers">
      <summary>Initialise les classes <see cref="T:System.Web.Mvc.AjaxHelper" />, <see cref="T:System.Web.Mvc.HtmlHelper" /> et <see cref="T:System.Web.Mvc.UrlHelper" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Model">
      <summary>Obtient la propriété Model de l'objet <see cref="T:System.Web.Mvc.ViewDataDictionary" /> associé.</summary>
      <returns>Propriété Model de l'objet <see cref="T:System.Web.Mvc.ViewDataDictionary" /> associé.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Définit les données d'affichage.</summary>
      <param name="viewData">Données d'affichage.</param>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.TempData">
      <summary>Obtient les données temporaires à passer à la vue.</summary>
      <returns>Données temporaires à passer à la vue.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Url">
      <summary>Obtient ou définit l'URL de la page restituée.</summary>
      <returns>URL de la page restituée.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.View">
      <summary>Obtient la vue.</summary>
      <returns>Vue.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.ViewContext">
      <summary>Obtient ou définit les informations qui sont utilisées pour restituer la vue.</summary>
      <returns>Informations utilisées pour restituer la vue, telles que le contexte de formulaire, les données temporaires et les données d'affichage de la vue associée.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.ViewData">
      <summary>Obtient ou définit un dictionnaire qui contient les données à passer entre le contrôleur et la vue.</summary>
      <returns>Dictionnaire qui contient les données à passer entre le contrôleur et la vue.</returns>
    </member>
    <member name="T:System.Web.Mvc.WebViewPage`1">
      <summary>Représente les propriétés et méthodes requises pour restituer une vue qui utilise la syntaxe ASP.NET Razor.</summary>
      <typeparam name="TModel">Type du modèle de données d'affichage.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage`1.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.WebViewPage`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.Ajax">
      <summary>Obtient ou définit l'objet <see cref="T:System.Web.Mvc.AjaxHelper" /> qui est utilisé pour restituer le balisage HTML en utilisant Ajax.</summary>
      <returns>Objet <see cref="T:System.Web.Mvc.AjaxHelper" /> qui est utilisé pour restituer le balisage HTML en utilisant Ajax.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.Html">
      <summary>Obtient ou définit l'objet <see cref="T:System.Web.Mvc.HtmlHelper" /> qui est utilisé pour restituer les éléments HTML.</summary>
      <returns>Objet <see cref="T:System.Web.Mvc.HtmlHelper" /> qui est utilisé pour restituer les éléments HTML.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage`1.InitHelpers">
      <summary>Initialise les classes <see cref="T:System.Web.Mvc.AjaxHelper" />, <see cref="T:System.Web.Mvc.HtmlHelper" /> et <see cref="T:System.Web.Mvc.UrlHelper" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.Model">
      <summary>Obtient la propriété Model de l'objet <see cref="T:System.Web.Mvc.ViewDataDictionary" /> associé.</summary>
      <returns>Propriété Model de l'objet <see cref="T:System.Web.Mvc.ViewDataDictionary" /> associé.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage`1.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Définit les données d'affichage.</summary>
      <param name="viewData">Données d'affichage.</param>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.ViewData">
      <summary>Obtient ou définit un dictionnaire qui contient les données à passer entre le contrôleur et la vue.</summary>
      <returns>Dictionnaire qui contient les données à passer entre le contrôleur et la vue.</returns>
    </member>
    <member name="T:System.Web.Mvc.Ajax.AjaxExtensions">
      <summary>Représente la prise en charge d'ASP.NET AJAX dans une application MVC ASP.NET.</summary>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Retourne un élément d'ancrage qui contient l'URL vers la méthode d'action spécifiée ; en cas de clic sur le lien de l'action, la méthode d'action est invoquée de manière asynchrone à l'aide de JavaScript.</summary>
      <returns>Élément d'ancrage.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="actionName">Nom de la méthode d'action.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. Cet objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Retourne un élément d'ancrage qui contient l'URL vers la méthode d'action spécifiée ; en cas de clic sur le lien de l'action, la méthode d'action est invoquée de manière asynchrone à l'aide de JavaScript.</summary>
      <returns>Élément d'ancrage.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="actionName">Nom de la méthode d'action.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. Cet objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Retourne un élément d'ancrage qui contient l'URL vers la méthode d'action spécifiée ; en cas de clic sur le lien de l'action, la méthode d'action est invoquée de manière asynchrone à l'aide de JavaScript.</summary>
      <returns>Élément d'ancrage.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="actionName">Nom de la méthode d'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. Cet objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Retourne un élément d'ancrage qui contient l'URL vers la méthode d'action spécifiée ; en cas de clic sur le lien de l'action, la méthode d'action est invoquée de manière asynchrone à l'aide de JavaScript.</summary>
      <returns>Élément d'ancrage.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="actionName">Nom de la méthode d'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. Cet objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Retourne un élément d'ancrage qui contient l'URL vers la méthode d'action spécifiée ; en cas de clic sur le lien de l'action, la méthode d'action est invoquée de manière asynchrone à l'aide de JavaScript.</summary>
      <returns>Élément d'ancrage.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="actionName">Nom de la méthode d'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="protocol">Protocole de l'URL, par exemple "http" ou "https".</param>
      <param name="hostName">Nom d'hôte de l'URL.</param>
      <param name="fragment">Nom du fragment d'URL (nom de l'ancre).</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. Cet objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un élément d'ancrage qui contient l'URL vers la méthode d'action spécifiée ; en cas de clic sur le lien de l'action, la méthode d'action est invoquée de manière asynchrone à l'aide de JavaScript.</summary>
      <returns>Élément d'ancrage.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="actionName">Nom de la méthode d'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="protocol">Protocole de l'URL, par exemple "http" ou "https".</param>
      <param name="hostName">Nom d'hôte de l'URL.</param>
      <param name="fragment">Nom du fragment d'URL (nom de l'ancre).</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Retourne un élément d'ancrage qui contient l'URL vers la méthode d'action spécifiée ; en cas de clic sur le lien de l'action, la méthode d'action est invoquée de manière asynchrone à l'aide de JavaScript.</summary>
      <returns>Élément d'ancrage.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="actionName">Nom de la méthode d'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Retourne un élément d'ancrage qui contient l'URL vers la méthode d'action spécifiée ; en cas de clic sur le lien de l'action, la méthode d'action est invoquée de manière asynchrone à l'aide de JavaScript.</summary>
      <returns>Élément d'ancrage.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="actionName">Nom de la méthode d'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un élément d'ancrage qui contient l'URL vers la méthode d'action spécifiée ; en cas de clic sur le lien de l'action, la méthode d'action est invoquée de manière asynchrone à l'aide de JavaScript.</summary>
      <returns>Élément d'ancrage.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="actionName">Nom de la méthode d'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Retourne un élément d'ancrage qui contient l'URL vers la méthode d'action spécifiée ; en cas de clic sur le lien de l'action, la méthode d'action est invoquée de manière asynchrone à l'aide de JavaScript.</summary>
      <returns>Élément d'ancrage.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="actionName">Nom de la méthode d'action.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Retourne un élément d'ancrage qui contient l'URL vers la méthode d'action spécifiée ; en cas de clic sur le lien de l'action, la méthode d'action est invoquée de manière asynchrone à l'aide de JavaScript.</summary>
      <returns>Élément d'ancrage.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="actionName">Nom de la méthode d'action.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un élément d'ancrage qui contient l'URL vers la méthode d'action spécifiée ; en cas de clic sur le lien de l'action, la méthode d'action est invoquée de manière asynchrone à l'aide de JavaScript.</summary>
      <returns>Élément d'ancrage.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="actionName">Nom de la méthode d'action.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="actionName">Nom de la méthode d'action qui va gérer la requête.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. Cet objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="actionName">Nom de la méthode d'action qui va gérer la requête.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. Cet objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="actionName">Nom de la méthode d'action qui va gérer la requête.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. Cet objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="actionName">Nom de la méthode d'action qui va gérer la requête.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. Cet objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="actionName">Nom de la méthode d'action qui va gérer la requête.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="actionName">Nom de la méthode d'action qui va gérer la requête.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="actionName">Nom de la méthode d'action qui va gérer la requête.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="actionName">Nom de la méthode d'action qui va gérer la requête.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="actionName">Nom de la méthode d'action qui va gérer la requête.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse. </summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="actionName">Nom de la méthode d'action qui va gérer la requête.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse à l'aide des informations de routage spécifiées.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="routeName">Nom de l'itinéraire utilisé pour obtenir l'URL de publication de formulaire.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. Cet objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse à l'aide des informations de routage spécifiées.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="routeName">Nom de l'itinéraire utilisé pour obtenir l'URL de publication de formulaire.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. Cet objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse à l'aide des informations de routage spécifiées.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="routeName">Nom de l'itinéraire utilisé pour obtenir l'URL de publication de formulaire.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse à l'aide des informations de routage spécifiées.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="routeName">Nom de l'itinéraire utilisé pour obtenir l'URL de publication de formulaire.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse à l'aide des informations de routage spécifiées.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="routeName">Nom de l'itinéraire utilisé pour obtenir l'URL de publication de formulaire.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.GlobalizationScript(System.Web.Mvc.AjaxHelper)">
      <summary>Retourne un élément HTML script qui contient une référence à un script de globalisation qui définit les informations de culture.</summary>
      <returns>Un élément script dont l'attribut src a pour valeur le script de globalisation, comme dans l'exemple suivant : &lt;script type="text/javascript"     src="/MvcApplication1/Scripts/Globalization/en-US.js"&gt;&lt;/script&gt;</returns>
      <param name="ajaxHelper">Objet d'assistance AJAX étendu par cette méthode.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.GlobalizationScript(System.Web.Mvc.AjaxHelper,System.Globalization.CultureInfo)">
      <summary>Retourne un élément HTML script qui contient une référence à un script de globalisation qui définit les informations de culture spécifiées.</summary>
      <returns>element de script HTML dont l'attribut src a pour valeur le script de globalisation, comme dans l'exemple suivant :&lt;script type="text/javascript"    src="/MvcApplication1/Scripts/Globalization/en-US.js"&gt;&lt;/script&gt;</returns>
      <param name="ajaxHelper">Objet d'assistance AJAX étendu par cette méthode.</param>
      <param name="cultureInfo">Encapsule les informations sur la culture cible, notamment les formats de date.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="cultureInfo" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Retourne un élément d'ancrage qui contient le chemin d'accès virtuel pour les valeurs d'itinéraire spécifiées ; en cas de clic sur le lien, une requête est envoyée au chemin d'accès virtuel de manière asynchrone à l'aide de JavaScript.</summary>
      <returns>Élément d'ancrage.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. Cet objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Retourne un élément d'ancrage qui contient le chemin d'accès virtuel pour les valeurs d'itinéraire spécifiées ; en cas de clic sur le lien, une requête est envoyée au chemin d'accès virtuel de manière asynchrone à l'aide de JavaScript.</summary>
      <returns>Élément d'ancrage.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. Cet objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Retourne un élément d'ancrage qui contient le chemin d'accès virtuel pour les valeurs d'itinéraire spécifiées ; en cas de clic sur le lien, une requête est envoyée au chemin d'accès virtuel de manière asynchrone à l'aide de JavaScript.</summary>
      <returns>Élément d'ancrage.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="routeName">Nom de l'itinéraire utilisé pour obtenir l'URL de publication de formulaire.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. Cet objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Retourne un élément d'ancrage qui contient le chemin d'accès virtuel pour les valeurs d'itinéraire spécifiées ; en cas de clic sur le lien, une requête est envoyée au chemin d'accès virtuel de manière asynchrone à l'aide de JavaScript.</summary>
      <returns>Élément d'ancrage.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="routeName">Nom de l'itinéraire utilisé pour obtenir l'URL de publication de formulaire.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. Cet objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un élément d'ancrage qui contient le chemin d'accès virtuel pour les valeurs d'itinéraire spécifiées ; en cas de clic sur le lien, une requête est envoyée au chemin d'accès virtuel de manière asynchrone à l'aide de JavaScript.</summary>
      <returns>Élément d'ancrage.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="routeName">Nom de l'itinéraire utilisé pour obtenir l'URL de publication de formulaire.</param>
      <param name="protocol">Protocole de l'URL, par exemple "http" ou "https".</param>
      <param name="hostName">Nom d'hôte de l'URL.</param>
      <param name="fragment">Nom du fragment d'URL (nom de l'ancre).</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Retourne un élément d'ancrage qui contient le chemin d'accès virtuel pour les valeurs d'itinéraire spécifiées ; en cas de clic sur le lien, une requête est envoyée au chemin d'accès virtuel de manière asynchrone à l'aide de JavaScript.</summary>
      <returns>Élément d'ancrage.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="routeName">Nom de l'itinéraire utilisé pour obtenir l'URL de publication de formulaire.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un élément d'ancrage qui contient le chemin d'accès virtuel pour les valeurs d'itinéraire spécifiées ; en cas de clic sur le lien, une requête est envoyée au chemin d'accès virtuel de manière asynchrone à l'aide de JavaScript.</summary>
      <returns>Élément d'ancrage.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="routeName">Nom de l'itinéraire utilisé pour obtenir l'URL de publication de formulaire.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Retourne un élément d'ancrage qui contient le chemin d'accès virtuel pour les valeurs d'itinéraire spécifiées ; en cas de clic sur le lien, une requête est envoyée au chemin d'accès virtuel de manière asynchrone à l'aide de JavaScript.</summary>
      <returns>Élément d'ancrage.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="routeName">Nom de l'itinéraire utilisé pour obtenir l'URL de publication de formulaire.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Retourne un élément d'ancrage qui contient le chemin d'accès virtuel pour les valeurs d'itinéraire spécifiées ; en cas de clic sur le lien, une requête est envoyée au chemin d'accès virtuel de manière asynchrone à l'aide de JavaScript.</summary>
      <returns>Élément d'ancrage.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="routeName">Nom de l'itinéraire utilisé pour obtenir l'URL de publication de formulaire.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un élément d'ancrage qui contient le chemin d'accès virtuel pour les valeurs d'itinéraire spécifiées ; en cas de clic sur le lien, une requête est envoyée au chemin d'accès virtuel de manière asynchrone à l'aide de JavaScript.</summary>
      <returns>Élément d'ancrage.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="routeName">Nom de l'itinéraire utilisé pour obtenir l'URL de publication de formulaire.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Retourne un élément d'ancrage qui contient le chemin d'accès virtuel pour les valeurs d'itinéraire spécifiées ; en cas de clic sur le lien, une requête est envoyée au chemin d'accès virtuel de manière asynchrone à l'aide de JavaScript.</summary>
      <returns>Élément d'ancrage.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un élément d'ancrage qui contient le chemin d'accès virtuel pour les valeurs d'itinéraire spécifiées ; en cas de clic sur le lien, une requête est envoyée au chemin d'accès virtuel de manière asynchrone à l'aide de JavaScript.</summary>
      <returns>Élément d'ancrage.</returns>
      <param name="ajaxHelper">Application d'assistance AJAX.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
      <param name="ajaxOptions">Objet qui fournit les options de la requête asynchrone.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="T:System.Web.Mvc.Ajax.AjaxOptions">
      <summary>Représente les paramètres d'options pour l'exécution de scripts Ajax dans une application ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxOptions.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.Ajax.AjaxOptions" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.Confirm">
      <summary>Obtient ou définit le message à afficher dans une fenêtre de confirmation avant l'envoi d'une requête.</summary>
      <returns>Message à afficher dans une fenêtre de confirmation.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.HttpMethod">
      <summary>Obtient ou définit la méthode de requête HTTP (« Get » ou « Post »).</summary>
      <returns>Méthode de requête HTTP. La valeur par défaut est « Post ».</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.InsertionMode">
      <summary>Obtient ou définit le mode d'insertion de la réponse dans l'élément DOM cible.</summary>
      <returns>Mode d'insertion (« InsertAfter », « InsertBefore » ou « Replace »). La valeur par défaut est « Replace ».</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.LoadingElementDuration">
      <summary>Obtient ou définit une valeur, en millisecondes, qui contrôle la durée de l'animation lue lors de l'affichage ou du masquage de l'élément en cours de chargement.</summary>
      <returns>Valeur, en millisecondes, qui contrôle la durée de l'animation lue lors de l'affichage ou du masquage de l'élément en cours de chargement.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.LoadingElementId">
      <summary>Obtient ou définit l'attribut id d'un élément HTML affiché pendant le chargement de la fonction Ajax.</summary>
      <returns>ID de l'élément affiché pendant le chargement de la fonction Ajax.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnBegin">
      <summary>Obtient ou définit le nom de la fonction JavaScript à appeler immédiatement avant la mise à jour de la page.</summary>
      <returns>Nom de la fonction JavaScript à appeler avant la mise à jour de la page.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnComplete">
      <summary>Obtient ou définit la fonction JavaScript à appeler lorsque les données de réponse ont été instanciées mais avant la mise à jour de la page.</summary>
      <returns>Fonction JavaScript à appeler lorsque les données de réponse ont été instanciées.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnFailure">
      <summary>Obtient ou définit la fonction JavaScript à appeler en cas d'échec de la mise à jour de la page.</summary>
      <returns>Fonction JavaScript à appeler en cas d'échec de la mise à jour de la page.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnSuccess">
      <summary>Obtient ou définit la fonction JavaScript à appeler après la mise à jour de la page.</summary>
      <returns>Fonction JavaScript à appeler après la mise à jour de la page.</returns>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxOptions.ToUnobtrusiveHtmlAttributes">
      <summary>Retourne les options Ajax sous forme de collection d'attributs HTML pour prendre en charge du script JavaScript non obstrusif.</summary>
      <returns>Options Ajax sous forme de collection d'attributs HTML pour prendre en charge du script JavaScript non obstrusif.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.UpdateTargetId">
      <summary>Obtient ou définit l'ID de l'élément DOM à mettre à jour à l'aide de la réponse du serveur.</summary>
      <returns>ID de l'élément DOM à mettre à jour.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.Url">
      <summary>Obtient ou définit l'URL de requête.</summary>
      <returns>URL de requête.</returns>
    </member>
    <member name="T:System.Web.Mvc.Ajax.InsertionMode">
      <summary>Énumère les modes d'insertion de script AJAX.</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.Replace">
      <summary>Remplacer l'élément.</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.InsertBefore">
      <summary>Effectuer une insertion avant l'élément.</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.InsertAfter">
      <summary>Effectuer une insertion après l'élément.</summary>
    </member>
    <member name="T:System.Web.Mvc.Async.AsyncActionDescriptor">
      <summary>Fournit des informations sur une méthode d'action asynchrone, par exemple son nom, son contrôleur, ses paramètres, ses attributs et ses filtres.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.Async.AsyncActionDescriptor" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.BeginExecute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Appelle la méthode d'action asynchrone à l'aide des paramètres et du contexte du contrôleur spécifiés.</summary>
      <returns>Objet qui contient le résultat d'un appel asynchrone.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="parameters">Paramètres de la méthode d'action.</param>
      <param name="callback">Méthode de rappel.</param>
      <param name="state">Objet contenant les informations que la méthode de rappel doit utiliser. Ce paramètre peut être null.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.EndExecute(System.IAsyncResult)">
      <summary>Retourne le résultat d'une opération asynchrone.</summary>
      <returns>Résultat d'une opération asynchrone.</returns>
      <param name="asyncResult">Objet qui représente l'état d'une opération asynchrone.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Exécute la méthode d'action asynchrone à l'aide des paramètres et du contexte du contrôleur spécifiés.</summary>
      <returns>Résultat de l'exécution de la méthode d'action asynchrone.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="parameters">Paramètres de la méthode d'action.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.AsyncControllerActionInvoker">
      <summary>Représente une classe qui est chargée d'appeler les méthodes d'action d'un contrôleur asynchrone.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.Async.AsyncControllerActionInvoker" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.BeginInvokeAction(System.Web.Mvc.ControllerContext,System.String,System.AsyncCallback,System.Object)">
      <summary>Appelle la méthode d'action asynchrone à l'aide du contexte du contrôleur spécifié, du nom d'action, de la méthode de rappel et de l'état.</summary>
      <returns>Objet qui contient le résultat d'une opération asynchrone.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="actionName">Nom de l'action.</param>
      <param name="callback">Méthode de rappel.</param>
      <param name="state">Objet contenant les informations que la méthode de rappel doit utiliser. Ce paramètre peut être null.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.BeginInvokeActionMethod(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Appelle la méthode d'action asynchrone à l'aide du contexte du contrôleur spécifié, du descripteur de l'action, des paramètres, de la méthode de rappel et de l'état.</summary>
      <returns>Objet qui contient le résultat d'une opération asynchrone.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="actionDescriptor">Descripteur de l'action.</param>
      <param name="parameters">Paramètres pour la méthode d'action asynchrone.</param>
      <param name="callback">Méthode de rappel.</param>
      <param name="state">Objet contenant les informations que la méthode de rappel doit utiliser. Ce paramètre peut être null.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.BeginInvokeActionMethodWithFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IActionFilter},System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Appelle la méthode d'action asynchrone à l'aide du contexte du contrôleur spécifié, des filtres, du descripteur de l'action, des paramètres, de la méthode de rappel et de l'état.</summary>
      <returns>Objet qui contient le résultat d'une opération asynchrone.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="filters">Filtres.</param>
      <param name="actionDescriptor">Descripteur de l'action.</param>
      <param name="parameters">Paramètres pour la méthode d'action asynchrone.</param>
      <param name="callback">Méthode de rappel.</param>
      <param name="state">Objet contenant les informations que la méthode de rappel doit utiliser. Ce paramètre peut être null.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeAction(System.IAsyncResult)">
      <summary>Annule l'action.</summary>
      <returns>true si l'action a été annulée ; sinon, false.</returns>
      <param name="asyncResult">Objet défini par l'utilisateur qui qualifie ou qui contient des informations sur une opération asynchrone.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethod(System.IAsyncResult)">
      <summary>Annule l'action.</summary>
      <returns>true si l'action a été annulée ; sinon, false.</returns>
      <param name="asyncResult">Objet défini par l'utilisateur qui qualifie ou qui contient des informations sur une opération asynchrone.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethodWithFilters(System.IAsyncResult)">
      <summary>Annule l'action.</summary>
      <returns>true si l'action a été annulée ; sinon, false.</returns>
      <param name="asyncResult">Objet défini par l'utilisateur qui qualifie ou qui contient des informations sur une opération asynchrone.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.GetControllerDescriptor(System.Web.Mvc.ControllerContext)">
      <summary>Retourne le descripteur du contrôleur.</summary>
      <returns>Descripteur du contrôleur.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.AsyncManager">
      <summary>Fournit des opérations asynchrones pour la classe <see cref="T:System.Web.Mvc.AsyncController" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.Async.AsyncManager" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.#ctor(System.Threading.SynchronizationContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.Async.AsyncManager" /> avec le contexte de synchronisation.</summary>
      <param name="syncContext">Contexte de synchronisation.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.Finish">
      <summary>Avertit ASP.NET que toutes les opérations asynchrones sont terminées.</summary>
    </member>
    <member name="E:System.Web.Mvc.Async.AsyncManager.Finished">
      <summary>Se produit lorsque la méthode <see cref="M:System.Web.Mvc.Async.AsyncManager.Finish" /> est appelée.</summary>
    </member>
    <member name="P:System.Web.Mvc.Async.AsyncManager.OutstandingOperations">
      <summary>Obtient le nombre d'opérations en attente.</summary>
      <returns>Nombre d'opérations en attente.</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.AsyncManager.Parameters">
      <summary>Obtient les paramètres passés à la méthode d'exécution asynchrone.</summary>
      <returns>Paramètres passés à la méthode d'exécution asynchrone.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.Sync(System.Action)">
      <summary>Exécute un rappel dans le contexte de synchronisation en cours.</summary>
      <param name="action">Action asynchrone.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.AsyncManager.Timeout">
      <summary>Obtient ou définit la valeur du délai d'attente asynchrone, en millisecondes.</summary>
      <returns>Valeur du délai d'attente asynchrone, en millisecondes.</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncActionInvoker">
      <summary>Définit l'interface d'un demandeur d'action, qui permet d'appeler une action asynchrone en réponse à une requête HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncActionInvoker.BeginInvokeAction(System.Web.Mvc.ControllerContext,System.String,System.AsyncCallback,System.Object)">
      <summary>Appelle l'action spécifiée.</summary>
      <returns>État du résultat asynchrone.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="actionName">Nom de l'action asynchrone.</param>
      <param name="callback">Méthode de rappel.</param>
      <param name="state">État.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncActionInvoker.EndInvokeAction(System.IAsyncResult)">
      <summary>Annule l'action asynchrone.</summary>
      <returns>true si la méthode asynchrone a pu être annulée ; sinon, false.</returns>
      <param name="asyncResult">Résultat asynchrone.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncController">
      <summary>Définit les méthodes requises pour un contrôleur asynchrone.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncController.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
      <summary>Exécute le contexte de la requête spécifiée.</summary>
      <returns>État de l'opération asynchrone.</returns>
      <param name="requestContext">Contexte de la requête.</param>
      <param name="callback">Méthode de rappel asynchrone.</param>
      <param name="state">État.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncController.EndExecute(System.IAsyncResult)">
      <summary>Termine l'opération asynchrone.</summary>
      <param name="asyncResult">Résultat asynchrone.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncManagerContainer">
      <summary>Fournit un conteneur pour l'objet gestionnaire asynchrone.</summary>
    </member>
    <member name="P:System.Web.Mvc.Async.IAsyncManagerContainer.AsyncManager">
      <summary>Obtient l'objet gestionnaire asynchrone.</summary>
      <returns>Objet gestionnaire asynchrone.</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.OperationCounter">
      <summary>Fournit un conteneur qui maintient un nombre d'opérations asynchrones en attente.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.Async.OperationCounter" />.</summary>
    </member>
    <member name="E:System.Web.Mvc.Async.OperationCounter.Completed">
      <summary>Se produit lorsqu'une méthode asynchrone se termine.</summary>
    </member>
    <member name="P:System.Web.Mvc.Async.OperationCounter.Count">
      <summary>Obtient le nombre d'opérations.</summary>
      <returns>Nombre d'opérations.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Decrement">
      <summary>Réduit le nombre d'opérations de 1.</summary>
      <returns>Nombre d'opérations mis à jour.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Decrement(System.Int32)">
      <summary>Réduit le nombre d'opérations de la valeur spécifiée.</summary>
      <returns>Nombre d'opérations mis à jour.</returns>
      <param name="value">Nombre d'opérations à réduire.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Increment">
      <summary>Incrémente de un le nombre d'opérations.</summary>
      <returns>Nombre d'opérations mis à jour.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Increment(System.Int32)">
      <summary>Incrémente le nombre d'opérations de la valeur spécifiée.</summary>
      <returns>Nombre d'opérations mis à jour.</returns>
      <param name="value">Nombre d'opérations à incrémenter.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor">
      <summary>Fournit des informations sur une méthode d'action asynchrone, par exemple son nom, son contrôleur, ses paramètres, ses attributs et ses filtres.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.#ctor(System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.String,System.Web.Mvc.ControllerDescriptor)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor" />.</summary>
      <param name="asyncMethodInfo">Objet qui contient des informations à propos de la méthode qui commence l'opération asynchrone (méthode dont le nom se termine par "Asynch").</param>
      <param name="completedMethodInfo">Objet qui contient des informations à propos de la méthode d'exécution (méthode dont le nom se termine par "Completed").</param>
      <param name="actionName">Nom de l'action.</param>
      <param name="controllerDescriptor">Descripteur du contrôleur.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.ActionName">
      <summary>Obtient le nom de la méthode d'action.</summary>
      <returns>Nom de la méthode d'action.</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.AsyncMethodInfo">
      <summary>Obtient les informations de méthode pour la méthode d'action asynchrone.</summary>
      <returns>Informations de méthode pour la méthode d'action asynchrone.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.BeginExecute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Commence l'exécution de la méthode d'action asynchrone en utilisant les paramètres et le contexte du contrôleur spécifiés.</summary>
      <returns>Objet qui contient le résultat d'un appel asynchrone.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="parameters">Paramètres de la méthode d'action.</param>
      <param name="callback">Méthode de rappel.</param>
      <param name="state">Objet contenant les informations que la méthode de rappel doit utiliser. Ce paramètre peut être null.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.CompletedMethodInfo">
      <summary>Obtient les informations de méthode pour la méthode d'exécution asynchrone.</summary>
      <returns>Informations de méthode pour la méthode d'exécution asynchrone.</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.ControllerDescriptor">
      <summary>Obtient le descripteur du contrôleur pour la méthode d'action asynchrone.</summary>
      <returns>Descripteur du contrôleur pour la méthode d'action asynchrone.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.EndExecute(System.IAsyncResult)">
      <summary>Retourne le résultat d'une opération asynchrone.</summary>
      <returns>Résultat d'une opération asynchrone.</returns>
      <param name="asyncResult">Objet qui représente l'état d'une opération asynchrone.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Retourne un tableau des attributs personnalisés définis pour ce membre, à l'exception des attributs nommés.</summary>
      <returns>Tableau d'attributs personnalisés ou tableau vide s'il n'existe aucun attribut personnalisé.</returns>
      <param name="inherit">true pour rechercher l'attribut personnalisé hérité dans la chaîne de hiérarchie ; sinon false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Retourne un tableau des attributs personnalisés définis pour ce membre, identifiés par type.</summary>
      <returns>Tableau d'attributs personnalisés ou tableau vide en l'absence d'attributs personnalisés du type spécifié.</returns>
      <param name="attributeType">Type des attributs personnalisés à retourner.</param>
      <param name="inherit">true pour rechercher l'attribut personnalisé hérité dans la chaîne de hiérarchie ; sinon false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetParameters">
      <summary>Retourne les paramètres de la méthode d'action.</summary>
      <returns>Paramètres de la méthode d'action.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetSelectors">
      <summary>Retourne les sélecteurs de méthode d'action.</summary>
      <returns>Sélecteurs de méthode d'action.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Détermine si une ou plusieurs instances du type d'attribut spécifié sont définies pour le membre d'action.</summary>
      <returns>true si un attribut du type représenté par <paramref name="attributeType" /> est défini pour ce membre ; sinon, false.</returns>
      <param name="attributeType">Type de l'attribut personnalisé.</param>
      <param name="inherit">true pour rechercher l'attribut personnalisé hérité dans la chaîne de hiérarchie ; sinon false.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.UniqueId">
      <summary>Obtient l'ID unique initialisé tardivement de l'instance de cette classe.</summary>
      <returns>ID unique initialisé tardivement de l'instance de cette classe.</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor">
      <summary>Encapsule les informations qui décrivent un contrôleur asynchrone, par exemple son nom, son type et ses actions.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.#ctor(System.Type)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor" />.</summary>
      <param name="controllerType">Type du contrôleur.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.ControllerType">
      <summary>Obtient le type du contrôleur.</summary>
      <returns>Type du contrôleur.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.FindAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Recherche une méthode d'action à l'aide du nom et du contexte du contrôleur spécifiés.</summary>
      <returns>Informations relatives à la méthode d'action.</returns>
      <param name="controllerContext">Contexte du contrôleur.</param>
      <param name="actionName">Nom de l'action.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetCanonicalActions">
      <summary>Retourne une liste de descripteurs de méthode d'action dans le contrôleur.</summary>
      <returns>Liste de descripteurs de méthode d'action dans le contrôleur.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Retourne les attributs personnalisés définis pour ce membre, à l'exception des attributs nommés.</summary>
      <returns>Tableau d'attributs personnalisés ou tableau vide s'il n'existe aucun attribut personnalisé.</returns>
      <param name="inherit">true pour rechercher l'attribut personnalisé hérité dans la chaîne de hiérarchie ; sinon false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Retourne les attributs personnalisés d'un type spécifique définis pour ce membre, à l'exclusion des attributs nommés.</summary>
      <returns>Tableau d'attributs personnalisés ou tableau vide s'il n'existe aucun attribut personnalisé.</returns>
      <param name="attributeType">Type des attributs personnalisés.</param>
      <param name="inherit">true pour rechercher l'attribut personnalisé hérité dans la chaîne de hiérarchie ; sinon false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Retourne une valeur qui indique si une ou plusieurs instances de l'attribut personnalisé spécifié sont définies pour ce membre.</summary>
      <returns>true si un attribut du type représenté par <paramref name="attributeType" /> est défini pour ce membre ; sinon, false.</returns>
      <param name="attributeType">Type de l'attribut personnalisé.</param>
      <param name="inherit">true pour rechercher l'attribut personnalisé hérité dans la chaîne de hiérarchie ; sinon false.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.SynchronousOperationException">
      <summary>Représente une exception qui s'est produite pendant le traitement synchrone d'une requête HTTP dans une application ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.SynchronousOperationException.#ctor">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.Async.SynchronousOperationException" /> avec un message fourni par le système.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.SynchronousOperationException.#ctor(System.String)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.Async.SynchronousOperationException" /> avec le message spécifié.</summary>
      <param name="message">Message qui décrit l'exception. L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture système en cours.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.SynchronousOperationException.#ctor(System.String,System.Exception)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.Async.SynchronousOperationException" /> avec un message d'erreur spécifié et une référence à l'exception interne ayant provoqué cette exception.</summary>
      <param name="message">Message décrivant l'exception. L'appelant de ce constructeur doit vérifier que cette chaîne a été localisée pour la culture système en cours. </param>
      <param name="innerException">Exception ayant provoqué l'exception en cours. Si le paramètre <paramref name="innerException" /> n'est pas null, l'exception en cours est levée dans un bloc catch qui gère l'exception interne. </param>
    </member>
    <member name="T:System.Web.Mvc.Html.ChildActionExtensions">
      <summary>Représente la prise en charge de l'appel de méthodes d'action enfants et du rendu du résultat inline dans une vue parent.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Appelle la méthode d'action enfant spécifiée et retourne le résultat sous forme de chaîne au format HTML.</summary>
      <returns>Résultat de l'action enfant sous forme de chaîne au format HTML.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML que cette méthode étend.</param>
      <param name="actionName">Nom de la méthode d'action à appeler.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="htmlHelper" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="actionName" /> a la valeur null ou est vide.</exception>
      <exception cref="T:System.InvalidOperationException">Impossible de trouver les données du chemin d'accès virtuel requises.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Appelle la méthode d'action enfant spécifiée avec les paramètres indiqués et retourne le résultat sous forme de chaîne au format HTML.</summary>
      <returns>Résultat de l'action enfant sous forme de chaîne au format HTML.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML que cette méthode étend.</param>
      <param name="actionName">Nom de la méthode d'action à appeler.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Vous pouvez utiliser <paramref name="routeValues" /> pour fournir les paramètres qui sont liés aux paramètres de la méthode d'action. Le paramètre <paramref name="routeValues" /> est fusionné avec les valeurs de l'itinéraire d'origine et les remplace.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="htmlHelper" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="actionName" /> a la valeur null ou est vide.</exception>
      <exception cref="T:System.InvalidOperationException">Impossible de trouver les données du chemin d'accès virtuel requises.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Appelle la méthode d'action enfant spécifiée avec le nom de contrôleur indiqué et retourne le résultat sous forme de chaîne au format HTML.</summary>
      <returns>Résultat de l'action enfant sous forme de chaîne au format HTML.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML que cette méthode étend.</param>
      <param name="actionName">Nom de la méthode d'action à appeler.</param>
      <param name="controllerName">Nom du contrôleur qui contient la méthode d'action.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="htmlHelper" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="actionName" /> a la valeur null ou est vide.</exception>
      <exception cref="T:System.InvalidOperationException">Impossible de trouver les données du chemin d'accès virtuel requises.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Appelle la méthode d'action enfant spécifiée avec le nom de contrôleur et les paramètres indiqués, et retourne le résultat sous forme de chaîne au format HTML.</summary>
      <returns>Résultat de l'action enfant sous forme de chaîne au format HTML.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML que cette méthode étend.</param>
      <param name="actionName">Nom de la méthode d'action à appeler.</param>
      <param name="controllerName">Nom du contrôleur qui contient la méthode d'action.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Vous pouvez utiliser <paramref name="routeValues" /> pour fournir les paramètres qui sont liés aux paramètres de la méthode d'action. Le paramètre <paramref name="routeValues" /> est fusionné avec les valeurs de l'itinéraire d'origine et les remplace.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="htmlHelper" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="actionName" /> a la valeur null ou est vide.</exception>
      <exception cref="T:System.InvalidOperationException">Impossible de trouver les données du chemin d'accès virtuel requises.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Appelle la méthode d'action enfant spécifiée avec le nom de contrôleur et les paramètres indiqués, et retourne le résultat sous forme de chaîne au format HTML.</summary>
      <returns>Résultat de l'action enfant sous forme de chaîne au format HTML.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML que cette méthode étend.</param>
      <param name="actionName">Nom de la méthode d'action à appeler.</param>
      <param name="controllerName">Nom du contrôleur qui contient la méthode d'action.</param>
      <param name="routeValues">Dictionnaire qui contient les paramètres pour un itinéraire. Vous pouvez utiliser <paramref name="routeValues" /> pour fournir les paramètres qui sont liés aux paramètres de la méthode d'action. Le paramètre <paramref name="routeValues" /> est fusionné avec les valeurs de l'itinéraire d'origine et les remplace.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="htmlHelper" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="actionName" /> a la valeur null ou est vide.</exception>
      <exception cref="T:System.InvalidOperationException">Impossible de trouver les données du chemin d'accès virtuel requises.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Appelle la méthode d'action enfant spécifiée avec les paramètres indiqués et retourne le résultat sous forme de chaîne au format HTML.</summary>
      <returns>Résultat de l'action enfant sous forme de chaîne au format HTML.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML que cette méthode étend.</param>
      <param name="actionName">Nom de la méthode d'action à appeler.</param>
      <param name="routeValues">Dictionnaire qui contient les paramètres pour un itinéraire. Vous pouvez utiliser <paramref name="routeValues" /> pour fournir les paramètres qui sont liés aux paramètres de la méthode d'action. Le paramètre <paramref name="routeValues" /> est fusionné avec les valeurs de l'itinéraire d'origine et les remplace.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="htmlHelper" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="actionName" /> a la valeur null ou est vide.</exception>
      <exception cref="T:System.InvalidOperationException">Impossible de trouver les données du chemin d'accès virtuel requises.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Appelle la méthode d'action enfant spécifiée et restitue le résultat inline dans la vue parent.</summary>
      <param name="htmlHelper">Instance du programme d'assistance HTML que cette méthode étend.</param>
      <param name="actionName">Nom de la méthode d'action enfant à appeler.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="htmlHelper" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="actionName" /> a la valeur null ou est vide.</exception>
      <exception cref="T:System.InvalidOperationException">Impossible de trouver les données du chemin d'accès virtuel requises.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Appelle la méthode d'action enfant spécifiée à l'aide des paramètres indiqués et restitue le résultat inline dans la vue parent.</summary>
      <param name="htmlHelper">Instance du programme d'assistance HTML que cette méthode étend.</param>
      <param name="actionName">Nom de la méthode d'action enfant à appeler.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Vous pouvez utiliser <paramref name="routeValues" /> pour fournir les paramètres qui sont liés aux paramètres de la méthode d'action. Le paramètre <paramref name="routeValues" /> est fusionné avec les valeurs de l'itinéraire d'origine et les remplace.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="htmlHelper" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="actionName" /> a la valeur null ou est vide.</exception>
      <exception cref="T:System.InvalidOperationException">Impossible de trouver les données du chemin d'accès virtuel requises.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Appelle la méthode d'action enfant spécifiée à l'aide du nom de contrôleur indiqué et restitue le résultat inline dans la vue parent.</summary>
      <param name="htmlHelper">Instance du programme d'assistance HTML que cette méthode étend.</param>
      <param name="actionName">Nom de la méthode d'action enfant à appeler.</param>
      <param name="controllerName">Nom du contrôleur qui contient la méthode d'action.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="htmlHelper" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="actionName" /> a la valeur null ou est vide.</exception>
      <exception cref="T:System.InvalidOperationException">Impossible de trouver les données du chemin d'accès virtuel requises.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Appelle la méthode d'action enfant spécifiée à l'aide du nom de contrôleur et des paramètres indiqués, et restitue le résultat inline dans la vue parent.</summary>
      <param name="htmlHelper">Instance du programme d'assistance HTML que cette méthode étend.</param>
      <param name="actionName">Nom de la méthode d'action enfant à appeler.</param>
      <param name="controllerName">Nom du contrôleur qui contient la méthode d'action.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Vous pouvez utiliser <paramref name="routeValues" /> pour fournir les paramètres qui sont liés aux paramètres de la méthode d'action. Le paramètre <paramref name="routeValues" /> est fusionné avec les valeurs de l'itinéraire d'origine et les remplace.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="htmlHelper" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="actionName" /> a la valeur null ou est vide.</exception>
      <exception cref="T:System.InvalidOperationException">Impossible de trouver les données du chemin d'accès virtuel requises.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Appelle la méthode d'action enfant spécifiée à l'aide du nom de contrôleur et des paramètres indiqués, et restitue le résultat inline dans la vue parent.</summary>
      <param name="htmlHelper">Instance du programme d'assistance HTML que cette méthode étend.</param>
      <param name="actionName">Nom de la méthode d'action enfant à appeler.</param>
      <param name="controllerName">Nom du contrôleur qui contient la méthode d'action.</param>
      <param name="routeValues">Dictionnaire qui contient les paramètres pour un itinéraire. Vous pouvez utiliser <paramref name="routeValues" /> pour fournir les paramètres qui sont liés aux paramètres de la méthode d'action. Le paramètre <paramref name="routeValues" /> est fusionné avec les valeurs de l'itinéraire d'origine et les remplace.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="htmlHelper" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="actionName" /> a la valeur null ou est vide.</exception>
      <exception cref="T:System.InvalidOperationException">Impossible de trouver les données du chemin d'accès virtuel requises.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Appelle la méthode d'action enfant spécifiée à l'aide des paramètres indiqués et restitue le résultat inline dans la vue parent.</summary>
      <param name="htmlHelper">Instance du programme d'assistance HTML que cette méthode étend.</param>
      <param name="actionName">Nom de la méthode d'action enfant à appeler.</param>
      <param name="routeValues">Dictionnaire qui contient les paramètres pour un itinéraire. Vous pouvez utiliser <paramref name="routeValues" /> pour fournir les paramètres qui sont liés aux paramètres de la méthode d'action. Le paramètre <paramref name="routeValues" /> est fusionné avec les valeurs de l'itinéraire d'origine et les remplace.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="htmlHelper" /> a la valeur null.</exception>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="actionName" /> a la valeur null ou est vide.</exception>
      <exception cref="T:System.InvalidOperationException">Impossible de trouver les données du chemin d'accès virtuel requises.</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.DisplayExtensions">
      <summary>Représente la prise en charge du rendu des valeurs d'objet sous forme de code HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Retourne un balisage HTML pour chaque propriété de l'objet qui est représenté par une expression de chaîne.</summary>
      <returns>Balisage HTML pour chaque propriété de l'objet représenté par l'expression.</returns>
      <param name="html">Instance du programme d'assistance HTML que cette méthode étend.</param>
      <param name="expression">Expression identifiant l'objet qui contient les propriétés à afficher.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Retourne un balisage HTML pour chaque propriété de l'objet qui est représenté par une expression de chaîne, à l'aide des données d'affichage supplémentaires.</summary>
      <returns>Balisage HTML pour chaque propriété de l'objet représenté par l'expression.</returns>
      <param name="html">Instance de l'application auxiliaire HTML qui est étendue par cette méthode.</param>
      <param name="expression">Expression identifiant l'objet qui contient les propriétés à afficher.</param>
      <param name="additionalViewData">Objet anonyme qui peut contenir des données de vue supplémentaires qui seront fusionnées dans l'instance <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> créée pour le modèle.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Retourne un balisage HTML pour chaque propriété de l'objet qui est représenté par l'expression, à l'aide du modèle spécifié.</summary>
      <returns>Balisage HTML pour chaque propriété de l'objet représenté par l'expression.</returns>
      <param name="html">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="expression">Expression identifiant l'objet qui contient les propriétés à afficher.</param>
      <param name="templateName">Nom du modèle utilisé pour restituer l'objet.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Retourne un balisage HTML pour chaque propriété de l'objet qui est représenté par l'expression, à l'aide du modèle spécifié et des données d'affichage supplémentaires.</summary>
      <returns>Balisage HTML pour chaque propriété de l'objet représenté par l'expression.</returns>
      <param name="html">Instance de l'application auxiliaire HTML qui est étendue par cette méthode.</param>
      <param name="expression">Expression identifiant l'objet qui contient les propriétés à afficher.</param>
      <param name="templateName">Nom du modèle utilisé pour restituer l'objet.</param>
      <param name="additionalViewData">Objet anonyme qui peut contenir des données de vue supplémentaires qui seront fusionnées dans l'instance <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> créée pour le modèle.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>Retourne un balisage HTML pour chaque propriété de l'objet qui est représenté par l'expression, à l'aide du modèle spécifié et d'un ID de champ HTML.</summary>
      <returns>Balisage HTML pour chaque propriété de l'objet représenté par l'expression.</returns>
      <param name="html">Instance de l'application auxiliaire HTML qui est étendue par cette méthode.</param>
      <param name="expression">Expression identifiant l'objet qui contient les propriétés à afficher.</param>
      <param name="templateName">Nom du modèle utilisé pour restituer l'objet.</param>
      <param name="htmlFieldName">Chaîne utilisée pour lever l'ambiguïté des noms des éléments HTML input rendus pour les propriétés qui portent le même nom.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object)">
      <summary>Retourne un balisage HTML pour chaque propriété de l'objet qui est représenté par l'expression, à l'aide du modèle spécifié, d'un ID de champ HTML et des données d'affichage supplémentaires.</summary>
      <returns>Balisage HTML pour chaque propriété de l'objet représenté par l'expression.</returns>
      <param name="html">Instance de l'application auxiliaire HTML qui est étendue par cette méthode.</param>
      <param name="expression">Expression identifiant l'objet qui contient les propriétés à afficher.</param>
      <param name="templateName">Nom du modèle utilisé pour restituer l'objet.</param>
      <param name="htmlFieldName">Chaîne utilisée pour lever l'ambiguïté des noms des éléments HTML input rendus pour les propriétés qui portent le même nom.</param>
      <param name="additionalViewData">Objet anonyme qui peut contenir des données de vue supplémentaires qui seront fusionnées dans l'instance <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> créée pour le modèle.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2})">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TValue"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TValue"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean,``0)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TValue"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean,``0,``1)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TValue"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Retourne un balisage HTML pour chaque propriété du modèle.</summary>
      <returns>Balisage HTML retourné pour chaque propriété du modèle.</returns>
      <param name="html">Instance de l'application auxiliaire HTML qui est étendue par cette méthode.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Retourne un balisage HTML pour chaque propriété du modèle, à l'aide de données d'affichage supplémentaires.</summary>
      <returns>Balisage HTML retourné pour chaque propriété du modèle.</returns>
      <param name="html">Instance de l'application auxiliaire HTML qui est étendue par cette méthode.</param>
      <param name="additionalViewData">Objet anonyme qui peut contenir des données de vue supplémentaires qui seront fusionnées dans l'instance <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> créée pour le modèle.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Retourne un balisage HTML pour chaque propriété du modèle, à l'aide du modèle spécifié.</summary>
      <returns>Balisage HTML retourné pour chaque propriété du modèle.</returns>
      <param name="html">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="templateName">Nom du modèle utilisé pour restituer l'objet.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Retourne un balisage HTML pour chaque propriété du modèle, à l'aide du modèle spécifié et des données d'affichage supplémentaires.</summary>
      <returns>Balisage HTML retourné pour chaque propriété du modèle.</returns>
      <param name="html">Instance de l'application auxiliaire HTML qui est étendue par cette méthode.</param>
      <param name="templateName">Nom du modèle utilisé pour restituer l'objet.</param>
      <param name="additionalViewData">Objet anonyme qui peut contenir des données de vue supplémentaires qui seront fusionnées dans l'instance <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> créée pour le modèle.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Retourne un balisage HTML pour chaque propriété du modèle, à l'aide du nom du modèle et d'un ID de champ HTML spécifiés.</summary>
      <returns>Balisage HTML retourné pour chaque propriété du modèle.</returns>
      <param name="html">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="templateName">Nom du modèle utilisé pour restituer l'objet.</param>
      <param name="htmlFieldName">Chaîne utilisée pour lever l'ambiguïté des noms des éléments HTML input rendus pour les propriétés qui portent le même nom.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Retourne un balisage HTML pour chaque propriété du modèle, à l'aide du modèle spécifié, d'un ID de champ HTML et des données d'affichage supplémentaires.</summary>
      <returns>Balisage HTML retourné pour chaque propriété du modèle.</returns>
      <param name="html">Instance de l'application auxiliaire HTML qui est étendue par cette méthode.</param>
      <param name="templateName">Nom du modèle utilisé pour restituer l'objet.</param>
      <param name="htmlFieldName">Chaîne utilisée pour lever l'ambiguïté des noms des éléments HTML input rendus pour les propriétés qui portent le même nom.</param>
      <param name="additionalViewData">Objet anonyme qui peut contenir des données de vue supplémentaires qui seront fusionnées dans l'instance <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> créée pour le modèle.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.DisplayTextExtensions">
      <summary>Offre un moyen pour restituer des valeurs d'objet sous forme de code HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayTextExtensions.DisplayText(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Retourne un balisage HTML pour chaque propriété de l'objet qui est représenté par l'expression spécifiée.</summary>
      <returns>Balisage HTML pour chaque propriété de l'objet représenté par l'expression.</returns>
      <param name="html">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="name">Expression identifiant l'objet qui contient les propriétés à afficher.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayTextExtensions.DisplayTextFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2})">
      <summary>Retourne un balisage HTML pour chaque propriété de l'objet qui est représenté par l'expression spécifiée.</summary>
      <returns>Retourne <see cref="T:System.Web.Mvc.MvcHtmlString" />.</returns>
      <param name="html">Instance de l'application auxiliaire HTML qui est étendue par cette méthode.</param>
      <param name="expression">Expression identifiant l'objet qui contient les propriétés à afficher.</param>
      <typeparam name="TModel">Type du modèle.</typeparam>
      <typeparam name="TResult">Type de résultat.</typeparam>
    </member>
    <member name="T:System.Web.Mvc.Html.EditorExtensions">
      <summary>Représente la prise en charge de l'élément input HTML dans une application.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Retourne un élément input HTML pour chaque propriété de l'objet qui est représenté par l'expression.</summary>
      <returns>Élément HTML input pour chaque propriété de l'objet représenté par l'expression.</returns>
      <param name="html">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="expression">Expression identifiant l'objet qui contient les propriétés à afficher.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Retourne un élément input HTML pour chaque propriété de l'objet qui est représenté par l'expression spécifiée, à l'aide des données d'affichage supplémentaires.</summary>
      <returns>Élément HTML input pour chaque propriété de l'objet représenté par l'expression.</returns>
      <param name="html">Instance de l'application auxiliaire HTML qui est étendue par cette méthode.</param>
      <param name="expression">Expression identifiant l'objet qui contient les propriétés à afficher.</param>
      <param name="additionalViewData">Objet anonyme qui peut contenir des données de vue supplémentaires qui seront fusionnées dans l'instance <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> créée pour le modèle.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Retourne un élément input HTML pour chaque propriété de l'objet qui est représenté par l'expression, à l'aide du modèle spécifié.</summary>
      <returns>Élément HTML input pour chaque propriété de l'objet représenté par l'expression.</returns>
      <param name="html">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="expression">Expression identifiant l'objet qui contient les propriétés à afficher.</param>
      <param name="templateName">Nom du modèle à utiliser pour restituer l'objet.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Retourne un élément input HTML pour chaque propriété de l'objet qui est représenté par l'expression, à l'aide du modèle spécifié et des données d'affichage supplémentaires.</summary>
      <returns>Élément HTML input pour chaque propriété de l'objet représenté par l'expression.</returns>
      <param name="html">Instance de l'application auxiliaire HTML qui est étendue par cette méthode.</param>
      <param name="expression">Expression identifiant l'objet qui contient les propriétés à afficher.</param>
      <param name="templateName">Nom du modèle à utiliser pour restituer l'objet.</param>
      <param name="additionalViewData">Objet anonyme qui peut contenir des données de vue supplémentaires qui seront fusionnées dans l'instance <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> créée pour le modèle.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>Retourne un élément input HTML pour chaque propriété de l'objet qui est représenté par l'expression, à l'aide du modèle et du nom de champ HTML spécifiés.</summary>
      <returns>Élément HTML input pour chaque propriété de l'objet représenté par l'expression.</returns>
      <param name="html">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="expression">Expression identifiant l'objet qui contient les propriétés à afficher.</param>
      <param name="templateName">Nom du modèle à utiliser pour restituer l'objet.</param>
      <param name="htmlFieldName">Chaîne utilisée pour lever l'ambiguïté des noms des éléments HTML input rendus pour les propriétés qui portent le même nom.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object)">
      <summary>Retourne un élément input HTML pour chaque propriété de l'objet qui est représenté par l'expression, à l'aide du modèle spécifié, du nom du champ HTML et des données d'affichage supplémentaires.</summary>
      <returns>Élément HTML input pour chaque propriété de l'objet représenté par l'expression.</returns>
      <param name="html">Instance de l'application auxiliaire HTML qui est étendue par cette méthode.</param>
      <param name="expression">Expression identifiant l'objet qui contient les propriétés à afficher.</param>
      <param name="templateName">Nom du modèle à utiliser pour restituer l'objet.</param>
      <param name="htmlFieldName">Chaîne utilisée pour lever l'ambiguïté des noms des éléments HTML input rendus pour les propriétés qui portent le même nom.</param>
      <param name="additionalViewData">Objet anonyme qui peut contenir des données de vue supplémentaires qui seront fusionnées dans l'instance <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> créée pour le modèle.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2})">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TValue"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TValue"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean,``0)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TValue"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean,``0,``1)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TValue"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Retourne un élément input HTML pour chaque propriété du modèle.</summary>
      <returns>Élément input HTML retourné pour chaque propriété du modèle.</returns>
      <param name="html">Instance de l'application auxiliaire HTML qui est étendue par cette méthode.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Retourne un élément HTML input pour chaque propriété du modèle, à l'aide de données d'affichage supplémentaires.</summary>
      <returns>Élément input HTML retourné pour chaque propriété du modèle.</returns>
      <param name="html">Instance de l'application auxiliaire HTML qui est étendue par cette méthode.</param>
      <param name="additionalViewData">Objet anonyme qui peut contenir des données de vue supplémentaires qui seront fusionnées dans l'instance <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> créée pour le modèle.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Retourne un élément HTML input pour chaque propriété du modèle, à l'aide du modèle spécifié.</summary>
      <returns>Élément input HTML retourné pour chaque propriété du modèle et du modèle (template) spécifié.</returns>
      <param name="html">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="templateName">Nom du modèle à utiliser pour restituer l'objet.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Retourne un élément HTML input pour chaque propriété du modèle, à l'aide du modèle spécifié et des données d'affichage supplémentaires.</summary>
      <returns>Élément input HTML retourné pour chaque propriété du modèle.</returns>
      <param name="html">Instance de l'application auxiliaire HTML qui est étendue par cette méthode.</param>
      <param name="templateName">Nom du modèle à utiliser pour restituer l'objet.</param>
      <param name="additionalViewData">Objet anonyme qui peut contenir des données de vue supplémentaires qui seront fusionnées dans l'instance <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> créée pour le modèle.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Retourne un élément input HTML pour chaque propriété du modèle, à l'aide du nom du modèle (template) spécifié et du nom de champ HTML.</summary>
      <returns>Élément input HTML retourné pour chaque propriété du modèle et du modèle (template) nommé.</returns>
      <param name="html">Instance de l'application auxiliaire HTML qui est étendue par cette méthode.</param>
      <param name="templateName">Nom du modèle à utiliser pour restituer l'objet.</param>
      <param name="htmlFieldName">Chaîne utilisée pour lever l'ambiguïté des noms des éléments HTML input rendus pour les propriétés qui portent le même nom.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Retourne un élément input HTML pour chaque propriété du modèle, à l'aide du nom du modèle (template), du nom du champ HTML et des données d'affichage supplémentaires.</summary>
      <returns>Élément input HTML retourné pour chaque propriété du modèle.</returns>
      <param name="html">Instance de l'application auxiliaire HTML qui est étendue par cette méthode.</param>
      <param name="templateName">Nom du modèle à utiliser pour restituer l'objet.</param>
      <param name="htmlFieldName">Chaîne utilisée pour lever l'ambiguïté des noms des éléments HTML input rendus pour les propriétés qui portent le même nom.</param>
      <param name="additionalViewData">Objet anonyme qui peut contenir des données de vue supplémentaires qui seront fusionnées dans l'instance <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> créée pour le modèle.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.FormExtensions">
      <summary>Représente la prise en charge d'un élément HTML dans une application.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper)">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse. Lorsque l'utilisateur enverra le formulaire, la demande sera traitée par une méthode d'action.</summary>
      <returns>Balise d'ouverture &lt;form&gt;. </returns>
      <param name="htmlHelper">Instance de l'application auxiliaire HTML qui est étendue par cette méthode.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse. Lorsque l'utilisateur enverra le formulaire, la demande sera traitée par une méthode d'action.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. Cet objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse. Lorsque l'utilisateur enverra le formulaire, la demande sera traitée par une méthode d'action.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="actionName">Nom de la méthode d'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse. Lorsque l'utilisateur enverra le formulaire, la demande sera traitée par une méthode d'action.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="actionName">Nom de la méthode d'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. Cet objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Web.Mvc.FormMethod)">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse. Lorsque l'utilisateur enverra le formulaire, la demande sera traitée par une méthode d'action.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="actionName">Nom de la méthode d'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. Cet objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
      <param name="method">Méthode HTTP pour le traitement du formulaire, GET ou POST.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Web.Mvc.FormMethod,System.Object)">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse. Lorsque l'utilisateur enverra le formulaire, la demande sera traitée par une méthode d'action.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="actionName">Nom de la méthode d'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. Cet objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
      <param name="method">Méthode HTTP pour le traitement du formulaire, GET ou POST.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod)">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse. Lorsque l'utilisateur enverra le formulaire, la demande sera traitée par une méthode d'action.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="actionName">Nom de la méthode d'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="method">Méthode HTTP pour le traitement du formulaire, GET ou POST.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse. Lorsque l'utilisateur enverra le formulaire, la demande sera traitée par une méthode d'action.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="actionName">Nom de la méthode d'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="method">Méthode HTTP pour le traitement du formulaire, GET ou POST.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod,System.Object)">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse. Lorsque l'utilisateur enverra le formulaire, la demande sera traitée par une méthode d'action.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="actionName">Nom de la méthode d'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="method">Méthode HTTP pour le traitement du formulaire, GET ou POST.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse. Lorsque l'utilisateur enverra le formulaire, la demande sera traitée par une méthode d'action.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="actionName">Nom de la méthode d'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod)">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse. Lorsque l'utilisateur enverra le formulaire, la demande sera traitée par une méthode d'action.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="actionName">Nom de la méthode d'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
      <param name="method">Méthode HTTP pour le traitement du formulaire, GET ou POST.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse. Lorsque l'utilisateur enverra le formulaire, la demande sera traitée par une méthode d'action.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="actionName">Nom de la méthode d'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
      <param name="method">Méthode HTTP pour le traitement du formulaire, GET ou POST.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.Web.Routing.RouteValueDictionary)">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse. Lorsque l'utilisateur enverra le formulaire, la demande sera traitée par une méthode d'action.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse. Lorsque l'utilisateur enverra le formulaire, la demande sera traitée par la cible de l'itinéraire.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. Cet objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse. Lorsque l'utilisateur enverra le formulaire, la demande sera traitée par la cible de l'itinéraire.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="routeName">Nom de l'itinéraire utilisé pour obtenir l'URL de publication de formulaire.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse. Lorsque l'utilisateur enverra le formulaire, la demande sera traitée par la cible de l'itinéraire.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="routeName">Nom de l'itinéraire utilisé pour obtenir l'URL de publication de formulaire.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. Cet objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.FormMethod)">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse. Lorsque l'utilisateur enverra le formulaire, la demande sera traitée par la cible de l'itinéraire.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="routeName">Nom de l'itinéraire utilisé pour obtenir l'URL de publication de formulaire.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. Cet objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
      <param name="method">Méthode HTTP pour le traitement du formulaire, GET ou POST.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.FormMethod,System.Object)">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse. Lorsque l'utilisateur enverra le formulaire, la demande sera traitée par la cible de l'itinéraire.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="routeName">Nom de l'itinéraire utilisé pour obtenir l'URL de publication de formulaire.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. Cet objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
      <param name="method">Méthode HTTP pour le traitement du formulaire, GET ou POST.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod)">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse. Lorsque l'utilisateur enverra le formulaire, la demande sera traitée par la cible de l'itinéraire.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="routeName">Nom de l'itinéraire utilisé pour obtenir l'URL de publication de formulaire.</param>
      <param name="method">Méthode HTTP pour le traitement du formulaire, GET ou POST.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse. Lorsque l'utilisateur enverra le formulaire, la demande sera traitée par la cible de l'itinéraire.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="routeName">Nom de l'itinéraire utilisé pour obtenir l'URL de publication de formulaire.</param>
      <param name="method">Méthode HTTP pour le traitement du formulaire, GET ou POST.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod,System.Object)">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse. Lorsque l'utilisateur enverra le formulaire, la demande sera traitée par la cible de l'itinéraire.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="routeName">Nom de l'itinéraire utilisé pour obtenir l'URL de publication de formulaire.</param>
      <param name="method">Méthode HTTP pour le traitement du formulaire, GET ou POST.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse. Lorsque l'utilisateur enverra le formulaire, la demande sera traitée par la cible de l'itinéraire.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="routeName">Nom de l'itinéraire utilisé pour obtenir l'URL de publication de formulaire.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod)">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse. Lorsque l'utilisateur enverra le formulaire, la demande sera traitée par la cible de l'itinéraire.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="routeName">Nom de l'itinéraire utilisé pour obtenir l'URL de publication de formulaire.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
      <param name="method">Méthode HTTP pour le traitement du formulaire, GET ou POST.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse. Lorsque l'utilisateur enverra le formulaire, la demande sera traitée par la cible de l'itinéraire.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="routeName">Nom de l'itinéraire utilisé pour obtenir l'URL de publication de formulaire.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
      <param name="method">Méthode HTTP pour le traitement du formulaire, GET ou POST.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.Web.Routing.RouteValueDictionary)">
      <summary>Écrit une balise &lt;form&gt; d'ouverture dans la réponse. Lorsque l'utilisateur enverra le formulaire, la demande sera traitée par la cible de l'itinéraire.</summary>
      <returns>Balise d'ouverture &lt;form&gt;.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.EndForm(System.Web.Mvc.HtmlHelper)">
      <summary>Restitue la balise &lt;/form&gt; de fermeture dans la réponse. </summary>
      <param name="htmlHelper">Instance de l'application auxiliaire HTML qui est étendue par cette méthode.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.InputExtensions">
      <summary>Représente la prise en charge des contrôles d'entrée HTML dans une application.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Retourne un élément input de case à cocher à l'aide du programme d'assistance HTML spécifié et du nom du champ de formulaire.</summary>
      <returns>Élément input dont l'attribut type a la valeur "checkbox".</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean)">
      <summary>Retourne un élément input de case à cocher à l'aide du programme d'assistance HTML spécifié, du nom du champ de formulaire et d'une valeur indiquant si la case à cocher est activée.</summary>
      <returns>Élément input dont l'attribut type a la valeur "checkbox".</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire.</param>
      <param name="isChecked">true pour activer la case à cocher ; sinon, false.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un élément input de case à cocher à l'aide du programme d'assistance HTML spécifié, du nom du champ de formulaire, d'une valeur indiquant si la case à cocher est activée et des attributs HTML.</summary>
      <returns>Élément input dont l'attribut type a la valeur "checkbox".</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire.</param>
      <param name="isChecked">true pour activer la case à cocher ; sinon, false.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean,System.Object)">
      <summary>Retourne un élément input de case à cocher à l'aide du programme d'assistance HTML spécifié, du nom du champ de formulaire, d'une valeur indiquant si la case à cocher est activée et des attributs HTML.</summary>
      <returns>Élément input dont l'attribut type a la valeur "checkbox".</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire.</param>
      <param name="isChecked">true pour activer la case à cocher ; sinon, false.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un élément input de case à cocher à l'aide du programme d'assistance HTML spécifié, du nom du champ de formulaire et des attributs HTML.</summary>
      <returns>Élément input dont l'attribut type a la valeur "checkbox".</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Retourne un élément input de case à cocher à l'aide du programme d'assistance HTML spécifié, du nom du champ de formulaire et des attributs HTML.</summary>
      <returns>Élément input dont l'attribut type a la valeur "checkbox".</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2})">
      <typeparam name="TModel"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean)">
      <typeparam name="TModel"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Retourne un élément input masqué à l'aide du programme d'assistance HTML spécifié et du nom du champ de formulaire.</summary>
      <returns>Élément input dont l'attribut type a la valeur "hidden".</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire et clé <see cref="T:System.Web.Mvc.ViewDataDictionary" /> utilisée pour rechercher la valeur.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Retourne un élément input masqué à l'aide du programme d'assistance HTML spécifié, du nom du champ de formulaire et de la valeur.</summary>
      <returns>Élément input dont l'attribut type a la valeur "hidden".</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire et clé <see cref="T:System.Web.Mvc.ViewDataDictionary" /> utilisée pour rechercher la valeur.</param>
      <param name="value">Valeur de l'élément input masqué. Si cette valeur est null, la valeur de l'élément est récupérée à partir de l'objet <see cref="T:System.Web.Mvc.ViewDataDictionary" />. Si aucune valeur n'existe à cet endroit, la valeur est récupérée de l'objet <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un élément input masqué à l'aide du programme d'assistance HTML spécifié, du nom du champ de formulaire, de la valeur et des attributs HTML.</summary>
      <returns>Élément input dont l'attribut type a la valeur "hidden".</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire et clé <see cref="T:System.Web.Mvc.ViewDataDictionary" /> utilisée pour rechercher la valeur.</param>
      <param name="value">Valeur de l'élément input masqué. Si cette valeur est null, la valeur de l'élément est récupérée à partir de l'objet <see cref="T:System.Web.Mvc.ViewDataDictionary" />. Si aucune valeur n'existe à cet endroit, la valeur est récupérée de l'objet <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Retourne un élément input masqué à l'aide du programme d'assistance HTML spécifié, du nom du champ de formulaire, de la valeur et des attributs HTML.</summary>
      <returns>Élément input dont l'attribut type a la valeur "hidden".</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire et clé <see cref="T:System.Web.Mvc.ViewDataDictionary" /> utilisée pour rechercher la valeur.</param>
      <param name="value">Valeur de l'élément input masqué. Si cette valeur est null, la valeur de l'élément est récupérée à partir de l'objet <see cref="T:System.Web.Mvc.ViewDataDictionary" />. Si aucune valeur n'existe à cet endroit, la valeur est récupérée de l'objet <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2})">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Retourne un élément input de mot de passe à l'aide du programme d'assistance HTML spécifié et du nom du champ de formulaire.</summary>
      <returns>Élément input dont l'attribut type a la valeur "password".</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire et clé <see cref="T:System.Web.Mvc.ViewDataDictionary" /> utilisée pour rechercher la valeur.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Retourne un élément input de mot de passe à l'aide du programme d'assistance HTML spécifié, du nom du champ de formulaire et de la valeur.</summary>
      <returns>Élément input dont l'attribut type a la valeur "password".</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire et clé <see cref="T:System.Web.Mvc.ViewDataDictionary" /> utilisée pour rechercher la valeur.</param>
      <param name="value">Valeur de l'élément input de mot de passe. Si cette valeur est null, la valeur de l'élément est récupérée à partir de l'objet <see cref="T:System.Web.Mvc.ViewDataDictionary" />. Si aucune valeur n'existe à cet endroit, la valeur est récupérée de l'objet <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un élément input de mot de passe à l'aide du programme d'assistance HTML spécifié, du nom du champ de formulaire, de la valeur et des attributs HTML.</summary>
      <returns>Élément input dont l'attribut type a la valeur "password".</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire et clé <see cref="T:System.Web.Mvc.ViewDataDictionary" /> utilisée pour rechercher la valeur.</param>
      <param name="value">Valeur de l'élément input de mot de passe. Si cette valeur est null, la valeur de l'élément est récupérée à partir de l'objet <see cref="T:System.Web.Mvc.ViewDataDictionary" />. Si aucune valeur n'existe à cet endroit, la valeur est récupérée de l'objet <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Retourne un élément input de mot de passe à l'aide du programme d'assistance HTML spécifié, du nom du champ de formulaire, de la valeur et des attributs HTML.</summary>
      <returns>Élément input dont l'attribut type a la valeur "password".</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire et clé <see cref="T:System.Web.Mvc.ViewDataDictionary" /> utilisée pour rechercher la valeur.</param>
      <param name="value">Valeur de l'élément input de mot de passe. Si cette valeur est null, la valeur de l'élément est récupérée à partir de l'objet <see cref="T:System.Web.Mvc.ViewDataDictionary" />. Si aucune valeur n'existe à cet endroit, la valeur est récupérée de l'objet <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2})">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Retourne un élément input de case d'option utilisé pour présenter des options mutuellement exclusives.</summary>
      <returns>Élément input dont l'attribut type a la valeur "radio".</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire et clé <see cref="T:System.Web.Mvc.ViewDataDictionary" /> utilisée pour rechercher la valeur.</param>
      <param name="value">Si la case d'option est activée, valeur de la case d'option envoyée lors de la publication du formulaire. Si la valeur de la case d'option sélectionnée dans l'objet <see cref="T:System.Web.Mvc.ViewDataDictionary" /> ou <see cref="T:System.Web.Mvc.ModelStateDictionary" /> correspond à cette valeur, cette case d'option est activée.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="name" /> a la valeur null ou est vide.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="value" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean)">
      <summary>Retourne un élément input de case d'option utilisé pour présenter des options mutuellement exclusives.</summary>
      <returns>Élément input dont l'attribut type a la valeur "radio".</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire et clé <see cref="T:System.Web.Mvc.ViewDataDictionary" /> utilisée pour rechercher la valeur.</param>
      <param name="value">Si la case d'option est activée, valeur de la case d'option envoyée lors de la publication du formulaire. Si la valeur de la case d'option sélectionnée dans l'objet <see cref="T:System.Web.Mvc.ViewDataDictionary" /> ou <see cref="T:System.Web.Mvc.ModelStateDictionary" /> correspond à cette valeur, cette case d'option est activée.</param>
      <param name="isChecked">true pour activer la case d'option ; sinon, false.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="name" /> a la valeur null ou est vide.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="value" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un élément input de case d'option utilisé pour présenter des options mutuellement exclusives.</summary>
      <returns>Élément input dont l'attribut type a la valeur "radio".</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire et clé <see cref="T:System.Web.Mvc.ViewDataDictionary" /> utilisée pour rechercher la valeur.</param>
      <param name="value">Si la case d'option est activée, valeur de la case d'option envoyée lors de la publication du formulaire. Si la valeur de la case d'option sélectionnée dans l'objet <see cref="T:System.Web.Mvc.ViewDataDictionary" /> ou <see cref="T:System.Web.Mvc.ModelStateDictionary" /> correspond à cette valeur, cette case d'option est activée.</param>
      <param name="isChecked">true pour activer la case d'option ; sinon, false.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="name" /> a la valeur null ou est vide.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="value" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean,System.Object)">
      <summary>Retourne un élément input de case d'option utilisé pour présenter des options mutuellement exclusives.</summary>
      <returns>Élément input dont l'attribut type a la valeur "radio".</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire et clé <see cref="T:System.Web.Mvc.ViewDataDictionary" /> utilisée pour rechercher la valeur.</param>
      <param name="value">Si la case d'option est activée, valeur de la case d'option envoyée lors de la publication du formulaire. Si la valeur de la case d'option sélectionnée dans l'objet <see cref="T:System.Web.Mvc.ViewDataDictionary" /> ou <see cref="T:System.Web.Mvc.ModelStateDictionary" /> correspond à cette valeur, cette case d'option est activée.</param>
      <param name="isChecked">true pour activer la case d'option ; sinon, false.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="name" /> a la valeur null ou est vide.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="value" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un élément input de case d'option utilisé pour présenter des options mutuellement exclusives.</summary>
      <returns>Élément input dont l'attribut type a la valeur "radio".</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire et clé <see cref="T:System.Web.Mvc.ViewDataDictionary" /> utilisée pour rechercher la valeur.</param>
      <param name="value">Si la case d'option est activée, valeur de la case d'option envoyée lors de la publication du formulaire. Si la valeur de la case d'option sélectionnée dans l'objet <see cref="T:System.Web.Mvc.ViewDataDictionary" /> ou <see cref="T:System.Web.Mvc.ModelStateDictionary" /> correspond à cette valeur, cette case d'option est activée.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="name" /> a la valeur null ou est vide.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="value" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Retourne un élément input de case d'option utilisé pour présenter des options mutuellement exclusives.</summary>
      <returns>Élément input dont l'attribut type a la valeur "radio".</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire et clé <see cref="T:System.Web.Mvc.ViewDataDictionary" /> utilisée pour rechercher la valeur.</param>
      <param name="value">Si la case d'option est activée, valeur de la case d'option envoyée lors de la publication du formulaire. Si la valeur de la case d'option sélectionnée dans l'objet <see cref="T:System.Web.Mvc.ViewDataDictionary" /> ou <see cref="T:System.Web.Mvc.ModelStateDictionary" /> correspond à cette valeur, cette case d'option est activée.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="name" /> a la valeur null ou est vide.</exception>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="value" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean,``0)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Retourne un élément input de texte à l'aide du programme d'assistance HTML spécifié et du nom du champ de formulaire.</summary>
      <returns>Élément input dont l'attribut type a la valeur "text".</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire et clé <see cref="T:System.Web.Mvc.ViewDataDictionary" /> utilisée pour rechercher la valeur.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Retourne un élément input de texte à l'aide du programme d'assistance HTML spécifié, du nom du champ de formulaire et de la valeur.</summary>
      <returns>Élément input dont l'attribut type a la valeur "text".</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire et clé <see cref="T:System.Web.Mvc.ViewDataDictionary" /> utilisée pour rechercher la valeur.</param>
      <param name="value">Valeur de l'élément input de texte. Si cette valeur est null, la valeur de l'élément est récupérée à partir de l'objet <see cref="T:System.Web.Mvc.ViewDataDictionary" />. Si aucune valeur n'existe à cet endroit, la valeur est récupérée de l'objet <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un élément input de texte à l'aide du programme d'assistance HTML spécifié, du nom du champ de formulaire, de la valeur et des attributs HTML.</summary>
      <returns>Élément input dont l'attribut type a la valeur "text".</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire et clé <see cref="T:System.Web.Mvc.ViewDataDictionary" /> utilisée pour rechercher la valeur.</param>
      <param name="value">Valeur de l'élément input de texte. Si cette valeur est null, la valeur de l'élément est récupérée à partir de l'objet <see cref="T:System.Web.Mvc.ViewDataDictionary" />. Si aucune valeur n'existe à cet endroit, la valeur est récupérée de l'objet <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Retourne un élément input de texte à l'aide du programme d'assistance HTML spécifié, du nom du champ de formulaire, de la valeur et des attributs HTML.</summary>
      <returns>Élément input dont l'attribut type a la valeur "text".</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire et clé <see cref="T:System.Web.Mvc.ViewDataDictionary" /> utilisée pour rechercher la valeur.</param>
      <param name="value">Valeur de l'élément input de texte. Si cette valeur est null, la valeur de l'élément est récupérée à partir de l'objet <see cref="T:System.Web.Mvc.ViewDataDictionary" />. Si aucune valeur n'existe à cet endroit, la valeur est récupérée de l'objet <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2})">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="T:System.Web.Mvc.Html.LabelExtensions">
      <summary>Représente la prise en charge de l'élément label HTML dans une vue ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Retourne un élément label HTML et le nom de la propriété qui est représentée par l'expression spécifiée.</summary>
      <returns>Élément label HTML et nom de la propriété qui est représentée par l'expression.</returns>
      <param name="html">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="expression">Expression qui identifie la propriété à afficher.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <returns>Retourne <see cref="T:System.Web.Mvc.MvcHtmlString" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2})">
      <summary>Retourne un élément label HTML et le nom de la propriété qui est représentée par l'expression spécifiée.</summary>
      <returns>Élément label HTML et nom de la propriété qui est représentée par l'expression.</returns>
      <param name="html">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="expression">Expression qui identifie la propriété à afficher.</param>
      <typeparam name="TModel">Type du modèle.</typeparam>
      <typeparam name="TValue">Type de la valeur.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TValue"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Retourne un élément label HTML et le nom de la propriété qui est représentée par le modèle.</summary>
      <returns>Élément label HTML et nom de la propriété qui est représentée par le modèle.</returns>
      <param name="html">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <returns>Retourne <see cref="T:System.Web.Mvc.MvcHtmlString" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.Html.LinkExtensions">
      <summary>Représente la prise en charge des liens HTML dans une application.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Retourne un élément d'ancrage (élément a) qui contient le chemin d'accès virtuel de l'action spécifiée.</summary>
      <returns>Élément d'ancrage (élément a).</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="actionName">Nom de l'action.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Retourne un élément d'ancrage (élément a) qui contient le chemin d'accès virtuel de l'action spécifiée.</summary>
      <returns>Élément d'ancrage (élément a).</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="actionName">Nom de l'action.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. L'objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Object)">
      <summary>Retourne un élément d'ancrage (élément a) qui contient le chemin d'accès virtuel de l'action spécifiée.</summary>
      <returns>Élément d'ancrage (élément a).</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="actionName">Nom de l'action.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. L'objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML de l'élément. Les attributs sont récupérés par réflexion en examinant les propriétés de l'objet. L'objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>Retourne un élément d'ancrage (élément a) qui contient le chemin d'accès virtuel de l'action spécifiée.</summary>
      <returns>Élément d'ancrage (élément a).</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="actionName">Nom de l'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object,System.Object)">
      <summary>Retourne un élément d'ancrage (élément a) qui contient le chemin d'accès virtuel de l'action spécifiée.</summary>
      <returns>Élément d'ancrage (élément a).</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="actionName">Nom de l'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. L'objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
      <summary>Retourne un élément d'ancrage (élément a) qui contient le chemin d'accès virtuel de l'action spécifiée.</summary>
      <returns>Élément d'ancrage (élément a).</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="actionName">Nom de l'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="protocol">Protocole de l'URL, par exemple "http" ou "https".</param>
      <param name="hostName">Nom d'hôte de l'URL.</param>
      <param name="fragment">Nom du fragment d'URL (nom de l'ancre).</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. L'objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un élément d'ancrage (élément a) qui contient le chemin d'accès virtuel de l'action spécifiée.</summary>
      <returns>Élément d'ancrage (élément a).</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="actionName">Nom de l'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="protocol">Protocole de l'URL, par exemple "http" ou "https".</param>
      <param name="hostName">Nom d'hôte de l'URL.</param>
      <param name="fragment">Nom du fragment d'URL (nom de l'ancre).</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un élément d'ancrage (élément a) qui contient le chemin d'accès virtuel de l'action spécifiée.</summary>
      <returns>Élément d'ancrage (élément a).</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="actionName">Nom de l'action.</param>
      <param name="controllerName">Nom du contrôleur.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Retourne un élément d'ancrage (élément a) qui contient le chemin d'accès virtuel de l'action spécifiée.</summary>
      <returns>Élément d'ancrage (élément a).</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="actionName">Nom de l'action.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un élément d'ancrage (élément a) qui contient le chemin d'accès virtuel de l'action spécifiée.</summary>
      <returns>Élément d'ancrage (élément a).</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="actionName">Nom de l'action.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Retourne un élément d'ancrage (élément a) qui contient le chemin d'accès virtuel de l'action spécifiée.</summary>
      <returns>Élément d'ancrage (élément a).</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. L'objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Retourne un élément d'ancrage (élément a) qui contient le chemin d'accès virtuel de l'action spécifiée.</summary>
      <returns>Élément d'ancrage (élément a).</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. L'objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Retourne un élément d'ancrage (élément a) qui contient le chemin d'accès virtuel de l'action spécifiée.</summary>
      <returns>Élément d'ancrage (élément a).</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="routeName">Nom de l'itinéraire utilisé pour retourner un chemin d'accès virtuel.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Retourne un élément d'ancrage (élément a) qui contient le chemin d'accès virtuel de l'action spécifiée.</summary>
      <returns>Élément d'ancrage (élément a).</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="routeName">Nom de l'itinéraire utilisé pour retourner un chemin d'accès virtuel.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. L'objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Object)">
      <summary>Retourne un élément d'ancrage (élément a) qui contient le chemin d'accès virtuel de l'action spécifiée.</summary>
      <returns>Élément d'ancrage (élément a).</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="routeName">Nom de l'itinéraire utilisé pour retourner un chemin d'accès virtuel.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. L'objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
      <summary>Retourne un élément d'ancrage (élément a) qui contient le chemin d'accès virtuel de l'action spécifiée.</summary>
      <returns>Élément d'ancrage (élément a).</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="routeName">Nom de l'itinéraire utilisé pour retourner un chemin d'accès virtuel.</param>
      <param name="protocol">Protocole de l'URL, par exemple "http" ou "https".</param>
      <param name="hostName">Nom d'hôte de l'URL.</param>
      <param name="fragment">Nom du fragment d'URL (nom de l'ancre).</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. Les paramètres sont récupérés par réflexion en examinant les propriétés de l'objet. L'objet est généralement créé à l'aide de la syntaxe de l'initialiseur d'objet.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un élément d'ancrage (élément a) qui contient le chemin d'accès virtuel de l'action spécifiée.</summary>
      <returns>Élément d'ancrage (élément a).</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="routeName">Nom de l'itinéraire utilisé pour retourner un chemin d'accès virtuel.</param>
      <param name="protocol">Protocole de l'URL, par exemple "http" ou "https".</param>
      <param name="hostName">Nom d'hôte de l'URL.</param>
      <param name="fragment">Nom du fragment d'URL (nom de l'ancre).</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Retourne un élément d'ancrage (élément a) qui contient le chemin d'accès virtuel de l'action spécifiée.</summary>
      <returns>Élément d'ancrage (élément a).</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="routeName">Nom de l'itinéraire utilisé pour retourner un chemin d'accès virtuel.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un élément d'ancrage (élément a) qui contient le chemin d'accès virtuel de l'action spécifiée.</summary>
      <returns>Élément d'ancrage (élément a).</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="routeName">Nom de l'itinéraire utilisé pour retourner un chemin d'accès virtuel.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire. </param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Retourne un élément d'ancrage (élément a) qui contient le chemin d'accès virtuel de l'action spécifiée.</summary>
      <returns>Élément d'ancrage (élément a).</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un élément d'ancrage (élément a) qui contient le chemin d'accès virtuel de l'action spécifiée.</summary>
      <returns>Élément d'ancrage (élément a).</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="linkText">Texte interne de l'élément d'ancrage.</param>
      <param name="routeValues">Objet qui contient les paramètres d'un itinéraire.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="linkText" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.MvcForm">
      <summary>Représente un élément form HTML dans une vue MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.#ctor(System.Web.HttpResponseBase)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.Html.MvcForm" /> en utilisant l'objet de réponse HTTP spécifié.</summary>
      <param name="httpResponse">Objet de réponse HTTP.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="httpResponse " />a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.#ctor(System.Web.Mvc.ViewContext)">
      <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Mvc.Html.MvcForm" /> à l'aide du contexte d'affichage spécifié.</summary>
      <param name="viewContext">Objet qui encapsule les informations obligatoires pour restituer une vue.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="viewContext" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.Dispose">
      <summary>Libère toutes les ressources qui sont utilisées par l'instance actuelle de la classe <see cref="T:System.Web.Mvc.Html.MvcForm" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.Dispose(System.Boolean)">
      <summary>Libère les ressources non managées et, le cas échéant, les ressources managées qui sont utilisées par l'instance actuelle de la classe <see cref="T:System.Web.Mvc.Html.MvcForm" />.</summary>
      <param name="disposing">true pour libérer à la fois les ressources managées et non managées ; false pour ne libérer que les ressources non managées.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.EndForm">
      <summary>Termine le formulaire et supprime toutes les ressources de formulaire.</summary>
    </member>
    <member name="T:System.Web.Mvc.Html.PartialExtensions">
      <summary>Représente la fonctionnalité permettant de restituer une vue partielle en tant que chaîne encodée au format HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Restitue la vue partielle spécifiée sous la forme d'une chaîne encodée au format HTML.</summary>
      <returns>Vue partielle restituée sous la forme d'une chaîne encodée au format HTML.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML que cette méthode étend.</param>
      <param name="partialViewName">Nom de la vue partielle à restituer.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Restitue la vue partielle spécifiée sous la forme d'une chaîne encodée au format HTML.</summary>
      <returns>Vue partielle restituée sous la forme d'une chaîne encodée au format HTML.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML que cette méthode étend.</param>
      <param name="partialViewName">Nom de la vue partielle à restituer.</param>
      <param name="model">Modèle de la vue partielle.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.ViewDataDictionary)">
      <summary>Restitue la vue partielle spécifiée sous la forme d'une chaîne encodée au format HTML.</summary>
      <returns>Vue partielle restituée sous la forme d'une chaîne encodée au format HTML.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML que cette méthode étend.</param>
      <param name="partialViewName">Nom de la vue partielle.</param>
      <param name="model">Modèle de la vue partielle.</param>
      <param name="viewData">Dictionnaire de données d'affichage de la vue partielle.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.ViewDataDictionary)">
      <summary>Restitue la vue partielle spécifiée sous la forme d'une chaîne encodée au format HTML.</summary>
      <returns>Vue partielle restituée sous la forme d'une chaîne encodée au format HTML.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML que cette méthode étend.</param>
      <param name="partialViewName">Nom de la vue partielle à restituer.</param>
      <param name="viewData">Dictionnaire de données d'affichage de la vue partielle.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.RenderPartialExtensions">
      <summary>Prend en charge le rendu d'une vue partielle.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Restitue la vue partielle spécifiée à l'aide du programme d'assistance HMTL indiqué.</summary>
      <param name="htmlHelper">Application d'assistance HTML.</param>
      <param name="partialViewName">Nom de la vue partielle.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Restitue la vue partielle spécifiée, en lui passant une copie de l'objet <see cref="T:System.Web.Mvc.ViewDataDictionary" /> actuel, mais en définissant la propriété Model au modèle spécifié.</summary>
      <param name="htmlHelper">Application d'assistance HTML.</param>
      <param name="partialViewName">Nom de la vue partielle.</param>
      <param name="model">Modèle.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.ViewDataDictionary)">
      <summary>Restitue la vue partielle spécifiée, en remplaçant la propriété ViewData de la vue partielle par l'objet <see cref="T:System.Web.Mvc.ViewDataDictionary" /> indiqué et en définissant la propriété Model des données d'affichage au modèle spécifié.</summary>
      <param name="htmlHelper">Application d'assistance HTML.</param>
      <param name="partialViewName">Nom de la vue partielle.</param>
      <param name="model">Modèle de la vue partielle.</param>
      <param name="viewData">Données d'affichage de la vue partielle.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.ViewDataDictionary)">
      <summary>Restitue la vue partielle spécifiée, en remplaçant sa propriété ViewData par l'objet <see cref="T:System.Web.Mvc.ViewDataDictionary" /> indiqué.</summary>
      <param name="htmlHelper">Application d'assistance HTML.</param>
      <param name="partialViewName">Nom de la vue partielle.</param>
      <param name="viewData">Données d'affichage.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.SelectExtensions">
      <summary>Représente la prise en charge des opérations de sélection dans une liste.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Retourne un élément select à sélection unique à l'aide du programme d'assistance HTML et du nom du champ de formulaire spécifiés.</summary>
      <returns>Élément HTML select.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML que cette méthode étend.</param>
      <param name="name">Nom du champ de formulaire à retourner.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>Retourne un élément select à sélection unique à l'aide du programme d'assistance HTML, du nom du champ de formulaire et des éléments de liste spécifiés.</summary>
      <returns>Élément select HTML avec un sous-élément option pour chaque élément de la liste.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire à retourner.</param>
      <param name="selectList">Collection d'objets <see cref="T:System.Web.Mvc.SelectListItem" /> utilisés pour remplir la liste déroulante.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un élément select à sélection unique à l'aide du programme d'assistance HTML, du nom du champ de formulaire, des éléments de liste et des attributs HTML spécifiés.</summary>
      <returns>Élément select HTML avec un sous-élément option pour chaque élément de la liste.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire à retourner.</param>
      <param name="selectList">Collection d'objets <see cref="T:System.Web.Mvc.SelectListItem" /> utilisés pour remplir la liste déroulante.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>Retourne un élément select à sélection unique à l'aide du programme d'assistance HTML, du nom du champ de formulaire, des éléments de liste et des attributs HTML spécifiés.</summary>
      <returns>Élément select HTML avec un sous-élément option pour chaque élément de la liste.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire à retourner.</param>
      <param name="selectList">Collection d'objets <see cref="T:System.Web.Mvc.SelectListItem" /> utilisés pour remplir la liste déroulante.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String)">
      <summary>Retourne un élément select à sélection unique à l'aide du programme d'assistance HTML, du nom du champ de formulaire, des éléments de liste et d'une étiquette d'option spécifiés.</summary>
      <returns>Élément select HTML avec un sous-élément option pour chaque élément de la liste.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire à retourner.</param>
      <param name="selectList">Collection d'objets <see cref="T:System.Web.Mvc.SelectListItem" /> utilisés pour remplir la liste déroulante.</param>
      <param name="optionLabel">Texte d'un élément vide par défaut. Ce paramètre peut être null.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un élément select à sélection unique à l'aide du programme d'assistance HTML, du nom du champ de formulaire, des éléments de liste, d'une étiquette d'option et des attributs HTML spécifiés.</summary>
      <returns>Élément select HTML avec un sous-élément option pour chaque élément de la liste.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire à retourner.</param>
      <param name="selectList">Collection d'objets <see cref="T:System.Web.Mvc.SelectListItem" /> utilisés pour remplir la liste déroulante.</param>
      <param name="optionLabel">Texte d'un élément vide par défaut. Ce paramètre peut être null.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Object)">
      <summary>Retourne un élément select à sélection unique à l'aide du programme d'assistance HTML, du nom du champ de formulaire, des éléments de liste, d'une étiquette d'option et des attributs HTML spécifiés.</summary>
      <returns>Élément select HTML avec un sous-élément option pour chaque élément de la liste.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire à retourner.</param>
      <param name="selectList">Collection d'objets <see cref="T:System.Web.Mvc.SelectListItem" /> utilisés pour remplir la liste déroulante.</param>
      <param name="optionLabel">Texte d'un élément vide par défaut. Ce paramètre peut être null.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Retourne un élément select à sélection unique à l'aide du programme d'assistance HTML, du nom du champ de formulaire et d'une étiquette d'option spécifiés.</summary>
      <returns>Élément select HTML avec un sous-élément option pour chaque élément de la liste.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire à retourner.</param>
      <param name="optionLabel">Texte d'un élément vide par défaut. Ce paramètre peut être null.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean,``0)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean,``0,``1)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Retourne un élément select à sélection multiple à l'aide du programme d'assistance HTML et du nom du champ de formulaire spécifiés.</summary>
      <returns>Élément HTML select.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML que cette méthode étend.</param>
      <param name="name">Nom du champ de formulaire à retourner.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>Retourne un élément select à sélection multiple à l'aide du programme d'assistance HTML, du nom du champ de formulaire et des éléments de liste spécifiés.</summary>
      <returns>Élément select HTML avec un sous-élément option pour chaque élément de la liste.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire à retourner.</param>
      <param name="selectList">Collection d'objets <see cref="T:System.Web.Mvc.SelectListItem" /> utilisés pour remplir la liste déroulante.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne un élément select à sélection multiple à l'aide du programme d'assistance HTML, du nom du champ de formulaire, des éléments de liste et des attributs HTML spécifiés.</summary>
      <returns>Élément HTML select avec un sous-élément option pour chaque élément de la liste.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire à retourner.</param>
      <param name="selectList">Collection d'objets <see cref="T:System.Web.Mvc.SelectListItem" /> utilisés pour remplir la liste déroulante.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>Retourne un élément select à sélection multiple à l'aide du programme d'assistance HTML, du nom du champ de formulaire et des éléments de liste spécifiés.</summary>
      <returns>Élément HTML select avec un sous-élément option pour chaque élément de la liste.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire à retourner.</param>
      <param name="selectList">Collection d'objets <see cref="T:System.Web.Mvc.SelectListItem" /> utilisés pour remplir la liste déroulante.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
      <exception cref="T:System.ArgumentException">Le paramètre <paramref name="name" /> a la valeur null ou est vide.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean,``0)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="T:System.Web.Mvc.Html.TextAreaExtensions">
      <summary>Représente la prise en charge des contrôles textarea HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Retourne l'élément textarea spécifié à l'aide de l'application d'assistance HTML et du nom du champ de formulaire spécifiés.</summary>
      <returns>Élément textarea.</returns>
      <param name="htmlHelper">Instance de l'application auxiliaire HTML qui est étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire à retourner.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne l'élément textarea spécifié à l'aide de l'application d'assistance HTML, du nom du champ de formulaire et des attributs HTML spécifiés.</summary>
      <returns>Élément textarea.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire à retourner.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Retourne l'élément textarea spécifié à l'aide de l'application d'assistance HTML et des attributs HTML spécifiés.</summary>
      <returns>Élément textarea.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire à retourner.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Retourne l'élément textarea spécifié à l'aide de l'application d'assistance HTML, du nom du champ de formulaire et du texte spécifiés.</summary>
      <returns>Élément textarea.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire à retourner.</param>
      <param name="value">Texte.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne l'élément textarea spécifié à l'aide de l'application d'assistance HTML, du nom du champ de formulaire, du texte et des attributs HTML spécifiés.</summary>
      <returns>Élément textarea.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire à retourner.</param>
      <param name="value">Texte.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne l'élément textarea spécifié à l'aide de l'application d'assistance HTML, du nom du champ de formulaire, du texte, du nombre de lignes et de colonnes, et des attributs HTML spécifiés.</summary>
      <returns>Élément textarea.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire à retourner.</param>
      <param name="value">Texte.</param>
      <param name="rows">Nombre de lignes.</param>
      <param name="columns">Nombre de colonnes.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Int32,System.Int32,System.Object)">
      <summary>Retourne l'élément textarea spécifié à l'aide de l'application d'assistance HTML, du nom du champ de formulaire, du texte, du nombre de lignes et de colonnes, et des attributs HTML spécifiés.</summary>
      <returns>Élément textarea.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire à retourner.</param>
      <param name="value">Texte.</param>
      <param name="rows">Nombre de lignes.</param>
      <param name="columns">Nombre de colonnes.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Retourne l'élément textarea spécifié à l'aide de l'application d'assistance HTML, du nom du champ de formulaire, du texte et des attributs HTML spécifiés.</summary>
      <returns>Élément textarea.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML étendue par cette méthode.</param>
      <param name="name">Nom du champ de formulaire à retourner.</param>
      <param name="value">Texte.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML à définir pour l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2})">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean,``0,``1)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="T:System.Web.Mvc.Html.ValidationExtensions">
      <summary>Prend en charge la validation de l'entrée d'un formulaire HTML.</summary>
    </member>
    <member name="P:System.Web.Mvc.Html.ValidationExtensions.ResourceClassKey">
      <summary>Obtient ou définit le nom du fichier de ressources (clé de classe) qui contient des valeurs de chaînes localisées.</summary>
      <returns>Nom du fichier de ressources (clé de classe).</returns>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.Validate(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Extrait les métadonnées de validation pour le modèle spécifié et applique chaque règle au champ de données.</summary>
      <param name="htmlHelper">Instance du programme d'assistance HTML que cette méthode étend.</param>
      <param name="modelName">Nom de la propriété ou de l'objet de modèle en cours de validation.</param>
      <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="modelName" /> a la valeur null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidateFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2})">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Affiche un message de validation s'il existe dans l'objet <see cref="T:System.Web.Mvc.ModelStateDictionary" /> une erreur pour le champ spécifié.</summary>
      <returns>Si la propriété ou l'objet est valide, chaîne vide ; sinon, élément span qui contient un message d'erreur.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="modelName">Nom de la propriété ou de l'objet de modèle en cours de validation.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Affiche un message de validation s'il existe dans l'objet <see cref="T:System.Web.Mvc.ModelStateDictionary" /> une erreur pour le champ spécifié.</summary>
      <returns>Si la propriété ou l'objet est valide, chaîne vide ; sinon, élément span qui contient un message d'erreur.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="modelName">Nom de la propriété ou de l'objet de modèle en cours de validation.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML de l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Affiche un message de validation s'il existe dans l'objet <see cref="T:System.Web.Mvc.ModelStateDictionary" /> une erreur pour le champ spécifié.</summary>
      <returns>Si la propriété ou l'objet est valide, chaîne vide ; sinon, élément span qui contient un message d'erreur.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="modelName">Nom de la propriété ou de l'objet de modèle en cours de validation.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML de l'élément. </param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Affiche un message de validation s'il existe dans l'objet <see cref="T:System.Web.Mvc.ModelStateDictionary" /> une erreur pour le champ spécifié.</summary>
      <returns>Si la propriété ou l'objet est valide, chaîne vide ; sinon, élément span qui contient un message d'erreur.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="modelName">Nom de la propriété ou de l'objet de modèle en cours de validation.</param>
      <param name="validationMessage">Message à afficher si le champ spécifié contient une erreur.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Affiche un message de validation s'il existe dans l'objet <see cref="T:System.Web.Mvc.ModelStateDictionary" /> une erreur pour le champ spécifié.</summary>
      <returns>Si la propriété ou l'objet est valide, chaîne vide ; sinon, élément span qui contient un message d'erreur.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="modelName">Nom de la propriété ou de l'objet de modèle en cours de validation.</param>
      <param name="validationMessage">Message à afficher si le champ spécifié contient une erreur.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML de l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Affiche un message de validation s'il existe dans l'objet <see cref="T:System.Web.Mvc.ModelStateDictionary" /> une erreur pour le champ spécifié.</summary>
      <returns>Si la propriété ou l'objet est valide, chaîne vide ; sinon, élément span qui contient un message d'erreur.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="modelName">Nom de la propriété ou de l'objet de modèle en cours de validation.</param>
      <param name="validationMessage">Message à afficher si le champ spécifié contient une erreur.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML de l'élément. </param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2})">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean,``0)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper)">
      <summary>Retourne la liste non ordonnée (élément ul) des messages de validation présents dans l'objet <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Chaîne qui contient une liste non ordonnée (élément ul) de messages de validation.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean)">
      <summary>Retourne une liste non ordonnée (élément ul) des messages de validation présents dans l'objet <see cref="T:System.Web.Mvc.ModelStateDictionary" /> et affiche éventuellement les erreurs de modèle uniquement.</summary>
      <returns>Chaîne qui contient une liste non ordonnée (élément ul) de messages de validation.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="excludePropertyErrors">true pour afficher le résumé des erreurs de modèle uniquement, false pour afficher le résumé de toutes les erreurs.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String)">
      <summary>Retourne une liste non ordonnée (élément ul) des messages de validation présents dans l'objet <see cref="T:System.Web.Mvc.ModelStateDictionary" /> et affiche éventuellement les erreurs de modèle uniquement.</summary>
      <returns>Chaîne qui contient une liste non ordonnée (élément ul) de messages de validation.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="excludePropertyErrors">true pour afficher le résumé des erreurs de modèle uniquement, false pour afficher le résumé de toutes les erreurs.</param>
      <param name="message">Message à afficher avec le résumé des validations.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne une liste non ordonnée (élément ul) des messages de validation présents dans l'objet <see cref="T:System.Web.Mvc.ModelStateDictionary" /> et affiche éventuellement les erreurs de modèle uniquement.</summary>
      <returns>Chaîne qui contient une liste non ordonnée (élément ul) de messages de validation.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="excludePropertyErrors">true pour afficher le résumé des erreurs de modèle uniquement, false pour afficher le résumé de toutes les erreurs.</param>
      <param name="message">Message à afficher avec le résumé des validations.</param>
      <param name="htmlAttributes">Dictionnaire qui contient les attributs HTML de l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Object)">
      <summary>Retourne une liste non ordonnée (élément ul) des messages de validation présents dans l'objet <see cref="T:System.Web.Mvc.ModelStateDictionary" /> et affiche éventuellement les erreurs de modèle uniquement.</summary>
      <returns>Chaîne qui contient une liste non ordonnée (élément ul) de messages de validation.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="excludePropertyErrors">true pour afficher le résumé des erreurs de modèle uniquement, false pour afficher le résumé de toutes les erreurs.</param>
      <param name="message">Message à afficher avec le résumé des validations.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML de l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Retourne la liste non ordonnée (élément ul) des messages de validation présents dans l'objet <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Chaîne qui contient une liste non ordonnée (élément ul) de messages de validation.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="message">Message à afficher si le champ spécifié contient une erreur.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retourne la liste non ordonnée (élément ul) des messages de validation présents dans l'objet <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Chaîne qui contient une liste non ordonnée (élément ul) de messages de validation.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="message">Message à afficher si le champ spécifié contient une erreur.</param>
      <param name="htmlAttributes">Dictionnaire qui contient les attributs HTML de l'élément.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Retourne une liste non ordonnée (élément ul) des messages de validation présents dans l'objet <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Chaîne qui contient une liste non ordonnée (élément ul) de messages de validation.</returns>
      <param name="htmlHelper">Instance du programme d'assistance HTML qui est étendue par cette méthode.</param>
      <param name="message">Message à afficher si le champ spécifié contient une erreur.</param>
      <param name="htmlAttributes">Objet qui contient les attributs HTML de l'élément. </param>
    </member>
  </members>
</doc>