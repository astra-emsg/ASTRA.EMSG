<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Mvc</name>
  </assembly>
  <members>
    <member name="T:System.Web.Mvc.AcceptVerbsAttribute">
      <summary>Stellt ein Attribut dar, das angibt, auf welche HTTP-Verben eine Aktionsmethode reagiert.</summary>
    </member>
    <member name="M:System.Web.Mvc.AcceptVerbsAttribute.#ctor(System.String[])">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.AcceptVerbsAttribute" />-Klasse, indem eine Liste der HTTP-Verben verwendet wird, auf die die Aktionsmethode reagiert.</summary>
      <param name="verbs">Die HTTP-Verben, auf die die Aktionsmethode reagiert.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="verbs" />-Parameter ist null oder hat die Länge 0.</exception>
    </member>
    <member name="M:System.Web.Mvc.AcceptVerbsAttribute.#ctor(System.Web.Mvc.HttpVerbs)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.AcceptVerbsAttribute" />-Klasse, indem die HTTP-Verben verwendet werden, auf die die Aktionsmethode reagiert.</summary>
      <param name="verbs">Die HTTP-Verben, auf die die Aktionsmethode reagiert.</param>
    </member>
    <member name="M:System.Web.Mvc.AcceptVerbsAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Bestimmt, ob die angegebenen Methodeninformationen für den angegebenen Controllerkontext gültig sind.</summary>
      <returns>true, wenn die Methodeninformationen gültig sind, andernfalls false.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="methodInfo">Die Methodeninformationen.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="controllerContext " />-Parameter ist null.</exception>
    </member>
    <member name="P:System.Web.Mvc.AcceptVerbsAttribute.Verbs">
      <summary>Ruft die Liste der HTTP-Verben ab, auf die die Aktionsmethode reagiert, bzw. legt diese fest.</summary>
      <returns>Die Liste der HTTP-Verben, auf die die Aktionsmethode reagiert.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionDescriptor">
      <summary>Stellt Informationen zu einer Aktionsmethode bereit, z. B. Name, Controller, Parameter, Attribute und Filter.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ActionDescriptor" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.ActionDescriptor.ActionName">
      <summary>Ruft den Namen der Aktionsmethode ab.</summary>
      <returns>Der Name der Aktionsmethode.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionDescriptor.ControllerDescriptor">
      <summary>Ruft den Controllerdeskriptor ab.</summary>
      <returns>Der Controllerdeskriptor.</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Führt die Aktionsmethode aus, indem die angegebenen Parameter und der Controllerkontext verwendet werden.</summary>
      <returns>Das Ergebnis, zu dem die Ausführung der Aktionsmethode führt.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="parameters">Die Parameter der Aktionsmethode.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Gibt ein Array mit benutzerdefinierten Attributen zurück, die für diesen Member definiert sind, mit Ausnahme von benannten Attributen.</summary>
      <returns>Ein Array mit benutzerdefinierten Attributen oder ein leeres Array, falls keine benutzerdefinierten Attribute vorhanden sind.</returns>
      <param name="inherit">true, um nach der Hierarchiekette für das geerbte benutzerdefinierte Attribut zu suchen, andernfalls false.</param>
      <exception cref="T:System.TypeLoadException">Der benutzerdefinierte Attributtyp kann nicht geladen werden.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Es sind mehrere Attribute vom Typ <paramref name="attributeType" /> für diesen Member definiert.</exception>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Gibt ein Array mit für diesen Member definierten benutzerdefinierten Attributen zurück, die nach Typ angegeben werden.</summary>
      <returns>Ein Array benutzerdefinierter Attribute oder ein leeres Array, wenn keine benutzerdefinierten Attribute vom angegebenen Typ vorhanden sind.</returns>
      <param name="attributeType">Der Typ der benutzerdefinierten Attribute.</param>
      <param name="inherit">true, um nach der Hierarchiekette für das geerbte benutzerdefinierte Attribut zu suchen, andernfalls false.</param>
      <exception cref="T:System.TypeLoadException">Der benutzerdefinierte Attributtyp kann nicht geladen werden.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Es sind mehrere Attribute vom Typ <paramref name="attributeType" /> für diesen Member definiert.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="attritubeType" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetFilters">
      <summary>Gibt die Filter zurück, die dieser Aktionsmethode zugeordnet sind.</summary>
      <returns>Die Filter, die dieser Aktionsmethode zugeordnet sind.</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetParameters">
      <summary>Gibt die Parameter der Aktionsmethode zurück.</summary>
      <returns>Die Parameter der Aktionsmethode.</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetSelectors">
      <summary>Gibt die Aktionsmethodenselektoren zurück.</summary>
      <returns>Die Aktionsmethodenselektoren.</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Bestimmt, ob eine oder mehrere Instanzen des angegebenen Attributtyps für diesen Member definiert sind.</summary>
      <returns>true, wenn <paramref name="attributeType" /> für diesen Member definiert ist, andernfalls false.</returns>
      <param name="attributeType">Der Typ des benutzerdefinierten Attributs.</param>
      <param name="inherit">true, um nach der Hierarchiekette für das geerbte benutzerdefinierte Attribut zu suchen, andernfalls false.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="attritubeType" />-Parameter ist null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ActionDescriptor.UniqueId">
      <summary>Ruft die eindeutige ID für den Aktionsdeskriptor mithilfe der verzögerten Initialisierung ab.</summary>
      <returns>Die eindeutige ID.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionExecutedContext">
      <summary>Stellt den Kontext für die ActionExecuted-Methode der <see cref="T:System.Web.Mvc.ActionFilterAttribute" />-Klasse bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutedContext.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ActionExecutedContext" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutedContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Boolean,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ActionExecutedContext" />-Klasse.</summary>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionDescriptor">Der Aktionsmethodendeskriptor.</param>
      <param name="canceled">true, wenn die Aktion abgebrochen wird.</param>
      <param name="exception">das Ausnahmeobjekt.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="actionDescriptor" />-Parameter ist null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.ActionDescriptor">
      <summary>Ruft den Aktionsdeskriptor ab bzw. legt ihn fest.</summary>
      <returns>Der Aktionsdeskriptor.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.Canceled">
      <summary>Ruft einen Wert ab (bzw. legt diesen fest), der angibt, dass dieses <see cref="T:System.Web.Mvc.ActionExecutedContext" />-Objekt abgebrochen wird.</summary>
      <returns>true, wenn der Kontext abgebrochen wurde, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.Exception">
      <summary>Ruft die Ausnahme ab (bzw. legt diese fest), die während der Ausführung der Aktionsmethode aufgetreten ist, falls zutreffend.</summary>
      <returns>Die Ausnahme, die während der Ausführung der Aktionsmethode aufgetreten ist.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.ExceptionHandled">
      <summary>Ruft einen Wert ab (bzw. legt diesen fest), der angibt, ob die Ausnahme verarbeitet wurde.</summary>
      <returns>true, wenn die Ausnahme verarbeitet wurde, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.Result">
      <summary>Ruft das von der Aktionsmethode zurückgegebene Ergebnis ab bzw. legt es fest.</summary>
      <returns>Das von der Aktionsmethode zurückgegebene Ergebnis.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionExecutingContext">
      <summary>Stellt den Kontext für die ActionExecuting-Methode der <see cref="T:System.Web.Mvc.ActionFilterAttribute" />-Klasse bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutingContext.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ActionExecutingContext" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutingContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ActionExecutingContext" />-Klasse, indem der angegebene Controllerkontext, der Aktionsdeskriptor und die Aktionsmethodenparameter verwendet werden.</summary>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionDescriptor">Der Aktionsdeskriptor.</param>
      <param name="actionParameters">Die Aktionsmethodenparameter.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="ActionParameters" />-Parameter oder der <paramref name="actionDescriptor" />-Parameter ist null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutingContext.ActionDescriptor">
      <summary>Ruft den Aktionsdeskriptor ab bzw. legt ihn fest.</summary>
      <returns>Der Aktionsdeskriptor.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutingContext.ActionParameters">
      <summary>Ruft die Aktionsmethodenparameter ab bzw. legt diese fest.</summary>
      <returns>Die Aktionsmethodenparameter.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutingContext.Result">
      <summary>Ruft das Ergebnis ab (bzw. legt es fest), das von der Aktionsmethode zurückgegeben wird.</summary>
      <returns>Das Ergebnis, das von der Aktionsmethode zurückgegeben wird.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionFilterAttribute">
      <summary>Stellt die Basisklasse für alle Aktionsfilterattribute dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ActionFilterAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Wird vom MVC-Framework aufgerufen, nachdem die Aktionsmethode ausgeführt wurde.</summary>
      <param name="filterContext">Der Filterkontext.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Wird vom MVC-Framework aufgerufen, bevor die Aktionsmethode ausgeführt wird.</summary>
      <param name="filterContext">Der Filterkontext.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Wird vom MVC-Framework aufgerufen, nachdem das Aktionsergebnis ausgeführt wurde.</summary>
      <param name="filterContext">Der Filterkontext.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Wird vom MVC-Framework aufgerufen, bevor das Aktionsergebnis ausgeführt wird.</summary>
      <param name="filterContext">Der Filterkontext.</param>
    </member>
    <member name="T:System.Web.Mvc.ActionMethodSelectorAttribute">
      <summary>Stellt ein Attribut dar, das verwendet wird, um die Auswahl einer Aktionsmethode zu beeinflussen.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionMethodSelectorAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ActionMethodSelectorAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionMethodSelectorAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Bestimmt, ob die Aktionsmethodenauswahl für den angegebenen Controllerkontext gültig ist.</summary>
      <returns>true, wenn die Aktionsmethodenauswahl für den angegebenen Controllerkontext gültig ist, andernfalls false.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="methodInfo">Informationen zur Aktionsmethode.</param>
    </member>
    <member name="T:System.Web.Mvc.ActionNameAttribute">
      <summary>Stellt ein Attribut dar, das für den Namen einer Aktion verwendet wird.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionNameAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ActionNameAttribute" />-Klasse.</summary>
      <param name="name">Der Name der Aktion.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="name" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.ActionNameAttribute.IsValidName(System.Web.Mvc.ControllerContext,System.String,System.Reflection.MethodInfo)">
      <summary>Bestimmt, ob der Aktionsname im angegebenen Controllerkontext gültig ist.</summary>
      <returns>true, wenn der Aktionsname im angegebenen Controllerkontext gültig ist, andernfalls false.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionName">Der Name der Aktion.</param>
      <param name="methodInfo">Informationen zur Aktionsmethode.</param>
    </member>
    <member name="P:System.Web.Mvc.ActionNameAttribute.Name">
      <summary>Ruft den Namen der Aktion ab bzw. legt diesen fest.</summary>
      <returns>Der Name der Aktion.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionNameSelectorAttribute">
      <summary>Stellt ein Attribut dar, das sich auf die Auswahl einer Aktionsmethode auswirkt.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionNameSelectorAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ActionNameSelectorAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionNameSelectorAttribute.IsValidName(System.Web.Mvc.ControllerContext,System.String,System.Reflection.MethodInfo)">
      <summary>Bestimmt, ob der Aktionsname im angegebenen Controllerkontext gültig ist.</summary>
      <returns>true, wenn der Aktionsname im angegebenen Controllerkontext gültig ist, andernfalls false.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionName">Der Name der Aktion.</param>
      <param name="methodInfo">Informationen zur Aktionsmethode.</param>
    </member>
    <member name="T:System.Web.Mvc.ActionResult">
      <summary>Kapselt das Ergebnis einer Aktionsmethode und wird verwendet, um im Namen der Aktionsmethode einen Vorgang auf Frameworkebene auszuführen.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionResult.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ActionResult" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Ermöglicht die Verarbeitung des Ergebnisses einer Aktionsmethode durch einen benutzerdefinierten Typ, der von der <see cref="T:System.Web.Mvc.ActionResult" />-Klasse erbt.</summary>
      <param name="context">Der Kontext, in dem das Ergebnis ausgeführt wird. Die Kontextinformationen enthalten den Controller, den HTTP-Inhalt, den Anforderungskontext und die Weiterleitungsdaten.</param>
    </member>
    <member name="T:System.Web.Mvc.ActionSelector">
      <summary>Stellt einen Delegaten dar, der die Logik zum Auswählen einer Aktionsmethode enthält.</summary>
      <returns>true, wenn eine Aktionsmethode erfolgreich ausgewählt wurde, andernfalls false.</returns>
      <param name="controllerContext">Der aktuelle HTTP-Anforderungskontext.</param>
    </member>
    <member name="T:System.Web.Mvc.AdditionalMetadataAttribute">
      <summary>Implementiert die <see cref="T:System.Web.Mvc.IMetadataAware" />-Schnittstelle zur Unterstützung zusätzlicher Metadaten. </summary>
    </member>
    <member name="M:System.Web.Mvc.AdditionalMetadataAttribute.#ctor(System.String,System.Object)"></member>
    <member name="P:System.Web.Mvc.AdditionalMetadataAttribute.Name"></member>
    <member name="M:System.Web.Mvc.AdditionalMetadataAttribute.OnMetadataCreated(System.Web.Mvc.ModelMetadata)"></member>
    <member name="P:System.Web.Mvc.AdditionalMetadataAttribute.TypeId"></member>
    <member name="P:System.Web.Mvc.AdditionalMetadataAttribute.Value"></member>
    <member name="T:System.Web.Mvc.AjaxHelper">
      <summary>Stellt Unterstützung für das Rendern von HTML in AJAX-Szenarios innerhalb einer Ansicht dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.AjaxHelper" />-Klasse, indem der angegebene Ansichtskontext und der Ansichtsdatencontainer verwendet werden.</summary>
      <param name="viewContext">Der Ansichtskontext.</param>
      <param name="viewDataContainer">Der Ansichtsdatencontainer.</param>
      <exception cref="T:System.ArgumentNullException">Ein oder beide Parameter sind null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.AjaxHelper" />-Klasse, indem der angegebene Ansichtskontext, der Ansichtsdatencontainer und die Routenauflistung verwendet werden.</summary>
      <param name="viewContext">Der Ansichtskontext.</param>
      <param name="viewDataContainer">Der Ansichtsdatencontainer.</param>
      <param name="routeCollection">Die URL der Routenauflistung.</param>
      <exception cref="T:System.ArgumentNullException">Ein oder beide Parameter sind null.</exception>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.GlobalizationScriptPath">
      <summary>Ruft den Stammpfad für den Speicherort ab, der für Globalisierungsskriptdateien verwendet werden soll, oder legt diesen fest.</summary>
      <returns>Der Speicherort des Ordners, in dem Globalisierungsskriptdateien gespeichert werden. Der Standardspeicherort ist "~/Scripts/Globalization".</returns>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper.JavaScriptStringEncode(System.String)">
      <summary>Serialisiert die angegebene Meldung und gibt die resultierende JSON-formatierte Zeichenfolge zurück.</summary>
      <returns>Die serialisierte Meldung als JSON-formatierte Zeichenfolge.</returns>
      <param name="message">Die zu serialisierende Meldung.</param>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.RouteCollection">
      <summary>Ruft die Auflistung der URL-Routen für die Anwendung ab.</summary>
      <returns>Die Auflistung der Routen für die Anwendung.</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewContext">
      <summary>Ruft die Kontextinformationen zur Ansicht ab.</summary>
      <returns>Der Kontext der Ansicht.</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewData">
      <summary>Ruft das aktuelle Wörterbuch mit den Ansichtsdaten ab.</summary>
      <returns>Das Ansichtsdatenwörterbuch.</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewDataContainer">
      <summary>Ruft den Ansichtsdatencontainer ab.</summary>
      <returns>Der Ansichtsdatencontainer.</returns>
    </member>
    <member name="T:System.Web.Mvc.AjaxHelper`1">
      <summary>Stellt Unterstützung für das Rendern von HTML in AJAX-Szenarios innerhalb einer stark typisierten Ansicht dar.</summary>
      <typeparam name="TModel">Der Typ des Modells.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.AjaxHelper`1" />-Klasse mithilfe des angegebenen Ansichtskontexts und Ansichtsdatencontainers.</summary>
      <param name="viewContext">Der Ansichtskontext.</param>
      <param name="viewDataContainer">Der Ansichtsdatencontainer.</param>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.AjaxHelper`1" />-Klasse, indem der angegebene Ansichtskontext, der Ansichtsdatencontainer und die URL-Routenauflistung verwendet werden.</summary>
      <param name="viewContext">Der Ansichtskontext.</param>
      <param name="viewDataContainer">Der Ansichtsdatencontainer.</param>
      <param name="routeCollection">Die URL der Routenauflistung.</param>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper`1.ViewData">
      <summary>Ruft die stark typisierte Version des Ansichtsdatenwörterbuchs ab.</summary>
      <returns>Das stark typisierte Datenwörterbuch der Ansicht.</returns>
    </member>
    <member name="T:System.Web.Mvc.AjaxRequestExtensions">
      <summary>Stellt eine Klasse dar, die die <see cref="T:System.Web.HttpRequestBase" />-Klasse durch das Hinzufügen der Funktion erweitert, mit der bestimmt wird, ob es sich bei einer HTTP-Anforderung um eine AJAX-Anforderung handelt.</summary>
    </member>
    <member name="M:System.Web.Mvc.AjaxRequestExtensions.IsAjaxRequest(System.Web.HttpRequestBase)"></member>
    <member name="T:System.Web.Mvc.AreaRegistration">
      <summary>Bietet eine Möglichkeit, einen oder mehrere Bereiche in einer ASP.NET-MVC-Anwendung zu registrieren.</summary>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.AreaRegistration" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistration.AreaName">
      <summary>Ruft den Namen des zu registrierenden Bereichs ab.</summary>
      <returns>Der Name des zu registrierenden Bereichs.</returns>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.RegisterAllAreas">
      <summary>Registriert alle Bereiche innerhalb einer ASP.NET-MVC-Anwendung.</summary>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.RegisterAllAreas(System.Object)">
      <summary>Registriert alle Bereiche innerhalb einer ASP.NET-MVC-Anwendung mit den angegebenen benutzerdefinierten Informationen.</summary>
      <param name="state">Ein Objekt, das benutzerdefinierte Informationen enthält, die an den Bereich übergeben werden sollen.</param>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.RegisterArea(System.Web.Mvc.AreaRegistrationContext)">
      <summary>Registriert einen Bereich innerhalb einer ASP.NET-MVC-Anwendung mit den angegebenen Kontextinformationen des Bereichs.</summary>
      <param name="context">Kapselt die Informationen, die erforderlich sind, um den Bereich zu registrieren.</param>
    </member>
    <member name="T:System.Web.Mvc.AreaRegistrationContext">
      <summary>Kapselt die Informationen, die erforderlich sind, um einen Bereich innerhalb einer ASP.NET MVC-Anwendung zu registrieren.</summary>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.#ctor(System.String,System.Web.Routing.RouteCollection)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.AreaRegistrationContext" />-Klasse mit dem angegebenen Bereichsnamen und der angegebenen Auflistung der Routen.</summary>
      <param name="areaName">Der Name des zu registrierenden Bereichs.</param>
      <param name="routes">Die Auflistung der Routen für die Anwendung.</param>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.#ctor(System.String,System.Web.Routing.RouteCollection,System.Object)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.AreaRegistrationContext" />-Klasse mit dem angegebenen Bereichsnamen, der angegebenen Auflistung der Routen und benutzerdefinierten Daten.</summary>
      <param name="areaName">Der Name des zu registrierenden Bereichs.</param>
      <param name="routes">Die Auflistung der Routen für die Anwendung.</param>
      <param name="state">Ein Objekt, das benutzerdefinierte Informationen enthält, die an den Bereich übergeben werden sollen.</param>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.AreaName">
      <summary>Ruft den Namen des zu registrierenden Bereichs ab.</summary>
      <returns>Der Name des zu registrierenden Bereichs.</returns>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String)">
      <summary>Ordnet die angegebene URL-Route dem mit der <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" />-Eigenschaft angegebenen Bereich zu.</summary>
      <returns>Ein Verweis auf die zugeordnete Route.</returns>
      <param name="name">Der Name der Route.</param>
      <param name="url">Das URL-Muster für die Route.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="url" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object)">
      <summary>Ordnet die angegebene URL-Route dem von der <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" />-Eigenschaft angegebenen Bereich zu und verwendet dazu die angegebenen Standardroutenwerte.</summary>
      <returns>Ein Verweis auf die zugeordnete Route.</returns>
      <param name="name">Der Name der Route.</param>
      <param name="url">Das URL-Muster für die Route.</param>
      <param name="defaults">Ein Objekt, das Standardroutenwerte enthält.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="url" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object,System.Object)">
      <summary>Ordnet die angegebene URL-Route dem von der <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" />-Eigenschaft angegebenen Bereich zu und verwendet dazu die angegebenen Standardroutenwerte und Einschränkungen.</summary>
      <returns>Ein Verweis auf die zugeordnete Route.</returns>
      <param name="name">Der Name der Route.</param>
      <param name="url">Das URL-Muster für die Route.</param>
      <param name="defaults">Ein Objekt, das Standardroutenwerte enthält.</param>
      <param name="constraints">Ein Satz von Ausdrücken, die gültige Werte für einen URL-Parameter angeben.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="url" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object,System.Object,System.String[])">
      <summary>Ordnet die angegebene URL-Route dem von der <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" />-Eigenschaft angegebenen Bereich zu und verwendet dazu die angegebenen Standardroutenwerte, Einschränkungen und Namespaces.</summary>
      <returns>Ein Verweis auf die zugeordnete Route.</returns>
      <param name="name">Der Name der Route.</param>
      <param name="url">Das URL-Muster für die Route.</param>
      <param name="defaults">Ein Objekt, das Standardroutenwerte enthält.</param>
      <param name="constraints">Ein Satz von Ausdrücken, die gültige Werte für einen URL-Parameter angeben.</param>
      <param name="namespaces">Ein auflistbarer Satz von Namespaces für die Anwendung.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="url" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object,System.String[])">
      <summary>Ordnet die angegebene URL-Route dem von der <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" />-Eigenschaft angegebenen Bereich zu und verwendet dazu die angegebenen Standardroutenwerte und Namespaces.</summary>
      <returns>Ein Verweis auf die zugeordnete Route.</returns>
      <param name="name">Der Name der Route.</param>
      <param name="url">Das URL-Muster für die Route.</param>
      <param name="defaults">Ein Objekt, das Standardroutenwerte enthält.</param>
      <param name="namespaces">Ein auflistbarer Satz von Namespaces für die Anwendung.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="url" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.String[])">
      <summary>Ordnet die angegebene URL-Route dem von der <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" />-Eigenschaft angegebenen Bereich zu und verwendet dazu die angegebenen Namespaces.</summary>
      <returns>Ein Verweis auf die zugeordnete Route.</returns>
      <param name="name">Der Name der Route.</param>
      <param name="url">Das URL-Muster für die Route.</param>
      <param name="namespaces">Ein auflistbarer Satz von Namespaces für die Anwendung.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="url" />-Parameter ist null.</exception>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.Namespaces">
      <summary>Ruft die Namespaces für die Anwendung ab.</summary>
      <returns>Ein auflistbarer Satz von Namespaces für die Anwendung.</returns>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.Routes">
      <summary>Ruft eine Auflistung der für die Anwendung definierten Routen ab.</summary>
      <returns>Eine Auflistung der für die Anwendung definierten Routen.</returns>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.State">
      <summary>Ruft ein Objekt ab, das benutzerdefinierte Informationen enthält, die an den Bereich übergeben werden sollen.</summary>
      <returns>Ein Objekt, das benutzerdefinierte Informationen enthält, die an den Bereich übergeben werden sollen.</returns>
    </member>
    <member name="T:System.Web.Mvc.AssociatedMetadataProvider">
      <summary>Stellt eine abstrakte Klasse zur Implementierung eines Metadatenanbieters bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.#ctor">
      <summary>Wird von Konstruktoren in einer abgeleiteten Klasse aufgerufen, um die <see cref="T:System.Web.Mvc.AssociatedMetadataProvider" />-Klasse zu initialisieren.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func`1,System.Void,System.Object)">
      <summary>Erstellt beim Überschreiben in eine abgeleitete Klasse die Modellmetadaten für die Eigenschaft.</summary>
      <returns>Die Modellmetadaten für die Eigenschaft.</returns>
      <param name="attributes">Der Satz von Attributen.</param>
      <param name="containerType">Der Typ des Containers.</param>
      <param name="modelAccessor">Der Modellaccessor.</param>
      <param name="modelType">Der Typ des Modells.</param>
      <param name="propertyName">Der Name der Eigenschaft.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.FilterAttributes(System.Type,System.ComponentModel.PropertyDescriptor,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Ruft eine Liste mit Attributen ab.</summary>
      <returns>Eine Liste von Attributen.</returns>
      <param name="containerType">Der Typ des Containers.</param>
      <param name="propertyDescriptor">Der Eigenschaftendeskriptor.</param>
      <param name="attributes">Der Attributcontainer.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Gibt eine Liste von Eigenschaften für das Modell zurück.</summary>
      <returns>Die Liste von Eigenschaften für das Modell.</returns>
      <param name="container">Der Modellcontainer.</param>
      <param name="containerType">Der Typ des Containers.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperty(System.Func`1,System.Void,System.Object)">
      <summary>Gibt die Metadaten für die angegebene Eigenschaft mit dem Containertyp und dem Eigenschaftendeskriptor zurück.</summary>
      <returns>Gibt <see cref="T:System.Web.Mvc.ModelMetadata" /> zurück.</returns>
      <param name="modelAccessor">Der Modellaccessor.</param>
      <param name="containerType">Der Typ des Containers.</param>
      <param name="propertyDescriptor">Der Eigenschaftendeskriptor.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForType(System.Func`1,System.Void)">
      <summary>Gibt die Metadaten für die angegebene Eigenschaft mit dem Typ des Modells zurück.</summary>
      <returns>Gibt <see cref="T:System.Web.Mvc.ModelMetadata" /> zurück.</returns>
      <param name="modelAccessor">Der Modellaccessor.</param>
      <param name="modelType">Der Typ des Modells.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetTypeDescriptor(System.Type)">
      <summary>Gibt den Typdeskriptor vom angegebenen Typ zurück.</summary>
      <returns>Der Typdeskriptor.</returns>
      <param name="type">Der Typ.</param>
    </member>
    <member name="T:System.Web.Mvc.AssociatedValidatorProvider">
      <summary>Stellt eine abstrakte Klasse für Klassen bereit, die einen Validierungsanbieter implementieren.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.#ctor">
      <summary>Wird von Konstruktoren in abgeleiteten Klassen aufgerufen, um die <see cref="T:System.Web.Mvc.AssociatedMetadataProvider" />-Klasse zu initialisieren.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.GetTypeDescriptor(System.Type)">
      <summary>Ruft einen Typdeskriptor für den angegebenen Typ ab.</summary>
      <returns>Ein Typdeskriptor für den angegebenen Typ.</returns>
      <param name="type">Der Typ des Validierungsanbieters.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Ruft die Validierungssteuerelemente für das Modell anhand der Metadaten und des Controllerkontexts ab.</summary>
      <returns>Die Validierungssteuerelemente für das Modell.</returns>
      <param name="metadata">Die Metadaten.</param>
      <param name="context">Der Controllerkontext.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Ruft die Validierungssteuerelemente für das Modell anhand der Metadaten, des Controllerkontexts und einer Liste von Attributen ab.</summary>
      <returns>Die Validierungssteuerelemente für das Modell.</returns>
      <param name="metadata">Die Metadaten.</param>
      <param name="context">Der Controllerkontext.</param>
      <param name="attributes">Die Liste der Attribute.</param>
    </member>
    <member name="T:System.Web.Mvc.AsyncController">
      <summary>Stellt die Basisklasse für asynchrone Controller bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.AsyncController.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.AsyncController" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.AsyncController.AsyncManager">
      <summary>Ruft die asynchrone Managerinstanz ab.</summary>
      <returns>Die asynchrone Managerinstanz.</returns>
    </member>
    <member name="M:System.Web.Mvc.AsyncController.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
      <summary>Wird von ASP.NET aufgerufen, um die Verarbeitung von asynchronen Anforderungen zu initialisieren.</summary>
      <returns>Der Status des asynchronen Vorgangs.</returns>
      <param name="requestContext">Der Anforderungskontext.</param>
      <param name="callback">Die asynchrone Rückrufmethode.</param>
      <param name="state">Das Zustandsobjekt.</param>
    </member>
    <member name="M:System.Web.Mvc.AsyncController.BeginExecuteCore(System.AsyncCallback,System.Object)">
      <summary>Wird von ASP.NET während der Initialisierung der asynchronen Anforderungsverarbeitung aufgerufen.</summary>
      <returns>Der Status des asynchronen Vorgangs.</returns>
      <param name="callback">Die asynchrone Rückrufmethode.</param>
      <param name="state">Das Zustandsobjekt.</param>
    </member>
    <member name="M:System.Web.Mvc.AsyncController.CreateActionInvoker">
      <summary>Erstellt eine Instanz zum Aufrufen einer Aktion.</summary>
      <returns>Eine Instanz zum Aufrufen einer Aktion.</returns>
    </member>
    <member name="M:System.Web.Mvc.AsyncController.EndExecute(System.IAsyncResult)">
      <summary>Bricht die Ausführung einer asynchronen Aktionsmethode ab.</summary>
      <param name="asyncResult">Der Status des asynchronen Ergebnisses.</param>
    </member>
    <member name="M:System.Web.Mvc.AsyncController.EndExecuteCore(System.IAsyncResult)">
      <summary>Wird von ASP.NET aufgerufen, wenn die aktuelle asynchrone Aktion beendet wurde.</summary>
      <param name="asyncResult">Der Status des asynchronen Ergebnisses.</param>
    </member>
    <member name="M:System.Web.Mvc.AsyncController.System#Web#Mvc#Async#IAsyncController#BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
      <summary>Wird von ASP.NET aufgerufen, um mit der Ausführung einer asynchronen Aktionsmethode zu beginnen.</summary>
      <returns>Der Status des asynchronen Vorgangs.</returns>
      <param name="requestContext">Der Anforderungskontext.</param>
      <param name="callback">Die asynchrone Rückrufmethode.</param>
      <param name="state">Ein Objekt, das die von der Rückrufmethode zu verwendenden Informationen enthält. Dieser Parameter kann null sein.</param>
    </member>
    <member name="M:System.Web.Mvc.AsyncController.System#Web#Mvc#Async#IAsyncController#EndExecute(System.IAsyncResult)">
      <summary>Bricht die Ausführung einer asynchronen Aktionsmethode durch ASP.NET im Anschluss an die Ausführung einer asynchronen Aktionsmethode ab.</summary>
      <param name="asyncResult">Der Status des asynchronen Ergebnisses.</param>
    </member>
    <member name="T:System.Web.Mvc.AsyncTimeoutAttribute">
      <summary>Stellt ein Attribut dar, das verwendet wird, um den Timeoutwert in Millisekunden für eine asynchrone Methode festzulegen.</summary>
    </member>
    <member name="M:System.Web.Mvc.AsyncTimeoutAttribute.#ctor(System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.AsyncTimeoutAttribute" />-Klasse.</summary>
      <param name="duration">Der Timeoutwert in Millisekunden.</param>
    </member>
    <member name="P:System.Web.Mvc.AsyncTimeoutAttribute.Duration">
      <summary>Ruft das Zeitlimit in Millisekunden ab.</summary>
      <returns>Das Zeitlimit in Millisekunden.</returns>
    </member>
    <member name="M:System.Web.Mvc.AsyncTimeoutAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Wird von ASP.NET aufgerufen, bevor die asynchrone Aktionsmethode ausgeführt wird.</summary>
      <param name="filterContext">Der Filterkontext.</param>
    </member>
    <member name="T:System.Web.Mvc.AuthorizationContext">
      <summary>Kapselt die erforderlichen Informationen zum Verwenden eines <see cref="T:System.Web.Mvc.AuthorizeAttribute" />-Attributs.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizationContext.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.AuthorizationContext" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizationContext.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.AuthorizationContext" />-Klasse, indem der angegebene Controllerkontext verwendet wird.</summary>
      <param name="controllerContext">Der Kontext, in dem das Ergebnis ausgeführt wird. Die Kontextinformationen enthalten den Controller, den HTTP-Inhalt, den Anforderungskontext und die Weiterleitungsdaten.</param>
    </member>
    <member name="M:System.Web.Mvc.AuthorizationContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.AuthorizationContext" />-Klasse. Verwendet hierfür den angegebenen Controllerkontext und den Aktionsdeskriptor.</summary>
      <param name="controllerContext">Der Kontext, in dem das Ergebnis ausgeführt wird. Die Kontextinformationen enthalten den Controller, den HTTP-Inhalt, den Anforderungskontext und die Weiterleitungsdaten.</param>
      <param name="actionDescriptor">Ein Objekt, das Informationen zu einer Aktionsmethode bereitstellt, z. B. Name, Controller, Parameter, Attribute und Filter.</param>
    </member>
    <member name="P:System.Web.Mvc.AuthorizationContext.ActionDescriptor">
      <summary>Stellt Informationen zur Aktionsmethode bereit, die vom <see cref="T:System.Web.Mvc.AuthorizeAttribute" />-Attribut markiert wird, z. B. Name, Controller, Parameter, Attribute und Filter.</summary>
      <returns>Der Aktionsdeskriptor für die Aktionsmethode, die vom <see cref="T:System.Web.Mvc.AuthorizeAttribute" />-Attribut markiert wird.</returns>
    </member>
    <member name="P:System.Web.Mvc.AuthorizationContext.Result">
      <summary>Ruft das Ergebnis ab (bzw. legt es fest), das von einer Aktionsmethode zurückgegeben wird.</summary>
      <returns>Das Ergebnis, das von einer Aktionsmethode zurückgegeben wird.</returns>
    </member>
    <member name="T:System.Web.Mvc.AuthorizeAttribute">
      <summary>Stellt ein Attribut dar, das verwendet wird, um den Zugriff von Aufrufern einer Aktionsmethode einzuschränken.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.AuthorizeAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.AuthorizeCore(System.Web.HttpContextBase)">
      <summary>Stellt beim Überschreiben einen Einstiegspunkt für benutzerdefinierte Autorisierungsprüfungen bereit.</summary>
      <returns>true, wenn der Benutzer autorisiert ist, andernfalls false.</returns>
      <param name="httpContext">Der HTTP-Kontext, der alle HTTP-spezifischen Informationen über eine einzelne HTTP-Anforderung kapselt.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="httpContext" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.HandleUnauthorizedRequest(System.Web.Mvc.AuthorizationContext)">
      <summary>Verarbeitet HTTP-Anforderungen, deren Autorisierung nicht erfolgreich war.</summary>
      <param name="filterContext">Kapselt die Informationen zum Verwenden des <see cref="T:System.Web.Mvc.AuthorizeAttribute" />-Objekts. Das <paramref name="filterContext" />-Objekt enthält den Controller, den HTTP-Kontext, den Anforderungskontext, das Aktionsergebnis und die Routendaten.</param>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Wird aufgerufen, wenn ein Prozess eine Autorisierung anfordert.</summary>
      <param name="filterContext">Der Filterkontext, der Informationen kapselt, um <see cref="T:System.Web.Mvc.AuthorizeAttribute" /> zu verwenden.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="filterContext" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.OnCacheAuthorization(System.Web.HttpContextBase)">
      <summary>Wird aufgerufen, wenn das Cachemodul eine Autorisierung anfordert.</summary>
      <returns>Ein Verweis auf den Validierungsstatus.</returns>
      <param name="httpContext">Der HTTP-Kontext, der alle HTTP-spezifischen Informationen über eine einzelne HTTP-Anforderung kapselt.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="httpContext" />-Parameter ist null.</exception>
    </member>
    <member name="P:System.Web.Mvc.AuthorizeAttribute.Roles">
      <summary>Ruft die Benutzerrollen ab bzw. legt diese fest.</summary>
      <returns>Die Benutzerrollen.</returns>
    </member>
    <member name="P:System.Web.Mvc.AuthorizeAttribute.TypeId">
      <summary>Ruft den eindeutigen Bezeichner für dieses Attribut ab.</summary>
      <returns>Der eindeutige Bezeichner für dieses Attribut.</returns>
    </member>
    <member name="P:System.Web.Mvc.AuthorizeAttribute.Users">
      <summary>Ruft die autorisierten Benutzer ab bzw. legt sie fest.</summary>
      <returns>Die autorisierten Benutzer.</returns>
    </member>
    <member name="T:System.Web.Mvc.BindAttribute">
      <summary>Stellt ein Attribut dar, das verwendet wird, um Details dazu bereitzustellen, wie die Modellbindung an einen Parameter erfolgen soll.</summary>
    </member>
    <member name="M:System.Web.Mvc.BindAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.BindAttribute" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.BindAttribute.Exclude">
      <summary>Ruft eine durch Trennzeichen getrennte Liste von Eigenschaftennamen ab (bzw. legt diese fest), für die die Bindung unzulässig ist.</summary>
      <returns>Die Liste der ausgeschlossenen Elemente.</returns>
    </member>
    <member name="P:System.Web.Mvc.BindAttribute.Include">
      <summary>Ruft eine durch Trennzeichen getrennte Liste von Eigenschaftennamen ab (bzw. legt diese fest), für die die Bindung zulässig ist.</summary>
      <returns>Die Liste der enthaltenen Elemente.</returns>
    </member>
    <member name="M:System.Web.Mvc.BindAttribute.IsPropertyAllowed(System.String)">
      <summary>Bestimmt, ob die angegebene Eigenschaft zulässig ist.</summary>
      <returns>true, wenn die angegebene Eigenschaft zulässig ist, andernfalls false.</returns>
      <param name="propertyName">Der Name der Eigenschaft.</param>
    </member>
    <member name="P:System.Web.Mvc.BindAttribute.Prefix">
      <summary>Ruft das Präfix ab (bzw. legt es fest), das verwendet wird, wenn Markup zum Binden an ein Aktionsargument oder eine Modelleigenschaft gerendert wird.</summary>
      <returns>Das zu verwendende Präfix.</returns>
    </member>
    <member name="T:System.Web.Mvc.BuildManagerCompiledView">
      <summary>Entspricht der Basisklasse von Ansichten, die von der BuildManager-Klasse vor dem Rendern durch ein Ansichtsmodul kompiliert werden.</summary>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.#ctor(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.BuildManagerCompiledView" />-Klasse mithilfe des angegebenen Controllerkontexts und des Ansichtspfads.</summary>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="viewPath">Der Ansichtspfad.</param>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.Web.Mvc.IViewPageActivator)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.BuildManagerCompiledView" />-Klasse mithilfe des angegebenen Controllerkontexts, des Ansichtspfads und der Aktivierung der Ansichtsseite.</summary>
      <param name="controllerContext">Kontextinformationen für den aktuellen Controller. Diese Informationen enthalten den Kontext der HTTP-Daten, der Anforderung und der übergeordneten Aktionsansicht sowie die Weiterleitungsdaten und vieles mehr.</param>
      <param name="viewPath">Der Pfad zu der zu rendernden Ansicht.</param>
      <param name="viewPageActivator">Das Objekt, das zur Laufzeit für das dynamische Erstellen der Ansichtsseite verantwortlich ist. </param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="controllerContext" />-Parameter ist null.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="viewPath" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.Render(System.Web.Mvc.ViewContext,System.IO.TextWriter)">
      <summary>Rendert den angegebenen Ansichtskontext mithilfe des angegebenen Writerobjekts.</summary>
      <param name="viewContext">Informationen im Zusammenhang mit dem Rendern einer Ansicht, z. B. Ansichtsdaten, temporäre Daten und Formularkontext.</param>
      <param name="writer">Das Writerobjekt.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="viewContext" />-Parameter ist null.</exception>
      <exception cref="T:SInvalidOperationException">Es konnte keine Instanz des Ansichtstyps erstellt werden.</exception>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.RenderView(System.Web.Mvc.ViewContext,System.IO.TextWriter,System.Object)">
      <summary>Rendert beim Überschreiben in einer abgeleiteten Klasse den angegebenen Ansichtskontext mithilfe des angegebenen Writerobjekts und der Objektinstanz.</summary>
      <param name="viewContext">Informationen im Zusammenhang mit dem Rendern einer Ansicht, z. B. Ansichtsdaten, temporäre Daten und Formularkontext.</param>
      <param name="writer">Das Writerobjekt.</param>
      <param name="instance">Ein Objekt, das die zusätzliche Informationen enthält, die in der Ansicht verwendet werden können.</param>
    </member>
    <member name="P:System.Web.Mvc.BuildManagerCompiledView.ViewPath">
      <summary>Ruft den Ansichtspfad ab bzw. legt ihn fest.</summary>
      <returns>Der Ansichtspfad.</returns>
    </member>
    <member name="T:System.Web.Mvc.BuildManagerViewEngine">
      <summary>Stellt eine Basisklasse für Ansichtsmodule bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerViewEngine.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.BuildManagerViewEngine" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerViewEngine.#ctor(System.Web.Mvc.IViewPageActivator)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.BuildManagerViewEngine" />-Klasse mithilfe der angegebenen Aktivierung der Ansichtsseite.</summary>
      <param name="viewPageActivator">Die Aktivierung der Ansichtsseite.</param>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerViewEngine.FileExists(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Ruft einen Wert ab, der angibt, ob eine Datei im angegebenen virtuellen Dateisystem (Pfad) vorhanden ist.</summary>
      <returns>true, wenn die Datei im virtuellen Dateisystem vorhanden ist, andernfalls false.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="virtualPath">Der virtuelle Pfad.</param>
    </member>
    <member name="P:System.Web.Mvc.BuildManagerViewEngine.ViewPageActivator">
      <summary>Ruft die Aktivierung der Ansichtsseite ab.</summary>
      <returns>Die Aktivierung der Ansichtsseite.</returns>
    </member>
    <member name="T:System.Web.Mvc.ByteArrayModelBinder">
      <summary>Ordnet einem Bytearray eine Browseranforderung zu.</summary>
    </member>
    <member name="M:System.Web.Mvc.ByteArrayModelBinder.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ByteArrayModelBinder" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.ByteArrayModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Bindet das Modell, indem der angegebene Controllerkontext und Bindungskontext verwendet werden.</summary>
      <returns>Das gebundene Datenobjekt.</returns>
      <param name="controllerContext">Der Kontext, innerhalb dessen der Controller funktioniert. Die Kontextinformationen enthalten den Controller, den HTTP-Inhalt, den Anforderungskontext und die Weiterleitungsdaten.</param>
      <param name="bindingContext">Der Kontext, in dem das Modell gebunden ist. Der Kontext schließt Informationen ein, z. B. das Modellobjekt, den Modellnamen, den Modelltyp, den Eigenschaftenfilter und den Wertanbieter.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="bindingContext" />-Parameter ist null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ChildActionOnlyAttribute">
      <summary>Stellt ein Attribut dar, das verwendet wird, um anzugeben, dass eine Aktionsmethode nur als untergeordnete Aktion aufgerufen werden soll.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionOnlyAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ChildActionOnlyAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionOnlyAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Wird aufgerufen, wenn eine Autorisierung erforderlich ist.</summary>
      <param name="filterContext">Ein Objekt, das die Informationen kapselt, die erforderlich sind, um Zugriff auf die untergeordnete Aktion zu autorisieren.</param>
    </member>
    <member name="T:System.Web.Mvc.ClientDataTypeModelValidatorProvider">
      <summary>Gibt die Modellvalidierungssteuerelemente für den Clientdatentyp zurück.</summary>
    </member>
    <member name="M:System.Web.Mvc.ClientDataTypeModelValidatorProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ClientDataTypeModelValidatorProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.ClientDataTypeModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Gibt die Modellvalidierungssteuerelemente für den Clientdatentyp zurück.</summary>
      <returns>Die Modellvalidierungssteuerelemente für den Clientdatentyp.</returns>
      <param name="metadata">Die Metadaten.</param>
      <param name="context">Der Kontext.</param>
    </member>
    <member name="T:System.Web.Mvc.CompareAttribute">
      <summary>Stellt ein Attribut bereit, das zwei Eigenschaften eines Modells vergleicht.</summary>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.CompareAttribute" />-Klasse.</summary>
      <param name="otherProperty">Die Eigenschaft, die mit der aktuellen Eigenschaft verglichen werden soll.</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.FormatErrorMessage(System.String)">
      <summary>Wendet eine Formatierung auf eine Fehlermeldung auf Grundlage des Datenfelds an, in dem der Vergleichsfehler aufgetreten ist.</summary>
      <returns>Die formatierte Fehlermeldung.</returns>
      <param name="name">Der Name des Felds, das den Validierungsfehler verursacht hat.</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.FormatPropertyForClientValidation(System.String)">
      <summary>Formatiert die Eigenschaft für Clientvalidierung durch Voranstellen eines Sternchens (*) und eines Punkts.</summary>
      <returns>Die Zeichenfolge "*." wird der Eigenschaft vorangestellt.</returns>
      <param name="property">Die Eigenschaft.</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.GetClientValidationRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Ruft eine Liste von Clientvalidierungsregeln für den Vergleichswert für die Eigenschaft anhand der Metadaten und des Controllerkontexts ab.</summary>
      <returns>Eine Liste von Clientvalidierungsregeln für den Vergleichswert.</returns>
      <param name="metadata">Die Modellmetadaten.</param>
      <param name="context">Der Controllerkontext.</param>
    </member>
    <member name="P:System.Web.Mvc.CompareAttribute.OtherProperty">
      <summary>Ruft die Eigenschaft ab, die mit der aktuellen Eigenschaft verglichen werden soll.</summary>
      <returns>Die Eigenschaft, die mit der aktuellen Eigenschaft verglichen werden soll.</returns>
    </member>
    <member name="T:System.Web.Mvc.ContentResult">
      <summary>Stellt einen benutzerdefinierten Inhaltstyp dar, der das Ergebnis einer Aktionsmethode ist.</summary>
    </member>
    <member name="M:System.Web.Mvc.ContentResult.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ContentResult" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.ContentResult.Content">
      <summary>Ruft den Inhalt ab oder legt diesen fest.</summary>
      <returns>Der Inhalt.</returns>
    </member>
    <member name="P:System.Web.Mvc.ContentResult.ContentEncoding">
      <summary>Ruft die Inhaltscodierung ab bzw. legt diese fest.</summary>
      <returns>Die Inhaltscodierung.</returns>
    </member>
    <member name="P:System.Web.Mvc.ContentResult.ContentType">
      <summary>Ruft den Typ des Inhalts ab bzw. legt diesen fest.</summary>
      <returns>Der Typ des Inhalts.</returns>
    </member>
    <member name="M:System.Web.Mvc.ContentResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Ermöglicht die Verarbeitung des Ergebnisses einer Aktionsmethode durch einen benutzerdefinierten Typ, der von der <see cref="T:System.Web.Mvc.ActionResult" />-Klasse erbt.</summary>
      <param name="context">Der Kontext, in dem das Ergebnis ausgeführt wird.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="context" />-Parameter ist null.</exception>
    </member>
    <member name="T:System.Web.Mvc.Controller">
      <summary>Stellt Methoden bereit, die auf HTTP-Anforderungen an eine ASP.NET MVC-Website reagieren.</summary>
    </member>
    <member name="M:System.Web.Mvc.Controller.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.Controller" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.Controller.ActionInvoker">
      <summary>Ruft die Instanz zum Aufrufen der Aktion für den Controller ab.</summary>
      <returns>Die Instanz zum Aufrufen einer Aktion.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.Binders">
      <summary>Ruft den Binder ab oder legt ihn fest.</summary>
      <returns>Der Binder.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.Content(System.String)">
      <summary>Erstellt mit einer Zeichenfolge ein Inhaltsergebnisobjekt.</summary>
      <returns>Die Inhaltsergebnisinstanz.</returns>
      <param name="content">Der Inhalt, der in die Antwort geschrieben werden soll.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Content(System.String,System.String)">
      <summary>Erstellt ein Inhaltsergebnisobjekt anhand einer Zeichenfolge und des Inhaltstyps. </summary>
      <returns>Die Inhaltsergebnisinstanz.</returns>
      <param name="content">Der Inhalt, der in die Antwort geschrieben werden soll.</param>
      <param name="contentType">Der Inhaltstyp (MIME-Typ).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Content(System.String,System.String,System.Text.Encoding)">
      <summary>Erstellt ein Inhaltsergebnisobjekt. Verwendet hierfür eine Zeichenfolge, den Inhaltstyp und die Inhaltscodierung.</summary>
      <returns>Die Inhaltsergebnisinstanz.</returns>
      <param name="content">Der Inhalt, der in die Antwort geschrieben werden soll.</param>
      <param name="contentType">Der Inhaltstyp (MIME-Typ).</param>
      <param name="contentEncoding">Die Inhaltscodierung.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.CreateActionInvoker">
      <summary>Erstellt eine Instanz zum Aufrufen einer Aktion.</summary>
      <returns>Eine Instanz zum Aufrufen einer Aktion.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.CreateTempDataProvider">
      <summary>Erstellt einen temporären Datenanbieter.</summary>
      <returns>Ein temporärer Datenanbieter.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.Dispose">
      <summary>Gibt alle von der aktuellen Instanz der <see cref="T:System.Web.Mvc.Controller" />-Klasse verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Web.Mvc.Controller.Dispose(System.Boolean)">
      <summary>Gibt nicht verwaltete Ressourcen und optional verwaltete Ressourcen frei.</summary>
      <param name="disposing">true, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. false, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.ExecuteCore">
      <summary>Ruft die Aktion im aktuellen Controllerkontext auf.</summary>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.Byte[],System.String)">
      <summary>Erstellt auf Grundlage von Dateiinhalt und Dateityp ein <see cref="T:System.Web.Mvc.FileContentResult" />-Objekt.</summary>
      <returns>Das Dateiinhalt-Ergebnisobjekt.</returns>
      <param name="fileContents">Der binäre Inhalt, der an die Antwort gesendet werden soll.</param>
      <param name="contentType">Der Inhaltstyp (MIME-Typ).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.Byte[],System.String,System.String)">
      <summary>Erstellt auf Grundlage des Dateiinhalts, Inhaltstyps und Zieldateinamens ein <see cref="T:System.Web.Mvc.FileContentResult" />-Objekt.</summary>
      <returns>Das Dateiinhalt-Ergebnisobjekt.</returns>
      <param name="fileContents">Der binäre Inhalt, der an die Antwort gesendet werden soll.</param>
      <param name="contentType">Der Inhaltstyp (MIME-Typ).</param>
      <param name="fileDownloadName">Der Dateiname, der im Dateidownload-Dialogfeld verwendet werden soll, das im Browser angezeigt wird.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.IO.Stream,System.String)">
      <summary>Erstellt auf Grundlage des <see cref="T:System.IO.Stream" />-Objekts und des Inhaltstyps ein <see cref="T:System.Web.Mvc.FileStreamResult" />-Objekt.  </summary>
      <returns>Das Dateiinhalt-Ergebnisobjekt.</returns>
      <param name="fileStream">Der Stream, der an die Antwort gesendet werden soll.</param>
      <param name="contentType">Der Inhaltstyp (MIME-Typ).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.IO.Stream,System.String,System.String)">
      <summary>Erstellt auf Grundlage des <see cref="T:System.IO.Stream" />-Objekts, des Inhaltstyps und des Zieldateinamens  ein <see cref="T:System.Web.Mvc.FileStreamResult" />-Objekt. </summary>
      <returns>Das Dateidatenstrom-Ergebnisobjekt.</returns>
      <param name="fileStream">Der Stream, der an die Antwort gesendet werden soll.</param>
      <param name="contentType">Der Inhaltstyp (MIME-Typ)</param>
      <param name="fileDownloadName">Der Dateiname, der im Dateidownload-Dialogfeld verwendet werden soll, das im Browser angezeigt wird.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.String,System.String)">
      <summary>Erstellt auf Grundlage von Dateiname und Inhaltstyp ein <see cref="T:System.Web.Mvc.FilePathResult" />-Objekt.</summary>
      <returns>Das Dateidatenstrom-Ergebnisobjekt.</returns>
      <param name="fileName">Der Pfad der Datei, die an die Antwort gesendet werden soll.</param>
      <param name="contentType">Der Inhaltstyp (MIME-Typ).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.String,System.String,System.String)">
      <summary>Erstellt auf Grundlage von Dateiname, Inhaltstyp und Name des Dateidownloads ein <see cref="T:System.Web.Mvc.FilePathResult" />-Objekt.</summary>
      <returns>Das Dateidatenstrom-Ergebnisobjekt.</returns>
      <param name="fileName">Der Pfad der Datei, die an die Antwort gesendet werden soll.</param>
      <param name="contentType">Der Inhaltstyp (MIME-Typ).</param>
      <param name="fileDownloadName">Der Dateiname, der im Dateidownload-Dialogfeld verwendet werden soll, das im Browser angezeigt wird.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.HandleUnknownAction(System.String)">
      <summary>Wird aufgerufen, wenn eine Anforderung zu diesem Controller passt, aber keine Methode mit dem angegebenen Aktionsnamen im Controller gefunden wird.</summary>
      <param name="actionName">Der Name der auszuführenden Aktion.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.HttpContext">
      <summary>Ruft HTTP-spezifische Informationen zu einer einzelnen HTTP-Anforderung ab.</summary>
      <returns>Der HTTP-Kontext.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.HttpNotFound"></member>
    <member name="M:System.Web.Mvc.Controller.HttpNotFound(System.String)">
      <summary>Gibt eine Instanz der <see cref="T:System.Web.Mvc.HttpNotFoundResult" />-Klasse zurück.</summary>
      <returns>Eine Instanz der <see cref="T:System.Web.Mvc.HttpNotFoundResult" />-Klasse.</returns>
      <param name="statusDescription">Die Statusbeschreibung.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Initialize(System.Web.Routing.RequestContext)">
      <summary>Initialisiert Daten, die beim Aufrufen des Konstruktors möglicherweise nicht verfügbar sind.</summary>
      <param name="requestContext">Der HTTP-Kontext und die Routendaten.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.JavaScript(System.String)">
      <summary>Erstellt ein <see cref="T:System.Web.Mvc.JavaScriptResult" />-Objekt.</summary>
      <returns>Das <see cref="T:System.Web.Mvc.JavaScriptResult" />-Objekt, das das Skript in die Antwort schreibt.</returns>
      <param name="script">Der JavaScript-Code, der auf dem Client ausgeführt werden soll</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object)">
      <summary>Erstellt ein <see cref="T:System.Web.Mvc.JsonResult" />-Objekt, das das angegebene Objekt in JSON (JavaScript Object Notation) serialisiert.</summary>
      <returns>Das JSON-Ergebnisobjekt, das das angegebene Objekt in das JSON-Format serialisiert. Das von dieser Methode vorbereitete Ergebnisobjekt wird bei Ausführung des Objekts vom ASP.NET MVC-Framework in die Antwort geschrieben.</returns>
      <param name="data">Das zu serialisierende JavaScript-Objektdiagramm.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String)">
      <summary>Erstellt ein <see cref="T:System.Web.Mvc.JsonResult" />-Objekt, das das angegebene Objekt in das JSON-Format (JavaScript Object Notation) serialisiert.</summary>
      <returns>Das JSON-Ergebnisobjekt, das das angegebene Objekt in das JSON-Format serialisiert.</returns>
      <param name="data">Das zu serialisierende JavaScript-Objektdiagramm.</param>
      <param name="contentType">Der Inhaltstyp (MIME-Typ).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding)">
      <summary>Erstellt ein <see cref="T:System.Web.Mvc.JsonResult" />-Objekt, das das angegebene Objekt in das JSON-Format (JavaScript Object Notation) serialisiert.</summary>
      <returns>Das JSON-Ergebnisobjekt, das das angegebene Objekt in das JSON-Format serialisiert.</returns>
      <param name="data">Das zu serialisierende JavaScript-Objektdiagramm.</param>
      <param name="contentType">Der Inhaltstyp (MIME-Typ).</param>
      <param name="contentEncoding">Die Inhaltscodierung.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)">
      <summary>Erstellt ein <see cref="T:System.Web.Mvc.JsonResult" />-Objekt, das das angegebene Objekt in das JSON-Format (JavaScript Object Notation) serialisiert und dazu den Inhaltstyp, die Inhaltscodierung und das JSON-Anforderungsverhalten verwendet.</summary>
      <returns>Das Ergebnisobjekt, das das angegebene Objekt in das JSON-Format serialisiert.</returns>
      <param name="data">Das zu serialisierende JavaScript-Objektdiagramm.</param>
      <param name="contentType">Der Inhaltstyp (MIME-Typ).</param>
      <param name="contentEncoding">Die Inhaltscodierung.</param>
      <param name="behavior">Das JSON-Anforderungsverhalten. </param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Web.Mvc.JsonRequestBehavior)">
      <summary>Erstellt ein <see cref="T:System.Web.Mvc.JsonResult" />-Objekt, das das angegebene Objekt in das JSON-Format (JavaScript Object Notation) serialisiert und dazu den angegebenen Inhaltstyp und das angegebene JSON-Anforderungsverhalten verwendet.</summary>
      <returns>Das Ergebnisobjekt, das das angegebene Objekt in das JSON-Format serialisiert.</returns>
      <param name="data">Das zu serialisierende JavaScript-Objektdiagramm.</param>
      <param name="contentType">Der Inhaltstyp (MIME-Typ).</param>
      <param name="behavior">Das JSON-Anforderungsverhalten.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.Web.Mvc.JsonRequestBehavior)">
      <summary>Erstellt ein <see cref="T:System.Web.Mvc.JsonResult" />-Objekt, das das angegebene Objekt in das JSON-Format (JavaScript Object Notation) serialisiert und dazu das angegebene JSON-Anforderungsverhalten verwendet.</summary>
      <returns>Das Ergebnisobjekt, das das angegebene Objekt in das JSON-Format serialisiert.</returns>
      <param name="data">Das zu serialisierende JavaScript-Objektdiagramm.</param>
      <param name="behavior">Der Inhaltstyp (MIME-Typ).</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.ModelState">
      <summary>Ruft das Modellzustandswörterbuch ab, das den Zustand des Modells und der Modellbindungs-Validierung enthält.</summary>
      <returns>Das Modellzustandswörterbuch.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Wird aufgerufen, nachdem die Aktionsmethode aufgerufen wurde.</summary>
      <param name="filterContext">Informationen über die aktuelle Anforderung und Aktion.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Wird aufgerufen, bevor die Aktionsmethode aufgerufen wird.</summary>
      <param name="filterContext">Informationen über die aktuelle Anforderung und Aktion.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Wird aufgerufen, wenn eine Autorisierung auftritt.</summary>
      <param name="filterContext">Informationen über die aktuelle Anforderung und Aktion.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Wird aufgerufen, wenn in der Aktion eine nicht behandelte Ausnahme auftritt.</summary>
      <param name="filterContext">Informationen über die aktuelle Anforderung und Aktion.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Wird aufgerufen, nachdem das von einer Aktionsmethode zurückgegebene Aktionsergebnis ausgeführt wurde.</summary>
      <param name="filterContext">Informationen über die aktuelle Anforderung und das aktuelle Aktionsergebnis</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Wird aufgerufen, bevor das von einer Aktionsmethode zurückgegebene Aktionsergebnis ausgeführt wurde.</summary>
      <param name="filterContext">Informationen über die aktuelle Anforderung und das aktuelle Aktionsergebnis</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView">
      <summary>Erstellt ein <see cref="T:System.Web.Mvc.PartialViewResult" />-Objekt, das eine partielle Ansicht rendert.</summary>
      <returns>Ein Teilansicht-Ergebnisobjekt.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView(System.Object)">
      <summary>Erstellt anhand des angegebenen Modells ein <see cref="T:System.Web.Mvc.PartialViewResult" />-Objekt, das eine Teilansicht rendert. </summary>
      <returns>Ein Teilansicht-Ergebnisobjekt.</returns>
      <param name="model">Das von der Teilansicht gerenderte Modell</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView(System.String)">
      <summary>Erstellt anhand der angegebenen Ansicht ein <see cref="T:System.Web.Mvc.PartialViewResult" />-Objekt, das eine Teilansicht rendert. </summary>
      <returns>Ein Teilansicht-Ergebnisobjekt.</returns>
      <param name="viewName">Der Name der Ansicht, die für die Antwort gerendert wird.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView(System.String,System.Object)">
      <summary>Erstellt anhand der angegebenen Ansicht und des angegebenen Modells ein <see cref="T:System.Web.Mvc.PartialViewResult" />-Objekt, das eine Teilansicht rendert. </summary>
      <returns>Ein Teilansicht-Ergebnisobjekt.</returns>
      <param name="viewName">Der Name der Ansicht, die an die Antwort gerendert wird.</param>
      <param name="model">Das von der Teilansicht gerenderte Modell</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Redirect(System.String)">
      <summary>Erstellt ein <see cref="T:System.Web.Mvc.RedirectResult" />-Objekt, das zur angegebenen URL umleitet.</summary>
      <returns>Das Umleitungsergebnisobjekt.</returns>
      <param name="url">Die URL, zur der umgeleitet werden soll.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectPermanent(System.String)">
      <summary>Gibt eine Instanz der <see cref="T:System.Web.Mvc.RedirectResult" />-Klasse zurück, bei der die <see cref="P:System.Web.Mvc.RedirectResult.Permanent" />-Eigenschaft auf true festgelegt ist.</summary>
      <returns>Eine Instanz der <see cref="T:System.Web.Mvc.RedirectResult" />-Klasse, bei der die <see cref="P:System.Web.Mvc.RedirectResult.Permanent" />-Eigenschaft auf true festgelegt ist.</returns>
      <param name="url">Die URL, zur der umgeleitet werden soll.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String)">
      <summary>Leitet anhand des Aktionsnamens zur angegebenen Aktion um.</summary>
      <returns>Das Umleitungsergebnisobjekt.</returns>
      <param name="actionName">Der Name der Aktion.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.Object)">
      <summary>Leitet anhand des Aktionsnamens und der Routenwerte zur angegebenen Aktion um.</summary>
      <returns>Das Umleitungsergebnisobjekt.</returns>
      <param name="actionName">Der Name der Aktion.</param>
      <param name="routeValues">Die Parameter für eine Route. </param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String)">
      <summary>Leitet anhand des Aktions- und Controllernamens zur angegebenen Aktion um.</summary>
      <returns>Das Umleitungsergebnisobjekt.</returns>
      <param name="actionName">Der Name der Aktion.</param>
      <param name="controllerName">Der Name des Controllers</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Object)">
      <summary>Leitet anhand des Aktionsnamens, des Controller-Namens und der Routenwerte zur angegebenen Aktion um.</summary>
      <returns>Das Umleitungsergebnisobjekt.</returns>
      <param name="actionName">Der Name der Aktion.</param>
      <param name="controllerName">Der Name des Controllers</param>
      <param name="routeValues">Die Parameter für eine Route. </param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Leitet anhand des Aktionsnamens, des Controller-Namens und der Routenbibliothek zur angegebenen Aktion um.</summary>
      <returns>Das Umleitungsergebnisobjekt.</returns>
      <param name="actionName">Der Name der Aktion.</param>
      <param name="controllerName">Der Name des Controllers</param>
      <param name="routeValues">Die Parameter für eine Route.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Leitet anhand des Aktionsnamens und des Routenwörterbuchs zur angegebenen Aktion um.</summary>
      <returns>Das Umleitungsergebnisobjekt.</returns>
      <param name="actionName">Der Name der Aktion.</param>
      <param name="routeValues">Die Parameter für eine Route.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String)"></member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Object)"></member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String)"></member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Object)">
      <summary>Gibt mithilfe des angegebenen Aktionsnamens, des angegebenen Controllernamens und der angegebenen Routenwerte eine Instanz der <see cref="T:System.Web.Mvc.RedirectResult" />-Klasse zurück, bei der die <see cref="P:System.Web.Mvc.RedirectResult.Permanent" />-Eigenschaft auf true festgelegt ist.</summary>
      <returns>Eine Instanz der <see cref="T:System.Web.Mvc.RedirectResult" />-Klasse, bei der die <see cref="P:System.Web.Mvc.RedirectResult.Permanent" />-Eigenschaft auf true festgelegt ist.</returns>
      <param name="actionName">Der Name der Aktion.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="routeValues">Die Routenwerte.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary)"></member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Web.Routing.RouteValueDictionary)"></member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.Object)">
      <summary>Leitet anhand der angegebenen Routenwerte zur angegebenen Route um.</summary>
      <returns>Das Umleitung-zu-Route-Ergebnisobjekt.</returns>
      <param name="routeValues">Die Parameter für eine Route. </param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.String)">
      <summary>Leitet anhand des Routennamens zur angegebenen Route um.</summary>
      <returns>Das Umleitung-zu-Route-Ergebnisobjekt.</returns>
      <param name="routeName">Der Name der Route</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Object)">
      <summary>Leitet anhand des Routennamens und der Routenwerte zur angegebenen Route um.</summary>
      <returns>Das Umleitung-zu-Route-Ergebnisobjekt.</returns>
      <param name="routeName">Der Name der Route</param>
      <param name="routeValues">Die Parameter für eine Route. </param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Leitet anhand des Routennamens und des Routenwörterbuchs zur angegebenen Aktion um.</summary>
      <returns>Das Umleitung-zu-Route-Ergebnisobjekt.</returns>
      <param name="routeName">Der Name der Route</param>
      <param name="routeValues">Die Parameter für eine Route.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.Web.Routing.RouteValueDictionary)">
      <summary>Leitet anhand des Routenwörterbuchs zur angegebenen Route um.</summary>
      <returns>Das Umleitung-zu-Route-Ergebnisobjekt.</returns>
      <param name="routeValues">Die Parameter für eine Route.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Object)"></member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String)"></member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Object)">
      <summary>Gibt mithilfe des angegebenen Routennamens und der angegebenen Routenwerte eine Instanz der <see cref="T:System.Web.Mvc.RedirectResult" />-Klasse zurück, bei der die <see cref="P:System.Web.Mvc.RedirectResult.Permanent" />-Eigenschaft auf true festgelegt ist.</summary>
      <returns>Eine Instanz der <see cref="T:System.Web.Mvc.RedirectResult" />-Klasse, bei der die <see cref="P:System.Web.Mvc.RedirectResult.Permanent" />-Eigenschaft auf true festgelegt ist.</returns>
      <param name="routeName">Der Routenname.</param>
      <param name="routeValues">Die Routenwerte.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)"></member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)"></member>
    <member name="P:System.Web.Mvc.Controller.Request">
      <summary>Ruft das <see cref="T:System.Web.HttpRequestBase" />-Objekt für die aktuelle HTTP-Anforderung ab.</summary>
      <returns>Das Anforderungsobjekt.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.Response">
      <summary>Ruft das <see cref="T:System.Web.HttpResponseBase" />-Objekt für die aktuelle HTTP-Antwort ab.</summary>
      <returns>Das Antwortobjekt.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.RouteData">
      <summary>Ruft die Routendaten für die aktuelle Anforderung ab.</summary>
      <returns>Die Routendaten.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.Server">
      <summary>Ruft das <see cref="T:System.Web.HttpServerUtilityBase" />-Objekt ab, das die bei der Verarbeitung von Webanforderungen verwendeten Methoden bereitstellt.</summary>
      <returns>Das HTTP-Serverobjekt.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.Session">
      <summary>Ruft das <see cref="T:System.Web.HttpSessionStateBase" />-Objekt für die aktuelle HTTP-Anforderung ab.</summary>
      <returns>Das HTTP-Sitzungszustandsobjekt für die aktuelle HTTP-Anforderung.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Diese API unterstützt die ASP.NET MVC-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen. Diese Methode ruft die <see cref="M:System.Web.Mvc.Controller.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)" />-Methode auf.</summary>
      <param name="filterContext">Der Filterkontext.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Diese API unterstützt die ASP.NET MVC-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen. Diese Methode ruft die <see cref="M:System.Web.Mvc.Controller.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)" />-Methode auf.</summary>
      <param name="filterContext">Der Filterkontext.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IAuthorizationFilter#OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Diese API unterstützt die ASP.NET MVC-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen. Diese Methode ruft die <see cref="M:System.Web.Mvc.Controller.OnAuthorization(System.Web.Mvc.AuthorizationContext)" />-Methode auf.</summary>
      <param name="filterContext">Der Filterkontext.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IExceptionFilter#OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Diese API unterstützt die ASP.NET MVC-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen. Diese Methode ruft die <see cref="M:System.Web.Mvc.Controller.OnException(System.Web.Mvc.ExceptionContext)" />-Methode auf.</summary>
      <param name="filterContext">Der Filterkontext.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Diese API unterstützt die ASP.NET MVC-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen. Diese Methode ruft die <see cref="M:System.Web.Mvc.Controller.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)" />-Methode auf.</summary>
      <param name="filterContext">Der Filterkontext.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Diese API unterstützt die ASP.NET MVC-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen. Diese Methode ruft die <see cref="M:System.Web.Mvc.Controller.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)" />-Methode auf.</summary>
      <param name="filterContext">Der Filterkontext.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.TempDataProvider">
      <summary>Ruft das temporäre Datenanbieterobjekt ab, das verwendet wird, um Daten für die nächste Anforderung zu speichern.</summary>
      <returns>Der temporäre Datenanbieter.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0)">
      <summary>Aktualisiert die angegebene Modellinstanz mit Werten vom aktuellen Wertanbieter des Controllers.</summary>
      <returns>true, wenn die Aktualisierung erfolgreich ist; andernfalls false.</returns>
      <param name="model">Die zu aktualisierende Modellinstanz.</param>
      <typeparam name="TModel">Der Typ des Modellobjekts.</typeparam>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="model" />-Parameter oder die <see cref="P:System.Web.Mvc.ControllerBase.ValueProvider" />-Eigenschaft ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String)">
      <summary>Aktualisiert die angegebene Modellinstanz mit Werten vom aktuellen Wertanbieter des Controllers und einem Präfix.</summary>
      <returns>true, wenn die Aktualisierung erfolgreich ist; andernfalls false.</returns>
      <param name="model">Die zu aktualisierende Modellinstanz.</param>
      <param name="prefix">Das beim Nachschlagen von Werten im Wertanbieter zu verwendende Präfix.</param>
      <typeparam name="TModel">Der Typ des Modellobjekts.</typeparam>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="model" />-Parameter oder die <see cref="P:System.Web.Mvc.ControllerBase.ValueProvider" />-Eigenschaft ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[])">
      <summary>Aktualisiert die angegebene Modellinstanz mit Werten vom aktuellen Wertanbieter des Controllers, einem Präfix und enthaltenen Eigenschaften.</summary>
      <returns>true, wenn die Aktualisierung erfolgreich ist; andernfalls false.</returns>
      <param name="model">Die zu aktualisierende Modellinstanz.</param>
      <param name="prefix">Das beim Nachschlagen von Werten im Wertanbieter zu verwendende Präfix.</param>
      <param name="includeProperties">Eine Liste mit den Eigenschaften des zu aktualisierenden Modells.</param>
      <typeparam name="TModel">Der Typ des Modellobjekts.</typeparam>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="model" />-Parameter oder die <see cref="P:System.Web.Mvc.ControllerBase.ValueProvider" />-Eigenschaft ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[])">
      <summary>Aktualisiert die angegebene Modellinstanz mit Werten vom aktuellen Wertanbieter des Controllers, einem Präfix sowie einer Liste auszuschließender und einer Liste einzuschließender Eigenschaften.</summary>
      <returns>true, wenn die Aktualisierung erfolgreich ist; andernfalls false.</returns>
      <param name="model">Die zu aktualisierende Modellinstanz.</param>
      <param name="prefix">Das beim Nachschlagen von Werten im Wertanbieter zu verwendende Präfix</param>
      <param name="includeProperties">Eine Liste mit den Eigenschaften des zu aktualisierenden Modells.</param>
      <param name="excludeProperties">Eine Liste mit Eigenschaften, die explizit vom Update ausgeschlossen werden sollen. Sie werden ausgeschlossen, auch wenn sie in der <paramref name="includeProperties" />-Parameterliste aufgeführt sind.</param>
      <typeparam name="TModel">Der Typ des Modellobjekts.</typeparam>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="model" />-Parameter oder die <see cref="P:System.Web.Mvc.ControllerBase.ValueProvider" />-Eigenschaft ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Aktualisiert die angegebene Modellinstanz mit Werten vom Wertanbieter, einem Präfix, einer Liste auszuschließender und einer Liste einzuschließender Eigenschaften.</summary>
      <returns>true, wenn die Aktualisierung erfolgreich ist; andernfalls false.</returns>
      <param name="model">Die zu aktualisierende Modellinstanz.</param>
      <param name="prefix">Das beim Nachschlagen von Werten im Wertanbieter zu verwendende Präfix.</param>
      <param name="includeProperties">Eine Liste mit den Eigenschaften des zu aktualisierenden Modells.</param>
      <param name="excludeProperties">Eine Liste mit Eigenschaften, die explizit vom Update ausgeschlossen werden sollen. Sie werden ausgeschlossen, auch wenn sie in der <paramref name="includeProperties" />-Parameterliste aufgeführt sind.</param>
      <param name="valueProvider">Ein Wörterbuch mit Werten, das zum Aktualisieren des Modells verwendet wird.</param>
      <typeparam name="TModel">Der Typ des Modellobjekts.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Aktualisiert die angegebene Modellinstanz mit Werten vom Wertanbieter, einem Präfix und enthaltenen Eigenschaften.</summary>
      <returns>true, wenn die Aktualisierung erfolgreich ist; andernfalls false.</returns>
      <param name="model">Die zu aktualisierende Modellinstanz.</param>
      <param name="prefix">Das beim Nachschlagen von Werten im Wertanbieter zu verwendende Präfix.</param>
      <param name="includeProperties">Eine Liste mit den Eigenschaften des zu aktualisierenden Modells.</param>
      <param name="valueProvider">Ein Wörterbuch mit Werten, das zum Aktualisieren des Modells verwendet wird.</param>
      <typeparam name="TModel">Der Typ des Modellobjekts.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)">
      <summary>Aktualisiert die angegebene Modellinstanz mit Werten vom Wertanbieter und einem Präfix.</summary>
      <returns>true, wenn die Aktualisierung erfolgreich ist; andernfalls false.</returns>
      <param name="model">Die zu aktualisierende Modellinstanz.</param>
      <param name="prefix">Das beim Nachschlagen von Werten im Wertanbieter zu verwendende Präfix.</param>
      <param name="valueProvider">Ein Wörterbuch mit Werten, das zum Aktualisieren des Modells verwendet wird.</param>
      <typeparam name="TModel">Der Typ des Modellobjekts.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[])">
      <summary>Aktualisiert die angegebene Modellinstanz mit Werten vom aktuellen Wertanbieter des Controllers und enthaltenen Eigenschaften.</summary>
      <returns>true, wenn die Aktualisierung erfolgreich ist; andernfalls false.</returns>
      <param name="model">Die zu aktualisierende Modellinstanz.</param>
      <param name="includeProperties">Eine Liste mit den Eigenschaften des zu aktualisierenden Modells.</param>
      <typeparam name="TModel">Der Typ des Modellobjekts.</typeparam>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="model" />-Parameter oder die <see cref="P:System.Web.Mvc.ControllerBase.ValueProvider" />-Eigenschaft ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Aktualisiert die angegebene Modellinstanz mit Werten vom Wertanbieter sowie einer Liste einzuschließender Eigenschaften.</summary>
      <returns>true, wenn die Aktualisierung erfolgreich ist; andernfalls false.</returns>
      <param name="model">Die zu aktualisierende Modellinstanz.</param>
      <param name="includeProperties">Eine Liste mit den Eigenschaften des zu aktualisierenden Modells.</param>
      <param name="valueProvider">Ein Wörterbuch mit Werten, das zum Aktualisieren des Modells verwendet wird.</param>
      <typeparam name="TModel">Der Typ des Modellobjekts.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.Web.Mvc.IValueProvider)">
      <summary>Aktualisiert die angegebene Modellinstanz mit Werten vom Wertanbieter.</summary>
      <returns>true, wenn die Aktualisierung erfolgreich ist; andernfalls false.</returns>
      <param name="model">Die zu aktualisierende Modellinstanz.</param>
      <param name="valueProvider">Ein Wörterbuch mit Werten, das zum Aktualisieren des Modells verwendet wird.</param>
      <typeparam name="TModel">Der Typ des Modellobjekts.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryValidateModel(System.Object)">
      <summary>Überprüft die angegebene Modellinstanz.</summary>
      <returns>true, wenn die Modellvalidierung erfolgreich ist, andernfalls false.</returns>
      <param name="model">Die zu überprüfende Modellinstanz.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryValidateModel(System.Object,System.String)">
      <summary>Überprüft die angegebene Modellinstanz mit einem HTML-Präfix.</summary>
      <returns>true, wenn die Modellvalidierung erfolgreich ist, andernfalls false.</returns>
      <param name="model">Das zu überprüfende Modell.</param>
      <param name="prefix">Das beim Nachschlagen von Werten im Modellanbieter zu verwendende Präfix.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0)">
      <summary>Aktualisiert die angegebene Modellinstanz mit Werten vom aktuellen Wertanbieter des Controllers.</summary>
      <param name="model">Die zu aktualisierende Modellinstanz.</param>
      <typeparam name="TModel">Der Typ des Modellobjekts.</typeparam>
      <exception cref="T:System.InvalidOperationException">Das Modell wurde nicht erfolgreich aktualisiert.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String)">
      <summary>Aktualisiert die angegebene Modellinstanz mit Werten vom aktuellen Wertanbieter des Controllers und einem Präfix.</summary>
      <param name="model">Die zu aktualisierende Modellinstanz.</param>
      <param name="prefix">Ein zu verwendendes Präfix beim Nachschlagen von Werten im Wertanbieter.</param>
      <typeparam name="TModel">Der Typ des Modellobjekts.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[])">
      <summary>Aktualisiert die angegebene Modellinstanz mit Werten vom aktuellen Wertanbieter des Controllers, einem Präfix und enthaltenen Eigenschaften.</summary>
      <param name="model">Die zu aktualisierende Modellinstanz.</param>
      <param name="prefix">Ein zu verwendendes Präfix beim Nachschlagen von Werten im Wertanbieter.</param>
      <param name="includeProperties">Eine Liste mit den Eigenschaften des zu aktualisierenden Modells.</param>
      <typeparam name="TModel">Der Typ des Modellobjekts.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[])">
      <summary>Aktualisiert die angegebene Modellinstanz mit Werten vom aktuellen Wertanbieter des Controllers, einem Präfix sowie einer Liste auszuschließender und einer Liste einzuschließender Eigenschaften.</summary>
      <param name="model">Die zu aktualisierende Modellinstanz.</param>
      <param name="prefix">Ein zu verwendendes Präfix beim Nachschlagen von Werten im Wertanbieter.</param>
      <param name="includeProperties">Eine Liste mit den Eigenschaften des zu aktualisierenden Modells.</param>
      <param name="excludeProperties">Eine Liste mit Eigenschaften, die explizit vom Update ausgeschlossen werden sollen. Sie werden ausgeschlossen, auch wenn sie in der <paramref name="includeProperties" />-Liste aufgeführt sind.</param>
      <typeparam name="TModel">Der Typ des Modellobjekts.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Aktualisiert die angegebene Modellinstanz mit Werten vom Wertanbieter, einem Präfix, einer Liste auszuschließender und einer Liste einzuschließender Eigenschaften.</summary>
      <param name="model">Die zu aktualisierende Modellinstanz.</param>
      <param name="prefix">Das beim Nachschlagen von Werten im Wertanbieter zu verwendende Präfix.</param>
      <param name="includeProperties">Eine Liste mit den Eigenschaften des zu aktualisierenden Modells.</param>
      <param name="excludeProperties">Eine Liste mit Eigenschaften, die explizit vom Update ausgeschlossen werden sollen. Sie werden ausgeschlossen, auch wenn sie in der <paramref name="includeProperties" />-Parameterliste aufgeführt sind.</param>
      <param name="valueProvider">Ein Wörterbuch mit Werten, das zum Aktualisieren des Modells verwendet wird.</param>
      <typeparam name="TModel">Der Typ des Modellobjekts.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Aktualisiert die angegebene Modellinstanz mit Werten vom Wertanbieter, einem Präfix sowie einer Liste einzuschließender Eigenschaften.</summary>
      <param name="model">Die zu aktualisierende Modellinstanz.</param>
      <param name="prefix">Das beim Nachschlagen von Werten im Wertanbieter zu verwendende Präfix.</param>
      <param name="includeProperties">Eine Liste mit den Eigenschaften des zu aktualisierenden Modells.</param>
      <param name="valueProvider">Ein Wörterbuch mit Werten, das zum Aktualisieren des Modells verwendet wird.</param>
      <typeparam name="TModel">Der Typ des Modellobjekts.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)">
      <summary>Aktualisiert die angegebene Modellinstanz mit Werten vom Wertanbieter und einem Präfix.</summary>
      <param name="model">Die zu aktualisierende Modellinstanz.</param>
      <param name="prefix">Das beim Nachschlagen von Werten im Wertanbieter zu verwendende Präfix.</param>
      <param name="valueProvider">Ein Wörterbuch mit Werten, das zum Aktualisieren des Modells verwendet wird.</param>
      <typeparam name="TModel">Der Typ des Modellobjekts.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[])">
      <summary>Aktualisiert die angegebene Modellinstanz mit Werten vom aktuellen Wertanbieter des Controllerobjekts.</summary>
      <param name="model">Die zu aktualisierende Modellinstanz.</param>
      <param name="includeProperties">Eine Liste mit den Eigenschaften des zu aktualisierenden Modells.</param>
      <typeparam name="TModel">Der Typ des Modellobjekts.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Aktualisiert die angegebene Modellinstanz mit Werten vom Wertanbieter, einem Präfix sowie einer Liste einzuschließender Eigenschaften.</summary>
      <param name="model">Die zu aktualisierende Modellinstanz.</param>
      <param name="includeProperties">Eine Liste mit den Eigenschaften des zu aktualisierenden Modells.</param>
      <param name="valueProvider">Ein Wörterbuch mit Werten, das zum Aktualisieren des Modells verwendet wird.</param>
      <typeparam name="TModel">Der Typ des Modellobjekts.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.Web.Mvc.IValueProvider)">
      <summary>Aktualisiert die angegebene Modellinstanz mit Werten vom Wertanbieter.</summary>
      <param name="model">Die zu aktualisierende Modellinstanz.</param>
      <param name="valueProvider">Ein Wörterbuch mit Werten, das zum Aktualisieren des Modells verwendet wird.</param>
      <typeparam name="TModel">Der Typ des Modellobjekts.</typeparam>
    </member>
    <member name="P:System.Web.Mvc.Controller.Url">
      <summary>Ruft das URL-Hilfsobjekt ab, mit dem URLs mithilfe von Routing generiert werden.</summary>
      <returns>Das URL-Hilfsobjekt.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.User">
      <summary>Ruft die Sicherheitsinformationen des Benutzers für die aktuelle HTTP-Anforderung ab.</summary>
      <returns>Die Sicherheitsinformationen des Benutzers für die aktuelle HTTP-Anforderung.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.ValidateModel(System.Object)">
      <summary>Überprüft die angegebene Modellinstanz.</summary>
      <param name="model">Das zu überprüfende Modell.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.ValidateModel(System.Object,System.String)">
      <summary>Überprüft die angegebene Modellinstanz mit einem HTML-Präfix.</summary>
      <param name="model">Das zu überprüfende Modell.</param>
      <param name="prefix">Das beim Nachschlagen von Werten im Modellanbieter zu verwendende Präfix.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View">
      <summary>Erstellt ein <see cref="T:System.Web.Mvc.ViewResult" />-Objekt, das eine Ansicht für die Antwort rendert.</summary>
      <returns>Das Ansichtsergebnis, das eine Ansicht für die Antwort rendert.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.Object)">
      <summary>Erstellt ein <see cref="T:System.Web.Mvc.ViewResult" />-Objekt mit dem Modell, das eine Ansicht für die Antwort rendert.</summary>
      <returns>Das Ansichtsergebnis.</returns>
      <param name="model">Das von der Ansicht gerenderte Modell.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String)">
      <summary>Erstellt anhand des Ansichtsnamens ein <see cref="T:System.Web.Mvc.ViewResult" />-Objekt, das eine Ansicht rendert.</summary>
      <returns>Das Ansichtsergebnis.</returns>
      <param name="viewName">Der Name der Ansicht, die für die Antwort gerendert wird.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String,System.Object)">
      <summary>Erstellt anhand des Ansichtsnamens und Modells ein <see cref="T:System.Web.Mvc.ViewResult" />-Objekt, das eine Ansicht für die Antwort rendert.</summary>
      <returns>Das Ansichtsergebnis.</returns>
      <param name="viewName">Der Name der Ansicht, die für die Antwort gerendert wird.</param>
      <param name="model">Das von der Ansicht gerenderte Modell.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String,System.String)">
      <summary>Erstellt anhand des Namens der Ansicht und der Gestaltungsvorlage ein <see cref="T:System.Web.Mvc.ViewResult" />-Objekt, das eine Ansicht für die Antwort rendert.</summary>
      <returns>Das Ansichtsergebnis.</returns>
      <param name="viewName">Der Name der Ansicht, die für die Antwort gerendert wird.</param>
      <param name="masterName">Der Name der beim Rendern der Ansicht zu verwendenden Gestaltungsvorlage oder Vorlage.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String,System.String,System.Object)">
      <summary>Erstellt anhand des Namens der Ansicht, der Gestaltungsvorlage und des Modells ein <see cref="T:System.Web.Mvc.ViewResult" />-Objekt, das eine Ansicht rendert.</summary>
      <returns>Das Ansichtsergebnis.</returns>
      <param name="viewName">Der Name der Ansicht, die für die Antwort gerendert wird.</param>
      <param name="masterName">Der Name der beim Rendern der Ansicht zu verwendenden Gestaltungsvorlage oder Vorlage.</param>
      <param name="model">Das von der Ansicht gerenderte Modell.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.Web.Mvc.IView)">
      <summary>Erstellt ein <see cref="T:System.Web.Mvc.ViewResult" />-Objekt, das das angegebene <see cref="T:System.Web.Mvc.IView" />-Objekt rendert.</summary>
      <returns>Das Ansichtsergebnis.</returns>
      <param name="view">Der Ansicht, die für die Antwort gerendert wird.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.Web.Mvc.IView,System.Object)">
      <summary>Erstellt ein <see cref="T:System.Web.Mvc.ViewResult" />-Objekt, das das angegebene <see cref="T:System.Web.Mvc.IView" />-Objekt rendert.</summary>
      <returns>Das Ansichtsergebnis.</returns>
      <param name="view">Der Ansicht, die für die Antwort gerendert wird.</param>
      <param name="model">Das von der Ansicht gerenderte Modell.</param>
    </member>
    <member name="T:System.Web.Mvc.ControllerActionInvoker">
      <summary>Stellt eine Klasse dar, die für das Aufrufen der Aktionsmethoden eines Controllers zuständig ist.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ControllerActionInvoker" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerActionInvoker.Binders">
      <summary>Ruft die Modellbinder ab (bzw. legt diese fest), die der Aktion zugeordnet sind.</summary>
      <returns>Die Modellbinder, die der Aktion zugeordnet sind.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.CreateActionResult(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Object)">
      <summary>Erstellt das Aktionsergebnis.</summary>
      <returns>Das Aktionsergebnisobjekt.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionDescriptor">Der Aktionsdeskriptor.</param>
      <param name="actionReturnValue">Der Rückgabewert der Aktion.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.FindAction(System.Web.Mvc.ControllerContext,System.Web.Mvc.ControllerDescriptor,System.String)">
      <summary>Sucht nach den Informationen zur Aktionsmethode.</summary>
      <returns>Informationen zur Aktionsmethode.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="controllerDescriptor">Der Controllerdeskriptor.</param>
      <param name="actionName">Der Name der Aktion.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetControllerDescriptor(System.Web.Mvc.ControllerContext)">
      <summary>Ruft Informationen zum Controller ab, indem der angegebene Controllerkontext verwendet wird.</summary>
      <returns>Informationen zum Controller.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Ruft Informationen zu den Aktionsfiltern ab.</summary>
      <returns>Informationen zu den Aktionsfiltern.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionDescriptor">Der Aktionsdeskriptor.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetParameterValue(System.Web.Mvc.ControllerContext,System.Web.Mvc.ParameterDescriptor)">
      <summary>Ruft den Wert des angegebenen Aktionsmethodenparameters ab.</summary>
      <returns>Der Wert des Aktionsmethodenparameters.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="parameterDescriptor">Der Parameterdeskriptor.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetParameterValues(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Ruft die Werte der Aktionsmethodenparameter ab.</summary>
      <returns>Die Werte der Aktionsmethodenparameter.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionDescriptor">Der Aktionsdeskriptor.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Ruft die angegebene Aktion auf, indem der angegebene Controllerkontext verwendet wird.</summary>
      <returns>Das Ergebnis, zu dem die Ausführung der Aktion führt.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionName">Der Name der aufzurufenden Aktion.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="controllerContext" />-Parameter ist null.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="actionName" />-Parameter ist null oder leer.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">Der Thread wurde beim Aufruf der Aktion abgebrochen.</exception>
      <exception cref="T:System.Exception">Beim Aufruf der Aktion ist ein nicht spezifizierter Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Ruft die angegebene Aktionsmethode auf, indem die angegebenen Parameter und der Controllerkontext verwendet werden.</summary>
      <returns>Das Ergebnis, zu dem die Ausführung der Aktionsmethode führt.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionDescriptor">Der Aktionsdeskriptor.</param>
      <param name="parameters">Die Parameter.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IActionFilter},System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Ruft die angegebene Aktionsmethode auf, indem die angegebenen Parameter, der Controllerkontext und die Aktionsfilter verwendet werden.</summary>
      <returns>Der Kontext für die ActionExecuted-Methode der <see cref="T:System.Web.Mvc.ActionFilterAttribute" />-Klasse.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="filters">Die Aktionsfilter.</param>
      <param name="actionDescriptor">Der Aktionsdeskriptor.</param>
      <param name="parameters">Die Parameter.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionResult(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionResult)">
      <summary>Ruft das angegebene Aktionsergebnis auf, indem der angegebene Controllerkontext verwendet wird.</summary>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionResult">Das Aktionsergebnis.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionResultWithFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IResultFilter},System.Web.Mvc.ActionResult)">
      <summary>Ruft das angegebene Aktionsergebnis auf, indem die angegebenen Aktionsfilter und der Controllerkontext verwendet werden.</summary>
      <returns>Der Kontext für die ResultExecuted-Methode der <see cref="T:System.Web.Mvc.ActionFilterAttribute" />-Klasse.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="filters">Die Aktionsfilter.</param>
      <param name="actionResult">Das Aktionsergebnis.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeAuthorizationFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IAuthorizationFilter},System.Web.Mvc.ActionDescriptor)">
      <summary>Ruft die angegebenen Autorisierungsfilter auf, indem der angegebene Aktionsdeskriptor und der Controllerkontext verwendet werden.</summary>
      <returns>Der Kontext für das <see cref="T:System.Web.Mvc.AuthorizeAttribute" />-Objekt.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="filters">Die Autorisierungsfilter.</param>
      <param name="actionDescriptor">Der Aktionsdeskriptor.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeExceptionFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IExceptionFilter},System.Exception)">
      <summary>Ruft die angegebenen Ausnahmefilter auf, indem die angegebene Ausnahme und der Controllerkontext verwendet werden.</summary>
      <returns>Der Kontext für das <see cref="T:System.Web.Mvc.HandleErrorAttribute" />-Objekt.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="filters">Die Ausnahmefilter.</param>
      <param name="exception">Die Ausnahme.</param>
    </member>
    <member name="T:System.Web.Mvc.ControllerBase">
      <summary>Stellt die Basisklasse für alle MVC-Controller dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ControllerBase" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ControllerContext">
      <summary>Ruft den Controllerkontext ab bzw. legt ihn fest.</summary>
      <returns>Der Controllerkontext.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.Execute(System.Web.Routing.RequestContext)">
      <summary>Führt den angegebenen Anforderungskontext aus.</summary>
      <param name="requestContext">Der Anforderungskontext.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="requestContext" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.ExecuteCore">
      <summary>Führt die Anforderung aus.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.Initialize(System.Web.Routing.RequestContext)">
      <summary>Initialisiert den angegebenen Anforderungskontext.</summary>
      <param name="requestContext">Der Anforderungskontext.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.System#Web#Mvc#IController#Execute(System.Web.Routing.RequestContext)">
      <summary>Führt den angegebenen Anforderungskontext aus.</summary>
      <param name="requestContext">Der Anforderungskontext.</param>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.TempData">
      <summary>Ruft das Wörterbuch für temporäre Daten ab bzw. legt es fest.</summary>
      <returns>Das Wörterbuch für temporäre Daten.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ValidateRequest">
      <summary>Ruft einen Wert ab, der angibt, ob die Anforderungsvalidierung für diese Anforderung aktiviert ist, oder legt diesen fest.</summary>
      <returns>true, wenn die Anforderungsvalidierung für diese Anforderung aktiviert ist, andernfalls false. Der Standardwert ist true.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ValueProvider">
      <summary>Ruft den Wertanbieter für den Controller ab bzw. legt diesen fest.</summary>
      <returns>Der Wertanbieter für den Controller.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ViewData">
      <summary>Ruft das Wörterbuch für Ansichtsdaten ab bzw. legt es fest.</summary>
      <returns>Das Wörterbuch für die Ansichtsdaten.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ViewModel">
      <summary>Ruft das Wörterbuch mit den dynamischen Ansichtsdaten ab.</summary>
      <returns>Das Wörterbuch für die dynamischen Ansichtsdaten.</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerBuilder">
      <summary>Stellt eine Klasse dar, die für das dynamische Erstellen eines Controllers zuständig ist.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ControllerBuilder" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerBuilder.Current">
      <summary>Ruft das aktuelle Controller-Generator-Objekt ab.</summary>
      <returns>Der aktuelle Controller-Generator.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBuilder.DefaultNamespaces">
      <summary>Ruft die Standardnamespaces ab.</summary>
      <returns>Die Standardnamespaces.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.GetControllerFactory">
      <summary>Ruft die zugeordnete Controllerfactory ab.</summary>
      <returns>Die Controllerfactory.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.SetControllerFactory(System.Type)">
      <summary>Legt die Controllerfactory fest, indem der angegebene Typ verwendet wird.</summary>
      <param name="controllerFactoryType">Der Typ der Controllerfactory.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="controllerFactoryType" />-Parameter ist null.</exception>
      <exception cref="T:System.ArgumentException">Die Controllerfactory kann nicht über den Typ im <paramref name="controllerFactoryType" />-Parameter zugewiesen werden.</exception>
      <exception cref="T:System.InvalidOperationException">Beim Festlegen der Controllerfactory ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.SetControllerFactory(System.Web.Mvc.IControllerFactory)">
      <summary>Legt die angegebene Controllerfactory fest.</summary>
      <param name="controllerFactory">Die Controllerfactory.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="controllerFactory" />-Parameter ist null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ControllerContext">
      <summary>Kapselt Informationen zu einer HTTP-Anforderung, die mit den angegebenen Instanzen <see cref="T:System.Web.Routing.RouteBase" /> und <see cref="T:System.Web.Mvc.ControllerBase" /> übereinstimmt.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ControllerContext" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor(System.Web.HttpContextBase,System.Web.Routing.RouteData,System.Web.Mvc.ControllerBase)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ControllerContext" />-Klasse, indem der angegebene HTTP-Kontext, die URL-Routendaten und der Controller verwendet werden.</summary>
      <param name="httpContext">Der HTTP-Kontext.</param>
      <param name="routeData">Die Routendaten.</param>
      <param name="controller">Der Controller.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ControllerContext" />-Klasse, indem der angegebene Controllerkontext verwendet wird.</summary>
      <param name="controllerContext">Der Controllerkontext.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="controllerContext" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor(System.Web.Routing.RequestContext,System.Web.Mvc.ControllerBase)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ControllerContext" />-Klasse, indem der angegebene Anforderungskontext und der Controller verwendet werden.</summary>
      <param name="requestContext">Der Anforderungskontext.</param>
      <param name="controller">Der Controller.</param>
      <exception cref="T:System.ArgumentNullException">Ein oder beide Parameter sind null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.Controller">
      <summary>Ruft den Controller ab bzw. legt ihn fest.</summary>
      <returns>Der Controller.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.HttpContext">
      <summary>Ruft den HTTP-Kontext ab bzw. legt ihn fest.</summary>
      <returns>Der HTTP-Kontext.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.IsChildAction">
      <summary>Ruft einen Wert ab, der angibt, ob die zugeordnete Aktionsmethode eine untergeordnete Aktion ist.</summary>
      <returns>true, wenn die zugeordnete Aktionsmethode eine untergeordnete Aktion ist, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.ParentActionViewContext">
      <summary>Ruft ein Objekt ab, das die Kontextinformationen zur Ansicht für die übergeordnete Aktionsmethode enthält.</summary>
      <returns>Ein Objekt, das die Kontextinformationen zur Ansicht für die übergeordnete Aktionsmethode enthält.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.RequestContext">
      <summary>Ruft den Anforderungskontext ab bzw. legt diesen fest.</summary>
      <returns>Der Anforderungskontext.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.RouteData">
      <summary>Ruft die URL-Routendaten ab bzw. legt diese fest.</summary>
      <returns>Die URL-Routendaten.</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerDescriptor">
      <summary>Kapselt Informationen, die einen Controller beschreiben, z. B. seinen Namen, den Typ und die Aktionen.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ControllerDescriptor" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerDescriptor.ControllerName">
      <summary>Ruft den Namen des Controllers ab.</summary>
      <returns>Der Name des Controllers.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerDescriptor.ControllerType">
      <summary>Ruft den Typ des Controllers ab.</summary>
      <returns>Der Typ des Controllers.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.FindAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Sucht nach einer Aktionsmethode, indem der angegebene Name und der Controllerkontext verwendet werden.</summary>
      <returns>Die Informationen zur Aktionsmethode.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionName">Der Name der Aktion.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetCanonicalActions">
      <summary>Ruft eine Liste von Aktionsmethodendeskriptoren im Controller ab.</summary>
      <returns>Eine Liste von Aktionsmethodendeskriptoren im Controller.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Ruft für diesen Member definierte benutzerdefinierte Attribute ab, mit Ausnahme benannter Attribute.</summary>
      <returns>Ein Array mit benutzerdefinierten Attributen oder ein leeres Array, falls keine benutzerdefinierten Attribute vorhanden sind.</returns>
      <param name="inherit">true, um nach der Hierarchiekette für das geerbte benutzerdefinierte Attribut zu suchen, andernfalls false.</param>
      <exception cref="T:System.TypeLoadException">Der benutzerdefinierte Attributtyp kann nicht geladen werden.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Es sind mehrere Attribute vom Typ <paramref name="attributeType" /> für diesen Member definiert.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Ruft benutzerdefinierte Attribute eines angegebenen Typs ab, die für diesen Member definiert sind, mit Ausnahme benannter Attribute.</summary>
      <returns>Ein Array mit benutzerdefinierten Attributen oder ein leeres Array, falls keine benutzerdefinierten Attribute vorhanden sind.</returns>
      <param name="attributeType">Der Typ der benutzerdefinierten Attribute.</param>
      <param name="inherit">true, um nach der Hierarchiekette für das geerbte benutzerdefinierte Attribut zu suchen, andernfalls false.</param>
      <exception cref="T:System.TypeLoadException">Der benutzerdefinierte Attributtyp kann nicht geladen werden.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Es sind mehrere Attribute vom Typ <paramref name="attributeType" /> für diesen Member definiert.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="attributeType" />-Parameter ist null (Nothing in Visual Basic).</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Ruft einen Wert ab, der angibt, ob eine oder mehrere Instanzen des angegebenen benutzerdefinierten Attributs für diesen Member definiert sind.</summary>
      <returns>true, wenn <paramref name="attributeType" /> für diesen Member definiert ist, andernfalls false.</returns>
      <param name="attributeType">Der Typ des benutzerdefinierten Attributs.</param>
      <param name="inherit">true, um nach der Hierarchiekette für das geerbte benutzerdefinierte Attribut zu suchen, andernfalls false.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="attributeType" />-Parameter ist null (Nothing in Visual Basic).</exception>
    </member>
    <member name="P:System.Web.Mvc.ControllerDescriptor.UniqueId">
      <summary>Ruft bei Implementierung in einer abgeleiteten Klasse die eindeutige ID für den Controllerdeskriptor mithilfe der verzögerten Initialisierung ab.</summary>
      <returns>Die eindeutige ID.</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerInstanceFilterProvider">
      <summary>Fügt den Controller zur <see cref="T:System.Web.Mvc.FilterProviderCollection" />-Instanz hinzu.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerInstanceFilterProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ControllerInstanceFilterProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerInstanceFilterProvider.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Gibt die Auflistung von Controllerinstanzfiltern zurück.</summary>
      <returns>Die Auflistung von Controllerinstanzfiltern.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionDescriptor">Der Aktionsdeskriptor.</param>
    </member>
    <member name="T:System.Web.Mvc.ControllerSessionStateAttribute">
      <summary>Gibt den Sitzungszustand des Controllers an.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerSessionStateAttribute.#ctor(System.Web.SessionState.SessionStateBehavior)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ControllerSessionStateAttribute" />-Klasse.</summary>
      <param name="behavior">Der Typ des Sitzungszustands.</param>
    </member>
    <member name="P:System.Web.Mvc.ControllerSessionStateAttribute.Behavior">
      <summary>Ruft das Sitzungszustandsverhalten für den Controller ab.</summary>
      <returns>Das Sitzungszustandsverhalten für den Controller.</returns>
    </member>
    <member name="T:System.Web.Mvc.CustomModelBinderAttribute">
      <summary>Stellt ein Attribut dar, das einen benutzerdefinierten Modellbinder aufruft.</summary>
    </member>
    <member name="M:System.Web.Mvc.CustomModelBinderAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.CustomModelBinderAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.CustomModelBinderAttribute.GetBinder">
      <summary>Ruft den zugeordneten Modellbinder ab.</summary>
      <returns>Ein Verweis auf ein Objekt, das die <see cref="T:System.Web.Mvc.IModelBinder" />-Schnittstelle implementiert.</returns>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelMetadata">
      <summary>Stellt einen Container für allgemeine Metadaten für die <see cref="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider" />-Klasse und für die <see cref="T:System.Web.Mvc.DataAnnotationsModelValidator" />-Klasse für ein Datenmodell bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadata.#ctor(System.Web.Mvc.DataAnnotationsModelMetadataProvider,System.Type,System.Func`1,System.Void,System.Object,System.Type)"></member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadata.GetSimpleDisplayText">
      <summary>Gibt einfachen Text für die Modelldaten zurück.</summary>
      <returns>Einfacher Text für die Modelldaten.</returns>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider">
      <summary>Implementiert den Metadatenanbieter des Standardmodells für ASP.NET-MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadataProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func`1,System.Void,System.Object)"></member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidationFactory">
      <summary>Stellt die Methode dar, die eine <see cref="T:System.Web.Mvc.DataAnnotationsModelValidatorProvider" />-Instanz erstellt.</summary>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidator">
      <summary>Stellt ein Validierungssteuerelement für das Modell bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.ValidationAttribute)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.DataAnnotationsModelValidator" />-Klasse.</summary>
      <param name="metadata">Die Metadaten für das Modell.</param>
      <param name="context">Der Controllerkontext für das Modell.</param>
      <param name="attribute">Das Validierungsattribut für das Modell.</param>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator.Attribute">
      <summary>Ruft das Validierungsattribut für das Validierungssteuerelement des Modells ab.</summary>
      <returns>Das Validierungsattribut für das Validierungssteuerelement des Modells.</returns>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator.ErrorMessage">
      <summary>Ruft die Fehlermeldung für den Validierungsfehler ab.</summary>
      <returns>Die Fehlermeldung für den Validierungsfehler.</returns>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator.GetClientValidationRules">
      <summary>Ruft eine Auflistung von Clientvalidierungsregeln ab.</summary>
      <returns>Eine Auflistung von Clientvalidierungsregeln.</returns>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator.IsRequired">
      <summary>Ruft einen Wert ab, der angibt, ob Modellvalidierung erforderlich ist, oder legt diesen fest.</summary>
      <returns>true, wenn Modellvalidierung erforderlich ist; andernfalls false.</returns>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator.Validate(System.Object)">
      <summary>Gibt eine Liste von Validierungsfehlermeldungen für das Modell zurück.</summary>
      <returns>Eine Liste von Validierungsfehlermeldungen für das Modell oder eine leere Liste, wenn keine Fehler aufgetreten sind.</returns>
      <param name="container">Der Container für das Modell.</param>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidator`1">
      <summary>Stellt für einen angegebenen Validierungstyp ein Validierungssteuerelement für ein Modell bereit.</summary>
      <typeparam name="TAttribute"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator`1.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,`0)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.DataAnnotationsModelValidator" />-Klasse.</summary>
      <param name="metadata">Die Metadaten für das Modell.</param>
      <param name="context">Der Controllerkontext für das Modell.</param>
      <param name="attribute">Das Validierungsattribut für das Modell.</param>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator`1.Attribute">
      <summary>Ruft das Validierungsattribut aus dem Validierungssteuerelement des Modells ab.</summary>
      <returns>Das Validierungsattribut aus dem Validierungssteuerelement des Modells.</returns>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidatorProvider">
      <summary>Implementiert den Standardvalidierungsanbieter für ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.DataAnnotationsModelValidatorProvider" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidatorProvider.AddImplicitRequiredAttributeForValueTypes">
      <summary>Ruft einen Wert ab, der angibt, ob nicht auf NULL festlegbare Werttypen erforderlich sind, oder legt diesen fest.</summary>
      <returns>true, wenn nicht auf NULL festlegbare Werttypen erforderlich sind, andernfalls false.</returns>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Ruft eine Liste von Validierungssteuerelementen ab.</summary>
      <returns>Eine Liste der Validierungssteuerelemente.</returns>
      <param name="metadata">Die Metadaten.</param>
      <param name="context">Der Kontext.</param>
      <param name="attributes">Die Liste der Validierungsattribute.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterAdapter(System.Type,System.Type)">
      <summary>Registriert einen Adapter, um die clientseitige Validierung bereitzustellen.</summary>
      <param name="attributeType">Der Typ des Validierungsattributs.</param>
      <param name="adapterType">Der Typ des Adapters.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterAdapterFactory(System.Type,System.Web.Mvc.DataAnnotationsModelValidationFactory)">
      <summary>Registriert eine Adapterfactory für den Validierungsanbieter.</summary>
      <param name="attributeType">Der Typ des Attributs.</param>
      <param name="factory">Die Factory, die verwendet wird, um das <see cref="T:System.Web.Mvc.ModelValidator" />-Objekt für das angegebene Attribut zu erstellen.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultAdapter(System.Type)">
      <summary>Registriert den Standardadapter.</summary>
      <param name="adapterType">Der Typ des Adapters.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultAdapterFactory(System.Web.Mvc.DataAnnotationsModelValidationFactory)">
      <summary>Registriert die Standardadapterfactory.</summary>
      <param name="factory">Die Factory, die verwendet wird, um das <see cref="T:System.Web.Mvc.ModelValidator" />-Objekt für den Standardadapter zu erstellen.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultValidatableObjectAdapter(System.Type)">
      <summary>Registriert einen Adapter, um Standardobjektvalidierung bereitzustellen.</summary>
      <param name="adapterType">Der Typ des Adapters.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultValidatableObjectAdapterFactory(System.Web.Mvc.DataAnnotationsValidatableObjectAdapterFactory)">
      <summary>Registriert eine Adapterfactory für den Standard-Objektvalidierungsanbieter.</summary>
      <param name="factory">Die Factory.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterValidatableObjectAdapter(System.Type,System.Type)">
      <summary>Registriert einen Adapter, um Objektvalidierung bereitzustellen.</summary>
      <param name="modelType">Der Typ des Modells.</param>
      <param name="adapterType">Der Typ des Adapters.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterValidatableObjectAdapterFactory(System.Type,System.Web.Mvc.DataAnnotationsValidatableObjectAdapterFactory)">
      <summary>Registriert eine Adapterfactory für den Objektvalidierungsanbieter.</summary>
      <param name="modelType">Der Typ des Modells.</param>
      <param name="factory">Die Factory.</param>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsValidatableObjectAdapterFactory">
      <summary>Stellt eine Factory für Validierungen bereit, die auf <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" /> basieren.</summary>
    </member>
    <member name="T:System.Web.Mvc.DataErrorInfoModelValidatorProvider">
      <summary>Stellt einen Container für das Modellvalidierungssteuerelement für Fehlerinformationen bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataErrorInfoModelValidatorProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.DataErrorInfoModelValidatorProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataErrorInfoModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Ruft eine Liste von Modellvalidierungssteuerelementen für Fehlerinformationen ab.</summary>
      <returns>Eine Liste von Modellvalidierungssteuerelementen für Fehlerinformationen.</returns>
      <param name="metadata">Die Modellmetadaten.</param>
      <param name="context">Der Controllerkontext.</param>
    </member>
    <member name="T:System.Web.Mvc.DefaultControllerFactory">
      <summary>Stellt die Controllerfactory dar, die standardmäßig registriert wird.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.DefaultControllerFactory" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.#ctor(System.Web.Mvc.IControllerActivator)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.DefaultControllerFactory" />-Klasse mithilfe einer Controlleraktivierung.</summary>
      <param name="controllerActivator">Ein Objekt, das die Schnittstelle der Controlleraktivierung implementiert.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.CreateController(System.Web.Routing.RequestContext,System.String)">
      <summary>Erstellt den angegebenen Controller mithilfe des angegebenen Anforderungskontexts.</summary>
      <returns>Der Controller.</returns>
      <param name="requestContext">Der Kontext der HTTP-Anforderung, der den HTTP-Kontext und die Routendaten einschließt.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="requestContext" />-Parameter ist null.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="controllerName" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.GetControllerInstance(System.Web.Routing.RequestContext,System.Type)">
      <summary>Ruft die Controllerinstanz für den angegebenen Anforderungskontext und Controllertyp ab.</summary>
      <returns>Die Controllerinstanz.</returns>
      <param name="requestContext">Der Kontext der HTTP-Anforderung, der den HTTP-Kontext und die Routendaten einschließt.</param>
      <param name="controllerType">Der Typ des Controllers.</param>
      <exception cref="T:System.Web.HttpException">
        <paramref name="controllerType" /> ist null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="controllerType" /> kann nicht zugewiesen werden.</exception>
      <exception cref="T:System.InvalidOperationException">Es kann keine Instanz von <paramref name="controllerType" /> erstellt werden.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.Type)">
      <summary>Gibt das Sitzungsverhalten des Controllers zurück.</summary>
      <returns>Das Sitzungsverhalten des Controllers.</returns>
      <param name="requestContext">Der Anforderungskontext.</param>
      <param name="controllerType">Der Typ des Controllers.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.GetControllerType(System.Web.Routing.RequestContext,System.String)">
      <summary>Ruft den Controllertyp für den angegebenen Namen und Anforderungskontext ab.</summary>
      <returns>Der Typ des Controllers.</returns>
      <param name="requestContext">Der Kontext der HTTP-Anforderung, der den HTTP-Kontext und die Routendaten einschließt.</param>
      <param name="controllerName">Der Name des Controllers.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.ReleaseController(System.Web.Mvc.IController)">
      <summary>Gibt den angegebenen Controller frei.</summary>
      <param name="controller">Der freizugebende Controller.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.System#Web#Mvc#IControllerFactory#GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.String)">
      <summary>Diese API unterstützt die ASP.NET MVC-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen. Diese Methode ruft die <see cref="M:System.Web.Mvc.DefaultControllerFactory.GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.Type)" />-Methode auf.</summary>
      <returns>Das Sitzungsverhalten des Controllers.</returns>
      <param name="requestContext">Der Anforderungskontext.</param>
      <param name="controllerName">Der Name des Controllers.</param>
    </member>
    <member name="T:System.Web.Mvc.DefaultModelBinder">
      <summary>Ordnet einem Datenobjekt eine Browseranforderung zu. Diese Klasse stellt eine konkrete Implementierung eines Modellbinders bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.DefaultModelBinder" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.DefaultModelBinder.Binders">
      <summary>Ruft die Modellbinder für die Anwendung ab bzw. legt diese fest.</summary>
      <returns>Die Modellbinder für die Anwendung.</returns>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Bindet das Modell, indem der angegebene Controllerkontext und Bindungskontext verwendet werden.</summary>
      <returns>Das gebundene Objekt.</returns>
      <param name="controllerContext">Der Kontext, innerhalb dessen der Controller funktioniert. Die Kontextinformationen enthalten den Controller, den HTTP-Inhalt, den Anforderungskontext und die Weiterleitungsdaten.</param>
      <param name="bindingContext">Der Kontext, in dem das Modell gebunden ist. Der Kontext schließt Informationen ein, z. B. das Modellobjekt, den Modellnamen, den Modelltyp, den Eigenschaftenfilter und den Wertanbieter.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="bindingContext " />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.BindProperty(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor)">
      <summary>Bindet die angegebene Eigenschaft auf Basis des angegebenen Controller- und Bindungskontexts und des angegebenen Eigenschaftendeskriptors.</summary>
      <param name="controllerContext">Der Kontext, innerhalb dessen der Controller funktioniert. Die Kontextinformationen enthalten den Controller, den HTTP-Inhalt, den Anforderungskontext und die Weiterleitungsdaten.</param>
      <param name="bindingContext">Der Kontext, in dem das Modell gebunden ist. Der Kontext schließt Informationen ein, z. B. das Modellobjekt, den Modellnamen, den Modelltyp, den Eigenschaftenfilter und den Wertanbieter.</param>
      <param name="propertyDescriptor">Beschreibt eine zu bindenden Eigenschaft. Der Deskriptor stellt Informationen, z. B. den Komponententyp, den Eigenschaftentyp und den Eigenschaftswert, bereit. Er stellt auch Methoden bereit, um den Eigenschaftswert abzurufen oder festzulegen.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.Type)">
      <summary>Erstellt den angegebenen Modelltyp, indem der angegebene Controllerkontext und Bindungskontext verwendet werden.</summary>
      <returns>Ein Datentyp des angegebenen Typs.</returns>
      <param name="controllerContext">Der Kontext, innerhalb dessen der Controller funktioniert. Die Kontextinformationen enthalten den Controller, den HTTP-Inhalt, den Anforderungskontext und die Weiterleitungsdaten.</param>
      <param name="bindingContext">Der Kontext, in dem das Modell gebunden ist. Der Kontext schließt Informationen ein, z. B. das Modellobjekt, den Modellnamen, den Modelltyp, den Eigenschaftenfilter und den Wertanbieter.</param>
      <param name="modelType">Der Typ des zurückzugebenden Modellobjekts.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateSubIndexName(System.String,System.Int32)">
      <summary>Erstellt anhand einer Kategorie von Komponenten, die einen größeren Index bilden, einen Index (Unterindex), wobei der angegebene Indexwert eine ganze Zahl ist.</summary>
      <returns>Der Name des Unterindex.</returns>
      <param name="prefix">Das Präfix für den Unterindex.</param>
      <param name="index">Der Indexwert.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateSubIndexName(System.String,System.String)">
      <summary>Erstellt anhand einer Kategorie von Komponenten, die einen größeren Index bilden, einen Index (Unterindex), wobei der angegebene Indexwert eine Zeichenfolge ist.</summary>
      <returns>Der Name des Unterindex.</returns>
      <param name="prefix">Das Präfix für den Unterindex.</param>
      <param name="index">Der Indexwert.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateSubPropertyName(System.String,System.String)">
      <summary>Erstellt den Namen der untergeordneten Eigenschaft, indem das angegebene Präfix und der Eigenschaftenname verwendet werden.</summary>
      <returns>Der Name der untergeordneten Eigenschaft.</returns>
      <param name="prefix">Das Präfix für die untergeordnete Eigenschaft.</param>
      <param name="propertyName">Der Name der Eigenschaft.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetFilteredModelProperties(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Gibt Eigenschaften zurück, die den Einschränkungen des Eigenschaftenfilters entsprechen, die durch den angegebenen <paramref name="binding context" /> auferlegt werden.</summary>
      <returns>Ein zählbarer Satz von Eigenschaftendeskriptoren.</returns>
      <param name="controllerContext">Der Kontext, innerhalb dessen der Controller funktioniert. Die Kontextinformationen enthalten den Controller, den HTTP-Inhalt, den Anforderungskontext und die Weiterleitungsdaten.</param>
      <param name="bindingContext">Der Kontext, in dem das Modell gebunden ist. Der Kontext schließt Informationen ein, z. B. das Modellobjekt, den Modellnamen, den Modelltyp, den Eigenschaftenfilter und den Wertanbieter.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetModelProperties(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Gibt die Eigenschaften des Modells zurück. Hierfür wird der angegebene Controller- und Bindungskontext verwendet.</summary>
      <returns>Eine Auflistung von Eigenschaftendeskriptoren.</returns>
      <param name="controllerContext">Der Kontext, innerhalb dessen der Controller funktioniert. Die Kontextinformationen enthalten den Controller, den HTTP-Inhalt, den Anforderungskontext und die Weiterleitungsdaten.</param>
      <param name="bindingContext">Der Kontext, in dem das Modell gebunden ist. Der Kontext schließt Informationen ein, z. B. das Modellobjekt, den Modellnamen, den Modelltyp, den Eigenschaftenfilter und den Wertanbieter.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetPropertyValue(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Web.Mvc.IModelBinder)">
      <summary>Gibt den Wert einer Eigenschaft zurück. Verwendet hierfür den angegebenen Controllerkontext, Bindungskontexts und Eigenschaftendeskriptor.</summary>
      <returns>Ein Objekt, das den Eigenschaftswert darstellt.</returns>
      <param name="controllerContext">Der Kontext, innerhalb dessen der Controller funktioniert. Die Kontextinformationen enthalten den Controller, den HTTP-Inhalt, den Anforderungskontext und die Weiterleitungsdaten.</param>
      <param name="bindingContext">Der Kontext, in dem das Modell gebunden ist. Der Kontext schließt Informationen ein, z. B. das Modellobjekt, den Modellnamen, den Modelltyp, den Eigenschaftenfilter und den Wertanbieter.</param>
      <param name="propertyDescriptor">Der Deskriptor für die aufzurufende Eigenschaft. Der Deskriptor stellt Informationen, z. B. den Komponententyp, den Eigenschaftentyp und den Eigenschaftswert, bereit. Er stellt auch Methoden bereit, um den Eigenschaftswert abzurufen oder festzulegen.</param>
      <param name="propertyBinder">Ein Objekt, das eine Möglichkeit bietet, die Eigenschaft zu binden.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetTypeDescriptor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Gibt das Deskriptorobjekt für einen Typ zurück, der durch seinen Controller- und Bindungskontext angegeben wird.</summary>
      <returns>Ein benutzerdefiniertes Typdeskriptorobjekt.</returns>
      <param name="controllerContext">Der Kontext, innerhalb dessen der Controller funktioniert. Die Kontextinformationen enthalten den Controller, den HTTP-Inhalt, den Anforderungskontext und die Weiterleitungsdaten.</param>
      <param name="bindingContext">Der Kontext, in dem das Modell gebunden ist. Der Kontext schließt Informationen ein, z. B. das Modellobjekt, den Modellnamen, den Modelltyp, den Eigenschaftenfilter und den Wertanbieter.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.IsModelValid(System.Web.Mvc.ModelBindingContext)">
      <summary>Ermittelt, ob ein Datenmodell für den angegebenen Bindungskontext gültig ist.</summary>
      <returns>true, wenn das Modell gültig ist, andernfalls false.</returns>
      <param name="bindingContext">Der Kontext, in dem das Modell gebunden ist. Der Kontext schließt Informationen ein, z. B. das Modellobjekt, den Modellnamen, den Modelltyp, den Eigenschaftenfilter und den Wertanbieter.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="bindingContext" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnModelUpdated(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Wird aufgerufen, wenn das Modell aktualisiert wird.</summary>
      <param name="controllerContext">Der Kontext, innerhalb dessen der Controller funktioniert. Die Kontextinformationen enthalten den Controller, den HTTP-Inhalt, den Anforderungskontext und die Weiterleitungsdaten.</param>
      <param name="bindingContext">Der Kontext, in dem das Modell gebunden ist. Der Kontext schließt Informationen ein, z. B. das Modellobjekt, den Modellnamen, den Modelltyp, den Eigenschaftenfilter und den Wertanbieter.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnModelUpdating(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Wird aufgerufen, wenn das Modell eine Aktualisierung durchführt.</summary>
      <returns>true, wenn das Modell eine Aktualisierung durchführt, andernfalls false.</returns>
      <param name="controllerContext">Der Kontext, innerhalb dessen der Controller funktioniert. Die Kontextinformationen enthalten den Controller, den HTTP-Inhalt, den Anforderungskontext und die Weiterleitungsdaten.</param>
      <param name="bindingContext">Der Kontext, in dem das Modell gebunden ist. Der Kontext schließt Informationen ein, z. B. das Modellobjekt, den Modellnamen, den Modelltyp, den Eigenschaftenfilter und den Wertanbieter.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnPropertyValidated(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Wird aufgerufen, wenn die angegebene Eigenschaft überprüft wird.</summary>
      <param name="controllerContext">Der Kontext, innerhalb dessen der Controller funktioniert. Die Kontextinformationen enthalten den Controller, den HTTP-Inhalt, den Anforderungskontext und die Weiterleitungsdaten.</param>
      <param name="bindingContext">Der Kontext, in dem das Modell gebunden ist. Der Kontext schließt Informationen ein, z. B. das Modellobjekt, den Modellnamen, den Modelltyp, den Eigenschaftenfilter und den Wertanbieter.</param>
      <param name="propertyDescriptor">Beschreibt eine zu validierende Eigenschaft. Der Deskriptor stellt Informationen, z. B. den Komponententyp, den Eigenschaftentyp und den Eigenschaftswert, bereit. Er stellt auch Methoden bereit, um den Eigenschaftswert abzurufen oder festzulegen.</param>
      <param name="value">Der Wert, der für die Eigenschaft festgelegt werden soll.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnPropertyValidating(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Wird aufgerufen, wenn die angegebene Eigenschaft eine Überprüfung durchführt.</summary>
      <returns>true, wenn die Eigenschaft eine Überprüfung durchführt, andernfalls false.</returns>
      <param name="controllerContext">Der Kontext, innerhalb dessen der Controller funktioniert. Die Kontextinformationen enthalten den Controller, den HTTP-Inhalt, den Anforderungskontext und die Weiterleitungsdaten.</param>
      <param name="bindingContext">Der Kontext, in dem das Modell gebunden ist. Der Kontext schließt Informationen ein, z. B. das Modellobjekt, den Modellnamen, den Modelltyp, den Eigenschaftenfilter und den Wertanbieter.</param>
      <param name="propertyDescriptor">Beschreibt eine Eigenschaft, die validiert wird. Der Deskriptor stellt Informationen wie den Komponententyp, den Eigenschaftentyp und den Eigenschaftswert bereit. Er stellt auch Methoden bereit, um den Eigenschaftswert abzurufen oder festzulegen.</param>
      <param name="value">Der Wert, der für die Eigenschaft festgelegt werden soll.</param>
    </member>
    <member name="P:System.Web.Mvc.DefaultModelBinder.ResourceClassKey">
      <summary>Ruft den Namen der Ressourcendatei (Klassenschlüssel) ab (bzw. legt diesen fest), die lokalisierte Zeichenfolgenwerte enthält.</summary>
      <returns>Der Name der Ressourcendatei (Klassenschlüssel).</returns>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.SetProperty(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Legt die angegebene Eigenschaft fest, indem der angegebene Controllerkontext, der Bindungskontext und der Eigenschaftswert verwendet werden.</summary>
      <param name="controllerContext">Der Kontext, innerhalb dessen der Controller funktioniert. Die Kontextinformationen enthalten den Controller, den HTTP-Inhalt, den Anforderungskontext und die Weiterleitungsdaten.</param>
      <param name="bindingContext">Der Kontext, in dem das Modell gebunden ist. Der Kontext schließt Informationen ein, z. B. das Modellobjekt, den Modellnamen, den Modelltyp, den Eigenschaftenfilter und den Wertanbieter.</param>
      <param name="propertyDescriptor">Beschreibt eine festzulegende Eigenschaft. Der Deskriptor stellt Informationen, z. B. den Komponententyp, den Eigenschaftentyp und den Eigenschaftswert, bereit. Er stellt auch Methoden bereit, um den Eigenschaftswert abzurufen oder festzulegen.</param>
      <param name="value">Der Wert, der für die Eigenschaft festgelegt werden soll.</param>
    </member>
    <member name="T:System.Web.Mvc.DefaultViewLocationCache">
      <summary>Stellt einen Speichercache für Ansichtsspeicherorte dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.DefaultViewLocationCache" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.#ctor(System.TimeSpan)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.DefaultViewLocationCache" />-Klasse, indem die angegebene Cachezeitspanne verwendet wird.</summary>
      <param name="timeSpan">Die Cachezeitspanne.</param>
      <exception cref="T:System.InvalidOperationException">Das Ticks-Attribut des <paramref name="timeSpan" />-Parameters ist auf eine negative Zahl festgelegt.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.GetViewLocation(System.Web.HttpContextBase,System.String)">
      <summary>Ruft den Standardansichtsspeicherort ab, indem der angegebene HTTP-Kontext und Cacheschlüssel verwendet werden.</summary>
      <returns>Der Standardansichtsspeicherort.</returns>
      <param name="httpContext">Der HTTP-Kontext.</param>
      <param name="key">Der Cacheschlüssel.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="httpContext" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.InsertViewLocation(System.Web.HttpContextBase,System.String,System.String)">
      <summary>Führt die Ansicht im angegebenen virtuellen Pfad ein, indem der angegebene HTTP-Kontext, Cacheschlüssel und virtuelle Pfad verwendet werden.</summary>
      <param name="httpContext">Der HTTP-Kontext.</param>
      <param name="key">Der Cacheschlüssel.</param>
      <param name="virtualPath">Der virtuelle Pfad.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="httpContext" />-Parameter ist null.</exception>
    </member>
    <member name="F:System.Web.Mvc.DefaultViewLocationCache.Null">
      <summary>Erstellt einen leeren Ansichtsspeicherortcache.</summary>
    </member>
    <member name="P:System.Web.Mvc.DefaultViewLocationCache.TimeSpan">
      <summary>Ruft die Cachezeitspanne ab bzw. legt sie fest.</summary>
      <returns>Die Cachezeitspanne.</returns>
    </member>
    <member name="T:System.Web.Mvc.DependencyResolver">
      <summary>Stellt einen Registrierungspunkt für Abhängigkeitskonfliktlöser, die <see cref="T:System.Web.Mvc.IDependencyResolver" /> oder die Common Service Locator IServiceLocator-Schnittstelle des implementieren.</summary>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.DependencyResolver" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.DependencyResolver.Current">
      <summary>Ruft die Implementierung des Abhängigkeitskonfliktlösers ab.</summary>
      <returns>Die Implementierung des Abhängigkeitskonfliktlösers.</returns>
    </member>
    <member name="P:System.Web.Mvc.DependencyResolver.InnerCurrent">
      <summary>Diese API unterstützt die ASP.NET MVC-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
      <returns>Die Implementierung des Abhängigkeitskonfliktlösers.</returns>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Func`2,System.Boolean)">
      <summary>Diese API unterstützt die ASP.NET MVC-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
      <param name="getService">Die Funktion, die den Dienst bereitstellt.</param>
      <param name="getServices">Die Funktion, die die Dienste bereitstellt.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Object)">
      <summary>Diese API unterstützt die ASP.NET MVC-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
      <param name="commonServiceLocator">Der Common Service Locator.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Web.Mvc.IDependencyResolver)">
      <summary>Diese API unterstützt die ASP.NET MVC-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
      <param name="resolver">Das Objekt, das den Abhängigkeitsresolver implementiert.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.SetResolver(System.Func`2,System.Boolean)">
      <summary>Stellt mithilfe der angegebenen Dienst- und Dienstauflistungsdelegaten einen Registrierungspunkt für Abhängigkeitskonfliktlöser bereit.</summary>
      <param name="getService">Der Dienstdelegat.</param>
      <param name="getServices">Die Dienstdelegaten.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.SetResolver(System.Object)">
      <summary>Stellt mithilfe des vorhandenen Common Service Locators bei der Verwendung einer Common Service Locator-Schnittstelle einen Registrierungspunkt für Abhängigkeitskonfliktlöser bereit.</summary>
      <param name="commonServiceLocator">Der Common Service Locator.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.SetResolver(System.Web.Mvc.IDependencyResolver)">
      <summary>Stellt mithilfe der angegebenen Abhängigkeitskonfliktlöserschnittstelle einen Registrierungspunkt für Abhängigkeitskonfliktlöser bereit.</summary>
      <param name="resolver">Der Abhängigkeitsresolver.</param>
    </member>
    <member name="T:System.Web.Mvc.DependencyResolverExtensions">
      <summary>Stellt eine typsichere Implementierung von <see cref="M:System.Web.Mvc.IDependencyResolver.GetService(System.Type)" /> und <see cref="M:System.Web.Mvc.IDependencyResolver.GetServices(System.Type)" /> bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolverExtensions.GetService``1(System.Web.Mvc.IDependencyResolver)">
      <summary>Löst einzeln registrierte Dienste auf, die beliebige Objekterstellung unterstützen.</summary>
      <returns>Der angeforderte Dienst oder das angeforderte Objekt.</returns>
      <param name="resolver">Die Abhängigkeitsresolverinstanz, die von dieser Methode erweitert wird.</param>
      <typeparam name="TService">Der Typ des angeforderten Diensts oder Objekts.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolverExtensions.GetServices``1(System.Web.Mvc.IDependencyResolver)">
      <summary>Löst mehrfach registrierte Dienste auf.</summary>
      <returns>Der angeforderte Dienst.</returns>
      <param name="resolver">Die Abhängigkeitsresolverinstanz, die von dieser Methode erweitert wird.</param>
      <typeparam name="TService">Der Typ der angeforderten Dienste.</typeparam>
    </member>
    <member name="T:System.Web.Mvc.DictionaryValueProvider`1">
      <summary>Stellt die Basisklasse für Wertanbieter dar, deren Werte aus einer Auflistung stammen, die die <see cref="T:System.Collections.Generic.IDictionary`2" />-Schnittstelle implementiert.</summary>
      <typeparam name="TValue">Der Typ des Werts.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.#ctor(System.Collections.Generic.IDictionary{System.String,`0},System.Globalization.CultureInfo)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.DictionaryValueProvider`1" />-Klasse.</summary>
      <param name="dictionary">Die Name-Wert-Paare, die verwendet werden, um den Wertanbieter zu initialisieren.</param>
      <param name="culture">Informationen über eine bestimmte Kultur, z. B. die Namen, das Schriftsystem und der Kalender, die in der Kultur verwendet werden.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="dictionary" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.ContainsPrefix(System.String)">
      <summary>Bestimmt, ob die Auflistung das angegebene Präfix enthält.</summary>
      <returns>true, wenn die Auflistung das angegebene Präfix enthält, andernfalls false.</returns>
      <param name="prefix">Das Präfix, nach dem gesucht werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="prefix" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.GetValue(System.String)">
      <summary>Gibt ein Wertobjekt mit dem angegebenen Schlüssel und dem angegebenen Controllerkontext zurück.</summary>
      <returns>Das Wertobjekt für den angegebenen Schlüssel.</returns>
      <param name="key">Der Schlüssel für das Wertobjekt, das abgerufen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="key" />-Parameter ist null.</exception>
    </member>
    <member name="T:System.Web.Mvc.EmptyModelMetadataProvider">
      <summary>Stellt einen leeren Metadatenanbieter für Datenmodelle bereit, die keine Metadaten benötigen.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelMetadataProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.EmptyModelMetadataProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func`1,System.Void,System.Object)">
      <summary>Erstellt eine neue Instanz der <see cref="T:System.Web.Mvc.ModelMetadata" />-Klasse.</summary>
      <returns>Gibt <see cref="T:System.Web.Mvc.ModelMetadata" /> zurück.</returns>
      <param name="attributes">Die Attribute.</param>
      <param name="containerType">Der Typ des Containers.</param>
      <param name="modelAccessor">Der Modellaccessor.</param>
      <param name="modelType">Der Typ des Modells.</param>
      <param name="propertyName">Der Name des Modells.</param>
    </member>
    <member name="T:System.Web.Mvc.EmptyModelValidatorProvider">
      <summary>Stellt einen leeren Validierungsanbieter für Modelle bereit, die kein Validierungssteuerelement erfordern.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelValidatorProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.EmptyModelValidatorProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Ruft das leere Validierungssteuerelement des Modells ab.</summary>
      <returns>Das leere Validierungssteuerelement des Modells.</returns>
      <param name="metadata">Die Metadaten.</param>
      <param name="context">Der Kontext.</param>
    </member>
    <member name="T:System.Web.Mvc.EmptyResult">
      <summary>Stellt ein Ergebnis dar, das nichts bewirkt, z. B. eine Controlleraktionsmethode, die nichts zurückgibt.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyResult.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.EmptyResult" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Führt den angegebenen Ergebniskontext aus.</summary>
      <param name="context">Der Ergebniskontext.</param>
    </member>
    <member name="T:System.Web.Mvc.ExceptionContext">
      <summary>Stellt den Kontext für die Verwendung der <see cref="T:System.Web.Mvc.HandleErrorAttribute" />-Klasse bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.ExceptionContext.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ExceptionContext" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.ExceptionContext.#ctor(System.Web.Mvc.ControllerContext,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ExceptionContext" />-Klasse für die angegebene Ausnahme, indem der angegebene Controllerkontext verwendet wird.</summary>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="exception">Die Ausnahme.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="exception" />-Parameter ist null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ExceptionContext.Exception">
      <summary>Ruft das Ausnahmeobjekt ab bzw. legt es fest.</summary>
      <returns>das Ausnahmeobjekt.</returns>
    </member>
    <member name="P:System.Web.Mvc.ExceptionContext.ExceptionHandled">
      <summary>Ruft einen Wert ab (bzw. legt diesen fest), der angibt, ob die Ausnahme verarbeitet wurde.</summary>
      <returns>true, wenn die Ausnahme verarbeitet wurde, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ExceptionContext.Result">
      <summary>Ruft das Aktionsergebnis ab bzw. legt es fest.</summary>
      <returns>Das Aktionsergebnis.</returns>
    </member>
    <member name="T:System.Web.Mvc.ExpressionHelper">
      <summary>Stellt eine Hilfsklasse bereit, um den Modellnamen aus einem Ausdruck abzurufen.</summary>
    </member>
    <member name="M:System.Web.Mvc.ExpressionHelper.GetExpressionText(System.Linq.Expressions.LambdaExpression)">
      <summary>Ruft den Modellnamen aus einem Lambda-Ausdruck ab.</summary>
      <returns>Der Name des Modells.</returns>
      <param name="expression">Der Ausdruck.</param>
    </member>
    <member name="M:System.Web.Mvc.ExpressionHelper.GetExpressionText(System.String)">
      <summary>Ruft den Modellnamen aus einem Zeichenfolgenausdruck ab.</summary>
      <returns>Der Name des Modells.</returns>
      <param name="expression">Der Ausdruck.</param>
    </member>
    <member name="T:System.Web.Mvc.FieldValidationMetadata">
      <summary>Stellt einen Container für clientseitige Feldvalidierungsmetadaten bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.FieldValidationMetadata.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.FieldValidationMetadata" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.FieldName">
      <summary>Ruft den Namen des Datenfelds ab oder legt diesen fest.</summary>
      <returns>Der Name des Datenfelds.</returns>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.ReplaceValidationMessageContents">
      <summary>Ruft einen Wert ab, der angibt, ob der Inhalt der Validierungsmeldung durch den Clientvalidierungsfehler ersetzt werden soll, oder legt diesen fest.</summary>
      <returns>true, wenn der Inhalt der Validierungsmeldung durch den Clientvalidierungsfehler ersetzt werden soll, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.ValidationMessageId">
      <summary>Ruft die ID der Validierungsmeldung ab oder legt diese fest.</summary>
      <returns>Die ID der Validierungsmeldung.</returns>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.ValidationRules">
      <summary>Ruft die Clientvalidierungsregeln ab.</summary>
      <returns>Die Clientvalidierungsregeln.</returns>
    </member>
    <member name="T:System.Web.Mvc.FileContentResult">
      <summary>Sendet den Inhalt einer Binärdatei an die Antwort.</summary>
    </member>
    <member name="M:System.Web.Mvc.FileContentResult.#ctor(System.Byte[],System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.FileContentResult" />-Klasse, indem der angegebene Dateiinhalt und Inhaltstyp verwendet werden.</summary>
      <param name="fileContents">Das Bytearray, das an die Antwort gesendet werden soll.</param>
      <param name="contentType">Der Inhaltstyp, der für die Antwort verwendet werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="fileContents" />-Parameter ist null.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileContentResult.FileContents">
      <summary>Der binäre Inhalt, der an die Antwort gesendet werden soll.</summary>
      <returns>Der Inhalt der Datei.</returns>
    </member>
    <member name="M:System.Web.Mvc.FileContentResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>Schreibt den Dateiinhalt in die Antwort.</summary>
      <param name="response">Die Antwort.</param>
    </member>
    <member name="T:System.Web.Mvc.FilePathResult">
      <summary>Sendet den Inhalt einer Datei an die Antwort.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilePathResult.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.FilePathResult" />-Klasse, indem der angegebene Dateiname und der Inhaltstyp verwendet werden.</summary>
      <param name="fileName">Der Name der Datei, die an die Antwort gesendet werden soll.</param>
      <param name="contentType">Der Inhaltstyp der Antwort.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="fileName" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="P:System.Web.Mvc.FilePathResult.FileName">
      <summary>Ruft den Pfad der Datei ab (bzw. legt diesen fest), die an die Antwort gesendet wird.</summary>
      <returns>Der Pfad der Datei, die an die Antwort gesendet wird.</returns>
    </member>
    <member name="M:System.Web.Mvc.FilePathResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>Schreibt die Datei in die Antwort.</summary>
      <param name="response">Die Antwort.</param>
    </member>
    <member name="T:System.Web.Mvc.FileResult">
      <summary>Stellt eine Basisklasse dar, die verwendet wird, um Binärdateiinhalt an die Antwort zu senden.</summary>
    </member>
    <member name="M:System.Web.Mvc.FileResult.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.FileResult" />-Klasse.</summary>
      <param name="contentType">Der Typ des Inhalts.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="contentType" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileResult.ContentType">
      <summary>Ruft den Inhaltstyp ab, der für die Antwort verwendet werden soll.</summary>
      <returns>Der Typ des Inhalts.</returns>
    </member>
    <member name="M:System.Web.Mvc.FileResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Ermöglicht die Verarbeitung des Ergebnisses einer Aktionsmethode durch einen benutzerdefinierten Typ, der von der <see cref="T:System.Web.Mvc.ActionResult" />-Klasse erbt.</summary>
      <param name="context">Der Kontext, in dem das Ergebnis ausgeführt wird.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="context" />-Parameter ist null.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileResult.FileDownloadName">
      <summary>Ruft den Content-Disposition-Header ab (bzw. legt diesen fest), damit ein Dateidownload-Dialogfeld unter dem angegebenen Dateinamen im Browser angezeigt wird.</summary>
      <returns>Der Name der Datei.</returns>
    </member>
    <member name="M:System.Web.Mvc.FileResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>Schreibt die Datei in die Antwort.</summary>
      <param name="response">Die Antwort.</param>
    </member>
    <member name="T:System.Web.Mvc.FileStreamResult">
      <summary>Sendet binären Inhalt an die Antwort, indem eine <see cref="T:System.IO.Stream" />-Instanz verwendet wird.</summary>
    </member>
    <member name="M:System.Web.Mvc.FileStreamResult.#ctor(System.IO.Stream,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.FileStreamResult" />-Klasse.</summary>
      <param name="fileStream">Der Stream, der an die Antwort gesendet werden soll.</param>
      <param name="contentType">Der Inhaltstyp, der für die Antwort verwendet werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="fileStream" />-Parameter ist null.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileStreamResult.FileStream">
      <summary>Ruft den Stream ab, der an die Antwort gesendet wird.</summary>
      <returns>Der Dateistream.</returns>
    </member>
    <member name="M:System.Web.Mvc.FileStreamResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>Schreibt die Datei in die Antwort.</summary>
      <param name="response">Die Antwort.</param>
    </member>
    <member name="T:System.Web.Mvc.Filter">
      <summary>Stellt eine Metadatenklasse dar, die einen Verweis auf die Implementierung mindestens einer Filterschnittstelle, die Reihenfolge der Filter und den Filterbereich enthält.</summary>
    </member>
    <member name="M:System.Web.Mvc.Filter.#ctor(System.Object,System.Web.Mvc.FilterScope,System.Nullable{System.Int32})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.Filter" />-Klasse.</summary>
      <param name="instance">Die Instanz.</param>
      <param name="scope">Der Bereich.</param>
      <param name="order">Die Reihenfolge.</param>
    </member>
    <member name="F:System.Web.Mvc.Filter.DefaultOrder">
      <summary>Stellt eine Konstante dar, mit der die Standardreihenfolge für Filter angegeben wird.</summary>
    </member>
    <member name="P:System.Web.Mvc.Filter.Instance">
      <summary>Ruft die Instanz dieser Klasse ab.</summary>
      <returns>Die Instanz dieser Klasse.</returns>
    </member>
    <member name="P:System.Web.Mvc.Filter.Order">
      <summary>Ruft die Reihenfolge ab, in der der Filter angewendet wird.</summary>
      <returns>Die Reihenfolge, in der der Filter angewendet wird.</returns>
    </member>
    <member name="P:System.Web.Mvc.Filter.Scope">
      <summary>Ruft die Bereichsreihenfolge des Filters ab.</summary>
      <returns>Die Bereichsreihenfolge des Filters.</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterAttribute">
      <summary>Stellt die Basisklasse für Aktionsfilterattribute dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.FilterAttribute" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.FilterAttribute.AllowMultiple">
      <summary>Ruft einen Wert ab, der angibt, ob mehr als eine Instanz des Filterattributs angegeben werden kann, bzw. legt ihn fest.</summary>
      <returns>true, wenn mehr als eine Instanz des Filterattributs angegeben werden kann, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterAttribute.Order">
      <summary>Ruft die Reihenfolge ab (bzw. legt diese fest), in der die Aktionsfilter ausgeführt werden.</summary>
      <returns>Die Reihenfolge, in der die Aktionsfilter ausgeführt werden.</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterAttributeFilterProvider">
      <summary>Definiert einen Filteranbieter für Filterattribute.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.FilterAttributeFilterProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.GetActionAttributes(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Ruft eine Auflistung von Attributen für benutzerdefinierte Aktionen ab.</summary>
      <returns>Eine Auflistung von Attributen für benutzerdefinierte Aktionen.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionDescriptor">Der Aktionsdeskriptor.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.GetControllerAttributes(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Ruft eine Auflistung von Attributen für Controller ab.</summary>
      <returns>Eine Auflistung von Attributen für Controller.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionDescriptor">Der Aktionsdeskriptor.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Führt die Filter sämtlicher Filteranbieter in einer Auflistung zusammen.</summary>
      <returns>Die Auflistungsfilter aller Filteranbieter.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionDescriptor">Der Aktionsdeskriptor.</param>
    </member>
    <member name="T:System.Web.Mvc.FilterInfo">
      <summary>Kapselt Informationen zu den verfügbaren Aktionsfiltern.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterInfo.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.FilterInfo" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterInfo.#ctor(System.Collections.Generic.IEnumerable{System.Web.Mvc.Filter})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.FilterInfo" />-Klasse mithilfe der angegebenen Filterauflistung.</summary>
      <param name="filters">Die Filterauflistung.</param>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.ActionFilters">
      <summary>Ruft alle Aktionsfilter der Anwendung ab.</summary>
      <returns>Die Aktionsfilter.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.AuthorizationFilters">
      <summary>Ruft alle Autorisierungsfilter der Anwendung ab.</summary>
      <returns>Die Autorisierungsfilter.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.ExceptionFilters">
      <summary>Ruft alle Ausnahmefilter der Anwendung ab.</summary>
      <returns>Die Ausnahmefilter.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.ResultFilters">
      <summary>Ruft alle Ergebnisfilter der Anwendung ab.</summary>
      <returns>Die Ergebnisfilter.</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterProviderCollection">
      <summary>Stellt die Auflistung von Filteranbietern für die Anwendung dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.FilterProviderCollection" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IFilterProvider})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.FilterProviderCollection" />-Klasse mithilfe der Filteranbieterauflistung.</summary>
      <param name="providers">Die Filteranbieterauflistung.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Gibt die Auflistung von Filteranbietern zurück.</summary>
      <returns>Die Auflistung von Filteranbietern.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionDescriptor">Der Aktionsdeskriptor.</param>
    </member>
    <member name="T:System.Web.Mvc.FilterProviders">
      <summary>Stellt einen Registrierungspunkt für Filter bereit.</summary>
    </member>
    <member name="P:System.Web.Mvc.FilterProviders.Providers">
      <summary>Stellt einen Registrierungspunkt für Filter bereit.</summary>
      <returns>Die Auflistung von Filtern.</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterScope">
      <summary>Definiert Werte, die die Reihenfolge angeben, in der ASP.NET-MVC-Filter innerhalb desselben Filtertyps und derselben Filterreihenfolge ausgeführt werden.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.First">
      <summary>Gibt den ersten Filter an.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Global">
      <summary>Gibt eine Reihenfolge vor <see cref="F:System.Web.Mvc.FilterScope.Controller" /> und nach <see cref="F:System.Web.Mvc.FilterScope.First" /> an.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Controller">
      <summary>Gibt eine Reihenfolge vor <see cref="F:System.Web.Mvc.FilterScope.Action" /> und nach <see cref="F:System.Web.Mvc.FilterScope.Global" /> an.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Action">
      <summary>Gibt eine Reihenfolge vor <see cref="F:System.Web.Mvc.FilterScope.Last" /> und nach <see cref="F:System.Web.Mvc.FilterScope.Controller" /> an.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Last">
      <summary>Gibt den letzten Filter an.</summary>
    </member>
    <member name="T:System.Web.Mvc.FormCollection">
      <summary>Enthält die Formularwertanbieter für die Anwendung.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.FormCollection" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.FormCollection" />-Klasse.</summary>
      <param name="collection">Die Auflistung.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="collection" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.GetValue(System.String)">
      <summary>Ruft den angegebenen Wertanbieter ab.</summary>
      <returns>Der Wertanbieter.</returns>
      <param name="name">Der Name des abzurufenden Wertanbieters.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="name" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.System#Web#Mvc#IValueProvider#ContainsPrefix(System.String)">
      <summary>Ruft einen Wert ab, der angibt, ob der Wertanbieter einen Eintrag mit dem angegebenen Präfix enthält.</summary>
      <returns>true, wenn der Wertanbieter einen Eintrag mit dem angegebenen Präfix enthält, andernfalls false.</returns>
      <param name="prefix">Das Präfix, nach dem gesucht werden soll.</param>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.System#Web#Mvc#IValueProvider#GetValue(System.String)">
      <summary>Ruft einen Wert von einem Wertanbieter mit dem angegebenen Schlüssel ab.</summary>
      <returns>Ein Wert von einem Wertanbieter.</returns>
      <param name="key">Der Schlüssel.</param>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.ToValueProvider">
      <summary>Gibt ein Wörterbuch zurück, das die Wertanbieter enthält.</summary>
      <returns>Ein Wörterbuch der Wertanbieter.</returns>
    </member>
    <member name="T:System.Web.Mvc.FormContext">
      <summary>Kapselt Informationen, die zur Validierung und Verarbeitung der Eingabedaten von einem HTML-Formular benötigt werden.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormContext.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.FormContext" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.FormContext.FieldValidators">
      <summary>Ruft die Feldvalidierungssteuerelemente für das Formular ab.</summary>
      <returns>Ein Wörterbuch von Feld-Validierungssteuerelementen für das Formular.</returns>
    </member>
    <member name="P:System.Web.Mvc.FormContext.FormId">
      <summary>Ruft den Formularbezeichner ab oder legt ihn fest.</summary>
      <returns>Der Formularbezeichner.</returns>
    </member>
    <member name="M:System.Web.Mvc.FormContext.GetJsonValidationMetadata">
      <summary>Gibt ein serialisiertes Objekt zurück, das den Formularbezeichner und die Feldvalidierungswerte für das Formular enthält.</summary>
      <returns>Ein serialisiertes Objekt, das den Formularbezeichner und die Feldvalidierungswerte für das Formular enthält.</returns>
    </member>
    <member name="M:System.Web.Mvc.FormContext.GetValidationMetadataForField(System.String)">
      <summary>Gibt den Validierungswert für das angegebene Eingabefeld zurück.</summary>
      <returns>Der Wert, um die Feldeingabe zu überprüfen.</returns>
      <param name="fieldName">Der Name des Felds, für das der Validierungswert abgerufen werden soll.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="fieldName" />-Parameter ist entweder null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormContext.GetValidationMetadataForField(System.String,System.Boolean)">
      <summary>Gibt den Validierungswert für das angegebene Eingabefeld und einen Wert zurück, der das Vorgehen angibt, wenn der Validierungswert nicht gefunden wird.</summary>
      <returns>Der Wert, um die Feldeingabe zu überprüfen.</returns>
      <param name="fieldName">Der Name des Felds, für das der Validierungswert abgerufen werden soll.</param>
      <param name="createIfNotFound">true, um einen Validierungswert zu erstellen, wenn kein Wert gefunden wurde; andernfalls false.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="fieldName" />-Parameter ist entweder null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormContext.RenderedField(System.String)">
      <summary>Gibt einen Wert zurück, der angibt, ob das angegebene Feld im Formular gerendert wurde.</summary>
      <returns>true, wenn das Feld gerendert wurde, andernfalls false.</returns>
      <param name="fieldName">Der Feldname.</param>
    </member>
    <member name="M:System.Web.Mvc.FormContext.RenderedField(System.String,System.Boolean)">
      <summary>Legt einen Wert fest, der angibt, ob das angegebene Feld im Formular gerendert wurde.</summary>
      <param name="fieldName">Der Feldname.</param>
      <param name="value">true, um anzugeben, dass das Feld im Formular gerendert wurde, andernfalls false.</param>
    </member>
    <member name="P:System.Web.Mvc.FormContext.ReplaceValidationSummary">
      <summary>Bestimmt, ob Clientvalidierungsfehler der Validierungszusammenfassung dynamisch hinzugefügt werden sollen.</summary>
      <returns>true, wenn Clientvalidierungsfehler der Validierungszusammenfassung hinzugefügt werden sollen, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.Mvc.FormContext.ValidationSummaryId">
      <summary>Ruft den Bezeichner für die Validierungszusammenfassung ab oder legt diesen fest.</summary>
      <returns>Der Bezeichner für die Validierungszusammenfassung.</returns>
    </member>
    <member name="T:System.Web.Mvc.FormMethod">
      <summary>Listet die HTTP-Anforderungstypen für ein Formular auf.</summary>
    </member>
    <member name="F:System.Web.Mvc.FormMethod.Get">
      <summary>Gibt eine GET-Anforderung an.</summary>
    </member>
    <member name="F:System.Web.Mvc.FormMethod.Post">
      <summary>Gibt eine POST-Anforderung an.</summary>
    </member>
    <member name="T:System.Web.Mvc.FormValueProvider">
      <summary>Stellt einen Wertanbieter für Formularwerte in einem <see cref="T:System.Collections.Specialized.NameValueCollection" />-Objekt dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.FormValueProvider" />-Klasse.</summary>
      <param name="controllerContext">Ein Objekt, das Informationen zur aktuellen HTTP-Anforderung kapselt.</param>
    </member>
    <member name="T:System.Web.Mvc.FormValueProviderFactory">
      <summary>Stellt eine Klasse dar, die für das Erstellen einer neuen Instanz eines Formularwert-Anbieterobjekts zuständig ist.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormValueProviderFactory.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.FormValueProviderFactory" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Gibt ein Formularwert-Anbieterobjekt für den angegebenen Controllerkontext zurück.</summary>
      <returns>Ein Formularwert-Anbieterobjekt.</returns>
      <param name="controllerContext">Ein Objekt, das Informationen zur aktuellen HTTP-Anforderung kapselt.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="controllerContext" />-Parameter ist null.</exception>
    </member>
    <member name="T:System.Web.Mvc.GlobalFilterCollection">
      <summary>Entspricht einer Klasse, die alle globalen Filter enthält.</summary>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.GlobalFilterCollection" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Add(System.Object)">
      <summary>Fügt der globalen Filterauflistung den angegebenen Filter hinzu.</summary>
      <param name="filter">Der Filter.</param>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Add(System.Object,System.Int32)">
      <summary>Fügt der globalen Filterauflistung den angegebenen Filter unter Verwendung der angegebenen Ausführungsreihenfolge hinzu.</summary>
      <param name="filter">Der Filter.</param>
      <param name="order">Die Ausführungsreihenfolge der Filter.</param>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Clear">
      <summary>Entfernt alle Filter aus der Auflistung der globalen Filter.</summary>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Contains(System.Object)">
      <summary>Bestimmt, ob sich ein Filter in der Auflistung der globalen Filter befindet.</summary>
      <returns>true, wenn der <paramref name="filter" /> in der Auflistung der globalen Filter enthalten ist, andernfalls false.</returns>
      <param name="filter">Der Filter.</param>
    </member>
    <member name="P:System.Web.Mvc.GlobalFilterCollection.Count">
      <summary>Ruft die Gesamtanzahl der Filter in der Auflistung der globalen Filter ab.</summary>
      <returns>Die Gesamtanzahl der Filter in der Auflistung der globalen Filter.</returns>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.GetEnumerator">
      <summary>Gibt einen Enumerator zurück, der die Auflistung der globalen Filter durchläuft.</summary>
      <returns>Ein Enumerator, der die Auflistung der globalen Filter durchläuft.</returns>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Remove(System.Object)">
      <summary>Entfernt alle Filter, die dem angegebenen Filter entsprechen.</summary>
      <param name="filter">Der zu entfernende Filter.</param>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Diese API unterstützt die ASP.NET MVC-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen. </summary>
      <returns>Ein Enumerator, der die Auflistung der globalen Filter durchläuft.</returns>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.System#Web#Mvc#IFilterProvider#GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Diese API unterstützt die ASP.NET MVC-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
      <returns>Ein Enumerator, der die Auflistung der globalen Filter durchläuft.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionDescriptor">Der Aktionsdeskriptor.</param>
    </member>
    <member name="T:System.Web.Mvc.GlobalFilters">
      <summary>Stellt die globale Filterauflistung dar.</summary>
    </member>
    <member name="P:System.Web.Mvc.GlobalFilters.Filters">
      <summary>Ruft die globale Filterauflistung ab oder legt diese fest.</summary>
      <returns>Die globale Filterauflistung.</returns>
    </member>
    <member name="T:System.Web.Mvc.HandleErrorAttribute">
      <summary>Stellt ein Attribut dar, das verwendet wird, um eine Ausnahme zu behandeln, die von einer Aktionsmethode ausgelöst wird.</summary>
    </member>
    <member name="M:System.Web.Mvc.HandleErrorAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.HandleErrorAttribute" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.ExceptionType">
      <summary>Ruft den Typ der Ausnahme ab bzw. legt diesen fest.</summary>
      <returns>Der Typ der Ausnahme.</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.Master">
      <summary>Ruft die Masteransicht zum Anzeigen von Ausnahmeinformationen ab bzw. legt diese fest.</summary>
      <returns>Die Masteransicht.</returns>
    </member>
    <member name="M:System.Web.Mvc.HandleErrorAttribute.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Wird aufgerufen, wenn eine Ausnahme auftritt.</summary>
      <param name="filterContext">Der Aktionsfilterkontext.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="filterContext" />-Parameter ist null.</exception>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.TypeId">
      <summary>Ruft den eindeutigen Bezeichner für dieses Attribut ab.</summary>
      <returns>Der eindeutige Bezeichner für dieses Attribut.</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.View">
      <summary>Ruft die Seitenansicht zum Anzeigen von Ausnahmeinformationen ab bzw. legt diese fest.</summary>
      <returns>Die Seitenansicht.</returns>
    </member>
    <member name="T:System.Web.Mvc.HandleErrorInfo">
      <summary>Kapselt Informationen zur Verarbeitung eines Fehlers, der von einer Aktionsmethode ausgelöst wurde.</summary>
    </member>
    <member name="M:System.Web.Mvc.HandleErrorInfo.#ctor(System.Exception,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.HandleErrorInfo" />-Klasse.</summary>
      <param name="exception">Die Ausnahme.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="actionName">Der Name der Aktion.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="exception" />-Parameter ist null.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="controllerName" />-Parameter oder der <paramref name="actionName" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorInfo.ActionName">
      <summary>Ruft den Namen der Aktion ab (bzw. legt diesen fest), die beim Auslösen der Ausnahme ausgeführt wurde.</summary>
      <returns>Der Name der Aktion.</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorInfo.ControllerName">
      <summary>Ruft den Namen des Controllers ab (bzw. legt diesen fest), der die Aktionsmethode enthält, die die Ausnahme ausgelöst hat.</summary>
      <returns>Der Name des Controllers.</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorInfo.Exception">
      <summary>Ruft das Ausnahmeobjekt ab bzw. legt es fest.</summary>
      <returns>das Ausnahmeobjekt.</returns>
    </member>
    <member name="T:System.Web.Mvc.HiddenInputAttribute">
      <summary>Stellt ein Attribut dar, mit dem angegeben wird, ob ein Eigenschafts- oder Feldwert als ausgeblendetes input-Element gerendert werden soll.</summary>
    </member>
    <member name="M:System.Web.Mvc.HiddenInputAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.HiddenInputAttribute" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.HiddenInputAttribute.DisplayValue">
      <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob der Wert des ausgeblendeten input-Elements angezeigt werden soll.</summary>
      <returns>true, wenn der Wert angezeigt werden soll, andernfalls false.</returns>
    </member>
    <member name="T:System.Web.Mvc.HtmlHelper">
      <summary>Stellt die Unterstützung für das Rendern von HTML-Steuerelementen in einer Ansicht dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.HtmlHelper" />-Klasse, indem der angegebene Ansichtskontext und der Ansichtsdatencontainer verwendet werden.</summary>
      <param name="viewContext">Der Ansichtskontext.</param>
      <param name="viewDataContainer">Der Ansichtsdatencontainer.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="viewContext" />-Parameter oder der <paramref name="viewDataContainer" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.HtmlHelper" />-Klasse, indem der angegebene Ansichtskontext, der Ansichtsdatencontainer und die Routenauflistung verwendet werden.</summary>
      <param name="viewContext">Der Ansichtskontext.</param>
      <param name="viewDataContainer">Der Ansichtsdatencontainer.</param>
      <param name="routeCollection">Die Routenauflistung.</param>
      <exception cref="T:System.ArgumentNullException">Mindestens ein Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AnonymousObjectToHtmlAttributes(System.Object)">
      <summary>Ersetzt Unterstriche durch Bindestriche zur Kompatibilität mit HTML5.</summary>
      <returns>Die HTML-Attribute, bei denen Unterstriche durch Bindestriche ersetzt wurden.</returns>
      <param name="htmlAttributes">Die HTML-Attribute.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AntiForgeryToken">
      <summary>Generiert ein ausgeblendetes Formularfeld (Antifälschungstoken), das beim Senden des Formulars überprüft wird.</summary>
      <returns>Das generierte Formularfeld (Antifälschungstoken).</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AntiForgeryToken(System.String)">
      <summary>Generiert ein ausgeblendetes Formularfeld (Antifälschungstoken), das beim Senden des Formulars überprüft wird. Der Feldwert wird mit dem angegebenen Saltwert generiert.</summary>
      <returns>Das generierte Formularfeld (Antifälschungstoken).</returns>
      <param name="salt">Der Saltwert, der eine beliebige nicht leere Zeichenfolge sein kann.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AntiForgeryToken(System.String,System.String,System.String)">
      <summary>Generiert ein ausgeblendetes Formularfeld (Antifälschungstoken), das beim Senden des Formulars überprüft wird. Der Feldwert wird anhand des angegebenen Saltwerts, der angegebenen Domäne und des angegebenen Pfads generiert.</summary>
      <returns>Das generierte Formularfeld (Antifälschungstoken).</returns>
      <param name="salt">Der Saltwert, der eine beliebige nicht leere Zeichenfolge sein kann.</param>
      <param name="domain">Die Anwendungsdomäne.</param>
      <param name="path">Der virtuelle Pfad.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AttributeEncode(System.Object)">
      <summary>Konvertiert das angegebene Attributsobjekt in eine HTML-codierte Zeichenfolge.</summary>
      <returns>Die HTML-codierte Zeichenfolge. Wenn der Werteparameter null oder leer ist, gibt diese Methode eine leere Zeichenfolge zurück.</returns>
      <param name="value">Das zu verschlüsselnde Objekt.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AttributeEncode(System.String)">
      <summary>Konvertiert die angegebene Attributzeichenfolge in eine HTML-codierte Zeichenfolge.</summary>
      <returns>Die HTML-codierte Zeichenfolge. Wenn der Werteparameter null oder leer ist, gibt diese Methode eine leere Zeichenfolge zurück.</returns>
      <param name="value">Die zu codierende Zeichenfolge.</param>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ClientValidationEnabled">
      <summary>Ruft die Clientvalidierung ab bzw. legt sie fest.</summary>
      <returns>true, wenn Clientvalidierung aktiviert ist, andernfalls false.</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableClientValidation">
      <summary>Aktiviert die Eingabevalidierung, die mit Clientskript im Browser ausgeführt wird.</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableClientValidation(System.Boolean)">
      <param name="enabled">true, um die Clientvalidierung zu aktivieren, andernfalls false.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableUnobtrusiveJavaScript">
      <summary>Aktiviert unaufdringliches JavaScript.</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableUnobtrusiveJavaScript(System.Boolean)">
      <param name="enabled">true, um unaufdringliches JavaScript zu aktivieren, andernfalls false.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Encode(System.Object)">
      <summary>Konvertiert den Wert des angegebenen Objekts in eine HTML-codierte Zeichenfolge.</summary>
      <returns>Die HTML-codierte Zeichenfolge.</returns>
      <param name="value">Das zu verschlüsselnde Objekt.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Encode(System.String)">
      <summary>Konvertiert die angegebene Zeichenfolge in eine HTML-codierte Zeichenfolge.</summary>
      <returns>Die HTML-codierte Zeichenfolge.</returns>
      <param name="value">Die zu codierende Zeichenfolge.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateIdFromName(System.String)">
      <summary>Erstellt mit dem angegebenen Elementnamen eine HTML-Element-ID.</summary>
      <returns>Die ID des HTML-Elements.</returns>
      <param name="name">Der Name des HTML-Elements.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="name" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateIdFromName(System.String,System.String)">
      <summary>Erstellt einen HTML-Elementbezeichner mit dem angegebenen Elementnamen und einer Zeichenfolge, die Punkte im Namen ersetzt.</summary>
      <returns>Die ID des HTML-Elements.</returns>
      <param name="name">Der Name des HTML-Elements.</param>
      <param name="idAttributeDotReplacement">Die Zeichenfolge, die im <paramref name="name" />-Parameter Punkte (.) ersetzt.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="name" />-Parameter oder der <paramref name="idAttributeDotReplacement" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Generiert ein HTML-Ankerelement (a-Element), das einen Link zur angegebenen Aktionsmethode herstellt, und ermöglicht es dem Benutzer, das Kommunikationsprotokoll, den Namen des Hosts und ein URL-Fragment anzugeben.</summary>
      <returns>Ein HTML-Element, das einen Link zur angegebenen Aktionsmethode herstellt.</returns>
      <param name="requestContext">Der Kontext der HTTP-Anforderung.</param>
      <param name="routeCollection">Die Auflistung von URL-Routen.</param>
      <param name="linkText">Die Textbeschriftung, die für den Link angezeigt werden soll.</param>
      <param name="routeName">Der Name der Route, die verwendet wird, um einen virtuellen Pfad zurückzugeben.</param>
      <param name="actionName">Der Name der Aktionsmethode.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="protocol">Das Kommunikationsprotokoll, z. B. HTTP oder HTTPS. Wenn dieser Parameter null ist, wird das Protokoll standardmäßig auf HTTP festgelegt.</param>
      <param name="hostName">Der Name des Hosts.</param>
      <param name="fragment">Der Fragmentbezeichner.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <param name="htmlAttributes">Ein Objekt, das die HTML-Attribute für das Element enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Generiert ein HTML-Ankerelement (a-Element), das einen Link zur angegebenen Aktionsmethode herstellt.</summary>
      <returns>Ein HTML-Element, das einen Link zur angegebenen Aktionsmethode herstellt.</returns>
      <param name="requestContext">Der Kontext der HTTP-Anforderung.</param>
      <param name="routeCollection">Die Auflistung von URL-Routen.</param>
      <param name="linkText">Die Textbeschriftung, die für den Link angezeigt werden soll.</param>
      <param name="routeName">Der Name der Route, die verwendet wird, um einen virtuellen Pfad zurückzugeben.</param>
      <param name="actionName">Der Name der Aktionsmethode.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <param name="htmlAttributes">Ein Objekt, das die HTML-Attribute für das Element enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateRouteLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Generiert ein HTML-Ankerelement (a-Element), das einen Link zur angegebenen URL-Route herstellt, und ermöglicht es dem Benutzer, das Kommunikationsprotokoll, den Namen des Hosts und ein URL-Fragment anzugeben.</summary>
      <returns>Ein HTML-Element, das einen Link zur angegebenen URL-Route herstellt.</returns>
      <param name="requestContext">Der Kontext der HTTP-Anforderung.</param>
      <param name="routeCollection">Die Auflistung von URL-Routen.</param>
      <param name="linkText">Die Textbeschriftung, die für den Link angezeigt werden soll.</param>
      <param name="routeName">Der Name der Route, die verwendet wird, um einen virtuellen Pfad zurückzugeben.</param>
      <param name="protocol">Das Kommunikationsprotokoll, z. B. HTTP oder HTTPS. Wenn dieser Parameter null ist, wird das Protokoll standardmäßig auf HTTP festgelegt.</param>
      <param name="hostName">Der Name des Hosts.</param>
      <param name="fragment">Der Fragmentbezeichner.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <param name="htmlAttributes">Ein Objekt, das die HTML-Attribute für das Element enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateRouteLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Generiert ein HTML-Ankerelement (a-Element), das einen Link zur angegebenen URL-Route herstellt.</summary>
      <returns>Ein HTML-Element, das einen Link zur angegebenen URL-Route herstellt.</returns>
      <param name="requestContext">Der Kontext der HTTP-Anforderung.</param>
      <param name="routeCollection">Die Auflistung von URL-Routen.</param>
      <param name="linkText">Die Textbeschriftung, die für den Link angezeigt werden soll.</param>
      <param name="routeName">Der Name der Route, die verwendet wird, um einen virtuellen Pfad zurückzugeben.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <param name="htmlAttributes">Ein Objekt, das die HTML-Attribute für das Element enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetFormMethodString(System.Web.Mvc.FormMethod)">
      <summary>Gibt die HTTP-Methode als Zeichenfolge zurück, die Formulareingaben (GET oder POST) verarbeitet.</summary>
      <returns>Die Formularmethodenzeichenfolge, entweder "get" oder "post".</returns>
      <param name="method">Die HTTP-Methode, die das das Formular verarbeitet.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetInputTypeString(System.Web.Mvc.InputType)">
      <summary>Gibt den Typ des HTML-Eingabesteuerelements als Zeichenfolge zurück.</summary>
      <returns>Die Eingabetypzeichenfolge ("checkbox", "hidden", "password", "radio" oder "text").</returns>
      <param name="inputType">Der aufgelistete Eingabetyp.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetUnobtrusiveValidationAttributes(System.String)">
      <summary>Ruft mithilfe des angegebenen HTML-Attributs name die Auflistung von unaufdringlichen JavaScript-Validierungsattributen ab.</summary>
      <returns>Die Auflistung von unaufdringlichen JavaScript-Validierungsattributen.</returns>
      <param name="name">Das HTML-Attribut name.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetUnobtrusiveValidationAttributes(System.String,System.Web.Mvc.ModelMetadata)">
      <summary>Ruft mithilfe des angegebenen HTML-Attributs name und der Modellmetadaten die Auflistung von unaufdringlichen JavaScript-Validierungsattributen ab.</summary>
      <returns>Die Auflistung von unaufdringlichen JavaScript-Validierungsattributen.</returns>
      <param name="name">Das HTML-Attribut name.</param>
      <param name="metadata">Die Modellmetadaten.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.HttpMethodOverride(System.String)">
      <summary>Gibt ein verborgenes input-Element zurück, das die Überschreibungsmethode für die angegebene HTTP-Datenübertragungsmethode identifiziert, die vom Client verwendet wurde.</summary>
      <returns>Die Überschreibmethode, die die vom Client verwendete HTTP-Datenübertragungsmethode verwendet.</returns>
      <param name="httpMethod">Die vom Client verwendete HTTP-Datenübertragungsmethode (DELETE, HEAD oder PUT).</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="httpVerb" />-Parameter ist nicht "PUT", "DELETE" oder "HEAD".</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.HttpMethodOverride(System.Web.Mvc.HttpVerbs)">
      <summary>Gibt ein verborgenes input-Element zurück, das die Überschreibungsmethode für das angegebene Verb identifiziert, das die vom Client verwendete HTTP-Datenübertragungsmethode darstellt.</summary>
      <returns>Die Überschreibmethode mit dem Verb, das für die vom Client verwendete HTTP-Datenübertragungsmethode steht.</returns>
      <param name="httpVerb">Das Verb, das für die vom Client verwendete HTTP-Datenübertragungsmethode steht.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="httpVerb" />-Parameter ist nicht "PUT", "DELETE" oder "HEAD".</exception>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.IdAttributeDotReplacement">
      <summary>Ruft das Zeichen ab oder legt das Zeichen fest, das Punkte im ID-Attribut eines Elements ersetzt.</summary>
      <returns>Das Zeichen, das Punkte im ID-Attribut eines Elements ersetzt.</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.RouteCollection">
      <summary>Ruft die Auflistung der Routen für die Anwendung ab oder legt sie fest.</summary>
      <returns>Die Auflistung der Routen für die Anwendung.</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.UnobtrusiveJavaScriptEnabled">
      <summary>Ruft unaufdringliches JavaScript ab bzw. legt es fest.</summary>
      <returns>true, wenn unaufdringliches JavaScript aktiviert ist, andernfalls false.</returns>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationInputCssClassName">
      <summary>Der Name der CSS-Klasse, die verwendet wird, um einem Eingabefeld ein Format zuzuweisen, wenn ein Validierungsfehler auftritt.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationInputValidCssClassName">
      <summary>Der Name der CSS-Klasse, die verwendet wird, um einem Eingabefeld ein Format zuzuweisen, wenn die Eingabe gültig ist.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationMessageCssClassName">
      <summary>Der Name der CSS-Klasse, die verwendet wird, um der Fehlermeldung ein Format zuzuweisen, wenn ein Validierungsfehler auftritt.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationMessageValidCssClassName">
      <summary>Der Name der CSS-Klasse, die verwendet wird, um der Validierungsmeldung ein Format zuzuweisen, wenn die Eingabe gültig ist.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationSummaryCssClassName">
      <summary>Der Name der CSS-Klasse, die verwendet wird, um Fehlermeldungen einer Validierungszusammenfassung ein Format zuzuweisen.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationSummaryValidCssClassName">
      <summary>Der Name der CSS-Klasse, die verwendet wird, um der Validierungszusammenfassung ein Format zuzuweisen, wenn die Eingabe gültig ist.</summary>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewContext">
      <summary>Ruft die Kontextinformationen zur Ansicht ab oder legt sie fest.</summary>
      <returns>Der Kontext der Ansicht.</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewData">
      <summary>Ruft das aktuelle Wörterbuch mit den Ansichtsdaten ab.</summary>
      <returns>Das Ansichtsdatenwörterbuch.</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewDataContainer">
      <summary>Ruft den Container mit den Ansichtsdaten ab oder legt ihn fest.</summary>
      <returns>Der Ansichtsdatencontainer.</returns>
    </member>
    <member name="T:System.Web.Mvc.HtmlHelper`1">
      <summary>Stellt Unterstützung für das Rendern von HTML-Steuerelementen in einer stark typisierten Ansicht dar.</summary>
      <typeparam name="TModel">Der Typ des Modells.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.HtmlHelper`1" />-Klasse mithilfe des angegebenen Ansichtskontexts und Ansichtsdatencontainers.</summary>
      <param name="viewContext">Der Ansichtskontext.</param>
      <param name="viewDataContainer">Der Ansichtsdatencontainer.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.HtmlHelper`1" />-Klasse mithilfe des angegebenen Ansichtskontexts, Ansichtsdatencontainers sowie der Routenauflistung.</summary>
      <param name="viewContext">Der Ansichtskontext.</param>
      <param name="viewDataContainer">Der Ansichtsdatencontainer.</param>
      <param name="routeCollection">Die Routenauflistung.</param>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper`1.ViewData">
      <summary>Ruft das stark typisierte Ansichtsdatenwörterbuch ab.</summary>
      <returns>Das stark typisierte Ansichtsdatenwörterbuch.</returns>
    </member>
    <member name="T:System.Web.Mvc.HttpAntiForgeryException">
      <summary>Stellt eine HTTP-Antifälschungsausnahme dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpAntiForgeryException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.HttpAntiForgeryException" />-Klasse unter Verwendung einer vom System generierten Meldung, die den Fehler beschreibt.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpAntiForgeryException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.HttpAntiForgeryException" />-Klasse unter Verwendung einer angegebenen Meldung, die den Fehler beschreibt.</summary>
      <param name="message">Die Meldung, in der die Ausnahme beschrieben wird Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
    </member>
    <member name="M:System.Web.Mvc.HttpAntiForgeryException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.HttpAntiForgeryException" />-Klasse unter Verwendung einer angegebenen Fehlermeldung und eines Verweises auf die interne Ausnahme, die die Ursache dieser Ausnahme ist.</summary>
      <param name="message">Die Meldung, in der die Ausnahme beschrieben wird Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde. </param>
      <param name="innerException">Die Ausnahme, die Ursache der aktuellen Ausnahme ist. Wenn der <paramref name="innerException" />-Parameter nicht null ist, wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt. </param>
    </member>
    <member name="T:System.Web.Mvc.HttpDeleteAttribute">
      <summary>Steht für ein Attribut, mit dem eine Aktionsmethode so eingeschränkt wird, dass nur HTTP DELETE-Anforderungen von der Methode verarbeitet werden können.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpDeleteAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.HttpDeleteAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpDeleteAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Ermittelt, ob eine Anforderung eine gültige HTTP DELETE-Anforderung ist.</summary>
      <returns>true, wenn die Anforderung gültig ist, andernfalls false.</returns>
      <param name="controllerContext">Der Kontext, innerhalb dessen der Controller funktioniert. Die Kontextinformationen enthalten den Controller, den HTTP-Inhalt, den Anforderungskontext und die Weiterleitungsdaten.</param>
      <param name="methodInfo">Kapselt Informationen über eine Methode, z. B. ihren Typ, ihren Rückgabetyp und ihre Argumente.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpFileCollectionValueProvider">
      <summary>Stellt einen Wertanbieter dar, der mit Werten verwendet werden soll, die aus einer Auflistung von HTTP-Dateien stammen.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpFileCollectionValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.HttpFileCollectionValueProvider" />-Klasse.</summary>
      <param name="controllerContext">Ein Objekt, das Informationen zur aktuellen HTTP-Anforderung kapselt.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpFileCollectionValueProviderFactory">
      <summary>Stellt eine Klasse dar, die für das Erstellen einer neuen Instanz eines Wertanbieterobjekts für eine HTTP- Dateiauflistung verantwortlich ist.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpFileCollectionValueProviderFactory.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.HttpFileCollectionValueProviderFactory" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpFileCollectionValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Gibt ein Wertanbieterobjekt für den angegebenen Controllerkontext zurück.</summary>
      <returns>Ein Wertanbieter für eine HTTP-Dateiauflistung.</returns>
      <param name="controllerContext">Ein Objekt, das Informationen zur HTTP-Anforderung kapselt.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="controllerContext" />-Parameter ist null.</exception>
    </member>
    <member name="T:System.Web.Mvc.HttpGetAttribute">
      <summary>Stellt ein Attribut dar, das verwendet wird, um eine Aktionsmethode so einzuschränken, dass die Methode nur HTTP GET-Anforderungen verarbeitet.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpGetAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.HttpGetAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpGetAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Ermittelt, ob eine Anforderung eine gültige HTTP GET-Anforderung ist.</summary>
      <returns>true, wenn die Anforderung gültig ist, andernfalls false.</returns>
      <param name="controllerContext">Der Kontext, innerhalb dessen der Controller funktioniert. Die Kontextinformationen enthalten den Controller, den HTTP-Inhalt, den Anforderungskontext und die Weiterleitungsdaten.</param>
      <param name="methodInfo">Kapselt Informationen über eine Methode, z. B. ihren Typ, ihren Rückgabetyp und ihre Argumente.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpNotFoundResult">
      <summary>Definiert ein Objekt, mit dem angegeben wird, dass die angeforderte Ressource nicht gefunden wurde.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpNotFoundResult.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.HttpNotFoundResult" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpNotFoundResult.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.HttpNotFoundResult" />-Klasse mithilfe einer Statusbeschreibung.</summary>
      <param name="statusDescription">Die Statusbeschreibung.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpPostAttribute">
      <summary>Stellt ein Attribut dar, das verwendet wird, um eine Aktionsmethode so einzuschränken, dass die Methode nur HTTP POST-Anforderungen verarbeitet.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.HttpPostAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Ermittelt, ob eine Anforderung eine gültige HTTP POST-Anforderung ist.</summary>
      <returns>true, wenn die Anforderung gültig ist, andernfalls false.</returns>
      <param name="controllerContext">Der Kontext, innerhalb dessen der Controller funktioniert. Die Kontextinformationen enthalten den Controller, den HTTP-Inhalt, den Anforderungskontext und die Weiterleitungsdaten.</param>
      <param name="methodInfo">Kapselt Informationen über eine Methode, z. B. ihren Typ, ihren Rückgabetyp und ihre Argumente.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpPostedFileBaseModelBinder">
      <summary>Bindet ein Modell an eine bereitgestellte Datei.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostedFileBaseModelBinder.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.HttpPostedFileBaseModelBinder" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostedFileBaseModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Bindet das Modell.</summary>
      <returns>Der gebundene Wert.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="bindingContext">Der Bindungskontext.</param>
      <exception cref="T:System.ArgumentNullException">Ein oder beide Parameter sind null.</exception>
    </member>
    <member name="T:System.Web.Mvc.HttpPutAttribute">
      <summary>Stellt ein Attribut dar, das verwendet wird, um eine Aktionsmethode so einzuschränken, dass die Methode nur HTTP PUT-Anforderungen verarbeitet.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPutAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.HttpPutAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPutAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Ermittelt, ob eine Anforderung eine gültige HTTP PUT-Anforderung ist.</summary>
      <returns>true, wenn die Anforderung gültig ist, andernfalls false.</returns>
      <param name="controllerContext">Der Kontext, innerhalb dessen der Controller funktioniert. Die Kontextinformationen enthalten den Controller, den HTTP-Inhalt, den Anforderungskontext und die Weiterleitungsdaten.</param>
      <param name="methodInfo">Kapselt Informationen über eine Methode, z. B. ihren Typ, ihren Rückgabetyp und ihre Argumente.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpRequestExtensions">
      <summary>Erweitert die <see cref="T:System.Web.HttpRequestBase" />-Klasse, die die von einem Client während einer Webanforderung gesendeten HTTP-Werte enthält.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpRequestExtensions.GetHttpMethodOverride(System.Web.HttpRequestBase)">
      <summary>Ruft die Überschreibung der vom Client verwendeten HTTP-Datenübertragungsmethode ab.</summary>
      <returns>Die vom Client verwendete Überschreibung der HTTP-Datenübertragungsmethode.</returns>
      <param name="request">Ein Objekt mit den HTTP-Werten, die während einer Webanforderung vom Client gesendet wurden.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="request" />-Parameter ist null.</exception>
      <exception cref="T:System.NotImplementedException">Die Überschreibung der HTTP-Datenübertragungsmethode wurde nicht implementiert.</exception>
    </member>
    <member name="T:System.Web.Mvc.HttpStatusCodeResult">
      <summary>Stellt eine Möglichkeit bereit, ein Aktionsergebnis mit einem bestimmten Statuscode und einer bestimmten Statusbeschreibung für die HTTP-Antwort zurückzugeben.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.#ctor(System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.HttpStatusCodeResult" />-Klasse mithilfe eines Statuscodes.</summary>
      <param name="statusCode">Der Statuscode.</param>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.#ctor(System.Int32,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.HttpStatusCodeResult" />-Klasse mithilfe eines Statuscodes und einer Statusbeschreibung.</summary>
      <param name="statusCode">Der Statuscode.</param>
      <param name="statusDescription">Die Statusbeschreibung.</param>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Ermöglicht die Verarbeitung des Ergebnisses einer Aktionsmethode durch einen benutzerdefinierten Typ, der von der <see cref="T:System.Web.Mvc.ActionResult" />-Klasse erbt.</summary>
      <param name="context">Der Kontext, in dem das Ergebnis ausgeführt wird. Die Kontextinformationen enthalten den Controller, den HTTP-Inhalt, den Anforderungskontext und die Weiterleitungsdaten.</param>
    </member>
    <member name="P:System.Web.Mvc.HttpStatusCodeResult.StatusCode">
      <summary>Ruft den HTTP-Statuscode ab.</summary>
      <returns>Der HTTP-Statuscode.</returns>
    </member>
    <member name="P:System.Web.Mvc.HttpStatusCodeResult.StatusDescription">
      <summary>Ruft die HTTP-Statusbeschreibung ab.</summary>
      <returns>Die HTTP-Statusbeschreibung.</returns>
    </member>
    <member name="T:System.Web.Mvc.HttpUnauthorizedResult">
      <summary>Stellt das Ergebnis einer nicht autorisierten HTTP-Anforderung dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpUnauthorizedResult.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.HttpUnauthorizedResult" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpUnauthorizedResult.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.HttpUnauthorizedResult" />-Klasse mithilfe der Statusbeschreibung.</summary>
      <param name="statusDescription">Die Statusbeschreibung.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpVerbs">
      <summary>Listet die HTTP-Verben auf.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Get">
      <summary>Ruft die Informationen bzw. die Entität ab, die vom URI der Anforderung bezeichnet werden.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Post">
      <summary>Stellt eine neue Entität als Zusatz zu einem URI bereit.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Put">
      <summary>Ersetzt eine Entität, die von einem URI bezeichnet wird.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Delete">
      <summary>Fordert an, dass ein angegebener URI gelöscht wird.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Head">
      <summary>Ruft die Nachrichtenheader für die Informationen oder die Entität ab, die vom URI der Anforderung bezeichnet werden.</summary>
    </member>
    <member name="T:System.Web.Mvc.IActionFilter">
      <summary>Definiert die Methoden, die in einem Aktionsfilter verwendet werden.</summary>
    </member>
    <member name="M:System.Web.Mvc.IActionFilter.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Wird aufgerufen, nachdem die Aktionsmethode ausgeführt wurde.</summary>
      <param name="filterContext">Der Filterkontext.</param>
    </member>
    <member name="M:System.Web.Mvc.IActionFilter.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Wird aufgerufen, bevor eine Aktionsmethode ausgeführt wird.</summary>
      <param name="filterContext">Der Filterkontext.</param>
    </member>
    <member name="T:System.Web.Mvc.IActionInvoker">
      <summary>Definiert den Vertrag für eine Instanz zum Aufrufen einer Aktion, die verwendet wird, um als Reaktion auf eine HTTP-Anforderung eine Aktion aufzurufen.</summary>
    </member>
    <member name="M:System.Web.Mvc.IActionInvoker.InvokeAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Ruft die angegebene Aktion auf, indem der angegebene Controllerkontext verwendet wird.</summary>
      <returns>true, wenn die Aktion gefunden wurde, andernfalls false.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionName">Der Name der Aktion.</param>
    </member>
    <member name="T:System.Web.Mvc.IAuthorizationFilter">
      <summary>Definiert die Methoden, die für einen Autorisierungsfilter erforderlich sind.</summary>
    </member>
    <member name="M:System.Web.Mvc.IAuthorizationFilter.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Wird aufgerufen, wenn eine Autorisierung erforderlich ist.</summary>
      <param name="filterContext">Der Filterkontext.</param>
    </member>
    <member name="T:System.Web.Mvc.IClientValidatable">
      <summary>Stellt eine Möglichkeit für das ASP.NET MVC-Validierungsframework bereit, zur Laufzeit zu ermitteln, ob eine Bestätigung über Unterstützung für Clientvalidierung verfügt.</summary>
    </member>
    <member name="M:System.Web.Mvc.IClientValidatable.GetClientValidationRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Gibt bei Implementierung in einer Klasse Clientvalidierungsregeln für diese Klasse zurück.</summary>
      <returns>Die Fehlervalidierungsregeln für diese Bestätigung.</returns>
      <param name="metadata">Die Modellmetadaten.</param>
      <param name="context">Der Controllerkontext.</param>
    </member>
    <member name="T:System.Web.Mvc.IController">
      <summary>Definiert die Methoden, die für einen Controller erforderlich sind.</summary>
    </member>
    <member name="M:System.Web.Mvc.IController.Execute(System.Web.Routing.RequestContext)">
      <summary>Führt den angegebenen Anforderungskontext aus.</summary>
      <param name="requestContext">Der Anforderungskontext.</param>
    </member>
    <member name="T:System.Web.Mvc.IControllerActivator">
      <summary>Ermöglicht eine präzise Steuerung der Instanziierung von Controllern mithilfe der Abhängigkeitsinjektion.</summary>
    </member>
    <member name="M:System.Web.Mvc.IControllerActivator.Create(System.Web.Routing.RequestContext,System.Type)">
      <summary>Erstellt bei Implementierung in einer Klasse einen Controller.</summary>
      <returns>Der erstellte Controller.</returns>
      <param name="requestContext">Der Anforderungskontext.</param>
      <param name="controllerType">Der Typ des Controllers.</param>
    </member>
    <member name="T:System.Web.Mvc.IControllerFactory">
      <summary>Definiert die Methoden, die für eine Controllerfactory erforderlich sind.</summary>
    </member>
    <member name="M:System.Web.Mvc.IControllerFactory.CreateController(System.Web.Routing.RequestContext,System.String)">
      <summary>Erstellt den angegebenen Controller mithilfe des angegebenen Anforderungskontexts.</summary>
      <returns>Der Controller.</returns>
      <param name="requestContext">Der Anforderungskontext.</param>
      <param name="controllerName">Der Name des Controllers.</param>
    </member>
    <member name="M:System.Web.Mvc.IControllerFactory.GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.String)">
      <summary>Ruft das Sitzungsverhalten des Controllers ab bzw. legt es fest.</summary>
      <returns>Das Sitzungsverhalten des Controllers.</returns>
      <param name="requestContext">Der Anforderungskontext.</param>
      <param name="controllerName">Der Name des Controllers, dessen Sitzungsverhalten abgerufen werden soll.</param>
    </member>
    <member name="M:System.Web.Mvc.IControllerFactory.ReleaseController(System.Web.Mvc.IController)">
      <summary>Gibt den angegebenen Controller frei.</summary>
      <param name="controller">Der Controller.</param>
    </member>
    <member name="T:System.Web.Mvc.IDependencyResolver">
      <summary>Definiert die Methoden zum Vereinfachen des Dienstspeicherorts und der Abhängigkeitsauflösung.</summary>
    </member>
    <member name="M:System.Web.Mvc.IDependencyResolver.GetService(System.Type)">
      <summary>Löst einzeln registrierte Dienste auf, die beliebige Objekterstellung unterstützen.</summary>
      <returns>Der angeforderte Dienst oder das angeforderte Objekt.</returns>
      <param name="serviceType">Der Typ des angeforderten Diensts oder Objekts.</param>
    </member>
    <member name="M:System.Web.Mvc.IDependencyResolver.GetServices(System.Type)">
      <summary>Löst mehrfach registrierte Dienste auf.</summary>
      <returns>Der angeforderte Dienst.</returns>
      <param name="serviceType">Der Typ der angeforderten Dienste.</param>
    </member>
    <member name="T:System.Web.Mvc.IExceptionFilter">
      <summary>Definiert die Methoden, die für einen Ausnahmefilter erforderlich sind.</summary>
    </member>
    <member name="M:System.Web.Mvc.IExceptionFilter.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Wird aufgerufen, wenn eine Ausnahme auftritt.</summary>
      <param name="filterContext">Der Filterkontext.</param>
    </member>
    <member name="T:System.Web.Mvc.IFilterProvider">
      <summary>Stellt eine Schnittstelle für die Suche nach Filtern bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.IFilterProvider.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Gibt einen Enumerator zurück, der alle <see cref="T:System.Web.Mvc.IFilterProvider" />-Instanzen des Service Locators enthält.</summary>
      <returns>Der Enumerator, der alle <see cref="T:System.Web.Mvc.IFilterProvider" />-Instanzen des Service Locators enthält.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionDescriptor">Der Aktionsdeskriptor.</param>
    </member>
    <member name="T:System.Web.Mvc.IMetadataAware">
      <summary>Stellt eine Schnittstelle zum Verfügbarmachen von Attributen für die <see cref="T:System.Web.Mvc.AssociatedMetadataProvider" />-Klasse bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.IMetadataAware.OnMetadataCreated(System.Web.Mvc.ModelMetadata)">
      <summary>Stellt bei Implementierung in einer Klasse Metadaten für den Erstellungsprozess der Modellmetadaten bereit.</summary>
      <param name="metadata">Die Modellmetadaten.</param>
    </member>
    <member name="T:System.Web.Mvc.IModelBinder">
      <summary>Definiert die Methoden, die für einen Modellbinder erforderlich sind.</summary>
    </member>
    <member name="M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Bindet das Modell an einen Wert, indem der angegebene Controllerkontext und der Bindungskontext verwendet werden.</summary>
      <returns>Der gebundene Wert.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="bindingContext">Der Bindungskontext.</param>
    </member>
    <member name="T:System.Web.Mvc.IModelBinderProvider">
      <summary>Definiert Methoden, die dynamische Implementierungen der Modellbindung für Klassen ermöglichen, die die <see cref="T:System.Web.Mvc.IModelBinder" />-Schnittstelle implementieren. </summary>
    </member>
    <member name="M:System.Web.Mvc.IModelBinderProvider.GetBinder(System.Type)">
      <summary>Gibt den Modellbinder für den angegebenen Typ zurück.</summary>
      <returns>Der Modellbinder für den angegebenen Typ.</returns>
      <param name="modelType">Der Typ des Modells.</param>
    </member>
    <member name="T:System.Web.Mvc.IMvcFilter">
      <summary>Definiert Member, die die Reihenfolge von Filtern und die Zulässigkeit mehrerer Filter angeben.</summary>
    </member>
    <member name="P:System.Web.Mvc.IMvcFilter.AllowMultiple">
      <summary>Ruft bei Implementierung in einer Klasse einen Wert ab, der angibt, ob mehrere Filter zulässig sind, oder legt diesen Wert fest.</summary>
      <returns>true, wenn mehrere Filter zulässig sind, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.Mvc.IMvcFilter.Order">
      <summary>Ruft bei Implementierung in einer Klasse die Filterreihenfolge ab.</summary>
      <returns>Die Filterreihenfolge.</returns>
    </member>
    <member name="T:System.Web.Mvc.InputType">
      <summary>Listet die Typen von Eingabesteuerelementen auf.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.CheckBox">
      <summary>Ein Kontrollkästchen.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Hidden">
      <summary>Ein ausgeblendetes Feld.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Password">
      <summary>Ein Kennwortfeld.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Radio">
      <summary>Ein Optionsfeld.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Text">
      <summary>Ein Textfeld.</summary>
    </member>
    <member name="T:System.Web.Mvc.IResultFilter">
      <summary>Definiert die Methoden, die für einen Ergebnisfilter erforderlich sind.</summary>
    </member>
    <member name="M:System.Web.Mvc.IResultFilter.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Wird aufgerufen, nachdem ein Aktionsergebnis ausgeführt wurde.</summary>
      <param name="filterContext">Der Filterkontext.</param>
    </member>
    <member name="M:System.Web.Mvc.IResultFilter.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Wird aufgerufen, bevor ein Aktionsergebnis ausgeführt wird.</summary>
      <param name="filterContext">Der Filterkontext.</param>
    </member>
    <member name="T:System.Web.Mvc.IRouteWithArea">
      <summary>Ordnet einem Bereich in einer ASP.NET MVC-Anwendung eine Route zu.</summary>
    </member>
    <member name="P:System.Web.Mvc.IRouteWithArea.Area">
      <summary>Ruft den Namen des Bereichs ab, dem die Route zugeordnet werden soll.</summary>
      <returns>Der Name des Bereichs, dem die Route zugeordnet werden soll.</returns>
    </member>
    <member name="T:System.Web.Mvc.ITempDataProvider">
      <summary>Definiert den Vertrag für temporäre Datenanbieter, die Daten speichern, die bei der nächsten Anforderung angezeigt werden.</summary>
    </member>
    <member name="M:System.Web.Mvc.ITempDataProvider.LoadTempData(System.Web.Mvc.ControllerContext)">
      <summary>Lädt die temporären Daten.</summary>
      <returns>Die temporären Daten.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
    </member>
    <member name="M:System.Web.Mvc.ITempDataProvider.SaveTempData(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Speichert die temporären Daten.</summary>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="values">Die Werte.</param>
    </member>
    <member name="T:System.Web.Mvc.IUnvalidatedValueProvider">
      <summary>Stellt eine <see cref="T:System.Web.Mvc.IValueProvider" />-Schnittstelle dar, die die Anforderungsvalidierung überspringen kann.</summary>
    </member>
    <member name="M:System.Web.Mvc.IUnvalidatedValueProvider.GetValue(System.String,System.Boolean)">
      <summary>Ruft den Wert des Objekts ab, das dem angegebenen Schlüssel zugeordnet ist.</summary>
      <returns>Der Wert des Objekts für den angegebenen Schlüssel.</returns>
      <param name="key">Der Schlüssel.</param>
      <param name="skipValidation">true, wenn die Validierung übersprungen werden soll, andernfalls false.</param>
    </member>
    <member name="T:System.Web.Mvc.IValueProvider">
      <summary>Definiert die Methoden, die für einen Wertanbieter in ASP.NET MVC erforderlich sind.</summary>
    </member>
    <member name="M:System.Web.Mvc.IValueProvider.ContainsPrefix(System.String)">
      <summary>Bestimmt, ob die Auflistung das angegebene Präfix enthält.</summary>
      <returns>true, wenn die Auflistung das angegebene Präfix enthält, andernfalls false.</returns>
      <param name="prefix">Das Präfix, nach dem gesucht werden soll.</param>
    </member>
    <member name="M:System.Web.Mvc.IValueProvider.GetValue(System.String)">
      <summary>Ruft mit dem angegebenen Schlüssel ein Wertobjekt ab.</summary>
      <returns>Das Wertobjekt für den angegebenen Schlüssel.</returns>
      <param name="key">Der Schlüssel für das Wertobjekt, das abgerufen werden soll.</param>
    </member>
    <member name="T:System.Web.Mvc.IView">
      <summary>Definiert die Methoden, die für eine Ansicht erforderlich sind.</summary>
    </member>
    <member name="M:System.Web.Mvc.IView.Render(System.Web.Mvc.ViewContext,System.IO.TextWriter)">
      <summary>Rendert den angegebenen Ansichtskontext mithilfe des angegebenen Writerobjekts.</summary>
      <param name="viewContext">Der Ansichtskontext.</param>
      <param name="writer">Das Writerobjekt.</param>
    </member>
    <member name="T:System.Web.Mvc.IViewDataContainer">
      <summary>Definiert die Methoden, die für ein Ansichtsdatenwörterbuch erforderlich sind.</summary>
    </member>
    <member name="P:System.Web.Mvc.IViewDataContainer.ViewData">
      <summary>Ruft das Wörterbuch mit den Ansichtsdaten ab bzw. legt es fest.</summary>
      <returns>Das Ansichtsdatenwörterbuch.</returns>
    </member>
    <member name="T:System.Web.Mvc.IViewEngine">
      <summary>Definiert die Methoden, die für ein Ansichtsmodul erforderlich sind.</summary>
    </member>
    <member name="M:System.Web.Mvc.IViewEngine.FindPartialView(System.Web.Mvc.ControllerContext,System.String,System.Boolean)">
      <summary>Sucht anhand des angegebenen Controllerkontexts nach der angegebenen Teilansicht.</summary>
      <returns>Die Teilansicht.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="partialViewName">Der Name der Teilansicht.</param>
      <param name="useCache">true, um anzugeben, dass das Ansichtsmodul die zwischengespeicherte Ansicht zurückgeben soll (falls vorhanden), andernfalls false.</param>
    </member>
    <member name="M:System.Web.Mvc.IViewEngine.FindView(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean)">
      <summary>Sucht anhand des angegebenen Controllerkontexts nach der angegebenen Ansicht.</summary>
      <returns>Die Seitenansicht.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="viewName">Der Name der Ansicht.</param>
      <param name="masterName">Der Name des Masters.</param>
      <param name="useCache">true, um anzugeben, dass das Ansichtsmodul die zwischengespeicherte Ansicht zurückgeben soll (falls vorhanden), andernfalls false.</param>
    </member>
    <member name="M:System.Web.Mvc.IViewEngine.ReleaseView(System.Web.Mvc.ControllerContext,System.Web.Mvc.IView)">
      <summary>Gibt die angegebene Ansicht frei, indem der angegebene Controllerkontext verwendet wird.</summary>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="view">Die Ansicht.</param>
    </member>
    <member name="T:System.Web.Mvc.IViewLocationCache">
      <summary>Definiert die Methoden, die erforderlich sind, um Ansichtsspeicherorte im Arbeitsspeicher zwischenzuspeichern.</summary>
    </member>
    <member name="M:System.Web.Mvc.IViewLocationCache.GetViewLocation(System.Web.HttpContextBase,System.String)">
      <summary>Ruft den Ansichtsspeicherort ab, indem der angegebene HTTP-Kontext und Cacheschlüssel verwendet werden.</summary>
      <returns>Der Ansichtsspeicherort.</returns>
      <param name="httpContext">Der HTTP-Kontext.</param>
      <param name="key">Der Cacheschlüssel.</param>
    </member>
    <member name="M:System.Web.Mvc.IViewLocationCache.InsertViewLocation(System.Web.HttpContextBase,System.String,System.String)">
      <summary>Fügt den angegebenen Ansichtsspeicherort in den Cache ein, indem der angegebene HTTP-Kontext und Cacheschlüssel verwendet werden.</summary>
      <param name="httpContext">Der HTTP-Kontext.</param>
      <param name="key">Der Cacheschlüssel.</param>
      <param name="virtualPath">Der virtuelle Pfad.</param>
    </member>
    <member name="T:System.Web.Mvc.IViewPageActivator">
      <summary>Ermöglicht die differenzierte Steuerung der Instanziierung von Ansichtsseiten mithilfe der Abhängigkeitsinjektion.</summary>
    </member>
    <member name="M:System.Web.Mvc.IViewPageActivator.Create(System.Web.Mvc.ControllerContext,System.Type)">
      <returns>Die erstellte Ansichtsseite.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="type">Der Typ des Controllers.</param>
    </member>
    <member name="T:System.Web.Mvc.JavaScriptResult">
      <summary>Sendet JavaScript-Inhalt an die Antwort.</summary>
    </member>
    <member name="M:System.Web.Mvc.JavaScriptResult.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.JavaScriptResult" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.JavaScriptResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Ermöglicht die Verarbeitung des Ergebnisses einer Aktionsmethode durch einen benutzerdefinierten Typ, der von der <see cref="T:System.Web.Mvc.ActionResult" />-Klasse erbt.</summary>
      <param name="context">Der Kontext, in dem das Ergebnis ausgeführt wird.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="context" />-Parameter ist null.</exception>
    </member>
    <member name="P:System.Web.Mvc.JavaScriptResult.Script">
      <summary>Ruft das Skript ab bzw. legt es fest.</summary>
      <returns>Das Skript.</returns>
    </member>
    <member name="T:System.Web.Mvc.JsonRequestBehavior">
      <summary>Gibt an, ob HTTP-GET-Anforderungen vom Client zulässig sind.</summary>
    </member>
    <member name="F:System.Web.Mvc.JsonRequestBehavior.AllowGet">
      <summary>HTTP-GET-Anforderungen vom Client werden zugelassen.</summary>
    </member>
    <member name="F:System.Web.Mvc.JsonRequestBehavior.DenyGet">
      <summary>HTTP-GET-Anforderungen vom Client werden nicht zugelassen.</summary>
    </member>
    <member name="T:System.Web.Mvc.JsonResult">
      <summary>Stellt eine Klasse dar, die verwendet wird, um JSON-formatierten Inhalt an die Antwort zu senden.</summary>
    </member>
    <member name="M:System.Web.Mvc.JsonResult.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.JsonResult" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.ContentEncoding">
      <summary>Ruft die Inhaltscodierung ab bzw. legt diese fest.</summary>
      <returns>Die Inhaltscodierung.</returns>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.ContentType">
      <summary>Ruft den Typ des Inhalts ab bzw. legt diesen fest.</summary>
      <returns>Der Typ des Inhalts.</returns>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.Data">
      <summary>Ruft die Daten ab bzw. legt diese fest.</summary>
      <returns>Die Daten.</returns>
    </member>
    <member name="M:System.Web.Mvc.JsonResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Ermöglicht die Verarbeitung des Ergebnisses einer Aktionsmethode durch einen benutzerdefinierten Typ, der von der <see cref="T:System.Web.Mvc.ActionResult" />-Klasse erbt.</summary>
      <param name="context">Der Kontext, in dem das Ergebnis ausgeführt wird.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="context" />-Parameter ist null.</exception>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.JsonRequestBehavior">
      <summary>Ruft einen Wert ab, der angibt, ob HTTP-GET-Anforderungen vom Client zulässig sind, oder legt diesen fest.</summary>
      <returns>Ein Wert, der angibt, ob HTTP-GET-Anforderungen vom Client zulässig sind.</returns>
    </member>
    <member name="T:System.Web.Mvc.JsonValueProviderFactory">
      <summary>Aktiviert Aktionsmethoden für das Senden und Empfangen von JSON-formatiertem Text und das Modellbinden des JSON-Texts an Parameter von Aktionsmethoden.</summary>
    </member>
    <member name="M:System.Web.Mvc.JsonValueProviderFactory.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.JsonValueProviderFactory" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.JsonValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Gibt ein JSON-Wertanbieterobjekt für den angegebenen Controllerkontext zurück.</summary>
      <returns>Ein JSON-Wertanbieterobjekt für den angegebenen Controllerkontext.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
    </member>
    <member name="T:System.Web.Mvc.LinqBinaryModelBinder">
      <summary>Ordnet einem <see cref="T:System.Data.Linq.Binary" />-LINQ-Objekt eine Browseranforderung zu.</summary>
    </member>
    <member name="M:System.Web.Mvc.LinqBinaryModelBinder.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.LinqBinaryModelBinder" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.LinqBinaryModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Bindet das Modell, indem der angegebene Controllerkontext und Bindungskontext verwendet werden.</summary>
      <returns>Das gebundene Datenobjekt. Wenn das Modell nicht gebunden werden kann, gibt diese Methode null. zurück.</returns>
      <param name="controllerContext">Der Kontext, innerhalb dessen der Controller funktioniert. Die Kontextinformationen enthalten den Controller, den HTTP-Inhalt, den Anforderungskontext und die Weiterleitungsdaten.</param>
      <param name="bindingContext">Der Kontext, in dem das Modell gebunden ist. Der Kontext schließt Informationen ein, z. B. das Modellobjekt, den Modellnamen, den Modelltyp, den Eigenschaftenfilter und den Wertanbieter.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderAttribute">
      <summary>Stellt ein Attribut dar, das zum Zuordnen eines Modelltyps zu einem Modellgenerator-Typ verwendet wird.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderAttribute.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ModelBinderAttribute" />-Klasse.</summary>
      <param name="binderType">Der Typ des Binders.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="binderType" />-Parameter ist null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderAttribute.BinderType">
      <summary>Ruft den Typ des Binders ab bzw. legt diesen fest.</summary>
      <returns>Der Typ des Binders.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderAttribute.GetBinder">
      <summary>Ruft eine Instanz des Modellbinders ab.</summary>
      <returns>Ein Verweis auf ein Objekt, das die <see cref="T:System.Web.Mvc.IModelBinder" />-Schnittstelle implementiert.</returns>
      <exception cref="T:System.InvalidOperationException">Beim Erstellen einer Instanz des Modellbinders ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderDictionary">
      <summary>Stellt eine Klasse dar, die alle nach Bindertyp aufgeführten Modellbinder für die Anwendung enthält.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ModelBinderDictionary" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Add(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder})">
      <summary>Fügt dem Modellbinderwörterbuch das angegebene Element hinzu.</summary>
      <param name="item">Das Objekt, das der <see cref="T:System.Collections.Generic.ICollection`1" />-Instanz hinzugefügt wird.</param>
      <exception cref="T:System.NotSupportedException">Das <see cref="T:System.Collections.Generic.ICollection`1" />-Objekt ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Add(System.Type,System.Web.Mvc.IModelBinder)">
      <summary>Fügt das angegebene Element unter Verwendung des angegebenen Schlüssels dem Modellbinderwörterbuch hinzu.</summary>
      <param name="key">Der Schlüssel des hinzuzufügenden Elements.</param>
      <param name="value">Der Wert des hinzuzufügenden Elements.</param>
      <exception cref="T:System.NotSupportedException">Das <see cref="T:System.Collections.Generic.IDictionary`2" />-Objekt ist schreibgeschützt.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
      <exception cref="T:System.ArgumentException">Ein Element mit demselben Schlüssel ist bereits im <see cref="T:System.Collections.Generic.IDictionary`2" />-Objekt vorhanden.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Clear">
      <summary>Entfernt alle Elemente aus dem Modellbinderwörterbuch.</summary>
      <exception cref="T:System.NotSupportedException">Das <see cref="T:System.Collections.Generic.ICollection`1" />-Objekt ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder})">
      <summary>Ermittelt, ob das Modellbinderwörterbuch einen angegebenen Wert enthält.</summary>
      <returns>true, wenn <paramref name="item" /> im Modellbinderwörterbuch gefunden wird, andernfalls false.</returns>
      <param name="item">Das im <see cref="T:System.Collections.Generic.ICollection`1" />-Objekt zu suchende Objekt.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.ContainsKey(System.Type)">
      <summary>Bestimmt, ob das Modellbinderwörterbuch ein Element enthält, das über den angegebenen Schlüssel verfügt.</summary>
      <returns>true, wenn das Modellbinderwörterbuch ein Element mit dem angegebenen Schlüssel enthält, andernfalls false.</returns>
      <param name="key">Der im <see cref="T:System.Collections.Generic.IDictionary`2" />-Objekt zu suchende Schlüssel.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder}[],System.Int32)">
      <summary>Kopiert die Elemente des Modellbinderwörterbuchs in ein Array, wobei mit einem angegebenen Index begonnen wird.</summary>
      <param name="array">Das eindimensionale Array, das als Ziel der aus <see cref="T:System.Collections.Generic.ICollection`1" /> kopierten Elemente fungiert. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="arrayIndex">Der nullbasierte Index in <paramref name="array" />, ab dem kopiert wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> ist kleiner als 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> ist mehrdimensional.-oder-<paramref name="arrayIndex" /> ist gleich der oder größer als die Länge des <paramref name="array" />.-oder-Die Anzahl der Elemente im <see cref="T:System.Collections.Generic.ICollection`1" />-Quellobjekt ist größer als der verfügbare Platz von <paramref name="arrayIndex" /> bis zum Ende des Zielarrays. -oder-Der Typ <paramref name="T" /> kann nicht automatisch in den Typ des Zielarrays umgewandelt werden.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Count">
      <summary>Ruft die Anzahl von Elementen im Modellbinderwörterbuch ab.</summary>
      <returns>Die Anzahl der Elemente im Modellbinderwörterbuch.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.DefaultBinder">
      <summary>Ruft den Standardmodellbinder ab bzw. legt diesen fest.</summary>
      <returns>Der Standardmodellbinder.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.GetBinder(System.Type)">
      <summary>Ruft den Modellbinder für den angegebenen Typ ab.</summary>
      <returns>Der Modellbinder.</returns>
      <param name="modelType">Der Typ des abzurufenden Modells.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="modelType" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.GetBinder(System.Type,System.Boolean)">
      <summary>Ruft den Modellbinder für den angegebenen Typ oder den Standardmodellbinder ab.</summary>
      <returns>Der Modellbinder.</returns>
      <param name="modelType">Der Typ des abzurufenden Modells.</param>
      <param name="fallbackToDefault">true, um den Standardmodellbinder abzurufen.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="modelType" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.GetEnumerator">
      <summary>Gibt einen Enumerator zurück, mit dem die Auflistung durchlaufen werden kann.</summary>
      <returns>Ein Enumerator, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob das Modellbinderwörterbuch schreibgeschützt ist.</summary>
      <returns>true, wenn das Modellbinderwörterbuch schreibgeschützt ist, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Item(System.Type)">
      <summary>Ruft den angegebenen Schlüssel in einem Objekt ab, das die <see cref="T:System.Web.Mvc.IModelBinder" />-Schnittstelle implementiert, bzw. legt diesen fest.</summary>
      <returns>Der Schlüssel für das angegebene Element.</returns>
      <param name="key">Der Elementschlüssel.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Keys">
      <summary>Ruft eine Auflistung ab, die die Schlüssel im Modellbinderwörterbuch enthält.</summary>
      <returns>Eine Auflistung, die die Schlüssel im Modellbinderwörterbuch enthält.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder})">
      <summary>Entfernt das erste Vorkommen des angegebenen Elements aus dem Modellbinderwörterbuch.</summary>
      <returns>true, wenn <paramref name="item" /> erfolgreich aus dem Modellbinderwörterbuch entfernt wurde, andernfalls false. Diese Methode gibt auch false zurück, wenn <paramref name="item" /> nicht im Modellbinderwörterbuch gefunden wird.</returns>
      <param name="item">Das aus <see cref="T:System.Collections.Generic.ICollection`1" /> zu entfernende Objekt.</param>
      <exception cref="T:System.NotSupportedException">Das <see cref="T:System.Collections.Generic.ICollection`1" />-Objekt ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Remove(System.Type)">
      <summary>Entfernt das Element mit dem angegebenen Schlüssel aus dem Modellbinderwörterbuch.</summary>
      <returns>true, wenn das Element erfolgreich entfernt wurde, andernfalls false. Diese Methode gibt auch false zurück, wenn <paramref name="key" /> nicht im Modellbinderwörterbuch gefunden wird.</returns>
      <param name="key">Der Schlüssel des zu entfernenden Elements.</param>
      <exception cref="T:System.NotSupportedException">Das <see cref="T:System.Collections.Generic.IDictionary`2" />-Objekt ist schreibgeschützt.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, mit dem eine Auflistung durchlaufen werden kann.</summary>
      <returns>Ein Enumerator, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.TryGetValue(System.Type,System.Web.Mvc.IModelBinder@)">
      <summary>Ruft den Wert ab, der dem angegebenen Schlüssel zugeordnet ist.</summary>
      <returns>true, wenn das Objekt, das <see cref="T:System.Collections.Generic.IDictionary`2" /> implementiert, ein Element mit dem angegebenen Schlüssel enthält, andernfalls false.</returns>
      <param name="key">Der Schlüssel des abzurufenden Werts.</param>
      <param name="value">Bei Rückgabe dieser Methode enthält sie den dem angegebenen Schlüssel zugeordneten Wert, wenn der Schlüssel gefunden wird, andernfalls enthält sie den Standardwert für den Typ des <paramref name="value" />-Parameters. Dieser Parameter wird nicht initialisiert übergeben.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Values">
      <summary>Ruft eine Auflistung ab, die die Werte im Modellbinderwörterbuch enthält.</summary>
      <returns>Eine Auflistung, die die Werte im Modellbinderwörterbuch enthält.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderProviderCollection">
      <summary>Stellt einen Container für Modellbinderanbieter bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ModelBinderProviderCollection" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IModelBinderProvider})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ModelBinderProviderCollection" />-Klasse mithilfe einer Liste von Modellbinderanbietern.</summary>
      <param name="list">Eine Liste von Modellbinderanbietern.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.GetBinder(System.Type)">
      <summary>Gibt einen Modellbinder vom angegebenen Typ zurück.</summary>
      <returns>Ein Modellbinder vom angegebenen Typ.</returns>
      <param name="modelType">Der Typ des Modellbinders.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.InsertItem(System.Int32,System.Web.Mvc.IModelBinderProvider)">
      <summary>Fügt einen Modellbinderanbieter in die <see cref="T:System.Web.Mvc.ModelBinderProviderCollection" /> am angegebenen Index ein.</summary>
      <param name="index">Der Index.</param>
      <param name="item">Der Modellbinderanbieter.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.SetItem(System.Int32,System.Web.Mvc.IModelBinderProvider)">
      <summary>Ersetzt das Modellbinder-Anbieterelement am angegebenen Index.</summary>
      <param name="index">Der Index.</param>
      <param name="item">Der Modellbinderanbieter.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderProviders">
      <summary>Stellt einen Container für Modellbinderanbieter bereit.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderProviders.BinderProviders">
      <summary>Stellt einen Registrierungspunkt für Modellbinderanbieter für Anwendungen bereit, die nicht die Abhängigkeitsinjektion verwenden.</summary>
      <returns>Die Auflistung der Modellbinderanbieter.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBinders">
      <summary>Stellt globalen Zugriff auf die Modellbinder für die Anwendung bereit.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelBinders.Binders">
      <summary>Ruft die Modellbinder für die Anwendung ab.</summary>
      <returns>Die Modellbinder für die Anwendung.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBindingContext">
      <summary>Stellt den Kontext bereit, in dem ein Modellbinder funktioniert.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBindingContext.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ModelBindingContext" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBindingContext.#ctor(System.Web.Mvc.ModelBindingContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ModelBindingContext" />-Klasse unter Verwendung des Bindungskontexts.</summary>
      <param name="bindingContext">Der Bindungskontext.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.FallbackToEmptyPrefix">
      <summary>Ruft einen Wert ab (bzw. legt diesen fest), der angibt, ob der Binder ein leeres Präfix verwenden soll.</summary>
      <returns>true, wenn der Binder ein leeres Präfix verwenden soll, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.Model">
      <summary>Ruft das Modell ab bzw. legt es fest.</summary>
      <returns>Das Modell.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelMetadata">
      <summary>Ruft die Modellmetadaten ab oder legt diese fest.</summary>
      <returns>Die Modellmetadaten.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelName">
      <summary>Ruft den Namen des Modells ab oder legt diesen fest.</summary>
      <returns>Der Name des Modells.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelState">
      <summary>Ruft den Zustand des Modells ab bzw. legt diesen fest.</summary>
      <returns>Der Zustand des Modells.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelType">
      <summary>Ruft den Typ des Modells ab bzw. legt diesen fest.</summary>
      <returns>Der Typ des Modells.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.PropertyFilter">
      <summary>Ruft den Eigenschaftenfilter ab bzw. legt diesen fest.</summary>
      <returns>Der Eigenschaftenfilter.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.PropertyMetadata">
      <summary>Ruft die Eigenschaftenmetadaten ab.</summary>
      <returns>Die Eigenschaftenmetadaten.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ValueProvider">
      <summary>Ruft den Wertanbieter ab bzw. legt diesen fest.</summary>
      <returns>Der Wertanbieter.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationEqualToRule">
      <summary>Stellt einen Container für eine Gleichheitsvalidierungsregel bereit, die an den Browser gesendet wird.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationEqualToRule.#ctor(System.String,System.Object)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ModelClientValidationEqualToRule" />-Klasse.</summary>
      <param name="errorMessage">Die Fehlermeldung.</param>
      <param name="other">Der Modellwert für den Gleichheitsvergleich.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRangeRule">
      <summary>Stellt einen Container für die Validierungsregel eines Bereichs bereit, die an den Browser gesendet wird.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRangeRule.#ctor(System.String,System.Object,System.Object)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ModelClientValidationRangeRule" />-Klasse.</summary>
      <param name="errorMessage">Die Fehlermeldung.</param>
      <param name="minValue">Der minimale Wert.</param>
      <param name="maxValue">Der maximale Wert.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRegexRule">
      <summary>Stellt einen Container für die Clientvalidierungsregel eines regulären Ausdrucks bereit, die an den Browser gesendet wird.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRegexRule.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ModelClientValidationRegexRule" />-Klasse.</summary>
      <param name="errorMessage">Die anzuzeigende Fehlermeldung, wenn die Validierung des regulären Ausdrucks fehlschlägt.</param>
      <param name="pattern">Der reguläre Ausdruck.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRemoteRule">
      <summary>Stellt einen Container für die Remotevalidierungsregel eines Bereichs bereit, die an den Browser gesendet wird.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRemoteRule.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ModelClientValidationRemoteRule" />-Klasse.</summary>
      <param name="errorMessage">Die Fehlermeldung.</param>
      <param name="url">Die URL für die Validierungsparameter.</param>
      <param name="httpMethod">Die HTTP-Methode für die Validierungsparameter.</param>
      <param name="fields">Die Felder der Validierungsparameter.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRequiredRule">
      <summary>Stellt einen Container für die Clientvalidierung für das Pflichtfeld bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRequiredRule.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ModelClientValidationRule" />-Klasse.</summary>
      <param name="errorMessage">Die Fehlermeldung, die angezeigt wird, wenn ein Wert für das Pflichtfeld nicht ausgefüllt wird.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationRule">
      <summary>Stellt einen Basisklassencontainer für eine Clientvalidierungsregel bereit, die an den Browser gesendet wird.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationRule.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ModelClientValidationRule" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelClientValidationRule.ErrorMessage">
      <summary>Ruft die Fehlermeldung für die Clientvalidierungsregel ab oder legt sie fest.</summary>
      <returns>Die Fehlermeldung für die Clientvalidierungsregel.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelClientValidationRule.ValidationParameters">
      <summary>Ruft die Liste der Validierungsparameter ab.</summary>
      <returns>Eine Liste der Validierungsparameter.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelClientValidationRule.ValidationType">
      <summary>Ruft den Validierungstyp ab oder legt diesen fest.</summary>
      <returns>Der Validierungstyp.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelClientValidationStringLengthRule">
      <summary>Stellt einen Container für eine StringLength-Validierungsregel bereit, die an den Browser gesendet wird.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelClientValidationStringLengthRule.#ctor(System.String,System.Int32,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ModelClientValidationStringLengthRule" />-Klasse.</summary>
      <param name="errorMessage">Die Validierungsfehlermeldung.</param>
      <param name="minimumLength">Die minimale Länge der Zeichenfolge.</param>
      <param name="maximumLength">Die maximale Länge der Zeichenfolge.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelError">
      <summary>Stellt einen Fehler dar, der während der Modellbindung auftritt.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelError.#ctor(System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ModelError" />-Klasse unter Verwendung der angegebenen Ausnahme.</summary>
      <param name="exception">Die Ausnahme.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="exception" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelError.#ctor(System.Exception,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ModelError" />-Klasse, indem die angegebene Ausnahme und die Fehlermeldung verwendet werden.</summary>
      <param name="exception">Die Ausnahme.</param>
      <param name="errorMessage">Die Fehlermeldung.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="exception" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelError.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ModelError" />-Klasse unter Verwendung der angegebenen Fehlermeldung.</summary>
      <param name="errorMessage">Die Fehlermeldung.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelError.ErrorMessage">
      <summary>Ruft die Fehlermeldung ab bzw. legt diese fest.</summary>
      <returns>Die Fehlermeldung.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelError.Exception">
      <summary>Ruft das Ausnahmeobjekt ab bzw. legt es fest.</summary>
      <returns>das Ausnahmeobjekt.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelErrorCollection">
      <summary>Eine Auflistung von <see cref="T:System.Web.Mvc.ModelError" />-Instanzen.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelErrorCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ModelErrorCollection" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelErrorCollection.Add(System.Exception)">
      <summary>Fügt der Modellfehlerauflistung das angegebene <see cref="T:System.Exception" />-Objekt hinzu.</summary>
      <param name="exception">Die Ausnahme.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelErrorCollection.Add(System.String)">
      <summary>Fügt der Modellfehlerauflistung die angegebene Fehlermeldung hinzu.</summary>
      <param name="errorMessage">Die Fehlermeldung.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelMetadata">
      <summary>Stellt einen Container für allgemeine Metadaten für die <see cref="T:System.Web.Mvc.ModelMetadataProvider" />-Klasse und für die <see cref="T:System.Web.Mvc.ModelValidator" />-Klasse für ein Datenmodell bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.#ctor(System.Web.Mvc.ModelMetadataProvider,System.Type,System.Func`1,System.Void,System.Object)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ModelMetadata" />-Klasse.</summary>
      <param name="provider">Der Anbieter.</param>
      <param name="containerType">Der Typ des Containers.</param>
      <param name="modelAccessor">Der Modellaccessor.</param>
      <param name="modelType">Der Typ des Modells.</param>
      <param name="propertyName">Der Name des Modells.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.AdditionalValues">
      <summary>Ruft ein Wörterbuch ab, das zusätzliche Metadaten zum Modell enthält.</summary>
      <returns>Ein Wörterbuch, das zusätzliche Metadaten zum Modell enthält.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ContainerType">
      <summary>Ruft den Typ des Containers für das Modell ab oder legt ihn fest.</summary>
      <returns>Der Typ des Containers für das Modell.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ConvertEmptyStringToNull">
      <summary>Ruft einen Wert ab, der angibt, ob leere Zeichenfolgen, die in Formularen zurückgesendet werden, in null konvertiert werden sollen, oder legt diesen fest.</summary>
      <returns>true, wenn leere Zeichenfolgen, die in Formularen zurückgesendet werden, innull konvertiert werden sollen, andernfalls false. Der Standardwert ist true.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.DataTypeName">
      <summary>Ruft Metainformationen über den Datentyp ab oder legt diese fest. </summary>
      <returns>Metainformationen über den Datentyp. </returns>
    </member>
    <member name="F:System.Web.Mvc.ModelMetadata.DefaultOrder"></member>
    <member name="P:System.Web.Mvc.ModelMetadata.Description">
      <summary>Ruft die Beschreibung des Modells ab oder legt sie fest.</summary>
      <returns>Die Beschreibung des Modells. Der Standardwert ist null.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.DisplayFormatString">
      <summary>Ruft die Anzeigeformatzeichenfolge für das Modell ab oder legt sie fest.</summary>
      <returns>Die Anzeigeformatzeichenfolge für das Modell.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.DisplayName">
      <summary>Ruft den Anzeigenamen des Modells ab oder legt ihn fest.</summary>
      <returns>Der Anzeigename des Modells.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.EditFormatString">
      <summary>Ruft die Bearbeitungsformatzeichenfolge des Modells ab oder legt sie fest.</summary>
      <returns>Die Bearbeitungsformatzeichenfolge des Modells.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.FromLambdaExpression``2(System.Linq.Expressions.Expression{System.Func`2},System.Boolean)">
      <summary>Ruft die Metadaten aus dem <see cref="T:System.Linq.Expressions.Expression" />-Parameter für das Modell ab.</summary>
      <returns>Gibt <see cref="T:System.Web.Mvc.ModelMetadata" /> zurück.</returns>
      <param name="expression">Ein Ausdruck, der das Modell bezeichnet.</param>
      <param name="viewData">Das Ansichtsdatenwörterbuch.</param>
      <typeparam name="TParameter">Der Typ des Parameters.</typeparam>
      <typeparam name="TValue">Der Typ des Werts.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.FromStringExpression(System.String,System.Web.Mvc.ViewDataDictionary)">
      <summary>Ruft die Metadaten aus dem Ausdrucksparameter für das Modell ab.</summary>
      <returns>Die Metadaten für das Modell.</returns>
      <param name="expression">Ein Ausdruck, der das Modell bezeichnet.</param>
      <param name="viewData">Das Ansichtsdatenwörterbuch.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.GetDisplayName">
      <summary>Ruft den Anzeigenamen für das Modell ab.</summary>
      <returns>Der Anzeigename für das Modell.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.GetSimpleDisplayText">
      <summary>Gibt die einfache Beschreibung des Modells zurück.</summary>
      <returns>Die einfache Beschreibung des Modells.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.GetValidators(System.Web.Mvc.ControllerContext)">
      <summary>Ruft eine Liste der Validierungssteuerelemente für das Modell ab.</summary>
      <returns>Eine Liste der Validierungssteuerelemente für das Modell.</returns>
      <param name="context">Der Controllerkontext.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.HideSurroundingHtml">
      <summary>Ruft einen Wert ab, der angibt, ob das Modellobjekt mit zugeordneten HTML-Elementen gerendert werden soll, oder legt diesen fest.</summary>
      <returns>true, wenn die zugeordneten HTML-Elemente mit dem Modellobjekt in das Objekt aufgenommen werden sollen, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsComplexType">
      <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob das Modell ein komplexer Typ ist.</summary>
      <returns>Ein Wert, der angibt, ob das Modell vom MVC-Framework als komplexer Typ behandelt wird.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsNullableValueType">
      <summary>Ruft einen Wert ab, der angibt, ob der Typ auf null gesetzt werden kann.</summary>
      <returns>true, wenn der Typ NULL-Werte zulässt, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsReadOnly">
      <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob das Modell schreibgeschützt ist.</summary>
      <returns>true, wenn das Modell schreibgeschützt ist; andernfalls false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsRequired">
      <summary>Ruft einen Wert ab (bzw. legt diesen fest), der angibt, ob das Modell erforderlich ist.</summary>
      <returns>true, wenn das Modell erforderlich ist; andernfalls false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Model">
      <summary>Ruft den Wert des Modells ab.</summary>
      <returns>Der Wert des Modells. Weitere Informationen zu <see cref="T:System.Web.Mvc.ModelMetadata" /> finden Sie im Eintrag ASP.NET MVC 2-Vorlagen, Teil 2: ModelMetadata in Brad Wilsons Blog.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ModelType">
      <summary>Ruft den Typ des Modells ab.</summary>
      <returns>Der Typ des Modells.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.NullDisplayText">
      <summary>Ruft die Zeichenfolge ab oder legt die Zeichenfolge fest, die für Nullwerte angezeigt werden soll.</summary>
      <returns>Die Zeichenfolge, die für Nullwerte angezeigt zu werden.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Order">
      <summary>Ruft einen Wert ab, der die Reihenfolge der aktuellen Metadaten darstellt, bzw. legt ihn fest.</summary>
      <returns>Gibt <see cref="T:System.Int32" /> zurück.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Properties">
      <summary>Ruft eine Auflistung von Modellmetadatenobjekten ab, die die Eigenschaften des Modells beschreiben.</summary>
      <returns>Eine Auflistung von Modellmetadatenobjekten, die die Eigenschaften des Modells beschreiben.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.PropertyName">
      <summary>Ruft den Eigenschaftennamen ab.</summary>
      <returns>Der Eigenschaftenname.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Provider">
      <summary>Ruft den Anbieter ab bzw. legt ihn fest.</summary>
      <returns>Der Anbieter.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.RequestValidationEnabled"></member>
    <member name="P:System.Web.Mvc.ModelMetadata.ShortDisplayName">
      <summary>Ruft einen kurzen Anzeigenamen ab oder legt diesen fest.</summary>
      <returns>Der kurze Anzeigename.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ShowForDisplay">
      <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob die Eigenschaft in schreibgeschützten Ansichten wie Listen- und Detailansichten angezeigt werden soll.</summary>
      <returns>true, wenn das Modell in schreibgeschützten Ansichten angezeigt werden soll, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ShowForEdit">
      <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob das Modell in bearbeitbaren Ansichten angezeigt werden soll.</summary>
      <returns>true, wenn das Modell in bearbeitbaren Ansichten angezeigt werden soll; andernfalls false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.SimpleDisplayText">
      <summary>Ruft die einfache Anzeigezeichenfolge für das Modell ab oder legt sie fest.</summary>
      <returns>Die einfache Anzeigezeichenfolge für das Modell.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.TemplateHint">
      <summary>Ruft einen Hinweis ab, der angibt, welche Vorlage für dieses Modell verwendet werden soll, oder legt den Hinweis fest.</summary>
      <returns>Ein Hinweis, der angibt, welche Vorlage für dieses Modell verwendet werden soll.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Watermark">
      <summary>Ruft einen Wert ab, der als Wasserzeichen verwendet werden kann, oder legt ihn fest.</summary>
      <returns>Das Wasserzeichen.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelMetadataProvider">
      <summary>Stellt eine abstrakte Basisklasse für einen benutzerdefinierten Metadatenanbieter bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.#ctor">
      <summary>Initialisiert beim Überschreiben in einer abgeleiteten Klasse eine neue Instanz des Objekts, die von der <see cref="T:System.Web.Mvc.ModelMetadataProvider" />-Klasse abgeleitet ist.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Ruft ein <see cref="T:System.Web.Mvc.ModelMetadata" />-Objekt für die einzelnen Eigenschaften eines Modells ab.</summary>
      <returns>Ein <see cref="T:System.Web.Mvc.ModelMetadata" />-Objekt für die einzelnen Eigenschaften eines Modells.</returns>
      <param name="container">Der Container.</param>
      <param name="containerType">Der Typ des Containers.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.GetMetadataForProperty(System.Func`1,System.Void,System.Object)">
      <summary>Ruft Metadaten für die angegebene Eigenschaft ab.</summary>
      <returns>Gibt <see cref="T:System.Web.Mvc.ModelMetadata" /> zurück.</returns>
      <param name="modelAccessor">Der Modellaccessor.</param>
      <param name="containerType">Der Typ des Containers.</param>
      <param name="propertyName">Die Eigenschaft, für die das Metadatenmodell abgerufen werden soll.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.GetMetadataForType(System.Func`1,System.Void)">
      <summary>Ruft Metadaten für den angegebenen Modellaccessor und den angegebenen Modelltyp ab.</summary>
      <returns>Gibt <see cref="T:System.Web.Mvc.ModelMetadata" /> zurück.</returns>
      <param name="modelAccessor">Der Modellaccessor.</param>
      <param name="modelType">Der Typ des Modells.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelMetadataProviders">
      <summary>Stellt einen Container für die aktuelle <see cref="T:System.Web.Mvc.ModelMetadataProvider" />-Instanz bereit.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadataProviders.Current">
      <summary>Ruft das aktuelle <see cref="T:System.Web.Mvc.ModelMetadataProvider" />-Objekt ab oder legt es fest.</summary>
      <returns>Das aktuelle <see cref="T:System.Web.Mvc.ModelMetadataProvider" />-Objekt.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelSpan">
      <summary>Stellt eine modellfähige <see cref="T:System.Web.Razor.Parser.SyntaxTree.Span" />-Klasse für ASP.NET MVC bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelSpan.#ctor(System.Web.Razor.Text.SourceLocation,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ModelSpan" />-Klasse.</summary>
      <param name="start">Der Anfang der Spanne.</param>
      <param name="content">Der Inhalt.</param>
      <param name="modelTypeName">Der Typname des Modells.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelSpan.Equals(System.Object)">
      <summary>Ruft einen Wert ab, der angibt, ob das aktuelle <see cref="T:System.Web.Mvc.ModelSpan" />-Objekt mit dem angegebenen Objekt identisch ist.</summary>
      <returns>true, wenn das aktuelle <see cref="T:System.Web.Mvc.ModelSpan" />-Objekt und das angegebene Objekt gleich sind, andernfalls false.</returns>
      <param name="obj">Das Modellspannenobjekt.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelSpan.GetHashCode">
      <summary>Gibt den Hashcode des <see cref="T:System.Web.Mvc.ModelSpan" />-Objekts zurück.</summary>
      <returns>Der Hashcode für das <see cref="T:System.Web.Mvc.ModelSpan" />-Objekt.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelSpan.ModelTypeName">
      <summary>Ruft den Typnamen des Modells ab.</summary>
      <returns>Der Typname des Modells.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelState">
      <summary>Kapselt den Zustand der Modellbindung an eine Eigenschaft eines Aktionsmethodenarguments bzw. an das Argument selbst.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelState.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ModelState" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelState.Errors">
      <summary>Gibt ein <see cref="T:System.Web.Mvc.ModelErrorCollection" />-Objekt zurück, das alle Fehler enthält, die während der Modellbindung aufgetreten sind.</summary>
      <returns>Die Fehler.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelState.Value">
      <summary>Gibt ein <see cref="T:System.Web.Mvc.ValueProviderResult" />-Objekt zurück, das den Wert kapselt, der während der Modellbindung gebunden wurde.</summary>
      <returns>Der Wert.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelStateDictionary">
      <summary>Stellt den Zustand eines Versuchs dar, ein bereitgestelltes Formular an eine Aktionsmethode zu binden, die Validierungsinformationen enthält.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ModelStateDictionary" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.#ctor(System.Web.Mvc.ModelStateDictionary)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ModelStateDictionary" />-Klasse, indem Werte verwendet werden, die aus dem angegebenen Modellzustandswörterbuch kopiert werden.</summary>
      <param name="dictionary">Das Modellzustandswörterbuch.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="dictionary " />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState})">
      <summary>Fügt dem Modellzustandswörterbuch das angegebene Element hinzu.</summary>
      <param name="item">Das Objekt, das dem Modellzustandswörterbuch hinzugefügt werden soll.</param>
      <exception cref="T:System.NotSupportedException">Das Modellzustandswörterbuch ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Add(System.String,System.Web.Mvc.ModelState)">
      <summary>Fügt ein Element, das über den angegebenen Schlüssel und Wert verfügt, dem Modellzustandswörterbuch hinzu.</summary>
      <param name="key">Der Schlüssel des hinzuzufügenden Elements.</param>
      <param name="value">Der Wert des hinzuzufügenden Elements.</param>
      <exception cref="T:System.NotSupportedException">Das Modellzustandswörterbuch ist schreibgeschützt.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
      <exception cref="T:System.ArgumentException">Ein Element mit dem angegebenen Schlüssel ist bereits im Modellzustandswörterbuch vorhanden.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.AddModelError(System.String,System.Exception)">
      <summary>Fügt der Fehlerauflistung für das Modellzustandswörterbuch, das dem angegebenen Schlüssel zugeordnet ist, den angegebenen Modellfehler hinzu.</summary>
      <param name="key">Der Schlüssel.</param>
      <param name="exception">Die Ausnahme.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.AddModelError(System.String,System.String)">
      <summary>Fügt der Fehlerauflistung für das Modellzustandswörterbuch, das dem angegebenen Schlüssel zugeordnet ist, die angegebene Fehlermeldung hinzu.</summary>
      <param name="key">Der Schlüssel.</param>
      <param name="errorMessage">Die Fehlermeldung.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Clear">
      <summary>Entfernt alle Elemente aus dem Modellzustandswörterbuch.</summary>
      <exception cref="T:System.NotSupportedException">Das Modellzustandswörterbuch ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState})">
      <summary>Bestimmt, ob das Modellzustandswörterbuch einen bestimmten Wert enthält.</summary>
      <returns>true, wenn <paramref name="item" /> im Modellzustandswörterbuch gefunden wird, andernfalls false.</returns>
      <param name="item">Das Objekt, nach dem im Modellzustandswörterbuch gesucht werden soll.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.ContainsKey(System.String)">
      <summary>Bestimmt, ob das Modellzustandswörterbuch den angegebenen Schlüssel enthält.</summary>
      <returns>true, wenn das Modellzustandswörterbuch den angegebenen Schlüssel enthält, andernfalls false.</returns>
      <param name="key">Der Schlüssel, nach dem im Modellzustandswörterbuch gesucht werden soll. </param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState}[],System.Int32)">
      <summary>Kopiert die Elemente des Modellzustandswörterbuchs in ein Array, wobei mit einem angegebenen Index begonnen wird.</summary>
      <param name="array">Das eindimensionale Array, in das die Elemente aus dem <see cref="T:System.Collections.Generic.ICollection`1" />-Objekt kopiert werden. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="arrayIndex">Der nullbasierte Index in <paramref name="array" />, ab dem kopiert wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> ist kleiner als 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> ist mehrdimensional.-oder- <paramref name="arrayIndex" /> ist größer als oder gleich der Länge von <paramref name="array" />.-oder-Die Anzahl der Elemente in der Quellauflistung ist größer als der verfügbare Platz von <paramref name="arrayIndex" /> bis zum Ende des Ziel-<paramref name="array" />.-oder-Der Typ <paramref name="T" /> kann nicht automatisch in den Typ des Ziel-<paramref name="array" /> umgewandelt werden.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Count">
      <summary>Ruft die Anzahl der Schlüssel-Wert-Paare in der Auflistung ab.</summary>
      <returns>Die Anzahl der Schlüssel-Wert-Paare in der Auflistung.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.GetEnumerator">
      <summary>Gibt einen Enumerator zurück, mit dem die Auflistung durchlaufen werden kann.</summary>
      <returns>Ein Enumerator, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</summary>
      <returns>true, wenn die Auflistung schreibgeschützt ist, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.IsValid">
      <summary>Ruft einen Wert ab, der angibt, ob diese Instanz des Modellzustandswörterbuchs gültig ist.</summary>
      <returns>true, wenn diese Instanz gültig ist, andernfalls false.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.IsValidField(System.String)">
      <summary>Bestimmt, ob <see cref="T:System.Web.Mvc.ModelError" />-Objekte vorhanden sind, die dem angegebenen Schlüssel zugeordnet oder diesen als Präfix aufweisen.</summary>
      <returns>true, wenn das Modellzustandswörterbuch einen Wert enthält, der dem angegebenen Schlüssel zugeordnet ist, andernfalls false.</returns>
      <param name="key">Der Schlüssel.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="key" />-Parameter ist null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Item(System.String)">
      <summary>Ruft den Wert ab, der dem angegebenen Schlüssel zugeordnet ist, oder legt diesen fest.</summary>
      <returns>Das Modellzustandselement.</returns>
      <param name="key">Der Schlüssel.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Keys">
      <summary>Ruft eine Auflistung ab, die die Schlüssel im Wörterbuch enthält.</summary>
      <returns>Eine Auflistung, die die Schlüssel im Modellzustandswörterbuch enthält.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Merge(System.Web.Mvc.ModelStateDictionary)">
      <summary>Kopiert die Werte aus dem angegebenen <see cref="T:System.Web.Mvc.ModelStateDictionary" />-Objekt in dieses Wörterbuch, wobei vorhandene Werte überschrieben werden, falls die Schlüssel identisch sind.</summary>
      <param name="dictionary">Das Wörterbuch.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState})">
      <summary>Entfernt das erste Vorkommen des angegebenen Objekts aus dem Modellzustandswörterbuch.</summary>
      <returns>true, wenn <paramref name="item" /> erfolgreich aus dem Modellzustandswörterbuch entfernt wurde, andernfalls false. Diese Methode gibt auch dann false zurück, wenn <paramref name="item" /> nicht im Modellzustandswörterbuch gefunden wird.</returns>
      <param name="item">Das Objekt, das aus dem Modellzustandswörterbuch entfernt werden soll.</param>
      <exception cref="T:System.NotSupportedException">Das Modellzustandswörterbuch ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Remove(System.String)">
      <summary>Entfernt das Element mit dem angegebenen Schlüssel aus dem Modellzustandswörterbuch.</summary>
      <returns>true, wenn das Element erfolgreich entfernt wurde, andernfalls false. Diese Methode gibt auch dann false zurück, wenn <paramref name="key" /> nicht im Modellzustandswörterbuch gefunden wurde.</returns>
      <param name="key">Der Schlüssel des zu entfernenden Elements.</param>
      <exception cref="T:System.NotSupportedException">Das Modellzustandswörterbuch ist schreibgeschützt.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.SetModelValue(System.String,System.Web.Mvc.ValueProviderResult)">
      <summary>Legt den Wert für den angegebenen Schlüssel fest, indem das Wörterbuch mit den angegebenen Wertanbietern verwendet wird.</summary>
      <param name="key">Der Schlüssel.</param>
      <param name="value">Der Wert.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, mit dem die Auflistung durchlaufen werden kann.</summary>
      <returns>Ein Enumerator, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.TryGetValue(System.String,System.Web.Mvc.ModelState@)">
      <summary>Versucht, den Wert abzurufen, der dem angegebenen Schlüssel zugeordnet ist.</summary>
      <returns>true, wenn das Objekt, das <see cref="T:System.Collections.Generic.IDictionary`2" /> implementiert, ein Element mit dem angegebenen Schlüssel enthält, andernfalls false.</returns>
      <param name="key">Der Schlüssel des abzurufenden Werts.</param>
      <param name="value">Bei Rückgabe dieser Methode enthält sie den dem angegebenen Schlüssel zugeordneten Wert, wenn der Schlüssel gefunden wird, andernfalls enthält sie den Standardwert für den Typ des <paramref name="value" />-Parameters. Dieser Parameter wird nicht initialisiert übergeben.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Values">
      <summary>Ruft eine Auflistung ab, die die Werte im Wörterbuch enthält.</summary>
      <returns>Eine Auflistung, die die Werte des Modellzustandswörterbuchs enthält.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelValidationResult">
      <summary>Stellt einen Container für ein Validierungsergebnis bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidationResult.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ModelValidationResult" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelValidationResult.MemberName">
      <summary>Ruft den Namen des Members ab oder legt diesen fest.</summary>
      <returns>Der Name des Members.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelValidationResult.Message">
      <summary>Ruft die Validierungsergebnismeldung ab oder legt sie fest.</summary>
      <returns>Die Meldung des Validierungsergebnisses.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelValidator">
      <summary>Stellt eine Basisklasse zum Implementieren von Validierungslogik bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Wird von Konstruktoren in abgeleiteten Klassen aufgerufen, um die <see cref="T:System.Web.Mvc.ModelValidator" />-Klasse zu initialisieren.</summary>
      <param name="metadata">Die Metadaten.</param>
      <param name="controllerContext">Der Controllerkontext.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelValidator.ControllerContext">
      <summary>Ruft den Controllerkontext ab.</summary>
      <returns>Der Controllerkontext.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.GetClientValidationRules">
      <summary>Gibt bei der Implementierung in einer abgeleiteten Metadaten für die Clientvalidierung zurück.</summary>
      <returns>Die Metadaten zur Clientvalidierung.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.GetModelValidator(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Gibt ein zusammengesetztes Modellvalidierungssteuerelement für das Modell zurück.</summary>
      <returns>Ein zusammengesetztes Modellvalidierungssteuerelement für das Modell.</returns>
      <param name="metadata">Die Metadaten.</param>
      <param name="context">Der Controllerkontext.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelValidator.IsRequired">
      <summary>Ruft einen Wert ab, der angibt, ob eine Modelleigenschaft erforderlich ist, oder legt diesen fest.</summary>
      <returns>true, wenn die Modelleigenschaft erforderlich ist, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelValidator.Metadata">
      <summary>Ruft die Metadaten für das Modellvalidierungssteuerelement ab.</summary>
      <returns>Die Metadaten für das Modellvalidierungssteuerelement.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.Validate(System.Object)">
      <summary>Validiert bei Implementierung in einer abgeleiteten Klasse das Objekt.</summary>
      <returns>Eine Liste der Validierungsergebnisse.</returns>
      <param name="container">Der Container.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelValidatorProvider">
      <summary>Stellt eine Liste der Validierungssteuerelemente für ein Modell bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProvider.#ctor">
      <summary>Initialisiert beim Implementieren in einer abgeleiteten Klasse eine neue Instanz der <see cref="T:System.Web.Mvc.ModelValidatorProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Ruft eine Liste von Validierungssteuerelementen ab.</summary>
      <returns>Eine Liste der Validierungssteuerelemente.</returns>
      <param name="metadata">Die Metadaten.</param>
      <param name="context">Der Kontext.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelValidatorProviderCollection">
      <summary>Stellt einen Container für eine Liste von Validierungsanbietern bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ModelValidatorProviderCollection" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.ModelValidatorProvider})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ModelValidatorProviderCollection" />-Klasse unter Verwendung einer Liste von Modellvalidierungsanbietern.</summary>
      <param name="list">Eine Liste von Modellvalidierungsanbietern.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Gibt die Liste der Modellvalidierungssteuerelemente zurück.</summary>
      <returns>Die Liste der Modellvalidierungssteuerelemente.</returns>
      <param name="metadata">Die Modellmetadaten.</param>
      <param name="context">Der Controllerkontext.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.InsertItem(System.Int32,System.Web.Mvc.ModelValidatorProvider)">
      <summary>Fügt einen Modellvalidierungssteuerelement-Anbieter in die Auflistung ein.</summary>
      <param name="index">Der nullbasierte Index, an dem item eingefügt werden soll.</param>
      <param name="item">Das einzufügende Modellvalidierungssteuerelement-Anbieterobjekt.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.SetItem(System.Int32,System.Web.Mvc.ModelValidatorProvider)">
      <summary>Ersetzt das Modellvalidierungssteuerelement-Anbieterelement am angegebenen Index.</summary>
      <param name="index">Der nullbasierte Index des zu ersetzenden Modellvalidierungssteuerelement-Anbieterelements.</param>
      <param name="item">Der neue Wert für das Modellvalidierungssteuerelement-Anbieterelement.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelValidatorProviders">
      <summary>Stellt einen Container für den aktuellen Validierungsanbieter bereit.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelValidatorProviders.Providers">
      <summary>Ruft die Anbieterauflistung für das Modellvalidierungssteuerelement ab.</summary>
      <returns>Die Anbieterauflistung für das Modellvalidierungssteuerelement.</returns>
    </member>
    <member name="T:System.Web.Mvc.MultiSelectList">
      <summary>Stellt eine Liste von Elementen dar, aus der Benutzer mehr als ein Element auswählen können.</summary>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.MultiSelectList" />-Klasse, indem die angegebenen Elemente verwendet werden, die in der Liste enthalten sein sollen.</summary>
      <param name="items">Die Elemente.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="items" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.MultiSelectList" />-Klasse, indem die angegebenen Elemente, die in der Liste enthalten sein sollen, und die ausgewählten Werte verwendet werden.</summary>
      <param name="items">Die Elemente.</param>
      <param name="selectedValues">Die ausgewählten Werte.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="items" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.MultiSelectList" />-Klasse, indem die Elemente, die in der Liste enthalten sein sollen, das Datenwertfeld und das Datentextfeld verwendet werden.</summary>
      <param name="items">Die Elemente.</param>
      <param name="dataValueField">Das Datenwertfeld.</param>
      <param name="dataTextField">Das Datentextfeld.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="items" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Collections.IEnumerable)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.MultiSelectList" />-Klasse, indem die Elemente, die in der Liste enthalten sein sollen, das Datenwertfeld, das Datentextfeld und die ausgewählten Werte verwendet werden.</summary>
      <param name="items">Die Elemente.</param>
      <param name="dataValueField">Das Datenwertfeld.</param>
      <param name="dataTextField">Das Datentextfeld.</param>
      <param name="selectedValues">Die ausgewählten Werte.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="items" />-Parameter ist null.</exception>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DataTextField">
      <summary>Ruft das Datentextfeld ab bzw. legt es fest.</summary>
      <returns>Das Datentextfeld.</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DataValueField">
      <summary>Ruft das Datenwertfeld ab bzw. legt es fest.</summary>
      <returns>Das Datenwertfeld.</returns>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.GetEnumerator">
      <summary>Gibt einen Enumerator zurück, mit dem die Auflistung durchlaufen werden kann.</summary>
      <returns>Ein Enumerator, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.Items">
      <summary>Ruft die Elemente der Liste ab bzw. legt diese fest.</summary>
      <returns>Die Elemente in der Liste.</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.SelectedValues">
      <summary>Ruft die ausgewählten Werte ab bzw. legt diese fest.</summary>
      <returns>Die ausgewählten Werte.</returns>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, mit dem eine Auflistung durchlaufen werden kann.</summary>
      <returns>Ein Enumerator, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="T:System.Web.Mvc.MvcCSharpRazorCodeGenerator">
      <summary>Kompiliert ASP.NET Razor-Ansichten in Klassen.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcCSharpRazorCodeGenerator.#ctor(System.String,System.String,System.String,System.Web.Razor.RazorEngineHost)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.MvcCSharpRazorCodeGenerator" />-Klasse.</summary>
      <param name="className">Der Klassenname.</param>
      <param name="rootNamespaceName">Der Stammnamespace.</param>
      <param name="sourceFileName">Der Name der Quelldatei.</param>
      <param name="host">Der ASP.NET Razor-Modulhost.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcCSharpRazorCodeGenerator.TryVisitSpecialSpan(System.Web.Razor.Parser.SyntaxTree.Span)">
      <summary>Gibt einen Wert zurück, der angibt, ob die angegebene Modellspanne eine Instanz von <see cref="T:System.Web.Mvc.ModelSpan" /> ist.</summary>
      <returns>true, wenn der Wert des <paramref name="span" />-Parameters eine Instanz von <see cref="T:System.Web.Mvc.ModelSpan" /> ist, andernfalls false.</returns>
      <param name="span">Die Modellspanne.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcCSharpRazorCodeParser">
      <summary>Erweitert die CSharpCodeParser-Klasse durch Hinzufügen von Unterstützung für das @model-Schlüsselwort.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcCSharpRazorCodeParser.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.MvcCSharpRazorCodeParser" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcCSharpRazorCodeParser.ParseInheritsStatement(System.Web.Razor.Parser.CodeBlockInfo)">
      <summary>Ermittelt, ob der aktuelle Codeblock und das aktuelle Codemodell mithilfe des angegebenen Codeblocks geerbt werden sollen.</summary>
      <returns>true, wenn der Codeblock und das Codemodell geerbt werden sollen, andernfalls false.</returns>
      <param name="block">Die Codeblockinformationen.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcFilter">
      <summary>Stellt bei Implementierung in einer abgeleiteten Klasse die Metadatenklasse bereit, die einen Verweis auf die Implementierung mindestens einer Filterschnittstelle, die Reihenfolge der Filter und den Filterbereich enthält.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcFilter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.MvcFilter" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcFilter.#ctor(System.Boolean,System.Int32)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.MvcFilter" />-Klasse und gibt die Reihenfolge der Filter sowie die Zulässigkeit mehrerer Filter an.</summary>
      <param name="allowMultiple">true, um anzugeben, dass mehrere Filter desselben Typs zulässig sind, andernfalls false.</param>
      <param name="order">Die Filterreihenfolge.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcFilter.AllowMultiple">
      <summary>Ruft einen Wert ab, der angibt, ob mehr als eine Instanz des Filterattributs angegeben werden kann.</summary>
      <returns>true, wenn mehr als eine Instanz des Filterattributs zulässig ist, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.Mvc.MvcFilter.Order">
      <summary>Ruft einen Wert ab, der die Reihenfolge angibt, in der ein Filter angewendet wird.</summary>
      <returns>Ein Wert, der die Reihenfolge angibt, in der ein Filter angewendet wird.</returns>
    </member>
    <member name="T:System.Web.Mvc.MvcHandler">
      <summary>Wählt den Controller aus, der eine HTTP-Anforderung verarbeitet.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.#ctor(System.Web.Routing.RequestContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.MvcHandler" />-Klasse.</summary>
      <param name="requestContext">Der Anforderungskontext.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="requestContext" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.AddVersionHeader(System.Web.HttpContextBase)">
      <summary>Fügt den Versionsheader hinzu, indem der angegebene HTTP-Kontext verwendet wird.</summary>
      <param name="httpContext">Der HTTP-Kontext.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>Wird von ASP.NET aufgerufen, um mit der Verarbeitung von asynchronen Anforderungen zu beginnen.</summary>
      <returns>Der Status des asynchronen Aufrufs.</returns>
      <param name="httpContext">Der HTTP-Kontext.</param>
      <param name="callback">Die asynchrone Rückrufmethode.</param>
      <param name="state">Der Zustand des asynchronen Objekts.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.BeginProcessRequest(System.Web.HttpContextBase,System.AsyncCallback,System.Object)">
      <summary>Wird von ASP.NET aufgerufen, um die Verarbeitung von asynchronen Anforderungen mit dem Basis-HTTP-Kontext zu starten.</summary>
      <returns>Der Status des asynchronen Aufrufs.</returns>
      <param name="httpContext">Der HTTP-Kontext.</param>
      <param name="callback">Die asynchrone Rückrufmethode.</param>
      <param name="state">Der Zustand des asynchronen Objekts.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.DisableMvcResponseHeader">
      <summary>Ruft einen Wert ab (bzw. legt diesen fest), der angibt, ob der MVC-Antwortheader deaktiviert ist.</summary>
      <returns>true, wenn der MVC-Antwortheader deaktiviert ist, andernfalls false.</returns>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.EndProcessRequest(System.IAsyncResult)">
      <summary>Wird von ASP.NET aufgerufen, wenn die Verarbeitung von asynchronen Anforderungen beendet wurde.</summary>
      <param name="asyncResult">Das asynchrone Ergebnis.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.IsReusable">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Web.IHttpHandler" />-Instanz von einer anderen Anforderung verwendet werden kann.</summary>
      <returns>true, wenn die <see cref="T:System.Web.IHttpHandler" />-Instanz wiederverwendet werden kann, andernfalls false.</returns>
    </member>
    <member name="F:System.Web.Mvc.MvcHandler.MvcVersionHeaderName">
      <summary>Enthält den Headernamen der ASP.NET-MVC-Version.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.ProcessRequest(System.Web.HttpContext)">
      <summary>Verarbeitet die Anforderung, indem der angegebene HTTP-Anforderungskontext verwendet wird.</summary>
      <param name="httpContext">Der HTTP-Kontext.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.ProcessRequest(System.Web.HttpContextBase)">
      <summary>Verarbeitet die Anforderung, indem der angegebene Basis-HTTP-Anforderungskontext verwendet wird.</summary>
      <param name="httpContext">Der HTTP-Kontext.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.RequestContext">
      <summary>Ruft den Anforderungskontext ab.</summary>
      <returns>Der Anforderungskontext.</returns>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>Wird von ASP.NET aufgerufen, um die Verarbeitung von asynchronen Anforderungen mit dem Basis-HTTP-Kontext zu starten.</summary>
      <returns>Der Status des asynchronen Aufrufs.</returns>
      <param name="context">Der HTTP-Kontext.</param>
      <param name="cb">Die asynchrone Rückrufmethode.</param>
      <param name="extraData">Die Daten.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
      <summary>Wird von ASP.NET aufgerufen, wenn die Verarbeitung von asynchronen Anforderungen beendet wurde.</summary>
      <param name="result">Das asynchrone Ergebnis.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.System#Web#IHttpHandler#IsReusable">
      <summary>Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Web.IHttpHandler" />-Instanz von einer anderen Anforderung verwendet werden kann.</summary>
      <returns>true, wenn die <see cref="T:System.Web.IHttpHandler" />-Instanz wiederverwendet werden kann, andernfalls false.</returns>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
      <summary>Ermöglicht die Verarbeitung von HTTP-Webanforderungen durch einen benutzerdefinierten HTTP-Handler, der die <see cref="T:System.Web.IHttpHandler" />-Schnittstelle implementiert.</summary>
      <param name="httpContext">Ein <see cref="T:System.Web.HttpContext" />-Objekt, das Verweise auf die systeminternen Serverobjekte (z. B. Request, Response, Session und Server) zur Bearbeitung von HTTP-Anforderungen bereitstellt.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcHtmlString">
      <summary>Stellt eine HTML-codierte Zeichenfolge dar, die nicht erneut codiert werden darf.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHtmlString.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.MvcHtmlString" />-Klasse.</summary>
      <param name="value">Die zu erstellende Zeichenfolge. Wenn kein Wert zugewiesen wird, wird das Objekt mit einem leeren Zeichenfolgenwert erstellt.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHtmlString.Create(System.String)">
      <summary>Erstellt eine HTML-codierte Zeichenfolge mit dem angegebenen Textwert.</summary>
      <returns>Eine HTML-codierte Zeichenfolge.</returns>
      <param name="value">Der Wert der zu erstellenden Zeichenfolge.</param>
    </member>
    <member name="F:System.Web.Mvc.MvcHtmlString.Empty">
      <summary>Enthält eine leere HTML-Zeichenfolge.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHtmlString.IsNullOrEmpty(System.Web.Mvc.MvcHtmlString)">
      <summary>Bestimmt, ob die angegebene Zeichenfolge Inhalt enthält oder null oder leer ist.</summary>
      <returns>true, wenn die Zeichenfolge leer oder null ist, andernfalls false.</returns>
      <param name="value">Die Zeichenfolge.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcHttpHandler">
      <summary>Überprüft und verarbeitet eine HTTP-Anforderung.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.MvcHttpHandler" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>Wird von ASP.NET aufgerufen, um mit der Verarbeitung von asynchronen Anforderungen zu beginnen.</summary>
      <returns>Der Status des asynchronen Aufrufs.</returns>
      <param name="httpContext">Der HTTP-Kontext.</param>
      <param name="callback">Die asynchrone Rückrufmethode.</param>
      <param name="state">Der Zustand.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.BeginProcessRequest(System.Web.HttpContextBase,System.AsyncCallback,System.Object)">
      <summary>Wird von ASP.NET aufgerufen, um mit der Verarbeitung von asynchronen Anforderungen zu beginnen.</summary>
      <returns>Der Status des asynchronen Aufrufs.</returns>
      <param name="httpContext">Der Basis-HTTP-Kontext.</param>
      <param name="callback">Die asynchrone Rückrufmethode.</param>
      <param name="state">Der Zustand.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.EndProcessRequest(System.IAsyncResult)">
      <summary>Wird von ASP.NET aufgerufen, wenn die Verarbeitung von asynchronen Anforderungen beendet wurde.</summary>
      <param name="asyncResult">Das asynchrone Ergebnis.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>Wird von ASP.NET aufgerufen, um mit der Verarbeitung von asynchronen Anforderungen zu beginnen.</summary>
      <returns>Der Status des asynchronen Aufrufs.</returns>
      <param name="context">Der Kontext.</param>
      <param name="cb">Die asynchrone Rückrufmethode.</param>
      <param name="extraData">Ein Objekt, das die Daten enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
      <summary>Wird von ASP.NET aufgerufen, wenn die Verarbeitung von asynchronen Anforderungen beendet wurde.</summary>
      <param name="result">Der Status der asynchronen Vorgänge.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.VerifyAndProcessRequest(System.Web.IHttpHandler,System.Web.HttpContextBase)">
      <summary>Überprüft und verarbeitet eine HTTP-Anforderung.</summary>
      <param name="httpHandler">Der HTTP-Handler.</param>
      <param name="httpContext">Der HTTP-Kontext.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcRouteHandler">
      <summary>Erstellt ein Objekt, das die IHttpHandler-Schnittstelle implementiert und den Anforderungskontext an diese übergibt.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.MvcRouteHandler" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.#ctor(System.Web.Mvc.IControllerFactory)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.MvcRouteHandler" />-Klasse mithilfe des angegebenen Factorycontrollerkobjekts.</summary>
      <param name="controllerFactory">Die Controllerfactory.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)">
      <summary>Gibt den HTTP-Handler mithilfe des angegebenen HTTP-Kontexts zurück.</summary>
      <returns>Der HTTP-Handler.</returns>
      <param name="requestContext">Der Anforderungskontext.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.GetSessionStateBehavior(System.Web.Routing.RequestContext)">
      <summary>Gibt das Sitzungsverhalten zurück.</summary>
      <returns>Das Sitzungsverhalten.</returns>
      <param name="requestContext">Der Anforderungskontext.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.System#Web#Routing#IRouteHandler#GetHttpHandler(System.Web.Routing.RequestContext)">
      <summary>Gibt den HTTP-Handler mithilfe des angegebenen Anforderungskontexts zurück.</summary>
      <returns>Der HTTP-Handler.</returns>
      <param name="requestContext">Der Anforderungskontext.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcVBRazorCodeGenerator">
      <summary>Kompiliert ASP.NET Razor-Ansichten in Klassen.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcVBRazorCodeGenerator.#ctor(System.String,System.String,System.String,System.Web.Razor.RazorEngineHost)"></member>
    <member name="M:System.Web.Mvc.MvcVBRazorCodeGenerator.TryVisitSpecialSpan(System.Web.Razor.Parser.SyntaxTree.Span)"></member>
    <member name="T:System.Web.Mvc.MvcVBRazorCodeParser">
      <summary>Erweitert die VBCodeParser-Klasse durch Hinzufügen von Unterstützung für das @model-Schlüsselwort.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcVBRazorCodeParser.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.MvcVBRazorCodeParser" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcVBRazorCodeParser.ParseInheritsStatement(System.Web.Razor.Parser.CodeBlockInfo)"></member>
    <member name="T:System.Web.Mvc.MvcWebPageRazorHost">
      <summary>Konfiguriert den ASP.NET Razor-Parser und den ASP.NET Razor-Code-Generator für eine angegebene Datei.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcWebPageRazorHost.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.MvcWebPageRazorHost" />-Klasse. </summary>
      <param name="virtualPath">Der virtuelle Pfad der ASP.NET Razor-Datei.</param>
      <param name="physicalPath">Der physische Pfad der ASP.NET Razor-Datei.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcWebPageRazorHost.DecorateCodeGenerator(System.Web.Razor.Generator.RazorCodeGenerator)"></member>
    <member name="M:System.Web.Mvc.MvcWebPageRazorHost.DecorateCodeParser(System.Web.Razor.Parser.ParserBase)"></member>
    <member name="T:System.Web.Mvc.MvcWebRazorHostFactory">
      <summary>Erstellt Instanzen von <see cref="T:System.Web.Mvc.MvcWebPageRazorHost" />-Dateien.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcWebRazorHostFactory.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.MvcWebRazorHostFactory" />-Klasse. </summary>
    </member>
    <member name="M:System.Web.Mvc.MvcWebRazorHostFactory.CreateHost(System.String,System.String)">
      <summary>Erstellt einen Razor-Host.</summary>
      <returns>Ein Razor-Host.</returns>
      <param name="virtualPath">Der virtuelle Pfad zur Zieldatei.</param>
      <param name="physicalPath">Der physische Pfad zur Zieldatei.</param>
    </member>
    <member name="T:System.Web.Mvc.NameValueCollectionExtensions">
      <summary>Erweitert ein NameValueCollection-Objekt, damit die Auflistung in ein angegebenes Wörterbuch kopiert werden kann.</summary>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionExtensions.CopyTo(System.Collections.Specialized.NameValueCollection,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Kopiert die angegebene Auflistung an das angegebene Ziel.</summary>
      <param name="collection">Die Auflistung.</param>
      <param name="destination">Das Ziel.</param>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionExtensions.CopyTo(System.Collections.Specialized.NameValueCollection,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
      <summary>Kopiert die angegebene Auflistung an das angegebene Ziel und ersetzt vorherige Einträge optional.</summary>
      <param name="collection">Die Auflistung.</param>
      <param name="destination">Das Ziel.</param>
      <param name="replaceEntries">true, um vorherige Einträge zu ersetzen, andernfalls false.</param>
    </member>
    <member name="T:System.Web.Mvc.NameValueCollectionValueProvider">
      <summary>Stellt die Basisklasse für Wertanbieter dar, deren Werte aus einem <see cref="T:System.Collections.Specialized.NameValueCollection" />-Objekt stammen.</summary>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.#ctor(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.Globalization.CultureInfo)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.NameValueCollectionValueProvider" />-Klasse mithilfe der angegebenen nicht validierten Auflistung.</summary>
      <param name="collection">Eine Auflistung, die die Werte für das Initialisieren des Anbieter beinhaltet.</param>
      <param name="unvalidatedCollection">Eine Auflistung, die die Werte für das Initialisieren des Anbieter beinhaltet. Diese Auflistung wird nicht validiert.</param>
      <param name="culture">Ein Objekt, das Informationen zur Zielkultur enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.#ctor(System.Collections.Specialized.NameValueCollection,System.Globalization.CultureInfo)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.NameValueCollectionValueProvider" />-Klasse.</summary>
      <param name="collection">Eine Auflistung, die die Werte für das Initialisieren des Anbieter beinhaltet.</param>
      <param name="culture">Ein Objekt, das Informationen zur Zielkultur enthält.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="collection" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.ContainsPrefix(System.String)">
      <summary>Bestimmt, ob die Auflistung das angegebene Präfix enthält.</summary>
      <returns>true, wenn die Auflistung das angegebene Präfix enthält, andernfalls false.</returns>
      <param name="prefix">Das Präfix, nach dem gesucht werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="prefix" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.GetValue(System.String)">
      <summary>Gibt mit dem angegebenen Schlüssel ein Wertobjekt zurück.</summary>
      <returns>Das Wertobjekt für den angegebenen Schlüssel.</returns>
      <param name="key">Der Schlüssel für das Wertobjekt, das abgerufen werden soll.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="key" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.GetValue(System.String,System.Boolean)">
      <summary>Gibt ein Wertobjekt mithilfe des angegebenen Schlüssels und der angegebenen Validierungsdirektive zurück.</summary>
      <returns>Das Wertobjekt für den angegebenen Schlüssel.</returns>
      <param name="key">Der Schlüssel.</param>
      <param name="skipValidation">true, wenn die Validierung übersprungen werden soll, andernfalls false.</param>
    </member>
    <member name="T:System.Web.Mvc.NoAsyncTimeoutAttribute">
      <summary>Stellt einen Hilfswrapper für das <see cref="T:System.Web.Mvc.AsyncTimeoutAttribute" />-Attribut bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.NoAsyncTimeoutAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.NoAsyncTimeoutAttribute" />-Klasse.</summary>
    </member>
    <member name="T:System.Web.Mvc.NonActionAttribute">
      <summary>Stellt ein Attribut dar, mit dem angegeben wird, dass eine Controllermethode keine Aktionsmethode ist.</summary>
    </member>
    <member name="M:System.Web.Mvc.NonActionAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.NonActionAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.NonActionAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Bestimmt, ob das Attribut eine Methode markiert, wenn diese keine Aktionsmethode ist, indem der angegebene Controllerkontext verwendet wird.</summary>
      <returns>true, wenn das Attribut eine gültige Nicht-Aktionsmethode markiert, andernfalls false.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="methodInfo">Die Methodeninformationen.</param>
    </member>
    <member name="T:System.Web.Mvc.OutputCacheAttribute">
      <summary>Stellt ein Attribut dar, das verwendet wird, um eine Aktionsmethode zu markieren, deren Ausgabe zwischengespeichert wird.</summary>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.OutputCacheAttribute" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.CacheProfile">
      <summary>Ruft den Namen des Cacheprofils ab oder legt ihn fest.</summary>
      <returns>Der Name des Cacheprofils.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.ChildActionCache">
      <summary>Ruft den Cache der untergeordneten Aktion ab bzw. legt ihn fest.</summary>
      <returns>Der Cache der untergeordneten Aktion.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.Duration">
      <summary>Ruft die Cachedauer in Sekunden ab bzw. legt sie fest.</summary>
      <returns>Die Cachedauer.</returns>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.IsChildActionCacheActive(System.Web.Mvc.ControllerContext)">
      <summary>Gibt einen Wert zurück, der angibt, ob ein Cache der untergeordneten Aktion aktiv ist.</summary>
      <returns>true, wenn der Cache der untergeordneten Aktion aktiv ist, andernfalls false.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.Location">
      <summary>Ruft den Speicherort ab bzw. legt ihn fest.</summary>
      <returns>Der Speicherort.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.NoStore">
      <summary>Ruft einen Wert ab (bzw. legt diesen fest), der angibt, ob der Cache gespeichert werden soll.</summary>
      <returns>true, wenn der Cache gespeichert werden soll, andernfalls false.</returns>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Diese Methode ist eine Implementierung von <see cref="M:System.Web.Mvc.IActionFilter.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)" /> und unterstützt die ASP.NET MVC-Infrastruktur. Es ist nicht vorgesehen, dass der Typ direkt vom Code verwendet wird. </summary>
      <param name="filterContext">Der Filterkontext.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Diese Methode ist eine Implementierung von <see cref="M:System.Web.Mvc.IActionFilter.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)" /> und unterstützt die ASP.NET MVC-Infrastruktur. Es ist nicht vorgesehen, dass der Typ direkt vom Code verwendet wird.</summary>
      <param name="filterContext">Der Filterkontext.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Diese Methode ist eine Implementierung von <see cref="M:System.Web.Mvc.IExceptionFilter.OnException(System.Web.Mvc.ExceptionContext)" /> und unterstützt die ASP.NET MVC-Infrastruktur. Es ist nicht vorgesehen, dass der Typ direkt vom Code verwendet wird.</summary>
      <param name="filterContext">Der Filterkontext.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Diese Methode ist eine Implementierung von <see cref="M:System.Web.Mvc.IResultFilter.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)" /> und unterstützt die ASP.NET MVC-Infrastruktur. Es ist nicht vorgesehen, dass der Typ direkt vom Code verwendet wird.</summary>
      <param name="filterContext">Der Filterkontext.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Wird aufgerufen, bevor das Aktionsergebnis ausgeführt wird.</summary>
      <param name="filterContext">Der Filterkontext, der Informationen kapselt, um <see cref="T:System.Web.Mvc.AuthorizeAttribute" /> zu verwenden.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="filterContext" />-Parameter ist null.</exception>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.SqlDependency">
      <summary>Ruft die SQL-Abhängigkeit ab bzw. legt diese fest.</summary>
      <returns>Die SQL-Abhängigkeit.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByContentEncoding">
      <summary>Ruft die vary-by-content-Codierung ab bzw. legt diese fest.</summary>
      <returns>Die vary-by-content-Codierung.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByCustom">
      <summary>Ruft den vary-by-custom-Wert ab bzw. legt diesen fest.</summary>
      <returns>Der vary-by-custom-Wert.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByHeader">
      <summary>Ruft den vary-by-header-Wert ab bzw. legt diesen fest.</summary>
      <returns>Der vary-by-header-Wert.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByParam">
      <summary>Ruft den vary-by-param-Wert ab bzw. legt diesen fest.</summary>
      <returns>Der vary-by-param-Wert.</returns>
    </member>
    <member name="T:System.Web.Mvc.ParameterBindingInfo">
      <summary>Kapselt Informationen zum Binden von Aktionsmethodenparametern an ein Datenmodell.</summary>
    </member>
    <member name="M:System.Web.Mvc.ParameterBindingInfo.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ParameterBindingInfo" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Binder">
      <summary>Ruft den Modellbinder ab.</summary>
      <returns>Der Modellbinder.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Exclude">
      <summary>Ruft eine durch Trennzeichen getrennte Liste von Eigenschaftennamen ab, für die die Bindung deaktiviert ist.</summary>
      <returns>Die Liste der ausgeschlossenen Elemente.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Include">
      <summary>Ruft eine durch Trennzeichen getrennte Liste von Eigenschaftennamen ab, für die die Bindung aktiviert ist.</summary>
      <returns>Die Liste der enthaltenen Elemente.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Prefix">
      <summary>Ruft das Präfix ab, das verwendet wird, wenn das MVC-Framework einen Wert an einen Aktionsparameter oder eine Modelleigenschaft bindet.</summary>
      <returns>Das Präfix.</returns>
    </member>
    <member name="T:System.Web.Mvc.ParameterDescriptor">
      <summary>Enthält Informationen, die einen Parameter beschreiben.</summary>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ParameterDescriptor" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.ActionDescriptor">
      <summary>Ruft den Aktionsdeskriptor ab.</summary>
      <returns>Der Aktionsdeskriptor.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.BindingInfo">
      <summary>Ruft die Bindungsinformationen ab.</summary>
      <returns>Die Bindungsinformationen.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.DefaultValue">
      <summary>Ruft den Standardwert des Parameters ab.</summary>
      <returns>Der Standardwert des Parameters.</returns>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Gibt ein Array mit benutzerdefinierten Attributen zurück, die für diesen Member definiert sind, mit Ausnahme von benannten Attributen.</summary>
      <returns>Ein Array mit benutzerdefinierten Attributen oder ein leeres Array, falls keine benutzerdefinierten Attribute vorhanden sind.</returns>
      <param name="inherit">true, um nach der Hierarchiekette für das geerbte benutzerdefinierte Attribut zu suchen, andernfalls false.</param>
      <exception cref="T:System.TypeLoadException">Der benutzerdefinierte Attributtyp kann nicht geladen werden.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Es sind mehrere Attribute vom Typ <paramref name="attributeType" /> für diesen Member definiert.</exception>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Gibt ein Array mit für diesen Member definierten benutzerdefinierten Attributen zurück, die nach Typ angegeben werden.</summary>
      <returns>Ein Array mit benutzerdefinierten Attributen oder ein leeres Array, falls keine benutzerdefinierten Attribute vorhanden sind.</returns>
      <param name="attributeType">Der Typ der benutzerdefinierten Attribute.</param>
      <param name="inherit">true, um nach der Hierarchiekette für das geerbte benutzerdefinierte Attribut zu suchen, andernfalls false.</param>
      <exception cref="T:System.TypeLoadException">Der benutzerdefinierte Attributtyp kann nicht geladen werden.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Es sind mehrere Attribute des Typs <paramref name="attributeType" /> für diesen Member definiert.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="attributeType" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Gibt an, ob eine oder mehrere Instanzen eines benutzerdefinierten Attributtyps für diesen Member definiert werden.</summary>
      <returns>true, wenn der benutzerdefinierte Attributtyp für diesen Member definiert ist, andernfalls false.</returns>
      <param name="attributeType">Der Typ der benutzerdefinierten Attribute.</param>
      <param name="inherit">true, um nach der Hierarchiekette für das geerbte benutzerdefinierte Attribut zu suchen, andernfalls false.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="attributeType" />-Parameter ist null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.ParameterName">
      <summary>Ruft den Namen des Parameters ab.</summary>
      <returns>Der Name des Parameters.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.ParameterType">
      <summary>Ruft den Typ des Parameters ab.</summary>
      <returns>Der Typ des Parameters.</returns>
    </member>
    <member name="T:System.Web.Mvc.PartialViewResult">
      <summary>Stellt eine Basisklasse dar, die verwendet wird, um eine Teilansicht an die Antwort zu senden.</summary>
    </member>
    <member name="M:System.Web.Mvc.PartialViewResult.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.PartialViewResult" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.PartialViewResult.FindView(System.Web.Mvc.ControllerContext)">
      <summary>Gibt das <see cref="T:System.Web.Mvc.ViewEngineResult" />-Objekt zurück, das zum Rendern der Ansicht verwendet wird.</summary>
      <returns>Das Ansichtsmodulergebnis.</returns>
      <param name="context">Der Controllerkontext.</param>
      <exception cref="T:System.InvalidOperationException">Beim Suchen der Ansicht durch die Methode ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="T:System.Web.Mvc.PreApplicationStartCode">
      <summary>Stellt einen Registrierungspunkt für ASP.NET Razor-Code vor dem Anwendungsstart bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.PreApplicationStartCode.Start">
      <summary>Registriert Razor-Code vor dem Anwendungsstart.</summary>
    </member>
    <member name="T:System.Web.Mvc.QueryStringValueProvider">
      <summary>Stellt einen Wertanbieter für Abfragezeichenfolgen in einem <see cref="T:System.Collections.Specialized.NameValueCollection" />-Objekt dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.QueryStringValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.QueryStringValueProvider" />-Klasse.</summary>
      <param name="controllerContext">Ein Objekt, das Informationen zur aktuellen HTTP-Anforderung kapselt.</param>
    </member>
    <member name="T:System.Web.Mvc.QueryStringValueProviderFactory">
      <summary>Stellt eine Klasse dar, die für das Erstellen einer neuen Instanz eines Wertanbieterobjekts für Abfragezeichenfolgen zuständig ist.</summary>
    </member>
    <member name="M:System.Web.Mvc.QueryStringValueProviderFactory.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.QueryStringValueProviderFactory" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.QueryStringValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Gibt ein Wertanbieterobjekt für den angegebenen Controllerkontext zurück.</summary>
      <returns>Ein Wertanbieterobjekt für Abfragezeichenfolgen.</returns>
      <param name="controllerContext">Ein Objekt, das Informationen zur aktuellen HTTP-Anforderung kapselt.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="controllerContext" />-Parameter ist null.</exception>
    </member>
    <member name="T:System.Web.Mvc.RangeAttributeAdapter">
      <summary>Stellt einen Adapter für das <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" />-Attribut bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.RangeAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.RangeAttribute)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" />-Klasse.</summary>
      <param name="metadata">Die Modellmetadaten.</param>
      <param name="context">Der Controllerkontext.</param>
      <param name="attribute">Das Bereichsattribut.</param>
    </member>
    <member name="M:System.Web.Mvc.RangeAttributeAdapter.GetClientValidationRules">
      <summary>Ruft eine Liste von Clientvalidierungsregeln für eine Bereichsüberprüfung ab.</summary>
      <returns>Eine Liste von Clientvalidierungsregeln für eine Bereichsüberprüfung.</returns>
    </member>
    <member name="T:System.Web.Mvc.RazorView">
      <summary>Stellt die für das Erstellen von Ansichten mit Razor-Syntax verwendete Klasse dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.RazorView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.RazorView" />-Klasse.</summary>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="viewPath">Der Ansichtspfad.</param>
      <param name="layoutPath">Die Layout- oder Masterseite.</param>
      <param name="runViewStartPages">Ein Wert, der angibt, ob die Dateien zum Starten von Ansichten vor der Ansicht ausgeführt werden sollen.</param>
      <param name="viewStartFileExtensions">Der Satz von Erweiterungen, der beim Nachschlagen der Dateien zum Starten von Ansichten verwendet wird.</param>
    </member>
    <member name="M:System.Web.Mvc.RazorView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Web.Mvc.IViewPageActivator)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.RazorView" />-Klasse mit Aktivierung der Ansichtsseite.</summary>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="viewPath">Der Ansichtspfad.</param>
      <param name="layoutPath">Die Layout- oder Masterseite.</param>
      <param name="runViewStartPages">Ein Wert, der angibt, ob die Dateien zum Starten von Ansichten vor der Ansicht ausgeführt werden sollen.</param>
      <param name="viewStartFileExtensions">Der Satz von Erweiterungen, der beim Nachschlagen der Dateien zum Starten von Ansichten verwendet wird.</param>
      <param name="viewPageActivator">Die Aktivierung der Ansichtsseite.</param>
    </member>
    <member name="P:System.Web.Mvc.RazorView.LayoutPath">
      <summary>Ruft die Layout- oder Masterseite ab.</summary>
      <returns>Die Layout- oder Masterseite.</returns>
    </member>
    <member name="M:System.Web.Mvc.RazorView.RenderView(System.Web.Mvc.ViewContext,System.IO.TextWriter,System.Object)">
      <summary>Rendert den angegebenen Ansichtskontext mithilfe des angegebenen Writers und der <see cref="T:System.Web.Mvc.WebViewPage" />-Instanz.</summary>
      <param name="viewContext">Der Ansichtskontext.</param>
      <param name="writer">Der Writer, der zum Rendern der Ansicht für die Antwort verwendet wird.</param>
      <param name="instance">Die <see cref="T:System.Web.Mvc.WebViewPage" />-Instanz.</param>
    </member>
    <member name="P:System.Web.Mvc.RazorView.RunViewStartPages">
      <summary>Ruft einen Wert ab, der angibt, ob die Dateien zum Starten von Ansichten vor der Ansicht ausgeführt werden sollen.</summary>
      <returns>Ein Wert, der angibt, ob die Dateien zum Starten von Ansichten vor der Ansicht ausgeführt werden sollen.</returns>
    </member>
    <member name="P:System.Web.Mvc.RazorView.ViewStartFileExtensions">
      <summary>Ruft den Satz von Dateierweiterungen ab, der beim Nachschlagen der Dateien zum Starten von Ansichten verwendet wird, oder legt diesen fest.</summary>
      <returns>Der Satz von Dateierweiterungen, der beim Nachschlagen der Dateien zum Starten von Ansichten verwendet wird, oder legt diesen fest.</returns>
    </member>
    <member name="T:System.Web.Mvc.RazorViewEngine">
      <summary>Stellt ein Ansichtsmodul dar, mit dem eine Webseite gerendert wird, die ASP.NET Razor-Syntax verwendet.</summary>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.RazorViewEngine" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.#ctor(System.Web.Mvc.IViewPageActivator)"></member>
    <member name="M:System.Web.Mvc.RazorViewEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Erstellt eine Teilansicht anhand des Controllerkontexts und des Teilpfads.</summary>
      <returns>Die Teilansicht.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="partialPath">Der Pfad zur Teilansicht.</param>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Erstellt eine Ansicht anhand des angegebenen Controllerkontexts und der Pfade der Ansicht und Masteransicht.</summary>
      <returns>Die Ansicht.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="viewPath">Der Pfad zur Ansicht.</param>
      <param name="masterPath">Der Pfad zur Masteransicht.</param>
    </member>
    <member name="T:System.Web.Mvc.RedirectResult">
      <summary>Steuert die Verarbeitung von Anwendungsaktionen durch das Umleiten an einen angegebenen URI.</summary>
    </member>
    <member name="M:System.Web.Mvc.RedirectResult.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.RedirectResult" />-Klasse.</summary>
      <param name="url">Die Ziel-URL.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="url" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RedirectResult.#ctor(System.String,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.RedirectResult" />-Klasse mithilfe der angegebenen URL und des Flags für permanente Umleitung.</summary>
      <param name="url">Die URL.</param>
      <param name="permanent">Ein Wert, der angibt, ob die Umleitung permanent sein soll.</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Ermöglicht die Verarbeitung des Ergebnisses einer Aktionsmethode durch einen benutzerdefinierten Typ, der von der <see cref="T:System.Web.Mvc.ActionResult" />-Klasse erbt.</summary>
      <param name="context">Der Kontext, in dem das Ergebnis ausgeführt wird.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="context" />-Parameter ist null.</exception>
    </member>
    <member name="P:System.Web.Mvc.RedirectResult.Permanent">
      <summary>Ruft einen Wert ab, der angibt, ob die Umleitung permanent sein soll.</summary>
      <returns>true, wenn die Umleitung permanent sein soll, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.Mvc.RedirectResult.Url">
      <summary>Ruft die Ziel-URL ab bzw. legt diese fest.</summary>
      <returns>Die Ziel-URL.</returns>
    </member>
    <member name="T:System.Web.Mvc.RedirectToRouteResult">
      <summary>Stellt ein Ergebnis dar, das mithilfe des angegebenen Wörterbuchs für Routenwerte eine Umleitung ausführt.</summary>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.#ctor(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.RedirectToRouteResult" />-Klasse, indem der angegebene Routenname und die Routenwerte verwendet werden.</summary>
      <param name="routeName">Der Name der Route.</param>
      <param name="routeValues">Die Routenwerte.</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.#ctor(System.String,System.Web.Routing.RouteValueDictionary,System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.RedirectToRouteResult" />-Klasse mithilfe des angegebenen Routennamens, der angegebenen Routenwerte und des angegebenen Flags für permanente Umleitung.</summary>
      <param name="routeName">Der Name der Route.</param>
      <param name="routeValues">Die Routenwerte.</param>
      <param name="permanent">Ein Wert, der angibt, ob die Umleitung permanent sein soll.</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.#ctor(System.Web.Routing.RouteValueDictionary)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.RedirectToRouteResult" />-Klasse, indem die angegebenen Routenwerte verwendet werden.</summary>
      <param name="routeValues">Die Routenwerte.</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Ermöglicht die Verarbeitung des Ergebnisses einer Aktionsmethode durch einen benutzerdefinierten Typ, der von der <see cref="T:System.Web.Mvc.ActionResult" />-Klasse erbt.</summary>
      <param name="context">Der Kontext, in dem das Ergebnis ausgeführt wird.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="context" />-Parameter ist null.</exception>
    </member>
    <member name="P:System.Web.Mvc.RedirectToRouteResult.Permanent">
      <summary>Ruft einen Wert ab, der angibt, ob die Umleitung permanent sein soll.</summary>
      <returns>true, wenn die Umleitung permanent sein soll, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.Mvc.RedirectToRouteResult.RouteName">
      <summary>Ruft den Namen der Route ab bzw. legt diesen fest.</summary>
      <returns>Der Name der Route.</returns>
    </member>
    <member name="P:System.Web.Mvc.RedirectToRouteResult.RouteValues">
      <summary>Ruft die Routenwerte ab bzw. legt diese fest.</summary>
      <returns>Die Routenwerte.</returns>
    </member>
    <member name="T:System.Web.Mvc.ReflectedActionDescriptor">
      <summary>Enthält Informationen, die eine reflektierte Aktionsmethode beschreiben.</summary>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.#ctor(System.Reflection.MethodInfo,System.String,System.Web.Mvc.ControllerDescriptor)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ReflectedActionDescriptor" />-Klasse.</summary>
      <param name="methodInfo">Die Aktionsmethodeninformationen.</param>
      <param name="actionName">Der Name der Aktion.</param>
      <param name="controllerDescriptor">Der Controllerdeskriptor.</param>
      <exception cref="T:System.ArgumentNullException">Entweder der <paramref name="methodInfo" />-Parameter oder der <paramref name="controllerDescriptor" />-Parameter ist null.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="actionName" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.ActionName">
      <summary>Ruft den Namen der Aktion ab.</summary>
      <returns>Der Name der Aktion.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.ControllerDescriptor">
      <summary>Ruft den Controllerdeskriptor ab.</summary>
      <returns>Der Controllerdeskriptor.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Führt den angegebenen Controllerkontext aus, indem der angegebene Aktionsmethodenparameter verwendet wird.</summary>
      <returns>Der Rückgabewert der Aktion.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="parameters">Die Parameter.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="parameters" />-Parameter oder der <paramref name="controllerContext" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Gibt ein Array mit für diesen Member definierten benutzerdefinierten Attributen zurück, mit Ausnahme benannter Attribute.</summary>
      <returns>Ein Array mit benutzerdefinierten Attributen oder ein leeres Array, falls keine benutzerdefinierten Attribute vorhanden sind.</returns>
      <param name="inherit">true, um nach der Hierarchiekette für das geerbte benutzerdefinierte Attribut zu suchen, andernfalls false.</param>
      <exception cref="T:System.TypeLoadException">Der benutzerdefinierte Attributtyp kann nicht geladen werden.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Es sind mehrere Attribute vom Typ <paramref name="attributeType" /> für diesen Member definiert.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Gibt ein Array mit für diesen Member definierten benutzerdefinierten Attributen zurück, die nach Typ angegeben werden.</summary>
      <returns>Ein Array mit benutzerdefinierten Attributen oder ein leeres Array, falls keine benutzerdefinierten Attribute vorhanden sind.</returns>
      <param name="attributeType">Der Typ der benutzerdefinierten Attribute.</param>
      <param name="inherit">true, um nach der Hierarchiekette für das geerbte benutzerdefinierte Attribut zu suchen, andernfalls false.</param>
      <exception cref="T:System.TypeLoadException">Der benutzerdefinierte Attributtyp kann nicht geladen werden.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Es sind mehrere Attribute vom Typ <paramref name="attributeType" /> für diesen Member definiert.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetParameters">
      <summary>Ruft die Parameter der Aktionsmethode ab.</summary>
      <returns>Die Parameter der Aktionsmethode.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetSelectors">
      <summary>Ruft die Aktionsauswahlzeiger ab.</summary>
      <returns>Die Aktionsauswahlzeiger.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Gibt an, ob eine oder mehrere Instanzen eines benutzerdefinierten Attributtyps für diesen Member definiert werden.</summary>
      <returns>true, wenn der benutzerdefinierte Attributtyp für diesen Member definiert ist, andernfalls false.</returns>
      <param name="attributeType">Der Typ der benutzerdefinierten Attribute.</param>
      <param name="inherit">true, um nach der Hierarchiekette für das geerbte benutzerdefinierte Attribut zu suchen, andernfalls false.</param>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.MethodInfo">
      <summary>Ruft die Aktionsmethodeninformationen ab bzw. legt diese fest.</summary>
      <returns>Die Aktionsmethodeninformationen.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.UniqueId">
      <summary>Ruft die eindeutige ID für den reflektierten Aktionsdeskriptor mithilfe der verzögerten Initialisierung ab.</summary>
      <returns>Die eindeutige ID.</returns>
    </member>
    <member name="T:System.Web.Mvc.ReflectedControllerDescriptor">
      <summary>Enthält Informationen, die einen reflektierten Controller beschreiben.</summary>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ReflectedControllerDescriptor" />-Klasse.</summary>
      <param name="controllerType">Der Typ des Controllers.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="controllerType" />-Parameter ist null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ReflectedControllerDescriptor.ControllerType">
      <summary>Ruft den Typ des Controllers ab.</summary>
      <returns>Der Typ des Controllers.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.FindAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Sucht für den angegebenen Controllerkontext nach der angegebenen Aktion.</summary>
      <returns>Die Informationen zur Aktion.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionName">Der Name der Aktion.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="controllerContext" />-Parameter ist null.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="actionName" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetCanonicalActions">
      <summary>Gibt die Liste der Aktionen für den Controller zurück.</summary>
      <returns>Eine Liste von Aktionsdeskriptoren für den Controller.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Gibt ein Array mit benutzerdefinierten Attributen zurück, die für diesen Member definiert sind, mit Ausnahme von benannten Attributen.</summary>
      <returns>Ein Array mit benutzerdefinierten Attributen oder ein leeres Array, falls keine benutzerdefinierten Attribute vorhanden sind.</returns>
      <param name="inherit">true, um nach der Hierarchiekette für das geerbte benutzerdefinierte Attribut zu suchen, andernfalls false.</param>
      <exception cref="T:System.TypeLoadException">Der benutzerdefinierte Attributtyp kann nicht geladen werden.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Es sind mehrere Attribute vom Typ <paramref name="attributeType" /> für diesen Member definiert.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Gibt ein Array mit für diesen Member definierten benutzerdefinierten Attributen zurück, die nach Typ angegeben werden.</summary>
      <returns>Ein Array mit benutzerdefinierten Attributen oder ein leeres Array, falls keine benutzerdefinierten Attribute vorhanden sind.</returns>
      <param name="attributeType">Der Typ der benutzerdefinierten Attribute.</param>
      <param name="inherit">true, um nach der Hierarchiekette für das geerbte benutzerdefinierte Attribut zu suchen, andernfalls false.</param>
      <exception cref="T:System.TypeLoadException">Der benutzerdefinierte Attributtyp kann nicht geladen werden.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Es sind mehrere Attribute vom Typ <paramref name="attributeType" /> für diesen Member definiert.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Gibt einen Wert zurück, der angibt, ob für diesen Member eine oder mehrere Instanzen eines benutzerdefinierten Attributtyps definiert sind.</summary>
      <returns>true, wenn der benutzerdefinierte Attributtyp für diesen Member definiert ist, andernfalls false.</returns>
      <param name="attributeType">Der Typ der benutzerdefinierten Attribute.</param>
      <param name="inherit">true, um nach der Hierarchiekette für das geerbte benutzerdefinierte Attribut zu suchen, andernfalls false.</param>
    </member>
    <member name="T:System.Web.Mvc.ReflectedParameterDescriptor">
      <summary>Enthält Informationen, die einen reflektierten Aktionsmethodenparameter beschreiben.</summary>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.#ctor(System.Reflection.ParameterInfo,System.Web.Mvc.ActionDescriptor)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ReflectedParameterDescriptor" />-Klasse.</summary>
      <param name="parameterInfo">Die Parameterinformationen.</param>
      <param name="actionDescriptor">Der Aktionsdeskriptor.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="parameterInfo" />-Parameter oder der <paramref name="actionDescriptor" />-Parameter ist null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ActionDescriptor">
      <summary>Ruft den Aktionsdeskriptor ab.</summary>
      <returns>Der Aktionsdeskriptor.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.BindingInfo">
      <summary>Ruft die Bindungsinformationen ab.</summary>
      <returns>Die Bindungsinformationen.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.DefaultValue">
      <summary>Ruft den Standardwert des wiedergegebenen Parameters ab.</summary>
      <returns>Der Standardwert des wiedergegebenen Parameters.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Gibt ein Array mit benutzerdefinierten Attributen zurück, die für diesen Member definiert sind, mit Ausnahme von benannten Attributen.</summary>
      <returns>Ein Array mit benutzerdefinierten Attributen oder ein leeres Array, falls keine benutzerdefinierten Attribute vorhanden sind.</returns>
      <param name="inherit">true, um nach der Hierarchiekette für das geerbte benutzerdefinierte Attribut zu suchen, andernfalls false.</param>
      <exception cref="T:System.TypeLoadException">Der benutzerdefinierte Attributtyp kann nicht geladen werden.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Es sind mehrere Attribute vom Typ <paramref name="attributeType" /> für diesen Member definiert.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Gibt ein Array mit für diesen Member definierten benutzerdefinierten Attributen zurück, die nach Typ angegeben werden.</summary>
      <returns>Ein Array mit benutzerdefinierten Attributen oder ein leeres Array, falls keine benutzerdefinierten Attribute vorhanden sind.</returns>
      <param name="attributeType">Der Typ der benutzerdefinierten Attribute.</param>
      <param name="inherit">true, um nach der Hierarchiekette für das geerbte benutzerdefinierte Attribut zu suchen, andernfalls false.</param>
      <exception cref="T:System.TypeLoadException">Der benutzerdefinierte Attributtyp kann nicht geladen werden.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Es sind mehrere Attribute vom Typ <paramref name="attributeType" /> für diesen Member definiert.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Gibt einen Wert zurück, der angibt, ob für diesen Member eine oder mehrere Instanzen eines benutzerdefinierten Attributtyps definiert sind.</summary>
      <returns>true, wenn der benutzerdefinierte Attributtyp für diesen Member definiert ist, andernfalls false.</returns>
      <param name="attributeType">Der Typ der benutzerdefinierten Attribute.</param>
      <param name="inherit">true, um nach der Hierarchiekette für das geerbte benutzerdefinierte Attribut zu suchen, andernfalls false.</param>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ParameterInfo">
      <summary>Ruft die Parameterinformationen ab bzw. legt diese fest.</summary>
      <returns>Die Parameterinformationen.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ParameterName">
      <summary>Ruft den Namen des Parameters ab.</summary>
      <returns>Der Name des Parameters.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ParameterType">
      <summary>Ruft den Typ des Parameters ab.</summary>
      <returns>Der Typ des Parameters.</returns>
    </member>
    <member name="T:System.Web.Mvc.RegularExpressionAttributeAdapter">
      <summary>Stellt einen Adapter für das <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" />-Attribut bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.RegularExpressionAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.RegularExpressionAttribute)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.RegularExpressionAttributeAdapter" />-Klasse.</summary>
      <param name="metadata">Die Modellmetadaten.</param>
      <param name="context">Der Controllerkontext.</param>
      <param name="attribute">Das Attribut für reguläre Ausdrücke.</param>
    </member>
    <member name="M:System.Web.Mvc.RegularExpressionAttributeAdapter.GetClientValidationRules">
      <summary>Ruft eine Liste von Clientvalidierungsregeln für reguläre Ausdrücke ab.</summary>
      <returns>Eine Liste von Clientvalidierungsregeln für reguläre Ausdrücke.</returns>
    </member>
    <member name="T:System.Web.Mvc.RemoteAttribute">
      <summary>Stellt ein Attribut bereit, das die Remotebestätigung des jQuery-Validierungs-Plug-Ins verwendet. </summary>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.RemoteAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.RemoteAttribute" />-Klasse mithilfe des angegebenen Routennamens.</summary>
      <param name="routeName">Der Routenname.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.RemoteAttribute" />-Klasse mithilfe des angegebenen Aktionsmethodennamens und des angegebenen Controllernamens.</summary>
      <param name="action">Der Name der Aktionsmethode.</param>
      <param name="controller">Der Name des Controllers.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.RemoteAttribute" />-Klasse mithilfe des angegebenen Aktionsmethodennamens, des angegebenen Controllernamens und des angegebenen Bereichsnamens.</summary>
      <param name="action">Der Name der Aktionsmethode.</param>
      <param name="controller">Der Name des Controllers.</param>
      <param name="areaName">Der Name des Bereichs.</param>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.Fields">
      <summary>Ruft die Felder ab, die für die Validierung erforderlich sind, bzw. legt sie fest.</summary>
      <returns>Die für die Validierung erforderlichen Felder.</returns>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.FormatErrorMessage(System.String)">
      <summary>Formatiert die Fehlermeldung, die angezeigt wird, wenn die Validierung fehlschlägt.</summary>
      <returns>Eine formatierte Fehlermeldung.</returns>
      <param name="name">Ein mit der Fehlermeldung anzuzeigender Name.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.FormatFieldsForClientValidation(System.String)">
      <summary>Gibt eine durch Kommas getrennte Zeichenfolge von Validierungsfeldnamen zurück.</summary>
      <returns>Eine durch Kommas getrennte Zeichenfolge von Validierungsfeldnamen.</returns>
      <param name="property">Der Name der Validierungseigenschaft.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.FormatPropertyForClientValidation(System.String)">
      <summary>Formatiert die Eigenschaft für Clientvalidierung durch Voranstellen eines Sternchens (*) und eines Punkts.</summary>
      <returns>Die Zeichenfolge "*." Wird der Eigenschaft vorangestellt.</returns>
      <param name="property">Die Eigenschaft.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.GetClientValidationRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Ruft eine Liste von Clientvalidierungsregeln für die Eigenschaft ab.</summary>
      <returns>Eine Liste von Remote-Clientvalidierungsregeln für die Eigenschaft.</returns>
      <param name="metadata">Die Modellmetadaten.</param>
      <param name="context">Der Controllerkontext.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.GetUrl(System.Web.Mvc.ControllerContext)">
      <summary>Ruft die URL für den Remotevalidierungsaufruf ab.</summary>
      <returns>Die URL für den Remotevalidierungsaufruf.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.HttpMethod">
      <summary>Ruft die für die Remotevalidierung verwendete HTTP-Methode ab bzw. legt sie fest.</summary>
      <returns>Die HTTP-Methode für die Remotevalidierung. Der Standardwert ist "Get".</returns>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.IsValid(System.Object)">
      <summary>Diese Methode gibt immer "true" zurück.</summary>
      <returns>true</returns>
      <param name="value">Das Validierungsziel.</param>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.RouteData">
      <summary>Ruft das Wörterbuch mit den Routendaten ab.</summary>
      <returns>Das Wörterbuch mit den Routendaten.</returns>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.RouteName">
      <summary>Ruft den Routennamen ab bzw. legt ihn fest.</summary>
      <returns>Der Routenname.</returns>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.Routes">
      <summary>Ruft die Routenauflistung aus der Routentabelle ab.</summary>
      <returns>Die Routenauflistung aus der Routentabelle.</returns>
    </member>
    <member name="T:System.Web.Mvc.RequiredAttributeAdapter">
      <summary>Stellt einen Adapter für das <see cref="T:System.Runtime.CompilerServices.RequiredAttributeAttribute" />-Attribut bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.RequiredAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.RequiredAttribute)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.CompilerServices.RequiredAttributeAttribute" />-Klasse.</summary>
      <param name="metadata">Die Modellmetadaten.</param>
      <param name="context">Der Controllerkontext.</param>
      <param name="attribute">Das erforderliche Attribut.</param>
    </member>
    <member name="M:System.Web.Mvc.RequiredAttributeAdapter.GetClientValidationRules">
      <summary>Ruft eine Liste von Clientvalidierungsregeln für den erforderlichen Wert ab.</summary>
      <returns>Eine Liste von Clientvalidierungsregeln für den erforderlichen Wert.</returns>
    </member>
    <member name="T:System.Web.Mvc.RequireHttpsAttribute">
      <summary>Stellt ein Attribut dar, mit dem das erneute Senden einer ungesicherten HTTP-Anforderung über eine sichere HTTPS-Verbindung erzwungen wird.</summary>
    </member>
    <member name="M:System.Web.Mvc.RequireHttpsAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.RequireHttpsAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.RequireHttpsAttribute.HandleNonHttpsRequest(System.Web.Mvc.AuthorizationContext)">
      <summary>Behandelt ungesicherte HTTP-Anforderungen, die an die Aktionsmethode gesendet werden.</summary>
      <param name="filterContext">Ein Objekt, das die erforderlichen Informationen zum Verwenden des <see cref="T:System.Web.Mvc.RequireHttpsAttribute" />-Attributs kapselt.</param>
      <exception cref="T:System.InvalidOperationException">Die HTTP-Anforderung enthält eine ungültige Übertragungsmethodenüberschreibung. Alle GET-Anforderungen werden als ungültig interpretiert.</exception>
    </member>
    <member name="M:System.Web.Mvc.RequireHttpsAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Bestimmt, ob eine Anforderung gesichert ist (HTTPS) und ruft andernfalls die <see cref="M:System.Web.Mvc.RequireHttpsAttribute.HandleNonHttpsRequest(System.Web.Mvc.AuthorizationContext)" />-Methode auf.</summary>
      <param name="filterContext">Ein Objekt, das die erforderlichen Informationen zum Verwenden des <see cref="T:System.Web.Mvc.RequireHttpsAttribute" />-Attributs kapselt.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="filterContext" />-Parameter ist null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ResultExecutedContext">
      <summary>Stellt den Kontext für die <see cref="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)" />-Methode der <see cref="T:System.Web.Mvc.ActionFilterAttribute" />-Klasse bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutedContext.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ResultExecutedContext" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutedContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionResult,System.Boolean,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ResultExecutedContext" />-Klasse.</summary>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="result">Das Ergebnisobjekt.</param>
      <param name="canceled">true, um die Ausführung abzubrechen, andernfalls false.</param>
      <param name="exception">das Ausnahmeobjekt.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="result" />-Parameter ist null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.Canceled">
      <summary>Ruft einen Wert ab (bzw. legt diesen fest), der angibt, ob diese <see cref="T:System.Web.Mvc.ResultExecutedContext" />-Instanz abgebrochen wird.</summary>
      <returns>true, wenn die Instanz abgebrochen wird, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.Exception">
      <summary>Ruft das Ausnahmeobjekt ab bzw. legt es fest.</summary>
      <returns>das Ausnahmeobjekt.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.ExceptionHandled">
      <summary>Ruft einen Wert ab (bzw. legt diesen fest), der angibt, ob die Ausnahme verarbeitet wurde.</summary>
      <returns>true, wenn die Ausnahme verarbeitet wurde, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.Result">
      <summary>Ruft das Aktionsergebnis ab bzw. legt es fest.</summary>
      <returns>Das Aktionsergebnis.</returns>
    </member>
    <member name="T:System.Web.Mvc.ResultExecutingContext">
      <summary>Stellt den Kontext für die <see cref="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)" />-Methode der <see cref="T:System.Web.Mvc.ActionFilterAttribute" />-Klasse bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutingContext.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ResultExecutingContext" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutingContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionResult)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ResultExecutingContext" />-Klasse, indem der angegebene Controllerkontext und das Aktionsergebnis verwendet werden.</summary>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="result">Das Aktionsergebnis.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="result" />-Parameter ist null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutingContext.Cancel">
      <summary>Ruft einen Wert ab (bzw. legt diesen fest), der angibt, ob für diesen <see cref="T:System.Web.Mvc.ResultExecutingContext" />-Wert "cancel" (Abbrechen) gilt.</summary>
      <returns>true, wenn für den Wert "cancel" gilt, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutingContext.Result">
      <summary>Ruft das Aktionsergebnis ab bzw. legt es fest.</summary>
      <returns>Das Aktionsergebnis.</returns>
    </member>
    <member name="T:System.Web.Mvc.RouteCollectionExtensions">
      <summary>Erweitert ein <see cref="T:System.Web.Routing.RouteCollection" />-Objekt für das MVC-Routing.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.GetVirtualPathForArea(System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Gibt ein Objekt zurück, das Informationen über die Route und den virtuellen Pfad enthält, die das Ergebnis einer im aktuellen Bereich generierten URL sind.</summary>
      <returns>Ein Objekt, das Informationen über die Route und den virtuellen Pfad enthält, die das Ergebnis einer im aktuellen Bereich generierten URL sind.</returns>
      <param name="routes">Ein Objekt, das die Routen für die Anwendungen enthält.</param>
      <param name="requestContext">Ein Objekt, das Informationen zur angeforderten Route kapselt.</param>
      <param name="name">Der Name der Route, die beim Abrufen von Informationen zum URL-Pfad verwendet werden soll.</param>
      <param name="values">Ein Objekt, das die Parameter für eine Route enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.GetVirtualPathForArea(System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)">
      <summary>Gibt ein Objekt zurück, das Informationen über die Route und den virtuellen Pfad enthält, die das Ergebnis einer im aktuellen Bereich generierten URL sind.</summary>
      <returns>Ein Objekt, das Informationen über die Route und den virtuellen Pfad enthält, die das Ergebnis einer im aktuellen Bereich generierten URL sind.</returns>
      <param name="routes">Ein Objekt, das die Routen für die Anwendungen enthält.</param>
      <param name="requestContext">Ein Objekt, das Informationen zur angeforderten Route kapselt.</param>
      <param name="values">Ein Objekt, das die Parameter für eine Route enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.IgnoreRoute(System.Web.Routing.RouteCollection,System.String)">
      <summary>Ignoriert die angegebene URL-Route für die angegebene Liste der verfügbaren Routen.</summary>
      <param name="routes">Eine Auflistung der Routen für die Anwendung.</param>
      <param name="url">Das URL-Muster für die zu ignorierende Route.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="routes" />-Parameter oder der <paramref name="url" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.IgnoreRoute(System.Web.Routing.RouteCollection,System.String,System.Object)">
      <summary>Ignoriert die angegebene URL-Route für die angegebene Liste der verfügbaren Routen und eine Liste der Einschränkungen.</summary>
      <param name="routes">Eine Auflistung der Routen für die Anwendung.</param>
      <param name="url">Das URL-Muster für die zu ignorierende Route.</param>
      <param name="constraints">Ein Satz von Ausdrücken, die Werte für den <paramref name="url" />-Parameter angeben.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="routes" />-Parameter oder der <paramref name="url" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String)">
      <summary>Ordnet die angegebene URL-Route zu.</summary>
      <returns>Ein Verweis auf die zugeordnete Route.</returns>
      <param name="routes">Eine Auflistung der Routen für die Anwendung.</param>
      <param name="name">Der Name der zuzuordnenden Route.</param>
      <param name="url">Das URL-Muster für die Route.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="routes" />-Parameter oder der <paramref name="url" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object)">
      <summary>Ordnet die angegebene URL-Route zu und legt Standardroutenwerte fest.</summary>
      <returns>Ein Verweis auf die zugeordnete Route.</returns>
      <param name="routes">Eine Auflistung der Routen für die Anwendung.</param>
      <param name="name">Der Name der zuzuordnenden Route.</param>
      <param name="url">Das URL-Muster für die Route.</param>
      <param name="defaults">Ein Objekt, das Standardroutenwerte enthält.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="routes" />-Parameter oder der <paramref name="url" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.Object)">
      <summary>Ordnet die angegebene URL-Route zu und legt Standardroutenwerte und Einschränkungen fest.</summary>
      <returns>Ein Verweis auf die zugeordnete Route.</returns>
      <param name="routes">Eine Auflistung der Routen für die Anwendung.</param>
      <param name="name">Der Name der zuzuordnenden Route.</param>
      <param name="url">Das URL-Muster für die Route.</param>
      <param name="defaults">Ein Objekt, das Standardroutenwerte enthält.</param>
      <param name="constraints">Ein Satz von Ausdrücken, die Werte für den <paramref name="url" />-Parameter angeben.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="routes" />-Parameter oder der <paramref name="url" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.Object,System.String[])">
      <summary>Ordnet die angegebene URL-Route zu und legt Standardroutenwerte, Einschränkungen und Namespaces fest.</summary>
      <returns>Ein Verweis auf die zugeordnete Route.</returns>
      <param name="routes">Eine Auflistung der Routen für die Anwendung.</param>
      <param name="name">Der Name der zuzuordnenden Route.</param>
      <param name="url">Das URL-Muster für die Route.</param>
      <param name="defaults">Ein Objekt, das Standardroutenwerte enthält.</param>
      <param name="constraints">Ein Satz von Ausdrücken, die Werte für den <paramref name="url" />-Parameter angeben.</param>
      <param name="namespaces">Ein Satz von Namespaces für die Anwendung.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="routes" />-Parameter oder der <paramref name="url" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.String[])">
      <summary>Ordnet die angegebene URL-Route zu und legt Standardroutenwerte, Werte und Namespaces fest.</summary>
      <returns>Ein Verweis auf die zugeordnete Route.</returns>
      <param name="routes">Eine Auflistung der Routen für die Anwendung.</param>
      <param name="name">Der Name der zuzuordnenden Route.</param>
      <param name="url">Das URL-Muster für die Route.</param>
      <param name="defaults">Ein Objekt, das Standardroutenwerte enthält.</param>
      <param name="namespaces">Ein Satz von Namespaces für die Anwendung.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="routes" />-Parameter oder der <paramref name="url" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.String[])">
      <summary>Ordnet die angegebene URL-Route zu und legt die Namespaces fest.</summary>
      <returns>Ein Verweis auf die zugeordnete Route.</returns>
      <param name="routes">Eine Auflistung der Routen für die Anwendung.</param>
      <param name="name">Der Name der zuzuordnenden Route.</param>
      <param name="url">Das URL-Muster für die Route.</param>
      <param name="namespaces">Ein Satz von Namespaces für die Anwendung.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="routes" />-Parameter oder der <paramref name="url" />-Parameter ist null.</exception>
    </member>
    <member name="T:System.Web.Mvc.RouteDataValueProvider">
      <summary>Stellt einen Wertanbieter für Routendaten in einem Objekt dar, das die <see cref="T:System.Collections.Generic.IDictionary`2" />-Schnittstelle implementiert.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteDataValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.RouteDataValueProvider" />-Klasse.</summary>
      <param name="controllerContext">Ein Objekt, in dem Informationen zur HTTP-Anforderung enthalten sind.</param>
    </member>
    <member name="T:System.Web.Mvc.RouteDataValueProviderFactory">
      <summary>Stellt eine Factory zum Erstellen von Wertanbieterobjekten für Routendaten dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteDataValueProviderFactory.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.RouteDataValueProviderFactory" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteDataValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Gibt ein Wertanbieterobjekt für den angegebenen Controllerkontext zurück.</summary>
      <returns>Ein Wertanbieterobjekt.</returns>
      <param name="controllerContext">Ein Objekt, das Informationen zur aktuellen HTTP-Anforderung kapselt.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="controllerContext" />-Parameter ist null.</exception>
    </member>
    <member name="T:System.Web.Mvc.SelectList">
      <summary>Stellt eine Liste dar, in der Benutzer ein Element auswählen können.</summary>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.SelectList" />-Klasse, indem die für die Liste angegebenen Elemente verwendet werden.</summary>
      <param name="items">Die Elemente.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.Object)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.SelectList" />-Klasse, indem die angegebenen Elemente für die Liste und ein ausgewählter Wert verwendet werden.</summary>
      <param name="items">Die Elemente.</param>
      <param name="selectedValue">Der ausgewählte Wert.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.SelectList" />-Klasse, indem die angegebenen Elemente für die Liste, das Datenwertfeld und das Datentextfeld verwendet werden.</summary>
      <param name="items">Die Elemente.</param>
      <param name="dataValueField">Das Datenwertfeld.</param>
      <param name="dataTextField">Das Datentextfeld.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Object)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.SelectList" />-Klasse, indem die angegebenen Elemente für die Liste, das Datenwertfeld, das Datentextfeld und ein ausgewählter Wert verwendet werden.</summary>
      <param name="items">Die Elemente.</param>
      <param name="dataValueField">Das Datenwertfeld.</param>
      <param name="dataTextField">Das Datentextfeld.</param>
      <param name="selectedValue">Der ausgewählte Wert.</param>
    </member>
    <member name="P:System.Web.Mvc.SelectList.SelectedValue">
      <summary>Ruft den vom Benutzer ausgewählten Listenwert ab.</summary>
      <returns>Der ausgewählte Wert.</returns>
    </member>
    <member name="T:System.Web.Mvc.SelectListItem">
      <summary>Stellt das ausgewählte Element in einer Instanz der <see cref="T:System.Web.Mvc.SelectList" />-Klasse dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.SelectListItem.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.SelectListItem" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Selected">
      <summary>Ruft einen Wert ab (bzw. legt diesen fest), der angibt, ob dieses <see cref="T:System.Web.Mvc.SelectListItem" />-Element ausgewählt ist.</summary>
      <returns>true, wenn das Element ausgewählt ist, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Text">
      <summary>Ruft den Text des ausgewählten Elements ab bzw. legt diesen fest.</summary>
      <returns>Der Text.</returns>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Value">
      <summary>Ruft den Wert des ausgewählten Elements ab bzw. legt diesen fest.</summary>
      <returns>Der Wert.</returns>
    </member>
    <member name="T:System.Web.Mvc.SessionStateTempDataProvider">
      <summary>Stellt Sitzungszustandsdaten für das aktuelle <see cref="T:System.Web.Mvc.TempDataDictionary" />-Objekt bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.SessionStateTempDataProvider.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.SessionStateTempDataProvider" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.SessionStateTempDataProvider.LoadTempData(System.Web.Mvc.ControllerContext)">
      <summary>Lädt die temporären Daten über den angegebenen Controllerkontext.</summary>
      <returns>Die temporären Daten.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <exception cref="T:System.InvalidOperationException">Beim Abrufen des Sitzungskontexts ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="M:System.Web.Mvc.SessionStateTempDataProvider.SaveTempData(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Speichert die angegebenen Werte im temporären Datenwörterbuch, indem der angegebene Controllerkontext verwendet wird.</summary>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="values">Die Werte.</param>
      <exception cref="T:System.InvalidOperationException">Beim Abrufen des Sitzungskontexts ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="T:System.Web.Mvc.SkipRequestValidationAttribute">
      <summary>Überspringt die Anforderungsvalidierung für die Eigenschaft.</summary>
    </member>
    <member name="M:System.Web.Mvc.SkipRequestValidationAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.SkipRequestValidationAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.SkipRequestValidationAttribute.OnMetadataCreated(System.Web.Mvc.ModelMetadata)">
      <summary>Diese Methode unterstützt die ASP.NET MVC-Validierungsinfrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen.</summary>
      <param name="metadata">Die Modellmetadaten.</param>
    </member>
    <member name="T:System.Web.Mvc.StringLengthAttributeAdapter">
      <summary>Stellt einen Adapter für das <see cref="T:System.ComponentModel.DataAnnotations.StringLengthAttribute" />-Attribut bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.StringLengthAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.StringLengthAttribute)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.StringLengthAttributeAdapter" />-Klasse.</summary>
      <param name="metadata">Die Modellmetadaten.</param>
      <param name="context">Der Controllerkontext.</param>
      <param name="attribute">Das Attribut für die Zeichenfolgenlänge.</param>
    </member>
    <member name="M:System.Web.Mvc.StringLengthAttributeAdapter.GetClientValidationRules">
      <summary>Ruft eine Liste von Clientvalidierungsregeln für Zeichenfolgenlängen ab.</summary>
      <returns>Eine Liste von Clientvalidierungsregeln für Zeichenfolgenlängen.</returns>
    </member>
    <member name="T:System.Web.Mvc.TempDataDictionary">
      <summary>Stellt einen Satz von Daten dar, der nur von einer Anforderung zur nächsten beibehalten wird.</summary>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.TempDataDictionary" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Add(System.String,System.Object)">
      <summary>Fügt einem <see cref="T:System.Collections.Generic.IDictionary`2" />-Objekt ein Element mit dem angegebenen Schlüssel und Wert hinzu.</summary>
      <param name="key">Der Schlüssel des hinzuzufügenden Elements.</param>
      <param name="value">Der Wert des hinzuzufügenden Elements.</param>
      <exception cref="T:System.NotSupportedException">Das <see cref="T:System.Collections.Generic.IDictionary`2" />-Objekt ist schreibgeschützt.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
      <exception cref="T:System.ArgumentException">Ein Element mit demselben Schlüssel ist bereits im <see cref="T:System.Collections.Generic.IDictionary`2" />-Objekt vorhanden.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Clear">
      <summary>Entfernt alle Elemente aus der <see cref="T:System.Collections.Generic.ICollection`1" />-Instanz.</summary>
      <exception cref="T:System.NotSupportedException">Das <see cref="T:System.Collections.Generic.ICollection`1" />-Objekt ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.ContainsKey(System.String)">
      <summary>Bestimmt, ob die <see cref="T:System.Collections.Generic.IDictionary`2" />-Instanz ein Element enthält, das über den angegebenen Schlüssel verfügt.</summary>
      <returns>true, wenn die <see cref="T:System.Collections.Generic.IDictionary`2" />-Instanz ein Element enthält, das über den angegebenen Schlüssel verfügt, andernfalls false.</returns>
      <param name="key">Der Schlüssel, nach dem in der <see cref="T:System.Collections.Generic.IDictionary`2" />-Instanz gesucht werden soll.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.ContainsValue(System.Object)">
      <summary>Bestimmt, ob das Wörterbuch den angegebenen Wert enthält.</summary>
      <returns>true, wenn das Wörterbuch den angegebenen Wert enthält, andernfalls false.</returns>
      <param name="value">Der Wert.</param>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Count">
      <summary>Ruft die Anzahl der Elemente im <see cref="T:System.Collections.Generic.ICollection`1" />-Objekt ab.</summary>
      <returns>Die Anzahl der Elemente im <see cref="T:System.Collections.Generic.ICollection`1" />-Objekt.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.GetEnumerator">
      <summary>Ruft den Enumerator ab.</summary>
      <returns>Der Enumerator.</returns>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Item(System.String)">
      <summary>Ruft das Objekt ab (bzw. legt dieses fest), das über den angegebenen Schlüssel verfügt.</summary>
      <returns>Das Objekt mit dem angegebenen Schlüssel.</returns>
      <param name="key">Der Schlüssel für den Zugriff.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Keep">
      <summary>Markiert alle Schlüssel im Wörterbuch zur Beibehaltung.</summary>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Keep(System.String)">
      <summary>Markiert den angegebenen Schlüssel im Wörterbuch zur Beibehaltung.</summary>
      <param name="key">Der beizubehaltende Schlüssel im Wörterbuch.</param>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Keys">
      <summary>Ruft ein <see cref="T:System.Collections.Generic.ICollection`1" />-Objekt ab, das die Schlüssel der Elemente im <see cref="T:System.Collections.Generic.IDictionary`2" />-Objekt enthält.</summary>
      <returns>Die Schlüssel der Elemente im <see cref="T:System.Collections.Generic.IDictionary`2" />-Objekt.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Load(System.Web.Mvc.ControllerContext,System.Web.Mvc.ITempDataProvider)">
      <summary>Lädt den angegebenen Controllerkontext mithilfe des angegebenen Datenanbieters.</summary>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="tempDataProvider">Der temporäre Datenanbieter.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Peek(System.String)">
      <summary>Gibt ein Objekt zurück, das das dem angegebenen Schlüssel zugeordnete Element enthält, ohne den Schlüssel zum Löschen zu markieren.</summary>
      <returns>Ein Objekt, das das dem angegebenen Schlüssel zugeordnete Element enthält.</returns>
      <param name="key">Der Schlüssel des zurückzugebenden Elements.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Remove(System.String)">
      <summary>Entfernt das Element, das über den angegebenen Schlüssel des <see cref="T:System.Collections.Generic.IDictionary`2" />-Objekts verfügt.</summary>
      <returns>true, wenn das Element erfolgreich entfernt wurde, andernfalls false. Diese Methode gibt auch dann false zurück, wenn <paramref name="key" /> nicht in der <see cref="T:System.Collections.Generic.IDictionary`2" />-Instanz gefunden wurde.</returns>
      <param name="key">Der Schlüssel des zu entfernenden Elements.</param>
      <exception cref="T:System.NotSupportedException">Das <see cref="T:System.Collections.Generic.IDictionary`2" />-Objekt ist schreibgeschützt.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Save(System.Web.Mvc.ControllerContext,System.Web.Mvc.ITempDataProvider)">
      <summary>Speichert den angegebenen Controllerkontext mithilfe des angegebenen Datenanbieters.</summary>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="tempDataProvider">Der temporäre Datenanbieter.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Fügt dem Wörterbuch das angegebene Schlüssel-Wert-Paar hinzu.</summary>
      <param name="keyValuePair">Das Schlüssel-Wert-Paar.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Bestimmt mithilfe des Standardgleichheitsvergleichs, ob eine Sequenz ein angegebenes Element enthält.</summary>
      <returns>true, wenn das Wörterbuch das angegebene Schlüssel-Wert-Paar enthält, andernfalls false.</returns>
      <param name="keyValuePair">Das Schlüssel-Wert-Paar, nach dem gesucht werden soll.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Kopiert ein Schlüssel-Wert-Paar am angegebenen Index in das angegebene Array.</summary>
      <param name="array">Das Zielarray.</param>
      <param name="index">Der Index.</param>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob das Wörterbuch schreibgeschützt ist.</summary>
      <returns>true, wenn das Wörterbuch schreibgeschützt ist, andernfalls false.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Löscht das angegebene Schlüssel-Wert-Paar aus dem Wörterbuch.</summary>
      <returns>true, wenn das Schlüssel-Wert-Paar erfolgreich entfernt wurde, andernfalls false.</returns>
      <param name="keyValuePair">Das Schlüssel-Wert-Paar.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, mit dem eine Auflistung durchlaufen werden kann.</summary>
      <returns>Ein <see cref="T:System.Collections.IEnumerator" />-Objekt, mithilfe dessen eine Auflistung durchlaufen werden kann.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.TryGetValue(System.String,System.Object@)">
      <summary>Ruft den Wert des Elements ab, das über den angegebenen Schlüssel verfügt.</summary>
      <returns>true, wenn das Objekt, das <see cref="T:System.Collections.Generic.IDictionary`2" /> implementiert, ein Element mit dem angegebenen Schlüssel enthält, andernfalls false.</returns>
      <param name="key">Der Schlüssel des abzurufenden Werts.</param>
      <param name="value">Wenn diese Methode zurückgegeben wird, enthält sie den dem angegebenen Schlüssel zugeordneten Wert, sofern der Schlüssel gefunden wird, andernfalls den Standardwert für den Typ des <paramref name="value" />-Parameters. Dieser Parameter wird nicht initialisiert übergeben.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Values">
      <summary>Ruft das <see cref="T:System.Collections.Generic.ICollection`1" />-Objekt ab, das die Werte im <see cref="T:System.Collections.Generic.IDictionary`2" />-Objekt enthält.</summary>
      <returns>Die Werte der Elemente im Objekt, mit dem das <see cref="T:System.Collections.Generic.IDictionary`2" />-Element implementiert wird.</returns>
    </member>
    <member name="T:System.Web.Mvc.TemplateInfo">
      <summary>Kapselt Informationen zum aktuellen Vorlagenkontext.</summary>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.TemplateInfo" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.TemplateInfo.FormattedModelValue">
      <summary>Ruft den formatierten Modellwert ab oder legt ihn fest.</summary>
      <returns>Der formatierte Modellwert.</returns>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.GetFullHtmlFieldId(System.String)">
      <summary>Ruft die vollständige DOM ID eines Felds mit dem angegebenen HTML-name-Attribut ab.</summary>
      <returns>Die vollständige DOM ID.</returns>
      <param name="partialFieldName">Der Wert des HTML-name-Attributs.</param>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.GetFullHtmlFieldName(System.String)">
      <summary>Ruft den vollqualifizierten Namen (einschließlich Präfix) für ein Feld mit dem angegebenen HTML-name ab.</summary>
      <returns>Der mit einem Präfix versehene Name des Felds.</returns>
      <param name="partialFieldName">Der Wert des HTML-name-Attributs.</param>
    </member>
    <member name="P:System.Web.Mvc.TemplateInfo.HtmlFieldPrefix">
      <summary>Ruft den HTML-Feldpräfix ab oder legt ihn fest.</summary>
      <returns>Das HTML-Feldpräfix.</returns>
    </member>
    <member name="P:System.Web.Mvc.TemplateInfo.TemplateDepth">
      <summary>Enthält die Anzahl der vom Benutzer besuchten Objekte.</summary>
      <returns>Die Anzahl von Objekten.</returns>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.Visited(System.Web.Mvc.ModelMetadata)">
      <summary>Ermittelt, ob die Vorlage vom Benutzer besucht wurde.</summary>
      <returns>true, wenn die Vorlage vom Benutzer besucht wurde; andernfalls false.</returns>
      <param name="metadata">Ein Objekt, das Informationen zur Beschreibung des Modells kapselt.</param>
    </member>
    <member name="T:System.Web.Mvc.UrlHelper">
      <summary>Enthält Methoden zum Erstellen von URLs für ASP.NET-MVC innerhalb einer Anwendung.</summary>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.#ctor(System.Web.Routing.RequestContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.UrlHelper" />-Klasse, indem der angegebene Anforderungskontext verwendet wird.</summary>
      <param name="requestContext">Ein Objekt, das Informationen zur aktuellen Anforderung und zur übereinstimmenden Route enthält.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="requestContext" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.#ctor(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.UrlHelper" />-Klasse, indem der angegebene Anforderungskontext und die Routenauflistung verwendet werden.</summary>
      <param name="requestContext">Ein Objekt, das Informationen zur aktuellen Anforderung und zur übereinstimmenden Route enthält.</param>
      <param name="routeCollection">Eine Auflistung von Routen.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="requestContext" />-Parameter oder der <paramref name="routeCollection" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String)">
      <summary>Generiert eine vollqualifizierte URL in eine Aktionsmethode, indem der angegebene Aktionsname verwendet wird.</summary>
      <returns>Die vollqualifizierte URL zu einer Aktionsmethode.</returns>
      <param name="actionName">Der Name der Aktionsmethode.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.Object)">
      <summary>Generiert eine vollqualifizierte URL in eine Aktionsmethode, indem der angegebene Aktionsname und die Routenwerte verwendet werden.</summary>
      <returns>Die vollqualifizierte URL zu einer Aktionsmethode.</returns>
      <param name="actionName">Der Name der Aktionsmethode.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Das Objekt wird normalerweise mithilfe der Objektinitialisierersyntax erstellt.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String)">
      <summary>Generiert eine vollqualifizierte URL in eine Aktionsmethode, indem der angegebene Aktionsname und der Controllername verwendet werden.</summary>
      <returns>Die vollqualifizierte URL zu einer Aktionsmethode.</returns>
      <param name="actionName">Der Name der Aktionsmethode.</param>
      <param name="controllerName">Der Name des Controllers.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Object)">
      <summary>Generiert eine vollqualifizierte URL in eine Aktionsmethode, indem der angegebene Aktionsname, der Controllername und die Routenwerte verwendet werden.</summary>
      <returns>Die vollqualifizierte URL zu einer Aktionsmethode.</returns>
      <param name="actionName">Der Name der Aktionsmethode.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Das Objekt wird normalerweise mithilfe der Objektinitialisierersyntax erstellt.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Object,System.String)">
      <summary>Generiert eine vollqualifizierte URL in eine Aktionsmethode, indem der angegebene Aktionsname, der Controllername, die Routenwerte und das jeweilige Protokoll verwendet werden.</summary>
      <returns>Die vollqualifizierte URL zu einer Aktionsmethode.</returns>
      <param name="actionName">Der Name der Aktionsmethode.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Das Objekt wird normalerweise mithilfe der Objektinitialisierersyntax erstellt.</param>
      <param name="protocol">Das Protokoll für die URL, beispielsweise "http" oder "https".</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Generiert eine vollqualifizierte URL in eine Aktionsmethode, indem der angegebene Aktionsname, der Controllername und die Routenwerte verwendet werden.</summary>
      <returns>Die vollqualifizierte URL zu einer Aktionsmethode.</returns>
      <param name="actionName">Der Name der Aktionsmethode.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Web.Routing.RouteValueDictionary,System.String,System.String)">
      <summary>Generiert eine vollqualifizierte URL für eine Aktionsmethode, indem der angegebene Aktionsname, der Controllername, die Routenwerte, das jeweilige Protokoll und der Hostname verwendet werden.</summary>
      <returns>Die vollqualifizierte URL zu einer Aktionsmethode.</returns>
      <param name="actionName">Der Name der Aktionsmethode.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <param name="protocol">Das Protokoll für die URL, beispielsweise "http" oder "https".</param>
      <param name="hostName">Der Hostname für die URL.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Generiert eine vollqualifizierte URL in eine Aktionsmethode für den angegebenen Aktionsnamen und die Routenwerte.</summary>
      <returns>Die vollqualifizierte URL zu einer Aktionsmethode.</returns>
      <param name="actionName">Der Name der Aktionsmethode.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Content(System.String)">
      <summary>Konvertiert einen virtuellen (relativen) Pfad in den absoluten Pfad einer Anwendung.</summary>
      <returns>Der absolute Pfad der Anwendung.</returns>
      <param name="contentPath">Der virtuelle Pfad des Inhalts.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Encode(System.String)">
      <summary>Codiert Sonderzeichen in einer URL-Zeichenfolge in Zeichenentität-Entsprechungen.</summary>
      <returns>Eine codierte URL-Zeichenfolge.</returns>
      <param name="url">Der zu codierende Text.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.GenerateContentUrl(System.String,System.Web.HttpContextBase)">
      <summary>Gibt eine Zeichenfolge zurück, die eine Inhalts-URL enthält.</summary>
      <returns>Eine Zeichenfolge, die eine Inhalts-URL enthält.</returns>
      <param name="contentPath">Der Inhaltspfad.</param>
      <param name="httpContext">Der HTTP-Kontext.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.GenerateUrl(System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.Boolean)">
      <summary>Gibt eine Zeichenfolge zurück, die eine URL enthält.</summary>
      <returns>Eine Zeichenfolge, die eine URL enthält.</returns>
      <param name="routeName">Der Routenname.</param>
      <param name="actionName">Der Name der Aktion.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="protocol">Das HTTP-Protokoll.</param>
      <param name="hostName">Der Name des Hosts.</param>
      <param name="fragment">Das Fragment.</param>
      <param name="routeValues">Die Routenwerte.</param>
      <param name="routeCollection">Die Routenauflistung.</param>
      <param name="requestContext">Der Anforderungskontext.</param>
      <param name="includeImplicitMvcValues">true, wenn implizite MVC-Werte eingeschlossen werden sollen, andernfalls false.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.GenerateUrl(System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.Boolean)">
      <summary>Gibt eine Zeichenfolge zurück, die eine URL enthält.</summary>
      <returns>Eine Zeichenfolge, die eine URL enthält.</returns>
      <param name="routeName">Der Routenname.</param>
      <param name="actionName">Der Name der Aktion.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="routeValues">Die Routenwerte.</param>
      <param name="routeCollection">Die Routenauflistung.</param>
      <param name="requestContext">Der Anforderungskontext.</param>
      <param name="includeImplicitMvcValues">true, wenn implizite MVC-Werte eingeschlossen werden sollen, andernfalls. false.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.IsLocalUrl(System.String)"></member>
    <member name="P:System.Web.Mvc.UrlHelper.RequestContext">
      <summary>Ruft Informationen zu einer HTTP-Anforderung ab, die einer definierten Route entspricht.</summary>
      <returns>Der Anforderungskontext.</returns>
    </member>
    <member name="P:System.Web.Mvc.UrlHelper.RouteCollection">
      <summary>Ruft eine Auflistung ab, die die Routen enthält, die für die Anwendung registriert sind.</summary>
      <returns>Die Routenauflistung.</returns>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.Object)">
      <summary>Generiert eine vollqualifizierte URL für die angegebenen Routenwerte.</summary>
      <returns>Die vollqualifizierte URL.</returns>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Das Objekt wird normalerweise mithilfe der Objektinitialisierersyntax erstellt.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String)">
      <summary>Generiert eine vollqualifizierte URL für den angegebenen Routennamen.</summary>
      <returns>Die vollqualifizierte URL.</returns>
      <param name="routeName">Der Name der Route, der zum Generieren der URL verwendet wird.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Object)">
      <summary>Generiert eine vollqualifizierte URL für die angegebenen Routenwerte, indem ein Routenname verwendet wird.</summary>
      <returns>Die vollqualifizierte URL.</returns>
      <param name="routeName">Der Name der Route, der zum Generieren der URL verwendet wird.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Das Objekt wird normalerweise mithilfe der Objektinitialisierersyntax erstellt.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Object,System.String)">
      <summary>Generiert eine vollqualifizierte URL für die angegebenen Routenwerte, indem ein Routenname und das jeweilige Protokoll verwendet werden.</summary>
      <returns>Die vollqualifizierte URL.</returns>
      <param name="routeName">Der Name der Route, der zum Generieren der URL verwendet wird.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Das Objekt wird normalerweise mithilfe der Objektinitialisierersyntax erstellt.</param>
      <param name="protocol">Das Protokoll für die URL, beispielsweise "http" oder "https".</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Generiert eine vollqualifizierte URL für die angegebenen Routenwerte, indem ein Routenname verwendet wird.</summary>
      <returns>Die vollqualifizierte URL.</returns>
      <param name="routeName">Der Name der Route, der zum Generieren der URL verwendet wird.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Web.Routing.RouteValueDictionary,System.String,System.String)">
      <summary>Generiert eine vollqualifizierte URL für die angegebenen Routenwerte, indem der angegebene Routenname, das jeweilige Protokoll und der Hostname verwendet werden.</summary>
      <returns>Die vollqualifizierte URL.</returns>
      <param name="routeName">Der Name der Route, der zum Generieren der URL verwendet wird.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <param name="protocol">Das Protokoll für die URL, beispielsweise "http" oder "https".</param>
      <param name="hostName">Der Hostname für die URL.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.Web.Routing.RouteValueDictionary)">
      <summary>Generiert eine vollqualifizierte URL für die angegebenen Routenwerte.</summary>
      <returns>Die vollqualifizierte URL.</returns>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
    </member>
    <member name="T:System.Web.Mvc.UrlParameter">
      <summary>Stellt einen optionalen Parameter dar, der von der <see cref="T:System.Web.Mvc.MvcHandler" />-Klasse während des Routings verwendet wird.</summary>
    </member>
    <member name="F:System.Web.Mvc.UrlParameter.Optional">
      <summary>Enthält den schreibgeschützten Wert für den optionalen Parameter.</summary>
    </member>
    <member name="T:System.Web.Mvc.ValidatableObjectAdapter">
      <summary>Stellt einen Objektadapter bereit, der validiert werden kann.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidatableObjectAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ValidatableObjectAdapter" />-Klasse.</summary>
      <param name="metadata">Die Modellmetadaten.</param>
      <param name="context">Der Controllerkontext.</param>
    </member>
    <member name="M:System.Web.Mvc.ValidatableObjectAdapter.Validate(System.Object)">
      <summary>Validiert das angegebene Objekt.</summary>
      <returns>Eine Liste der Validierungsergebnisse.</returns>
      <param name="container">Der Container.</param>
    </member>
    <member name="T:System.Web.Mvc.ValidateAntiForgeryTokenAttribute">
      <summary>Stellt ein Attribut dar, mit dem ermittelt werden kann, ob eine Serveranforderung manipuliert wurde.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ValidateAntiForgeryTokenAttribute" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidateAntiForgeryTokenAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Wird aufgerufen, wenn eine Autorisierung erforderlich ist.</summary>
      <param name="filterContext">Der Filterkontext.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="filterContext" />-Parameter ist null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValidateAntiForgeryTokenAttribute.Salt">
      <summary>Ruft die Saltzeichenfolge ab bzw. legt diese fest.</summary>
      <returns>Die Saltzeichenfolge.</returns>
    </member>
    <member name="T:System.Web.Mvc.ValidateInputAttribute">
      <summary>Stellt ein Attribut dar, das verwendet wird, um Aktionsmethoden zu markieren, deren Eingabe überprüft werden muss.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidateInputAttribute.#ctor(System.Boolean)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ValidateInputAttribute" />-Klasse.</summary>
      <param name="enableValidation">true, um die Validierung zu aktivieren.</param>
    </member>
    <member name="P:System.Web.Mvc.ValidateInputAttribute.EnableValidation">
      <summary>Ruft einen Wert ab (bzw. legt diesen fest), der angibt, ob die Validierung aktiviert werden soll.</summary>
      <returns>true, wenn die Validierung aktiviert ist, andernfalls false.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValidateInputAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Wird aufgerufen, wenn eine Autorisierung erforderlich ist.</summary>
      <param name="filterContext">Der Filterkontext.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="filterContext" />-Parameter ist null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderCollection">
      <summary>Stellt die Auflistung der Wertanbieterobjekte für die Anwendung dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ValueProviderCollection" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IValueProvider})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ValueProviderCollection" />-Klasse und registriert die angegebenen Wertanbieter.</summary>
      <param name="list">Die Liste zu registrierender Wertanbieter.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.ContainsPrefix(System.String)">
      <summary>Bestimmt, ob die Auflistung das angegebene Präfix enthält.</summary>
      <returns>true, wenn die Auflistung das angegebene Präfix enthält, andernfalls false.</returns>
      <param name="prefix">Das Präfix, nach dem gesucht werden soll.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.GetValue(System.String)">
      <summary>Gibt mit dem angegebenen Schlüssel ein Wertobjekt zurück.</summary>
      <returns>Das Wertobjekt für den angegebenen Schlüssel.</returns>
      <param name="key">Der Schlüssel für das Wertobjekt, das abgerufen werden soll.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.GetValue(System.String,System.Boolean)">
      <summary>Gibt ein Wertobjekt mithilfe des angegebenen Schlüssels und des angegebenen Parameters zum Überspringen der Validierung zurück.</summary>
      <returns>Das Wertobjekt für den angegebenen Schlüssel.</returns>
      <param name="key">Der Schlüssel für das Wertobjekt, das abgerufen werden soll.</param>
      <param name="skipValidation">true, um anzugeben, dass die Validierung übersprungen werden soll, andernfalls false.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.InsertItem(System.Int32,System.Web.Mvc.IValueProvider)">
      <summary>Fügt das angegebene Wertanbieterobjekt in der Auflistung an der angegebenen Indexposition ein.</summary>
      <param name="index">Die nullbasierte Indexposition, an der der Wertanbieter in der Auflistung eingefügt werden soll.</param>
      <param name="item">Das einzufügende Wertanbieterobjekt.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="item" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.SetItem(System.Int32,System.Web.Mvc.IValueProvider)">
      <summary>Ersetzt den Wertanbieter an der angegebenen Indexposition durch einen neuen Wertanbieter.</summary>
      <param name="index">Der nullbasierte Index des zu ersetzenden Elements.</param>
      <param name="item">Der neue Wert für das Element am angegebenen Index.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="item" />-Parameter ist null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderDictionary">
      <summary>Stellt ein Wörterbuch von Wertanbietern für die Anwendung dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ValueProviderDictionary" />-Klasse.</summary>
      <param name="controllerContext">Der Controllerkontext.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult})">
      <summary>Fügt der Auflistung der Wertanbieter das angegebene Element hinzu.</summary>
      <param name="item">Das Objekt, das dem <see cref="T:System.Collections.Generic.ICollection`1" />-Objekt hinzugefügt werden soll.</param>
      <exception cref="T:System.NotSupportedException">Das <see cref="T:System.Collections.Generic.ICollection`1" />-Objekt ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Add(System.String,System.Object)">
      <summary>Fügt ein Element, das über den angegebenen Schlüssel und Wert verfügt, der Auflistung von Wertanbietern hinzu.</summary>
      <param name="key">Der Schlüssel des hinzuzufügenden Elements.</param>
      <param name="value">Der Wert des hinzuzufügenden Elements.</param>
      <exception cref="T:System.NotSupportedException">Das <see cref="T:System.Collections.Generic.IDictionary`2" />-Objekt ist schreibgeschützt.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
      <exception cref="T:System.ArgumentException">Ein Element mit dem angegebenen Schlüssel ist bereits im <see cref="T:System.Collections.Generic.IDictionary`2" />-Objekt vorhanden.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Add(System.String,System.Web.Mvc.ValueProviderResult)">
      <summary>Fügt ein Element, das über den angegebenen Schlüssel und Wert verfügt, der Auflistung von Wertanbietern hinzu.</summary>
      <param name="key">Der Schlüssel des hinzuzufügenden Elements.</param>
      <param name="value">Der Wert des hinzuzufügenden Elements.</param>
      <exception cref="T:System.NotSupportedException">Das <see cref="T:System.Collections.Generic.IDictionary`2" />-Objekt ist schreibgeschützt.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
      <exception cref="T:System.ArgumentException">Ein Element mit dem angegebenen Schlüssel ist bereits im <see cref="T:System.Collections.Generic.IDictionary`2" />-Objekt vorhanden.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Clear">
      <summary>Entfernt alle Elemente aus der Auflistung der Wertanbieter.</summary>
      <exception cref="T:System.NotSupportedException">Das <see cref="T:System.Collections.Generic.ICollection`1" />-Objekt ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult})">
      <summary>Bestimmt, ob die Auflistung der Wertanbieter das angegebene Element enthält.</summary>
      <returns>true, wenn <paramref name="item" /> in der Auflistung der Wertanbieter gefunden wird, andernfalls false.</returns>
      <param name="item">Das Objekt, nach dem in der <see cref="T:System.Collections.Generic.ICollection`1" />-Instanz gesucht wird.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.ContainsKey(System.String)">
      <summary>Bestimmt, ob die Auflistung von Wertanbietern ein Element enthält, das über den angegebenen Schlüssel verfügt.</summary>
      <returns>true, wenn die Auflistung der Wertanbieter ein Element mit diesem Schlüssel enthält, andernfalls false.</returns>
      <param name="key">Der Schlüssel des Elements, nach dem in der <see cref="T:System.Collections.Generic.IDictionary`2" />-Instanz gesucht wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.ControllerContext">
      <summary>Ruft den Controllerkontext ab bzw. legt ihn fest.</summary>
      <returns>Der Controllerkontext.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult}[],System.Int32)">
      <summary>Kopiert die Elemente der Auflistung in ein Array, wobei am angegebenen Index begonnen wird.</summary>
      <param name="array">Das eindimensionale Array, in das die Elemente aus dem <see cref="T:System.Collections.Generic.ICollection`1" />-Objekt kopiert werden. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="arrayIndex">Der nullbasierte Index in <paramref name="array" />, ab dem kopiert wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> ist kleiner als 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> ist mehrdimensional.-oder-<paramref name="arrayIndex" /> ist größer als oder gleich der Länge des <paramref name="array" />.-oder-Die Anzahl der Elemente in der Quellauflistung ist größer als der verfügbare Platz von <paramref name="arrayIndex" /> bis zum Ende des Ziel-<paramref name="array" />.-oder-Der Typ <paramref name="T" /> kann nicht automatisch in den Typ des Zielarrays umgewandelt werden.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Count">
      <summary>Ruft die Anzahl der Elemente in der Auflistung ab.</summary>
      <returns>Die Anzahl der Elemente in der Auflistung.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.GetEnumerator">
      <summary>Gibt einen Enumerator zurück, mit dem die Auflistung durchlaufen werden kann.</summary>
      <returns>Ein Enumerator, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</summary>
      <returns>true, wenn die Auflistung schreibgeschützt ist, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Item(System.String)">
      <summary>Ruft das <see cref="T:System.Web.Mvc.ValueProviderResult" />-Objekt ab (bzw. legt dieses fest), das über den angegebenen Schlüssel verfügt.</summary>
      <returns>Das <see cref="T:System.Web.Mvc.ValueProviderResult" />-Objekt.</returns>
      <param name="key">Der Schlüssel.</param>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Keys">
      <summary>Ruft eine Auflistung ab, die die Schlüssel der <see cref="T:System.Collections.Generic.IDictionary`2" />-Instanz enthält.</summary>
      <returns>Eine Auflistung, die die Schlüssel des Objekts enthält, das die <see cref="T:System.Collections.Generic.IDictionary`2" />-Schnittstelle implementiert.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult})">
      <summary>Entfernt das erste Vorkommen des angegebenen Elements aus der Auflistung der Wertanbieter.</summary>
      <returns>true, wenn <paramref name="item" /> erfolgreich aus der Auflistung entfernt wurde, andernfalls false. Diese Methode gibt auch dann false zurück, wenn <paramref name="item" /> nicht in der Auflistung gefunden wurde.</returns>
      <param name="item">Das aus der <see cref="T:System.Collections.Generic.ICollection`1" />-Instanz zu entfernende Objekt.</param>
      <exception cref="T:System.NotSupportedException">Das <see cref="T:System.Collections.Generic.ICollection`1" />-Objekt ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Remove(System.String)">
      <summary>Entfernt das Element, das über den angegebenen Schlüssel verfügt, aus der Auflistung der Wertanbieter.</summary>
      <returns>true, wenn das Element erfolgreich entfernt wurde, andernfalls false. Diese Methode gibt auch dann false zurück, wenn <paramref name="key" /> nicht in der Auflistung gefunden wurde.</returns>
      <param name="key">Der Schlüssel des zu entfernenden Elements.</param>
      <exception cref="T:System.NotSupportedException">Das <see cref="T:System.Collections.Generic.IDictionary`2" />-Objekt ist schreibgeschützt.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, mit dem eine Auflistung durchlaufen werden kann.</summary>
      <returns>Ein Enumerator, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.System#Web#Mvc#IValueProvider#ContainsPrefix(System.String)">
      <summary>Bestimmt, ob die Auflistung das angegebene Präfix enthält.</summary>
      <returns>true, wenn die Auflistung das angegebene Präfix enthält, andernfalls false.</returns>
      <param name="prefix">Das Präfix, nach dem gesucht werden soll.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.System#Web#Mvc#IValueProvider#GetValue(System.String)">
      <summary>Gibt mit dem angegebenen Schlüssel ein Wertobjekt zurück.</summary>
      <returns>Das Wertobjekt für den angegebenen Schlüssel.</returns>
      <param name="key">Der Schlüssel für das Wertobjekt, das zurückgegeben werden soll.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.TryGetValue(System.String,System.Web.Mvc.ValueProviderResult@)">
      <summary>Ruft den Wert des Elements ab, das über den angegebenen Schlüssel verfügt.</summary>
      <returns>true, wenn das Objekt, das <see cref="T:System.Collections.Generic.IDictionary`2" /> implementiert, ein Element mit dem angegebenen Schlüssel enthält, andernfalls false.</returns>
      <param name="key">Der Schlüssel des abzurufenden Elements.</param>
      <param name="value">Wenn diese Methode zurückgegeben wird, enthält sie den dem angegebenen Schlüssel zugeordneten Wert, sofern der Schlüssel gefunden wird, andernfalls den Standardwert für den Typ des <paramref name="value" />-Parameters. Dieser Parameter wird nicht initialisiert übergeben.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Values">
      <summary>Ruft eine Auflistung ab, die die Werte des <see cref="T:System.Collections.Generic.IDictionary`2" />-Objekts enthält.</summary>
      <returns>Eine Auflistung der Werte im Objekt, das die <see cref="T:System.Collections.Generic.IDictionary`2" />-Schnittstelle implementiert.</returns>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderFactories">
      <summary>Stellt einen Container für Wertanbieter-Factoryobjekte dar.</summary>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderFactories.Factories">
      <summary>Ruft die Auflistung der Wertanbieterfactorys für die Anwendung ab.</summary>
      <returns>Die Auflistung der Wertanbieter-Factoryobjekte.</returns>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderFactory">
      <summary>Stellt eine Factory zum Erstellen von Wertanbieterobjekten dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactory.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ValueProviderFactory" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Gibt ein Wertanbieterobjekt für den angegebenen Controllerkontext zurück.</summary>
      <returns>Ein Wertanbieterobjekt.</returns>
      <param name="controllerContext">Ein Objekt, das Informationen zur aktuellen HTTP-Anforderung kapselt.</param>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderFactoryCollection">
      <summary>Stellt die Auflistung der Wertanbieterfactorys für die Anwendung dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ValueProviderFactoryCollection" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.ValueProviderFactory})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ValueProviderFactoryCollection" />-Klasse, indem die angegebene Liste der Wertanbieterfactorys verwendet wird.</summary>
      <param name="list">Eine Liste von Wertanbieterfactorys, mit denen die Auflistung initialisiert werden soll.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Gibt die Wertanbieterfactory für den angegebenen Controllerkontext zurück.</summary>
      <returns>Das Wertanbieter-Factoryobjekt für den angegebenen Controllerkontext.</returns>
      <param name="controllerContext">Ein Objekt, das Informationen zur aktuellen HTTP-Anforderung kapselt.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.InsertItem(System.Int32,System.Web.Mvc.ValueProviderFactory)">
      <summary>Fügt das angegebene Wertanbieter-Factoryobjekt in der Auflistung an der angegebenen Indexposition ein.</summary>
      <param name="index">Die nullbasierte Indexposition, an der der Wertanbieter in der Auflistung eingefügt werden soll.</param>
      <param name="item">Das einzufügende Wertanbieter-Factoryobjekt.</param>
      <exception cref="ArgumentNullException">Der <paramref name="item" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.SetItem(System.Int32,System.Web.Mvc.ValueProviderFactory)">
      <summary>Legt das angegebene Wertanbieter-Factoryobjekt an der angegebenen Indexposition fest.</summary>
      <param name="index">Die nullbasierte Indexposition, an der der Wertanbieter in der Auflistung eingefügt werden soll.</param>
      <param name="item">Das festzulegende Wertanbieter-Factoryobjekt.</param>
      <exception cref="ArgumentNullException">Der <paramref name="item" />-Parameter ist null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderResult">
      <summary>Stellt das Ergebnis dar, das sich aus dem Binden eines Werts (z. B. aus einer Formularbereitstellung oder einer Abfragezeichenfolge) an eine Aktionsmethodenargument-Eigenschaft oder an das Argument selbst ergibt.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ValueProviderResult" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.#ctor(System.Object,System.String,System.Globalization.CultureInfo)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ValueProviderResult" />-Klasse, indem der angegebene Rohwert, der Versuchswert und die Kulturinformationen verwendet werden.</summary>
      <param name="rawValue">Der Rohwert.</param>
      <param name="attemptedValue">Der Versuchswert.</param>
      <param name="culture">Die Kultur.</param>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderResult.AttemptedValue">
      <summary>Ruft den Rohwert ab (bzw. legt diesen fest), der für die Anzeige in eine Zeichenfolge konvertiert wird.</summary>
      <returns>Der Rohwert.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.ConvertTo(System.Type)">
      <summary>Konvertiert den Wert, der von diesem Ergebnis gekapselt wird, in den angegebenen Typ.</summary>
      <returns>Der konvertierte Wert.</returns>
      <param name="type">Der Zieltyp.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="type" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.ConvertTo(System.Type,System.Globalization.CultureInfo)">
      <summary>Konvertiert den Wert, der von diesem Ergebnis gekapselt wird, in den angegebenen Typ, indem die angegebenen Kulturinformationen verwendet werden.</summary>
      <returns>Der konvertierte Wert.</returns>
      <param name="type">Der Zieltyp.</param>
      <param name="culture">Die Kultur, die bei der Konvertierung verwendet wird.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="type" />-Parameter ist null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderResult.Culture">
      <summary>Ruft die Kultur ab bzw. legt diese fest.</summary>
      <returns>Die Kultur.</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderResult.RawValue">
      <summary>Ruft den Rohwert ab (bzw. legt diesen fest), der vom Wertanbieter angegeben wird.</summary>
      <returns>Der Rohwert.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewContext">
      <summary>Kapselt Informationen, die sich auf das Rendern einer Ansicht beziehen.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewContext.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ViewContext" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.IView,System.Web.Mvc.ViewDataDictionary,System.Web.Mvc.TempDataDictionary,System.IO.TextWriter)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ViewContext" />-Klasse, indem der angegebene Controllerkontext, die Ansicht, das Ansichtsdatenwörterbuch, das temporäre Datenwörterbuch und der Textwriter verwendet werden.</summary>
      <param name="controllerContext">Kapselt Informationen über die HTTP-Anforderung.</param>
      <param name="view">Die zu rendernde Ansicht.</param>
      <param name="viewData">Das Wörterbuch, das die Daten enthält, die erforderlich sind, um die Ansicht zu rendern.</param>
      <param name="tempData">Das Wörterbuch, das temporäre Daten für die Ansicht enthält.</param>
      <param name="writer">Das Textwriterobjekt, mit dem die HTML-Ausgabe geschrieben wird.</param>
      <exception cref="T:System.ArgumentNullException">Einer der Parameter ist null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ClientValidationEnabled">
      <summary>Ruft einen Wert ab, der angibt, ob die Validierung auf dem Client aktiviert ist, oder legt diesen fest.</summary>
      <returns>true, wenn die Validierung auf dem Client aktiviert ist, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.FormContext">
      <summary>Ruft ein Objekt ab oder legt ein Objekt fest, das die zur Validierung und Verarbeitung der Eingabedaten von einem HTML-Formular benötigten Informationen kapselt.</summary>
      <returns>Ein Objekt, das die zur Validierung und Verarbeitung der Eingabedaten von einem HTML-Formular benötigten Informationen kapselt.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewContext.OutputClientValidation">
      <summary>Schreibt die Clientvalidierungsinformationen in die HTTP-Antwort.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.TempData">
      <summary>Ruft Daten ab, die dieser Anforderung zugeordnet sind und nur für eine Anforderung verfügbar sind.</summary>
      <returns>Die temporären Daten.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.UnobtrusiveJavaScriptEnabled"></member>
    <member name="P:System.Web.Mvc.ViewContext.View">
      <summary>Ruft ein Objekt ab, das die <see cref="T:System.Web.Mvc.IView" />-Schnittstelle implementiert, die im Browser gerendert werden soll.</summary>
      <returns>Die Ansicht.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ViewData">
      <summary>Ruft die Ansichtsdaten ab, die an die Ansicht übergeben werden.</summary>
      <returns>Die Ansichtsdaten.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.Writer">
      <summary>Ruft das Textwriterobjekt ab, mit dem die HTML-Ausgabe geschrieben wird, oder legt dieses fest.</summary>
      <returns>Das Objekt, das zum Schreiben der HTML-Ausgabe verwendet wird.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewDataDictionary">
      <summary>Stellt einen Container dar, der verwendet wird, um Daten zwischen einem Controller und einer Ansicht zu übergeben.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.#ctor(System.Object)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Klasse, indem das angegebene Modell verwendet wird.</summary>
      <param name="model">Das Modell.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.#ctor(System.Web.Mvc.ViewDataDictionary)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Klasse, indem das angegebene Wörterbuch verwendet wird.</summary>
      <param name="dictionary">Das Wörterbuch.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="dictionary" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Fügt der Auflistung das angegebene Element hinzu.</summary>
      <param name="item">Das Objekt, das der Auflistung hinzugefügt werden soll.</param>
      <exception cref="T:System.NotSupportedException">Die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Add(System.String,System.Object)">
      <summary>Fügt der Auflistung ein Element mit dem angegebenen Schlüssel und dem angegebenen Wert hinzu.</summary>
      <param name="key">Der Schlüssel des hinzuzufügenden Elements.</param>
      <param name="value">Der Wert des hinzuzufügenden Elements.</param>
      <exception cref="T:System.NotSupportedException">Das <see cref="T:System.Collections.Generic.IDictionary`2" />-Objekt ist schreibgeschützt.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
      <exception cref="T:System.ArgumentException">Ein Element mit demselben Schlüssel ist im <see cref="T:System.Collections.Generic.IDictionary`2" />-Objekt bereits vorhanden.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Clear">
      <summary>Entfernt alle Elemente aus der Auflistung.</summary>
      <exception cref="T:System.NotSupportedException">Das <see cref="T:System.Collections.Generic.ICollection`1" />-Objekt ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Bestimmt, ob die Auflistung das angegebene Element enthält.</summary>
      <returns>true, wenn sich <paramref name="item" /> in der Auflistung befindet, andernfalls false.</returns>
      <param name="item">Das Objekt, das in der Auflistung gesucht werden soll.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.ContainsKey(System.String)">
      <summary>Bestimmt, ob die Auflistung ein Element enthält, das über den angegebenen Schlüssel verfügt.</summary>
      <returns>true, wenn die Auflistung ein Element mit dem angegebenen Schlüssel enthält, andernfalls false.</returns>
      <param name="key">Der Schlüssel des Elements, nach dem in der Auflistung gesucht wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Kopiert die Elemente der Auflistung in ein Array, wobei an einem bestimmten Index begonnen wird.</summary>
      <param name="array">Das eindimensionale Array, das das Ziel der aus der Auflistung kopierten Elemente ist. Für das Array muss eine nullbasierte Indizierung verwendet werden.</param>
      <param name="arrayIndex">Der nullbasierte Index im <paramref name="array" />, an dem der Kopiervorgang beginnt.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> ist null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> ist kleiner als 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> ist mehrdimensional.-oder- <paramref name="arrayIndex" /> ist größer als oder gleich der Länge von <paramref name="array" />.-oder- Die Anzahl der Elemente in der Quellauflistung ist größer als der verfügbare Platz von <paramref name="arrayIndex" /> bis zum Ende des Ziel-<paramref name="array" />.-oder- Der Typ <paramref name="T" /> kann nicht automatisch in den Typ des Ziel-<paramref name="array" /> umgewandelt werden.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Count">
      <summary>Ruft die Anzahl der Elemente in der Auflistung ab.</summary>
      <returns>Die Anzahl der Elemente in der Auflistung.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Eval(System.String)">
      <summary>Wertet den angegebenen Ausdruck aus.</summary>
      <returns>Die Ergebnisse der Auswertung.</returns>
      <param name="expression">Der Ausdruck.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="expression" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Eval(System.String,System.String)">
      <summary>Wertet den angegebenen Ausdruck mithilfe des angegebenen Formats aus.</summary>
      <returns>Die Ergebnisse der Auswertung.</returns>
      <param name="expression">Der Ausdruck.</param>
      <param name="format">Das Format.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.GetEnumerator">
      <summary>Gibt einen Enumerator zurück, mit dem die Auflistung durchlaufen werden kann.</summary>
      <returns>Ein Enumerator, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.GetViewDataInfo(System.String)">
      <summary>Gibt Informationen zu den Ansichtsdaten zurück wie vom <paramref name="expression" />-Parameter definiert.</summary>
      <returns>Ein Objekt, das die Ansichtsdateninformationen enthält, die vom <paramref name="expression" />-Parameter definiert werden.</returns>
      <param name="expression">Ein Satz von Schlüssel/Wert-Paaren, die die zu zurückzugebenden Ansichtsdateninformationen definieren.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="expression" />-Parameter ist entweder null oder leer.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.IsReadOnly">
      <summary>Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</summary>
      <returns>true, wenn die Auflistung schreibgeschützt ist, andernfalls false.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Item(System.String)">
      <summary>Ruft das Element ab (bzw. legt es fest), das dem angegebenen Schlüssel zugeordnet ist.</summary>
      <returns>Der Wert des ausgewählten Elements.</returns>
      <param name="key">Der Schlüssel.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Keys">
      <summary>Ruft eine Auflistung ab, die die Schlüssel dieses Wörterbuchs enthält.</summary>
      <returns>Eine Auflistung, die die Schlüssel des Objekts enthält, mit dem das <see cref="T:System.Collections.Generic.IDictionary`2" />-Element implementiert wird.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Model">
      <summary>Ruft das den Ansichtsdaten zugeordnete Modell ab oder legt es fest.</summary>
      <returns>Das Datenmodell, das den Ansichtsdaten zugeordnet ist.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.ModelMetadata">
      <summary>Ruft die Informationen über das Modell ab oder legt sie fest.</summary>
      <returns>Informationen über das Modell.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.ModelState">
      <summary>Ruft den Zustand des Modells ab.</summary>
      <returns>Der Zustand des Modells.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Entfernt das erste Vorkommen eines angegebenen Objekts aus der Auflistung.</summary>
      <returns>true, wenn <paramref name="item" /> erfolgreich aus der Auflistung entfernt wurde, andernfalls false. Diese Methode gibt auch dann false zurück, wenn <paramref name="item" /> nicht in der Auflistung gefunden wurde.</returns>
      <param name="item">Das Objekt, das aus der Auflistung entfernt werden soll.</param>
      <exception cref="T:System.NotSupportedException">Die Auflistung ist schreibgeschützt.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Remove(System.String)">
      <summary>Entfernt das Element mit dem angegebenen Schlüssel aus der Auflistung.</summary>
      <returns>true, wenn das Element erfolgreich entfernt wurde, andernfalls false. Diese Methode gibt auch dann false zurück, wenn der <paramref name="key" /> nicht in der ursprünglichen Auflistung gefunden wurde.</returns>
      <param name="key">Der Schlüssel des zu entfernenden Elements.</param>
      <exception cref="T:System.NotSupportedException">Die Auflistung ist schreibgeschützt.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.SetModel(System.Object)">
      <summary>Legt das Datenmodell fest, das für die Ansicht verwendet werden soll.</summary>
      <param name="value">Das Datenmodell, das für die Ansicht verwendet werden soll.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gibt einen Enumerator zurück, mit dem die Auflistung durchlaufen werden kann.</summary>
      <returns>Ein Enumerator, der zum Durchlaufen der Auflistung verwendet werden kann.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.TemplateInfo">
      <summary>Ruft ein Objekt ab oder legt ein Objekt fest, das Informationen zum aktuellen Vorlagenkontext kapselt.</summary>
      <returns>Ein Objekt, das Informationen zur aktuellen Vorlage enthält.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.TryGetValue(System.String,System.Object@)">
      <summary>Versucht, den Wert abzurufen, der dem angegebenen Schlüssel zugeordnet ist.</summary>
      <returns>true, wenn die Auflistung ein Element mit dem angegebenen Schlüssel enthält, andernfalls false.</returns>
      <param name="key">Der Schlüssel des abzurufenden Werts.</param>
      <param name="value">Wenn diese Methode zurückgegeben wird, enthält sie den dem angegebenen Schlüssel zugeordneten Wert, sofern der Schlüssel gefunden wird, andernfalls den Standardwert für den Typ des <paramref name="value" />-Parameters. Dieser Parameter wird nicht initialisiert übergeben.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> ist null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Values">
      <summary>Ruft eine Auflistung ab, die die Werte in diesem Wörterbuch enthält.</summary>
      <returns>Eine Auflistung, die die Werte des Objekts enthält, mit dem das <see cref="T:System.Collections.Generic.IDictionary`2" />-Element implementiert wird.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewDataDictionary`1">
      <summary>Stellt einen Container dar, der verwendet wird, um stark typisierte Daten zwischen einem Controller und einer Ansicht zu übergeben.</summary>
      <typeparam name="TModel">Der Typ des Modells.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.#ctor(System.Web.Mvc.ViewDataDictionary)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />-Klasse. Verwendet hierfür das angegebene Ansichtsdatenwörterbuch.</summary>
      <param name="viewDataDictionary">Ein vorhandenes Ansichtsdatenwörterbuch, das in diese Instanz kopiert werden soll.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.#ctor(`0)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />-Klasse mithilfe des angegebenen Modells.</summary>
      <param name="model">Das Datenmodell, das für die Ansicht verwendet werden soll.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary`1.Model">
      <summary>Ruft das Modell ab bzw. legt es fest.</summary>
      <returns>Ein Verweis auf das Datenmodell.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary`1.ModelMetadata">
      <summary>Ruft die Informationen über das Modell ab oder legt sie fest.</summary>
      <returns>Informationen über das Modell.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.SetModel(System.Object)">
      <summary>Legt das Datenmodell fest, das für die Ansicht verwendet werden soll.</summary>
      <param name="value">Das Datenmodell, das für die Ansicht verwendet werden soll.</param>
      <exception cref="T:System.InvalidOperationException">Beim Festlegen des Modells ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="T:System.Web.Mvc.ViewDataInfo">
      <summary>Kapselt Informationen zum aktuellen für die Entwicklung von Vorlagen verwendeten Vorlageninhalt und zu HTML-Hilfsprogrammen, die mit Vorlagen interagieren.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataInfo.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ViewDataInfo" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataInfo.#ctor(System.Func`1)"></member>
    <member name="P:System.Web.Mvc.ViewDataInfo.Container">
      <summary>Ruft ein Objekt ab oder legt ein Objekt fest, das die durch die Vorlage anzuzeigenden Werte enthält.</summary>
      <returns>Das Objekt, das die durch die Vorlage anzuzeigenden Werte enthält.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataInfo.PropertyDescriptor">
      <summary>Ruft die Beschreibung der Eigenschaft ab, die von der Vorlage angezeigt werden soll, oder legt sie fest.</summary>
      <returns>Die Beschreibung der Eigenschaft, die von der Vorlage angezeigt werden soll.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataInfo.Value">
      <summary>Ruft den aktuellen Wert ab, der von der Vorlage angezeigt werden soll, oder legt ihn fest.</summary>
      <returns>Der aktuelle Wert, der von der Vorlage angezeigt werden soll.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewEngineCollection">
      <summary>Stellt eine Auflistung von Ansichtsmodulen dar, die der Anwendung zur Verfügung stehen.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ViewEngineCollection" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IViewEngine})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ViewEngineCollection" />-Klasse, indem die angegebene Liste der Ansichtsmodule verwendet wird.</summary>
      <param name="list">Die Liste, die mit der neuen Auflistung umschlossen wird.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.FindPartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Sucht anhand des angegebenen Controllerkontexts nach der angegebenen Teilansicht.</summary>
      <returns>Die Teilansicht.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="partialViewName">Der Name der Teilansicht.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="controllerContext" />-Parameter ist null.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="partialViewName" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.FindView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Sucht anhand des angegebenen Controllerkontexts und der Masteransicht nach der angegebenen Ansicht.</summary>
      <returns>Die Ansicht.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="viewName">Der Name der Ansicht.</param>
      <param name="masterName">Der Name der Masteransicht.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="controllerContext" />-Parameter ist null.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="viewName" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.InsertItem(System.Int32,System.Web.Mvc.IViewEngine)">
      <summary>Fügt ein Element am angegebenen Index in die Auflistung ein.</summary>
      <param name="index">Der nullbasierte Index, an dem <paramref name="item" /> eingefügt werden soll.</param>
      <param name="item">Das einzufügende Objekt. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als null.-oder-<paramref name="index" /> ist größer als die Anzahl der Elemente in der Auflistung.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="item" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.SetItem(System.Int32,System.Web.Mvc.IViewEngine)">
      <summary>Ersetzt das Element am angegebenen Index.</summary>
      <param name="index">Der nullbasierte Index des zu ersetzenden Elements.</param>
      <param name="item">Der neue Wert für das Element am angegebenen Index. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> ist kleiner als null.-oder-<paramref name="index" /> ist größer als die Anzahl der Elemente in der Auflistung.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="item" />-Parameter ist null.</exception>
    </member>
    <member name="T:System.Web.Mvc.ViewEngineResult">
      <summary>Stellt das Ergebnis der Suche nach einem Ansichtsmodul dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineResult.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ViewEngineResult" />-Klasse, indem die angegebenen Suchspeicherorte verwendet werden.</summary>
      <param name="searchedLocations">Die Speicherorte, an denen gesucht wird.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="searchedLocations" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineResult.#ctor(System.Web.Mvc.IView,System.Web.Mvc.IViewEngine)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ViewEngineResult" />-Klasse, indem die angegebene Ansicht und das Ansichtsmodul verwendet werden.</summary>
      <param name="view">Die Ansicht.</param>
      <param name="viewEngine">Das Ansichtsmodul.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="view " />-Parameter oder der <paramref name="viewEngine" />-Parameter ist null.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewEngineResult.SearchedLocations">
      <summary>Ruft die Suchspeicherorte ab bzw. legt diese fest.</summary>
      <returns>Die Speicherorte, an denen gesucht wird.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewEngineResult.View">
      <summary>Ruft die Ansicht ab bzw. legt diese fest.</summary>
      <returns>Die Ansicht.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewEngineResult.ViewEngine">
      <summary>Ruft das Ansichtsmodul ab bzw. legt dieses fest.</summary>
      <returns>Das Ansichtsmodul.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewEngines">
      <summary>Stellt eine Auflistung von Ansichtsmodulen dar, die der Anwendung zur Verfügung stehen.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewEngines.Engines">
      <summary>Ruft die Ansichtsmodule ab.</summary>
      <returns>Die Ansichtsmodule.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewMasterPage">
      <summary>Stellt die Informationen dar, die erforderlich sind, um eine Masteransichtsseite zu erstellen.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewMasterPage.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ViewMasterPage" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Ajax">
      <summary>Ruft das AJAX-Skript für die Gestaltungsvorlage ab.</summary>
      <returns>Das AJAX-Skript für die Gestaltungsvorlage.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Html">
      <summary>Ruft die HTML-Daten für die Gestaltungsvorlage ab.</summary>
      <returns>Die HTML-Daten für die Gestaltungsvorlage.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Model">
      <summary>Ruft das Modell ab.</summary>
      <returns>Das Modell.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.TempData">
      <summary>Ruft die temporären Daten ab.</summary>
      <returns>Die temporären Daten.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Url">
      <summary>Ruft die URL ab.</summary>
      <returns>Die URL.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.View"></member>
    <member name="P:System.Web.Mvc.ViewMasterPage.ViewContext">
      <summary>Ruft den Ansichtskontext ab.</summary>
      <returns>Der Ansichtskontext.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.ViewData">
      <summary>Ruft die Ansichtsdaten ab.</summary>
      <returns>Die Ansichtsdaten.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Writer">
      <summary>Ruft den Writer ab, der zum Rendern der Gestaltungsvorlage verwendet wird.</summary>
      <returns>Der Writer, der zum Rendern der Gestaltungsvorlage verwendet wird.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewMasterPage`1">
      <summary>Stellt die Informationen dar, die erforderlich sind, um eine stark typisierte Masteransichtsseite zu erstellen.</summary>
      <typeparam name="TModel">Der Typ des Modells.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewMasterPage`1.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ViewMasterPage`1" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.Ajax">
      <summary>Ruft das AJAX-Skript für die Gestaltungsvorlage ab.</summary>
      <returns>Das AJAX-Skript für die Gestaltungsvorlage.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.Html">
      <summary>Ruft die HTML-Daten für die Gestaltungsvorlage ab.</summary>
      <returns>Die HTML-Daten für die Gestaltungsvorlage.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.Model">
      <summary>Ruft das Modell ab.</summary>
      <returns>Ein Verweis auf das Datenmodell.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.ViewData">
      <summary>Ruft die Ansichtsdaten ab.</summary>
      <returns>Die Ansichtsdaten.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewPage">
      <summary>Stellt die Eigenschaften und die Methoden dar, die benötigt werden, um eine Ansicht als Web Forms-Seite zu rendern.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ViewPage" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Ajax">
      <summary>Ruft das <see cref="T:System.Web.Mvc.AjaxHelper" />-Objekt ab (bzw. legt es fest), das für das Rendern von HTML in AJAX-Szenarios verwendet wird.</summary>
      <returns>Das AJAX-Hilfsobjekt, das der Ansicht zugeordnet ist.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Html">
      <summary>Ruft das <see cref="T:System.Web.Mvc.HtmlHelper" />-Objekt ab, das zum Rendern der HTML-Elemente verwendet wird oder legt es fest.</summary>
      <returns>Das HTML-Hilfsobjekt, das der Ansicht zugeordnet ist.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.InitHelpers">
      <summary>Initialisiert die Eigenschaften <see cref="P:System.Web.Mvc.ViewPage.Ajax" />, <see cref="P:System.Web.Mvc.ViewPage.Html" /> und <see cref="P:System.Web.Mvc.ViewPage.Url" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.MasterLocation">
      <summary>Ruft den Pfad der Masteransicht ab oder legt ihn fest.</summary>
      <returns>Der Pfad der Masteransicht.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Model">
      <summary>Ruft die Model-Eigenschaft des zugeordneten <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Objekts ab.</summary>
      <returns>Die Model-Eigenschaft des zugeordneten <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Objekts.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.OnPreInit(System.EventArgs)">
      <summary>Löst zu Beginn der Seiteninitialisierung das <see cref="E:System.Web.UI.Page.PreInit" />-Ereignis aus.</summary>
      <param name="e">Die Ereignisdaten.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.ProcessRequest(System.Web.HttpContext)">
      <summary>Aktiviert die Verarbeitung der angegebenen HTTP-Anforderung durch das ASP.NET-MVC-Framework.</summary>
      <param name="context">Ein Objekt, das HTTP-spezifische Informationen zur aktuellen HTTP-Anforderung kapselt.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Initialisiert das <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt, das den zu rendernden Seiteninhalt empfängt.</summary>
      <param name="writer">Das Objekt, das den Seiteninhalt empfängt.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.RenderView(System.Web.Mvc.ViewContext)">
      <summary>Rendert die Ansichtsseite für die Antwort mithilfe des angegebenen Ansichtsobjekts.</summary>
      <param name="viewContext">Ein Objekt, das die nötigen Informationen zum Rendern der Ansicht kapselt, die den Controllerkontext, den Formularkontext, die temporären Daten und die Ansichtsdaten für die zugeordnete Ansicht enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.SetTextWriter(System.IO.TextWriter)">
      <summary>Legt den TextWriter fest, der zum Rendern der Ansicht für die Antwort verwendet wird.</summary>
      <param name="textWriter">Der Writer, der zum Rendern der Ansicht für die Antwort verwendet wird.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Legt das Ansichtsdatenwörterbuch für die zugeordnete Ansicht fest.</summary>
      <param name="viewData">Ein Wörterbuch mit Daten, die an die Ansicht übergeben werden.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.TempData">
      <summary>Ruft die temporären Daten ab, die an die Ansicht übergeben werden sollen.</summary>
      <returns>Die temporären Daten, die an die Ansicht übergeben werden sollen.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Url">
      <summary>Ruft die URL der gerenderten Seite ab oder legt sie fest.</summary>
      <returns>Die URL der gerenderten Seite.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.View"></member>
    <member name="P:System.Web.Mvc.ViewPage.ViewContext">
      <summary>Ruft die Informationen ab, die zum Rendern der Ansicht verwendet werden, oder legt sie fest.</summary>
      <returns>Die Informationen, die zum Rendern der Ansicht verwendet werden. Dazu gehören Formularkontext, temporäre Daten und Ansichtsdaten der zugeordneten Ansicht.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.ViewData">
      <summary>Ruft ein Wörterbuch ab oder legt ein Wörterbuch fest, das Daten enthält, die zwischen dem Controller und der Ansicht übergeben werden sollen.</summary>
      <returns>Ein Wörterbuch, das Daten enthält, die zwischen Controller und Ansicht übergeben werden sollen.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Writer">
      <summary>Ruft den TextWriter ab, der zum Rendern der Ansicht für die Antwort verwendet wird.</summary>
      <returns>Der TextWriter, der zum Rendern der Ansicht für die Antwort verwendet wird.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewPage`1">
      <summary>Stellt die erforderlichen Informationen zum Rendern einer stark typisierten Ansicht als Web Forms-Seite dar.</summary>
      <typeparam name="TModel">Der Typ des Modells.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewPage`1.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ViewPage`1" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.Ajax">
      <summary>Ruft das <see cref="T:System.Web.Mvc.AjaxHelper`1" />-Objekt ab (bzw. legt es fest), das das Rendern von HTML in AJAX-Szenarios unterstützt.</summary>
      <returns>Das AJAX-Hilfsobjekt, das der Ansicht zugeordnet ist.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.Html">
      <summary>Ruft das <see cref="T:System.Web.Mvc.HtmlHelper" />-Objekt ab, das das Rendern von Elementen unterstützt, oder legt dieses fest.</summary>
      <returns>Das HTML-Hilfsobjekt, das der Ansicht zugeordnet ist.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage`1.InitHelpers">
      <summary>Instantiiert und initialisiert die Eigenschaften <see cref="P:System.Web.Mvc.ViewPage`1.Ajax" /> und <see cref="P:System.Web.Mvc.ViewPage`1.Html" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.Model">
      <summary>Ruft die <see cref="P:System.Web.Mvc.ViewDataDictionary`1.Model" />-Eigenschaft des zugeordneten <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />-Objekts ab.</summary>
      <returns>Ein Verweis auf das Datenmodell.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage`1.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Legt das Ansichtsdatenwörterbuch für die zugeordnete Ansicht fest.</summary>
      <param name="viewData">Ein Wörterbuch mit Daten, die an die Ansicht übergeben werden.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.ViewData">
      <summary>Ruft ein Wörterbuch ab oder legt ein Wörterbuch fest, das Daten enthält, die zwischen dem Controller und der Ansicht übergeben werden sollen.</summary>
      <returns>Ein Wörterbuch, das Daten enthält, die zwischen Controller und Ansicht übergeben werden sollen.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewResult">
      <summary>Stellt eine Klasse dar, die verwendet wird, um eine Ansicht mit einer <see cref="T:System.Web.Mvc.IView" />-Instanz zu rendern, die von einem <see cref="T:System.Web.Mvc.IViewEngine" />-Objekt zurückgegeben wird.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResult.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ViewResult" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResult.FindView(System.Web.Mvc.ControllerContext)">
      <summary>Durchsucht die registrierten Ansichtsmodule und gibt das Objekt zurück, das zum Rendern der Ansicht verwendet wird.</summary>
      <returns>Das Objekt, das zum Rendern der Ansicht verwendet wird.</returns>
      <param name="context">Der Controllerkontext.</param>
      <exception cref="T:System.InvalidOperationException">Beim Suchen nach der Ansicht durch die Methode ist ein Fehler aufgetreten.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewResult.MasterName">
      <summary>Ruft den Namen der zum Rendern der Ansicht zu verwendenden Masteransicht (z. B. eine Gestaltungsvorlage oder eine Vorlage) ab.</summary>
      <returns>Der Name der Masteransicht.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewResultBase">
      <summary>Stellt eine Basisklasse dar, um das Modell zur Ansicht bereitzustellen und dann die Ansicht für die Antwort zu rendern.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResultBase.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ViewResultBase" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResultBase.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Beim Aufrufen durch eine aufrufende Instanz für eine Aktion wird die Ansicht für die Antwort gerendert.</summary>
      <param name="context">Der Kontext, in dem das Ergebnis ausgeführt wird.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="context" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewResultBase.FindView(System.Web.Mvc.ControllerContext)">
      <summary>Gibt das <see cref="T:System.Web.Mvc.ViewEngineResult" />-Objekt zurück, das zum Rendern der Ansicht verwendet wird.</summary>
      <returns>Das Ansichtsmodul.</returns>
      <param name="context">Der Kontext.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.TempData">
      <summary>Ruft das <see cref="T:System.Web.Mvc.TempDataDictionary" />-Objekt für dieses Ergebnis ab bzw. legt es fest.</summary>
      <returns>Die temporären Daten.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.View">
      <summary>Ruft das <see cref="T:System.Web.Mvc.IView" />-Objekt ab (bzw. legt es fest), das für die Antwort gerendert wird.</summary>
      <returns>Die Ansicht.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewData">
      <summary>Ruft das <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Ansichtsdaten-Objekt für dieses Ergebnis ab bzw. legt es fest.</summary>
      <returns>Die Ansichtsdaten.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewEngineCollection">
      <summary>Ruft die diesem Ergebnis zugeordnete Auflistung von Ansichtsmodulen ab bzw. legt diese fest.</summary>
      <returns>Die Auflistung von Ansichtsmodulen.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewName">
      <summary>Ruft den Namen der zu rendernden Ansicht ab bzw. legt diesen fest.</summary>
      <returns>Der Name der Ansicht.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewStartPage">
      <summary>Stellt eine abstrakte Klasse bereit, mit der eine Ansichtsstartseite (Masterseite) implementiert werden kann.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewStartPage.#ctor">
      <summary>Initialisiert beim Implementieren in einer abgeleiteten Klasse eine neue Instanz der <see cref="T:System.Web.Mvc.ViewStartPage" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewStartPage.Html">
      <summary>Ruft bei Implementierung in einer abgeleiteten Klasse das HTML-Markup für die Ansichtsstartseite ab.</summary>
      <returns>Das HTML-Markup für die Ansichtsstartseite.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewStartPage.Url">
      <summary>Ruft bei der Implementierung in einer abgeleiteten Klasse die URL der Ansichtsstartseite ab.</summary>
      <returns>Die URL für die Ansichtsstartseite.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewStartPage.ViewContext">
      <summary>Ruft bei der Implementierung in einer abgeleiteten Klasse den Ansichtskontext der Ansichtsstartseite ab.</summary>
      <returns>Der Ansichtskontext für die Ansichtsstartseite.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewTemplateUserControl">
      <summary>Stellt einen Container für <see cref="T:System.Web.Mvc.TemplateInfo" />-Objekte bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewTemplateUserControl.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ViewTemplateUserControl" />-Klasse.</summary>
    </member>
    <member name="T:System.Web.Mvc.ViewTemplateUserControl`1">
      <summary>Stellt einen Container für <see cref="T:System.Web.Mvc.TemplateInfo" />-Objekte bereit.</summary>
      <typeparam name="TModel">Der Typ des Modells.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewTemplateUserControl`1.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ViewTemplateUserControl`1" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewTemplateUserControl`1.FormattedModelValue">
      <summary>Ruft den formatierten Wert ab.</summary>
      <returns>Der formatierte Wert.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewType">
      <summary>Gibt den Typ einer Ansicht an.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewType.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ViewType" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewType.TypeName">
      <summary>Ruft den Namen des Typs ab oder legt diesen fest.</summary>
      <returns>Der Name des Typs.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewUserControl">
      <summary>Stellt die Informationen dar, die erforderlich sind, um ein Benutzersteuerelement zu erstellen.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ViewUserControl" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Ajax">
      <summary>Ruft das AJAX-Skript für die Ansicht ab.</summary>
      <returns>Das AJAX-Skript für die Ansicht.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.EnsureViewData">
      <summary>Stellt sicher, dass dem <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Objekt des Benutzersteuerelements Ansichtsdaten hinzugefügt werden, falls diese vorhanden sind.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Html">
      <summary>Ruft die HTML-Daten für die Ansicht ab.</summary>
      <returns>Die HTML-Daten für die Ansicht.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Model">
      <summary>Ruft das Modell ab.</summary>
      <returns>Das Modell.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.RenderView(System.Web.Mvc.ViewContext)">
      <summary>Rendert die Ansicht mithilfe des angegebenen Ansichtskontexts.</summary>
      <param name="viewContext">Der Ansichtskontext.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.SetTextWriter(System.IO.TextWriter)">
      <summary>Legt den TextWriter fest, der zum Rendern der Ansicht für die Antwort verwendet wird.</summary>
      <param name="textWriter">Der Writer, der zum Rendern der Ansicht für die Antwort verwendet wird.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Legt das Ansichtsdatenwörterbuch fest, indem die angegebenen Ansichtsdaten verwendet werden.</summary>
      <param name="viewData">Die Ansichtsdaten.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.TempData">
      <summary>Ruft das Wörterbuch mit den temporären Daten ab.</summary>
      <returns>Das Wörterbuch mit den temporären Daten.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Url">
      <summary>Ruft die URL für die Ansicht ab.</summary>
      <returns>Die URL für die Ansicht.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.View"></member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewContext">
      <summary>Ruft den Ansichtskontext ab bzw. legt diesen fest.</summary>
      <returns>Der Ansichtskontext.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewData">
      <summary>Ruft das Wörterbuch mit den Ansichtsdaten ab bzw. legt es fest.</summary>
      <returns>Das Wörterbuch mit den Ansichtsdaten.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewDataKey">
      <summary>Ruft den Schlüssel der Ansichtsdaten ab bzw. legt diesen fest.</summary>
      <returns>Der Schlüssel der Ansichtsdaten.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Writer">
      <summary>Ruft den Writer ab, der zum Rendern der Ansicht für die Antwort verwendet wird.</summary>
      <returns>Der Writer, der zum Rendern der Ansicht für die Antwort verwendet wird.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewUserControl`1">
      <summary>Stellt die Informationen dar, die erforderlich sind, um ein stark typisiertes Benutzersteuerelement zu erstellen.</summary>
      <typeparam name="TModel">Der Typ des Modells.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl`1.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.ViewUserControl`1" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.Ajax">
      <summary>Ruft das AJAX-Skript für die Ansicht ab.</summary>
      <returns>Das AJAX-Skript für die Ansicht.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.Html">
      <summary>Ruft die HTML-Daten für die Ansicht ab.</summary>
      <returns>Die HTML-Daten für die Ansicht.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.Model">
      <summary>Ruft das Modell ab.</summary>
      <returns>Ein Verweis auf das Datenmodell.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl`1.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Legt die Ansichtsdaten für die Ansicht fest.</summary>
      <param name="viewData">Die Ansichtsdaten.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.ViewData">
      <summary>Ruft die Ansichtsdaten ab bzw. legt diese fest.</summary>
      <returns>Die Ansichtsdaten.</returns>
    </member>
    <member name="T:System.Web.Mvc.VirtualPathProviderViewEngine">
      <summary>Stellt die Implementierung einer abstrakten Basisklasse für die <see cref="T:System.Web.Mvc.IViewEngine" />-Schnittstelle dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.VirtualPathProviderViewEngine" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.AreaMasterLocationFormats">
      <summary>Ruft die bereichsaktivierten Masterspeicherortformate ab bzw. legt sie fest.</summary>
      <returns>Der bereichsaktivierten Masterspeicherortformate.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.AreaPartialViewLocationFormats">
      <summary>Ruft die bereichsaktivierten Speicherortformate der Teilansicht ab bzw. legt sie fest.</summary>
      <returns>Das bereichsaktivierte Speicherortformat der Teilansicht.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.AreaViewLocationFormats">
      <summary>Ruft die bereichsaktivierten Ansichtsspeicherortformate ab bzw. legt sie fest.</summary>
      <returns>Die bereichsaktivierten Ansichtsspeicherortformate.</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Erstellt anhand des angegebenen Controllerkontexts die angegebene Teilansicht.</summary>
      <returns>Ein Verweis auf die Teilansicht.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="partialPath">Der partielle Pfad für die neue Teilansicht.</param>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Erstellt die angegebene Ansicht anhand des Controllerkontexts, des Pfads der Ansicht und des Pfads der Masteransicht.</summary>
      <returns>Ein Verweis auf die Ansicht.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="viewPath">Der Pfad der Ansicht.</param>
      <param name="masterPath">Der Pfad der Masteransicht.</param>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.FileExists(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Gibt einen Wert zurück, der angibt, ob die Datei sich im angegebenen Pfad befindet, indem der angegebene Controllerkontext verwendet wird.</summary>
      <returns>true, wenn sich die Datei unter dem angegebenen Pfad befindet, andernfalls false.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="virtualPath">Der virtuelle Pfad.</param>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.FileExtensions">
      <summary>Ruft die Dateinamenerweiterungen ab, mit denen eine Ansicht gesucht werden soll.</summary>
      <returns>Die Dateinamenerweiterungen, mit denen eine Ansicht gesucht werden soll.</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.FindPartialView(System.Web.Mvc.ControllerContext,System.String,System.Boolean)">
      <summary>Sucht anhand des angegebenen Controllerkontexts nach der angegebenen Teilansicht.</summary>
      <returns>Die Teilansicht.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="partialViewName">Der Name der Teilansicht.</param>
      <param name="useCache">true, um die zwischengespeicherte Teilansicht zu verwenden.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="controllerContext" />-Parameter ist null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="partialViewName" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.FindView(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean)">
      <summary>Sucht anhand des angegebenen Controllerkontexts und des Namens der Masteransicht nach der angegebenen Ansicht.</summary>
      <returns>Die Seitenansicht.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="viewName">Der Name der Ansicht.</param>
      <param name="masterName">Der Name der Masteransicht.</param>
      <param name="useCache">true, um die zwischengespeicherte Ansicht zu verwenden.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="controllerContext" />-Parameter ist null (Nothing in Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="viewName" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.MasterLocationFormats">
      <summary>Ruft die Masterspeicherortformate ab bzw. legt sie fest.</summary>
      <returns>Der Masterspeicherortformate.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.PartialViewLocationFormats">
      <summary>Ruft die Speicherortformate der Teilansicht ab bzw. legt diese fest.</summary>
      <returns>Die Speicherortformate der Teilansicht.</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.ReleaseView(System.Web.Mvc.ControllerContext,System.Web.Mvc.IView)">
      <summary>Gibt die angegebene Ansicht frei, indem der angegebene Controllerkontext verwendet wird.</summary>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="view">Die freizugebende Ansicht.</param>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.ViewLocationCache">
      <summary>Ruft den Ansichtsspeicherortcache ab bzw. legt ihn fest.</summary>
      <returns>Der Ansichtsspeicherortcache.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.ViewLocationFormats">
      <summary>Ruft die Ansichtsspeicherortformate ab bzw. legt diese fest.</summary>
      <returns>Die Ansichtsspeicherortformate.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.VirtualPathProvider">
      <summary>Ruft den Anbieter für virtuelle Pfade ab bzw. legt diesen fest.</summary>
      <returns>Der Anbieter für virtuelle Pfade.</returns>
    </member>
    <member name="T:System.Web.Mvc.WebFormView">
      <summary>Stellt die Informationen dar, die benötigt werden, um in ASP.NET MVC eine Web Forms-Seite zu erstellen.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.#ctor(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.WebFormView" />-Klasse unter Verwendung des Controllerkontexts und des Ansichtspfads.</summary>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="viewPath">Der Ansichtspfad.</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.WebFormView" />-Klasse unter Verwendung des Controllerkontexts, des Ansichtspfads und des Pfads der Masterseite.</summary>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="viewPath">Der Ansichtspfad.</param>
      <param name="masterPath">Der Pfad zur Masterseite.</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String,System.Web.Mvc.IViewPageActivator)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.WebFormView" />-Klasse unter Verwendung des Controllerkontexts, des Ansichtspfads, des Pfads der Masterseite und einer <see cref="T:System.Web.Mvc.IViewPageActivator" />-Instanz.</summary>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="viewPath">Der Ansichtspfad.</param>
      <param name="masterPath">Der Pfad zur Masterseite.</param>
      <param name="viewPageActivator">Eine Instanz der Aktivierungsschnittstelle der Ansichtsseite.</param>
    </member>
    <member name="P:System.Web.Mvc.WebFormView.MasterPath">
      <summary>Ruft den Masterpfad ab bzw. legt diesen fest.</summary>
      <returns>Der Masterpfad.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.RenderView(System.Web.Mvc.ViewContext,System.IO.TextWriter,System.Object)">
      <summary>Rendert die Ansicht für die Antwort.</summary>
      <param name="viewContext">Ein Objekt, das die nötigen Informationen zum Rendern der Ansicht kapselt, die den Controllerkontext, den Formularkontext, die temporären Daten und die Ansichtsdaten für die zugeordnete Ansicht enthält.</param>
      <param name="writer">Das Textwriterobjekt, mit dem die HTML-Ausgabe geschrieben wird.</param>
      <param name="instance">Die Ansichtsseiteninstanz.</param>
    </member>
    <member name="T:System.Web.Mvc.WebFormViewEngine">
      <summary>Stellt ein Ansichtsmodul dar, das verwendet wird, um eine Web Forms-Seite für die Antwort zu rendern.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.WebFormViewEngine" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.#ctor(System.Web.Mvc.IViewPageActivator)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.WebFormViewEngine" />-Klasse mithilfe der angegebenen Aktivierung der Ansichtsseite.</summary>
      <param name="viewPageActivator">Eine Instanz einer Klasse, mit der die <see cref="T:System.Web.Mvc.IViewPageActivator" />-Schnittstelle implementiert wird.</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Erstellt anhand des angegebenen Controllerkontexts die angegebene Teilansicht.</summary>
      <returns>Die Teilansicht.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="partialPath">Der Teilpfad.</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Erstellt die angegebene Ansicht anhand des angegebenen Controllerkontexts und der Pfade der Ansicht und Masteransicht.</summary>
      <returns>Die Ansicht.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="viewPath">Der Ansichtspfad.</param>
      <param name="masterPath">Der Pfad der Masteransicht.</param>
    </member>
    <member name="T:System.Web.Mvc.WebViewPage">
      <summary>Stellt die Eigenschaften und die Methoden dar, die benötigt werden, um eine Ansicht zu rendern, die ASP.NET Razor-Syntax verwendet.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.WebViewPage" />-Klasse. </summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Ajax">
      <summary>Ruft das <see cref="T:System.Web.Mvc.AjaxHelper" />-Objekt ab, das zum Rendern von HTML mithilfe von AJAX verwendet wird, bzw. legt es fest. </summary>
      <returns>Das <see cref="T:System.Web.Mvc.AjaxHelper" />-Objekt, das zum Rendern von HTML mithilfe von AJAX verwendet wird.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.ConfigurePage(System.Web.WebPages.WebPageBase)">
      <summary>Legt den Ansichtskontext und die Ansichtsdaten für die Seite fest.</summary>
      <param name="parentPage">Die übergeordnete Seite.</param>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Context">
      <summary>Ruft das <see cref="T:System.Web.HttpContext" />-Objekt ab, das der Seite zugeordnet ist.</summary>
      <returns>Das <see cref="T:System.Web.HttpContext" />-Objekt, das dem Bereich mit der Seite zugeordnet ist.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.ExecutePageHierarchy">
      <summary>Führt die Seitenhierarchie für die ASP.NET-Ausführungspipeline aus.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Html">
      <summary>Ruft das <see cref="T:System.Web.Mvc.HtmlHelper" />-Objekt ab, das zum Rendern der HTML-Elemente verwendet wird oder legt es fest.</summary>
      <returns>Das <see cref="T:System.Web.Mvc.HtmlHelper" />-Objekt, das zum Rendern von HTML-Elementen verwendet wird.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.InitHelpers">
      <summary>Initialisiert die Klassen <see cref="T:System.Web.Mvc.AjaxHelper" />, <see cref="T:System.Web.Mvc.HtmlHelper" /> und <see cref="T:System.Web.Mvc.UrlHelper" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Model">
      <summary>Ruft die Model-Eigenschaft des zugeordneten <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Objekts ab.</summary>
      <returns>Die Model-Eigenschaft des zugeordneten <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Objekts.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Legt die Ansichtsdaten fest.</summary>
      <param name="viewData">Die Ansichtsdaten.</param>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.TempData">
      <summary>Ruft die temporären Daten ab, die an die Ansicht übergeben werden sollen.</summary>
      <returns>Die temporären Daten, die an die Ansicht übergeben werden sollen.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Url">
      <summary>Ruft die URL der gerenderten Seite ab oder legt sie fest.</summary>
      <returns>Die URL der gerenderten Seite.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.View">
      <summary>Ruft die Ansicht ab.</summary>
      <returns>Die Ansicht.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.ViewContext">
      <summary>Ruft die Informationen ab, die zum Rendern der Ansicht verwendet werden, oder legt sie fest.</summary>
      <returns>Die Informationen, die zum Rendern der Ansicht verwendet werden. Dazu gehören Formularkontext, temporäre Daten und Ansichtsdaten der zugeordneten Ansicht.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.ViewData">
      <summary>Ruft ein Wörterbuch ab oder legt ein Wörterbuch fest, das Daten enthält, die zwischen dem Controller und der Ansicht übergeben werden sollen.</summary>
      <returns>Ein Wörterbuch, das Daten enthält, die zwischen Controller und Ansicht übergeben werden sollen.</returns>
    </member>
    <member name="T:System.Web.Mvc.WebViewPage`1">
      <summary>Stellt die Eigenschaften und die Methoden dar, die benötigt werden, um eine Ansicht zu rendern, die ASP.NET Razor-Syntax verwendet.</summary>
      <typeparam name="TModel">Der Typ des Ansichtsdatenmodells.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage`1.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.WebViewPage`1" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.Ajax">
      <summary>Ruft das <see cref="T:System.Web.Mvc.AjaxHelper" />-Objekt ab, das zum Rendern von HTML-Markup mithilfe von AJAX verwendet wird, bzw. legt es fest.</summary>
      <returns>Das <see cref="T:System.Web.Mvc.AjaxHelper" />-Objekt, das zum Rendern von HTML-Markup mithilfe von AJAX verwendet wird.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.Html">
      <summary>Ruft das <see cref="T:System.Web.Mvc.HtmlHelper" />-Objekt ab, das zum Rendern der HTML-Elemente verwendet wird oder legt es fest.</summary>
      <returns>Das <see cref="T:System.Web.Mvc.HtmlHelper" />-Objekt, das zum Rendern von HTML-Elementen verwendet wird.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage`1.InitHelpers">
      <summary>Initialisiert die Klassen <see cref="T:System.Web.Mvc.AjaxHelper" />, <see cref="T:System.Web.Mvc.HtmlHelper" /> und <see cref="T:System.Web.Mvc.UrlHelper" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.Model">
      <summary>Ruft die Model-Eigenschaft des zugeordneten <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Objekts ab.</summary>
      <returns>Die Model-Eigenschaft des zugeordneten <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Objekts.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage`1.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Legt die Ansichtsdaten fest.</summary>
      <param name="viewData">Die Ansichtsdaten.</param>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.ViewData">
      <summary>Ruft ein Wörterbuch ab oder legt ein Wörterbuch fest, das Daten enthält, die zwischen dem Controller und der Ansicht übergeben werden sollen.</summary>
      <returns>Ein Wörterbuch, das Daten enthält, die zwischen Controller und Ansicht übergeben werden sollen.</returns>
    </member>
    <member name="T:System.Web.Mvc.Ajax.AjaxExtensions">
      <summary>Stellt die Unterstützung für ASP.NET AJAX innerhalb einer ASP.NET-MVC-Anwendung dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Gibt ein Ankerelement mit der URL zur angegebenen Aktionsmethode zurück. Wenn auf den Aktionslink geklickt wird, wird die Aktionsmethode asynchron mit JavaScript aufgerufen.</summary>
      <returns>Ein Ankerelement.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="actionName">Der Name der Aktionsmethode.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Dieses Objekt wird normalerweise mit der Objektinitialisierersyntax erstellt.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Gibt ein Ankerelement mit der URL zur angegebenen Aktionsmethode zurück. Wenn auf den Aktionslink geklickt wird, wird die Aktionsmethode asynchron mit JavaScript aufgerufen.</summary>
      <returns>Ein Ankerelement.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="actionName">Der Name der Aktionsmethode.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Dieses Objekt wird normalerweise mit der Objektinitialisierersyntax erstellt.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Gibt ein Ankerelement mit der URL zur angegebenen Aktionsmethode zurück. Wenn auf den Aktionslink geklickt wird, wird die Aktionsmethode asynchron mit JavaScript aufgerufen.</summary>
      <returns>Ein Ankerelement.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="actionName">Der Name der Aktionsmethode.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Dieses Objekt wird normalerweise mit der Objektinitialisierersyntax erstellt.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Gibt ein Ankerelement mit der URL zur angegebenen Aktionsmethode zurück. Wenn auf den Aktionslink geklickt wird, wird die Aktionsmethode asynchron mit JavaScript aufgerufen.</summary>
      <returns>Ein Ankerelement.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="actionName">Der Name der Aktionsmethode.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Dieses Objekt wird normalerweise mit der Objektinitialisierersyntax erstellt.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Gibt ein Ankerelement mit der URL zur angegebenen Aktionsmethode zurück. Wenn auf den Aktionslink geklickt wird, wird die Aktionsmethode asynchron mit JavaScript aufgerufen.</summary>
      <returns>Ein Ankerelement.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="actionName">Der Name der Aktionsmethode.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="protocol">Das Protokoll für die URL, beispielsweise "http" oder "https".</param>
      <param name="hostName">Der Hostname für die URL.</param>
      <param name="fragment">Der Name des URL-Fragments (der Ankername).</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Dieses Objekt wird normalerweise mit der Objektinitialisierersyntax erstellt.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein Ankerelement mit der URL zur angegebenen Aktionsmethode zurück. Wenn auf den Aktionslink geklickt wird, wird die Aktionsmethode asynchron mit JavaScript aufgerufen.</summary>
      <returns>Ein Ankerelement.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="actionName">Der Name der Aktionsmethode.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="protocol">Das Protokoll für die URL, beispielsweise "http" oder "https".</param>
      <param name="hostName">Der Hostname für die URL.</param>
      <param name="fragment">Der Name des URL-Fragments (der Ankername).</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Gibt ein Ankerelement mit der URL zur angegebenen Aktionsmethode zurück. Wenn auf den Aktionslink geklickt wird, wird die Aktionsmethode asynchron mit JavaScript aufgerufen.</summary>
      <returns>Ein Ankerelement.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="actionName">Der Name der Aktionsmethode.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Gibt ein Ankerelement mit der URL zur angegebenen Aktionsmethode zurück. Wenn auf den Aktionslink geklickt wird, wird die Aktionsmethode asynchron mit JavaScript aufgerufen.</summary>
      <returns>Ein Ankerelement.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="actionName">Der Name der Aktionsmethode.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein Ankerelement mit der URL zur angegebenen Aktionsmethode zurück. Wenn auf den Aktionslink geklickt wird, wird die Aktionsmethode asynchron mit JavaScript aufgerufen.</summary>
      <returns>Ein Ankerelement.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="actionName">Der Name der Aktionsmethode.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Gibt ein Ankerelement mit der URL zur angegebenen Aktionsmethode zurück. Wenn auf den Aktionslink geklickt wird, wird die Aktionsmethode asynchron mit JavaScript aufgerufen.</summary>
      <returns>Ein Ankerelement.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="actionName">Der Name der Aktionsmethode.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Gibt ein Ankerelement mit der URL zur angegebenen Aktionsmethode zurück. Wenn auf den Aktionslink geklickt wird, wird die Aktionsmethode asynchron mit JavaScript aufgerufen.</summary>
      <returns>Ein Ankerelement.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="actionName">Der Name der Aktionsmethode.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein Ankerelement mit der URL zur angegebenen Aktionsmethode zurück. Wenn auf den Aktionslink geklickt wird, wird die Aktionsmethode asynchron mit JavaScript aufgerufen.</summary>
      <returns>Ein Ankerelement.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="actionName">Der Name der Aktionsmethode.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="actionName">Der Name der Aktionsmethode, die die Anforderung verarbeitet.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Dieses Objekt wird normalerweise mit der Objektinitialisierersyntax erstellt.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="actionName">Der Name der Aktionsmethode, die die Anforderung verarbeitet.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Dieses Objekt wird normalerweise mit der Objektinitialisierersyntax erstellt.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="actionName">Der Name der Aktionsmethode, die die Anforderung verarbeitet.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Dieses Objekt wird normalerweise mit der Objektinitialisierersyntax erstellt.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="actionName">Der Name der Aktionsmethode, die die Anforderung verarbeitet.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Dieses Objekt wird normalerweise mit der Objektinitialisierersyntax erstellt.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="actionName">Der Name der Aktionsmethode, die die Anforderung verarbeitet.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="actionName">Der Name der Aktionsmethode, die die Anforderung verarbeitet.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="actionName">Der Name der Aktionsmethode, die die Anforderung verarbeitet.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="actionName">Der Name der Aktionsmethode, die die Anforderung verarbeitet.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="actionName">Der Name der Aktionsmethode, die die Anforderung verarbeitet.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort. </summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="actionName">Der Name der Aktionsmethode, die die Anforderung verarbeitet.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort, indem die angegebenen Routinginformationen verwendet werden.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="routeName">Der Name der Route, mit der die Formularbereitstellungs-URL abgerufen wird.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Dieses Objekt wird normalerweise mit der Objektinitialisierersyntax erstellt.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort, indem die angegebenen Routinginformationen verwendet werden.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="routeName">Der Name der Route, mit der die Formularbereitstellungs-URL abgerufen wird.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Dieses Objekt wird normalerweise mit der Objektinitialisierersyntax erstellt.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort, indem die angegebenen Routinginformationen verwendet werden.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="routeName">Der Name der Route, mit der die Formularbereitstellungs-URL abgerufen wird.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort, indem die angegebenen Routinginformationen verwendet werden.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="routeName">Der Name der Route, mit der die Formularbereitstellungs-URL abgerufen wird.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort, indem die angegebenen Routinginformationen verwendet werden.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="routeName">Der Name der Route, mit der die Formularbereitstellungs-URL abgerufen wird.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.GlobalizationScript(System.Web.Mvc.AjaxHelper)">
      <summary>Gibt ein HTML-script -Element zurück, das einen Verweis auf ein Globalisierungsskript enthält, mit dem die Kulturinformationen definiert werden.</summary>
      <returns>Ein script-Element, dessen src-Attribut auf das Globalisierungsskript festgelegt ist, wie im folgenden Beispiel veranschaulicht wird: &lt;script type="text/javascript"     src="/MvcApplication1/Scripts/Globalization/en-US.js"&gt;&lt;/script&gt;</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt, das von dieser Methode erweitert wird.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.GlobalizationScript(System.Web.Mvc.AjaxHelper,System.Globalization.CultureInfo)">
      <summary>Gibt ein HTML-script-Element zurück, das einen Verweis auf ein Globalisierungsskript enthält, mit dem die angegebenen Kulturinformationen definiert werden.</summary>
      <returns>Ein HTML-Skriptelement, dessen src-Attribut auf das Globalisierungsskript festgelegt ist, wie im folgenden Beispiel veranschaulicht wird:&lt;script type="text/javascript"    src="/MvcApplication1/Scripts/Globalization/en-US.js"&gt;&lt;/script&gt;</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt, das von dieser Methode erweitert wird.</param>
      <param name="cultureInfo">Kapselt Informationen zur Zielkultur, z. B. Datumsformate.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="cultureInfo" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Gibt ein Ankerelement mit dem virtuellen Pfad für die angegebenen Routenwerte zurück. Wenn auf den Link geklickt wird, wird eine Anforderung asynchron mit JavaScript an den virtuellen Pfad gesendet.</summary>
      <returns>Ein Ankerelement.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Dieses Objekt wird normalerweise mit der Objektinitialisierersyntax erstellt.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Gibt ein Ankerelement mit dem virtuellen Pfad für die angegebenen Routenwerte zurück. Wenn auf den Link geklickt wird, wird eine Anforderung asynchron mit JavaScript an den virtuellen Pfad gesendet.</summary>
      <returns>Ein Ankerelement.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Dieses Objekt wird normalerweise mit der Objektinitialisierersyntax erstellt.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Gibt ein Ankerelement mit dem virtuellen Pfad für die angegebenen Routenwerte zurück. Wenn auf den Link geklickt wird, wird eine Anforderung asynchron mit JavaScript an den virtuellen Pfad gesendet.</summary>
      <returns>Ein Ankerelement.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="routeName">Der Name der Route, mit der die Formularbereitstellungs-URL abgerufen wird.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Dieses Objekt wird normalerweise mit der Objektinitialisierersyntax erstellt.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Gibt ein Ankerelement mit dem virtuellen Pfad für die angegebenen Routenwerte zurück. Wenn auf den Link geklickt wird, wird eine Anforderung asynchron mit JavaScript an den virtuellen Pfad gesendet.</summary>
      <returns>Ein Ankerelement.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="routeName">Der Name der Route, mit der die Formularbereitstellungs-URL abgerufen wird.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Dieses Objekt wird normalerweise mit der Objektinitialisierersyntax erstellt.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein Ankerelement mit dem virtuellen Pfad für die angegebenen Routenwerte zurück. Wenn auf den Link geklickt wird, wird eine Anforderung asynchron mit JavaScript an den virtuellen Pfad gesendet.</summary>
      <returns>Ein Ankerelement.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="routeName">Der Name der Route, mit der die Formularbereitstellungs-URL abgerufen wird.</param>
      <param name="protocol">Das Protokoll für die URL, beispielsweise "http" oder "https".</param>
      <param name="hostName">Der Hostname für die URL.</param>
      <param name="fragment">Der Name des URL-Fragments (der Ankername).</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Gibt ein Ankerelement mit dem virtuellen Pfad für die angegebenen Routenwerte zurück. Wenn auf den Link geklickt wird, wird eine Anforderung asynchron mit JavaScript an den virtuellen Pfad gesendet.</summary>
      <returns>Ein Ankerelement.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="routeName">Der Name der Route, mit der die Formularbereitstellungs-URL abgerufen wird.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein Ankerelement mit dem virtuellen Pfad für die angegebenen Routenwerte zurück. Wenn auf den Link geklickt wird, wird eine Anforderung asynchron mit JavaScript an den virtuellen Pfad gesendet.</summary>
      <returns>Ein Ankerelement.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="routeName">Der Name der Route, mit der die Formularbereitstellungs-URL abgerufen wird.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Gibt ein Ankerelement mit dem virtuellen Pfad für die angegebenen Routenwerte zurück. Wenn auf den Link geklickt wird, wird eine Anforderung asynchron mit JavaScript an den virtuellen Pfad gesendet.</summary>
      <returns>Ein Ankerelement.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="routeName">Der Name der Route, mit der die Formularbereitstellungs-URL abgerufen wird.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Gibt ein Ankerelement mit dem virtuellen Pfad für die angegebenen Routenwerte zurück. Wenn auf den Link geklickt wird, wird eine Anforderung asynchron mit JavaScript an den virtuellen Pfad gesendet.</summary>
      <returns>Ein Ankerelement.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="routeName">Der Name der Route, mit der die Formularbereitstellungs-URL abgerufen wird.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein Ankerelement mit dem virtuellen Pfad für die angegebenen Routenwerte zurück. Wenn auf den Link geklickt wird, wird eine Anforderung asynchron mit JavaScript an den virtuellen Pfad gesendet.</summary>
      <returns>Ein Ankerelement.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="routeName">Der Name der Route, mit der die Formularbereitstellungs-URL abgerufen wird.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Gibt ein Ankerelement mit dem virtuellen Pfad für die angegebenen Routenwerte zurück. Wenn auf den Link geklickt wird, wird eine Anforderung asynchron mit JavaScript an den virtuellen Pfad gesendet.</summary>
      <returns>Ein Ankerelement.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein Ankerelement mit dem virtuellen Pfad für die angegebenen Routenwerte zurück. Wenn auf den Link geklickt wird, wird eine Anforderung asynchron mit JavaScript an den virtuellen Pfad gesendet.</summary>
      <returns>Ein Ankerelement.</returns>
      <param name="ajaxHelper">Das AJAX-Hilfsobjekt.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <param name="ajaxOptions">Ein Objekt, das Optionen für die asynchrone Anforderung bereitstellt.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="T:System.Web.Mvc.Ajax.AjaxOptions">
      <summary>Stellt Optionseinstellungen zum Ausführen von Ajax-Skripts in einer ASP.NET MVC-Anwendung dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxOptions.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.Ajax.AjaxOptions" />-Klasse.</summary>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.Confirm">
      <summary>Ruft die Meldung ab (bzw. legt diese fest), die in einem Bestätigungsfenster angezeigt werden soll, bevor eine Anforderung gesendet wird.</summary>
      <returns>Die Meldung, die in einem Bestätigungsfenster angezeigt werden soll.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.HttpMethod">
      <summary>Ruft die HTTP-Anforderungsmethode ("Get" oder "Post") ab bzw. legt sie fest.</summary>
      <returns>Der HTTP-Anforderungsmethode. Der Standardwert ist "Post".</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.InsertionMode">
      <summary>Ruft den Modus ab (bzw. legt diesen fest), der angibt, wie die Antwort in das Ziel-DOM-Element eingefügt wird.</summary>
      <returns>Der Einfügemodus ("InsertAfter", "InsertBefore" oder "Replace"). Der Standardwert ist "Replace".</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.LoadingElementDuration">
      <summary>Ruft einen Wert in Millisekunden ab, durch den die Dauer der Animation beim Ein- bzw. Ausblenden des zu ladenden Elements gesteuert wird, oder legt diese fest.</summary>
      <returns>Ein Wert in Millisekunden, durch den die Dauer der Animation beim Ein- bzw. Ausblenden des zu ladenden Elements gesteuert wird.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.LoadingElementId">
      <summary>Ruft das id-Attribut eines HTML-Elements ab, das angezeigt wird, während die AJAX-Funktion geladen wird, oder legt dieses fest.</summary>
      <returns>Die ID des Elements, das angezeigt wird, während die AJAX-Funktion geladen wird.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnBegin">
      <summary>Ruft den Namen der JavaScript-Funktion ab (bzw. legt diesen fest), der sofort aufgerufen wird, bevor die Seite aktualisiert wird.</summary>
      <returns>Der Name der JavaScript-Funktion, die aufgerufen wird, bevor die Seite aktualisiert wird.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnComplete">
      <summary>Ruft die JavaScript-Funktion ab (bzw. legt diese fest), die aufgerufen wird, nachdem die Antwortdaten instanziiert wurden (bevor die Seite aktualisiert wird).</summary>
      <returns>Die JavaScript-Funktion, die aufgerufen wird, nachdem die Antwortdaten instanziiert wurden.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnFailure">
      <summary>Ruft die JavaScript-Funktion ab (bzw. legt sie fest), die aufgerufen wird, wenn das Aktualisieren der Seite fehlschlägt.</summary>
      <returns>Die JavaScript-Funktion, die aufgerufen wird, wenn das Aktualisieren der Seite fehlschlägt.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnSuccess">
      <summary>Ruft die JavaScript-Funktion ab (bzw. legt diese fest), die aufgerufen wird, nachdem die Seite erfolgreich aktualisiert wurde.</summary>
      <returns>Die JavaScript-Funktion, die aufgerufen wird, nachdem die Seite erfolgreich aktualisiert wurde.</returns>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxOptions.ToUnobtrusiveHtmlAttributes">
      <summary>Gibt die Ajax-Optionen als Auflistung von HTML-Attributen zurück, um unaufdringliches JavaScript zu unterstützen.</summary>
      <returns>Die Ajax-Optionen als Auflistung von HTML-Attributen, um unaufdringliches JavaScript zu unterstützen.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.UpdateTargetId">
      <summary>Ruft die ID des DOM-Elements ab (bzw. legt diese fest), die mithilfe der Antwort vom Server aktualisiert werden soll.</summary>
      <returns>Die ID des zu aktualisierenden DOM-Elements.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.Url">
      <summary>Ruft die URL ab (bzw. legt diese fest), für die die Anforderung erfolgen soll.</summary>
      <returns>Die URL, für die die Anforderung erfolgen soll.</returns>
    </member>
    <member name="T:System.Web.Mvc.Ajax.InsertionMode">
      <summary>Listet die AJAX-Skripteinfügungsmodi auf.</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.Replace">
      <summary>Ersetzen des Elements.</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.InsertBefore">
      <summary>Einfügen vor dem Element.</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.InsertAfter">
      <summary>Einfügen nach dem Element.</summary>
    </member>
    <member name="T:System.Web.Mvc.Async.AsyncActionDescriptor">
      <summary>Stellt Informationen zu einer asynchronen Aktionsmethode bereit, z. B. Name, Controller, Parameter, Attribute und Filter.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.Async.AsyncActionDescriptor" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.BeginExecute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Ruft die asynchrone Aktionsmethode auf, indem die angegebenen Parameter und der Controllerkontext verwendet werden.</summary>
      <returns>Ein Objekt, das das Ergebnis eines asynchronen Aufrufs enthält.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="parameters">Die Parameter der Aktionsmethode.</param>
      <param name="callback">Die Rückrufmethode.</param>
      <param name="state">Ein Objekt, das die von der Rückrufmethode zu verwendenden Informationen enthält. Dieser Parameter kann null sein.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.EndExecute(System.IAsyncResult)">
      <summary>Gibt das Ergebnis eines asynchronen Vorgangs zurück.</summary>
      <returns>Das Ergebnis eines asynchronen Vorgangs.</returns>
      <param name="asyncResult">Ein Objekt, das den Status eines asynchronen Vorgangs darstellt.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Führt die asynchrone Aktionsmethode aus, indem die angegebenen Parameter und der Controllerkontext verwendet werden.</summary>
      <returns>Das Ergebnis, zu dem die Ausführung der asynchronen Aktionsmethode führt.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="parameters">Die Parameter der Aktionsmethode.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.AsyncControllerActionInvoker">
      <summary>Stellt eine Klasse dar, die für das Aufrufen der Aktionsmethoden eines asynchronen Controllers zuständig ist.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.Async.AsyncControllerActionInvoker" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.BeginInvokeAction(System.Web.Mvc.ControllerContext,System.String,System.AsyncCallback,System.Object)">
      <summary>Ruft die asynchrone Aktionsmethode auf, indem der angegebene Controllerkontext, der angegebene Aktionsname, die angegebene Rückrufmethode und der angegebene Zustand verwendet werden.</summary>
      <returns>Ein Objekt, das das Ergebnis eines asynchronen Vorgangs enthält.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionName">Der Name der Aktion.</param>
      <param name="callback">Die Rückrufmethode.</param>
      <param name="state">Ein Objekt, das die von der Rückrufmethode zu verwendenden Informationen enthält. Dieser Parameter kann null sein.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.BeginInvokeActionMethod(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Ruft die asynchrone Aktionsmethode auf, indem der angegebene Controllerkontext, der angegebene Aktionsdeskriptor, die angegebenen Parameter, die angegebene Rückrufmethode und der angegebene Zustand verwendet werden.</summary>
      <returns>Ein Objekt, das das Ergebnis eines asynchronen Vorgangs enthält.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionDescriptor">Der Aktionsdeskriptor.</param>
      <param name="parameters">Die Parameter für die asynchrone Aktionsmethode.</param>
      <param name="callback">Die Rückrufmethode.</param>
      <param name="state">Ein Objekt, das die von der Rückrufmethode zu verwendenden Informationen enthält. Dieser Parameter kann null sein.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.BeginInvokeActionMethodWithFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IActionFilter},System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Ruft die asynchrone Aktionsmethode auf, indem der angegebene Controllerkontext, die angegebenen Filter, der angegebene Aktionsdeskriptor, die angegebenen Parameter, die angegebene Rückrufmethode und der angegebene Zustand verwendet werden.</summary>
      <returns>Ein Objekt, das das Ergebnis eines asynchronen Vorgangs enthält.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="filters">Die Filter.</param>
      <param name="actionDescriptor">Der Aktionsdeskriptor.</param>
      <param name="parameters">Die Parameter für die asynchrone Aktionsmethode.</param>
      <param name="callback">Die Rückrufmethode.</param>
      <param name="state">Ein Objekt, das die von der Rückrufmethode zu verwendenden Informationen enthält. Dieser Parameter kann null sein.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeAction(System.IAsyncResult)">
      <summary>Bricht die Aktion ab.</summary>
      <returns>true, wenn die Aktion abgebrochen wurde, andernfalls false.</returns>
      <param name="asyncResult">Das benutzerdefinierte Objekt, das einen asynchronen Vorgang beschreibt oder Informationen darüber enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethod(System.IAsyncResult)">
      <summary>Bricht die Aktion ab.</summary>
      <returns>true, wenn die Aktion abgebrochen wurde, andernfalls false.</returns>
      <param name="asyncResult">Das benutzerdefinierte Objekt, das einen asynchronen Vorgang beschreibt oder Informationen darüber enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethodWithFilters(System.IAsyncResult)">
      <summary>Bricht die Aktion ab.</summary>
      <returns>true, wenn die Aktion abgebrochen wurde, andernfalls false.</returns>
      <param name="asyncResult">Das benutzerdefinierte Objekt, das einen asynchronen Vorgang beschreibt oder Informationen darüber enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.GetControllerDescriptor(System.Web.Mvc.ControllerContext)">
      <summary>Gibt den Controllerdeskriptor zurück.</summary>
      <returns>Der Controllerdeskriptor.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.AsyncManager">
      <summary>Stellt asynchrone Vorgänge für die <see cref="T:System.Web.Mvc.AsyncController" />-Klasse bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.Async.AsyncManager" />-Klasse.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.#ctor(System.Threading.SynchronizationContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.Async.AsyncManager" />-Klasse mit dem Synchronisierungskontext.</summary>
      <param name="syncContext">Der Synchronisierungskontext.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.Finish">
      <summary>Benachrichtigt ASP.NET, das alle asynchronen Vorgänge abgeschlossen wurden.</summary>
    </member>
    <member name="E:System.Web.Mvc.Async.AsyncManager.Finished">
      <summary>Tritt ein, wenn die <see cref="M:System.Web.Mvc.Async.AsyncManager.Finish" />-Methode aufgerufen wird.</summary>
    </member>
    <member name="P:System.Web.Mvc.Async.AsyncManager.OutstandingOperations">
      <summary>Ruft die Anzahl der ausstehenden Vorgänge ab.</summary>
      <returns>Die Anzahl der ausstehenden Vorgänge.</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.AsyncManager.Parameters">
      <summary>Ruft die Parameter ab, die an die asynchrone Abschlussmethode übergeben wurden.</summary>
      <returns>Die Parameter, die an die asynchrone Abschlussmethode übergeben wurden.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.Sync(System.Action)">
      <summary>Führt einen Rückruf im aktuellen Synchronisierungskontext aus.</summary>
      <param name="action">Die asynchrone Aktion.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.AsyncManager.Timeout">
      <summary>Ruft den asynchronen Timeoutwert in Millisekunden ab oder legt diesen fest.</summary>
      <returns>Der asynchrone Timeoutwert in Millisekunden.</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncActionInvoker">
      <summary>Definiert die Schnittstelle für eine Instanz zum Aufrufen einer Aktion, die verwendet wird, um als Reaktion auf eine HTTP-Anforderung eine asynchrone Aktion aufzurufen.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncActionInvoker.BeginInvokeAction(System.Web.Mvc.ControllerContext,System.String,System.AsyncCallback,System.Object)">
      <summary>Ruft die angegebene Aktion auf.</summary>
      <returns>Der Status des asynchronen Ergebnisses.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionName">Der Name der asynchronen Aktion.</param>
      <param name="callback">Die Rückrufmethode.</param>
      <param name="state">Der Zustand.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncActionInvoker.EndInvokeAction(System.IAsyncResult)">
      <summary>Bricht die asynchrone Aktion ab.</summary>
      <returns>true, wenn die asynchrone Methode abgebrochen werden konnte, andernfalls false.</returns>
      <param name="asyncResult">Das asynchrone Ergebnis.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncController">
      <summary>Definiert die Methoden, die für einen asynchronen Controller erforderlich sind.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncController.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
      <summary>Führt den angegebenen Anforderungskontext aus.</summary>
      <returns>Der Status des asynchronen Vorgangs.</returns>
      <param name="requestContext">Der Anforderungskontext.</param>
      <param name="callback">Die asynchrone Rückrufmethode.</param>
      <param name="state">Der Zustand.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncController.EndExecute(System.IAsyncResult)">
      <summary>Beendet den asynchronen Vorgang.</summary>
      <param name="asyncResult">Das asynchrone Ergebnis.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncManagerContainer">
      <summary>Stellt einen Container für das asynchrone Managerobjekt bereit.</summary>
    </member>
    <member name="P:System.Web.Mvc.Async.IAsyncManagerContainer.AsyncManager">
      <summary>Ruft das asynchrone Managerobjekt ab.</summary>
      <returns>Das asynchrone Managerobjekt.</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.OperationCounter">
      <summary>Stellt einen Container bereit, der die Anzahl ausstehender asynchroner Vorgänge verwaltet.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.Async.OperationCounter" />-Klasse.</summary>
    </member>
    <member name="E:System.Web.Mvc.Async.OperationCounter.Completed">
      <summary>Tritt ein, wenn eine asynchrone Methode abgeschlossen wird.</summary>
    </member>
    <member name="P:System.Web.Mvc.Async.OperationCounter.Count">
      <summary>Ruft die Anzahl der Vorgänge ab.</summary>
      <returns>Die Anzahl der Vorgänge.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Decrement">
      <summary>Verringert die Anzahl der Vorgänge um 1.</summary>
      <returns>Die aktualisierte Anzahl der Vorgänge.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Decrement(System.Int32)">
      <summary>Verringert die Anzahl der Vorgänge um den angegebenen Wert.</summary>
      <returns>Die aktualisierte Anzahl der Vorgänge.</returns>
      <param name="value">Die Anzahl der Vorgänge, um die eine Verringerung erfolgen soll.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Increment">
      <summary>Inkrementiert die Anzahl der Vorgänge um 1.</summary>
      <returns>Die aktualisierte Anzahl der Vorgänge.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Increment(System.Int32)">
      <summary>Inkrementiert die Anzahl der Vorgänge um den angegebenen Wert.</summary>
      <returns>Die aktualisierte Anzahl der Vorgänge.</returns>
      <param name="value">Die Anzahl der Vorgänge, um die eine Inkrementierung erfolgen soll.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor">
      <summary>Stellt Informationen zu einer asynchronen Aktionsmethode bereit, z. B. Name, Controller, Parameter, Attribute und Filter.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.#ctor(System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.String,System.Web.Mvc.ControllerDescriptor)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor" />-Klasse.</summary>
      <param name="asyncMethodInfo">Ein Objekt, das Informationen zu der Methode enthält, die den asynchronen Vorgang startet (die Methode, deren Name mit "Asynch" endet).</param>
      <param name="completedMethodInfo">Ein Objekt, das Informationen zur Abschlussmethode (die Methode, deren Name mit "Completed" endet) enthält.</param>
      <param name="actionName">Der Name der Aktion.</param>
      <param name="controllerDescriptor">Der Controllerdeskriptor.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.ActionName">
      <summary>Ruft den Namen der Aktionsmethode ab.</summary>
      <returns>Der Name der Aktionsmethode.</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.AsyncMethodInfo">
      <summary>Ruft die Methodeninformationen für die asynchrone Aktionsmethode ab.</summary>
      <returns>Die Methodeninformationen für die asynchrone Aktionsmethode.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.BeginExecute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Beginnt die Ausführung der asynchronen Aktionsmethode, indem die angegebenen Parameter und der angegebene Controllerkontext verwendet werden.</summary>
      <returns>Ein Objekt, das das Ergebnis eines asynchronen Aufrufs enthält.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="parameters">Die Parameter der Aktionsmethode.</param>
      <param name="callback">Die Rückrufmethode.</param>
      <param name="state">Ein Objekt, das die von der Rückrufmethode zu verwendenden Informationen enthält. Dieser Parameter kann null sein.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.CompletedMethodInfo">
      <summary>Ruft die Methodeninformationen für die asynchrone Abschlussmethode ab.</summary>
      <returns>Die Methodeninformationen für die asynchrone Abschlussmethode.</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.ControllerDescriptor">
      <summary>Ruft den Controllerdeskriptor für die asynchrone Aktionsmethode ab.</summary>
      <returns>Der Controllerdeskriptor für die asynchrone Aktionsmethode.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.EndExecute(System.IAsyncResult)">
      <summary>Gibt das Ergebnis eines asynchronen Vorgangs zurück.</summary>
      <returns>Das Ergebnis eines asynchronen Vorgangs.</returns>
      <param name="asyncResult">Ein Objekt, das den Status eines asynchronen Vorgangs darstellt.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Gibt ein Array mit benutzerdefinierten Attributen zurück, die für diesen Member definiert sind, mit Ausnahme von benannten Attributen.</summary>
      <returns>Ein Array mit benutzerdefinierten Attributen oder ein leeres Array, falls keine benutzerdefinierten Attribute vorhanden sind.</returns>
      <param name="inherit">true, um nach der Hierarchiekette für das geerbte benutzerdefinierte Attribut zu suchen, andernfalls false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Gibt ein Array mit für diesen Member definierten benutzerdefinierten Attributen zurück, die nach Typ angegeben werden.</summary>
      <returns>Ein Array benutzerdefinierter Attribute oder ein leeres Array, wenn keine benutzerdefinierten Attribute vom angegebenen Typ vorhanden sind.</returns>
      <param name="attributeType">Der Typ der benutzerdefinierten Attribute, die zurückgegeben werden sollen.</param>
      <param name="inherit">true, um nach der Hierarchiekette für das geerbte benutzerdefinierte Attribut zu suchen, andernfalls false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetParameters">
      <summary>Gibt die Parameter der Aktionsmethode zurück.</summary>
      <returns>Die Parameter der Aktionsmethode.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetSelectors">
      <summary>Gibt die Aktionsmethodenselektoren zurück.</summary>
      <returns>Die Aktionsmethodenselektoren.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Bestimmt, ob eine oder mehrere Instanzen des angegebenen Attributtyps für diesen Aktionsmember definiert sind.</summary>
      <returns>true, wenn ein Attribut vom Typ, der durch <paramref name="attributeType" /> dargestellt wird, für diesen Member definiert wurde, andernfalls false.</returns>
      <param name="attributeType">Der Typ des benutzerdefinierten Attributs.</param>
      <param name="inherit">true, um nach der Hierarchiekette für das geerbte benutzerdefinierte Attribut zu suchen, andernfalls false.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.UniqueId">
      <summary>Ruft die verzögert initialisierte ID der aktuellen Instanz dieser Klasse ab.</summary>
      <returns>Die verzögert initialisierte ID der aktuellen Instanz dieser Klasse.</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor">
      <summary>Kapselt Informationen, die einen asynchronen Controller beschreiben, z. B. seinen Namen, den Typ und die Aktionen.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.#ctor(System.Type)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor" />-Klasse.</summary>
      <param name="controllerType">Der Typ des Controllers.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.ControllerType">
      <summary>Ruft den Typ des Controllers ab.</summary>
      <returns>Der Typ des Controllers.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.FindAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Sucht nach einer Aktionsmethode, indem der angegebene Name und der Controllerkontext verwendet werden.</summary>
      <returns>Die Informationen zur Aktionsmethode.</returns>
      <param name="controllerContext">Der Controllerkontext.</param>
      <param name="actionName">Der Name der Aktion.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetCanonicalActions">
      <summary>Gibt eine Liste von Aktionsmethodendeskriptoren im Controller zurück.</summary>
      <returns>Eine Liste von Aktionsmethodendeskriptoren im Controller.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Gibt für diesen Member definierte benutzerdefinierte Attribute mit Ausnahme benannter Attribute zurück.</summary>
      <returns>Ein Array mit benutzerdefinierten Attributen oder ein leeres Array, falls keine benutzerdefinierten Attribute vorhanden sind.</returns>
      <param name="inherit">true, um nach der Hierarchiekette für das geerbte benutzerdefinierte Attribut zu suchen, andernfalls false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Gibt benutzerdefinierte Attribute eines angegebenen Typs zurück, die für diesen Member definiert sind, mit Ausnahme benannter Attribute.</summary>
      <returns>Ein Array mit benutzerdefinierten Attributen oder ein leeres Array, falls keine benutzerdefinierten Attribute vorhanden sind.</returns>
      <param name="attributeType">Der Typ der benutzerdefinierten Attribute.</param>
      <param name="inherit">true, um nach der Hierarchiekette für das geerbte benutzerdefinierte Attribut zu suchen, andernfalls false.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Gibt einen Wert zurück, der angibt, ob eine oder mehrere Instanzen des angegebenen benutzerdefinierten Attributs für diesen Member definiert sind.</summary>
      <returns>true, wenn ein Attribut vom Typ, der durch <paramref name="attributeType" /> dargestellt wird, für diesen Member definiert wurde, andernfalls false.</returns>
      <param name="attributeType">Der Typ des benutzerdefinierten Attributs.</param>
      <param name="inherit">true, um nach der Hierarchiekette für das geerbte benutzerdefinierte Attribut zu suchen, andernfalls false.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.SynchronousOperationException">
      <summary>Stellt eine Ausnahme dar, die während der synchronen Verarbeitung einer HTTP-Anforderung in einer ASP.NET-MVC-Anwendung aufgetreten ist.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.SynchronousOperationException.#ctor">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.Async.SynchronousOperationException" />-Klasse mit einer vom System generierten Fehlermeldung.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.SynchronousOperationException.#ctor(System.String)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.Async.SynchronousOperationException" />-Klasse unter Verwendung der angegebenen Meldung.</summary>
      <param name="message">Die Meldung, in der die Ausnahme beschrieben wird Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.SynchronousOperationException.#ctor(System.String,System.Exception)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.Async.SynchronousOperationException" />-Klasse unter Verwendung einer angegebenen Fehlermeldung und eines Verweises auf die interne Ausnahme, die die Ursache dieser Ausnahme ist.</summary>
      <param name="message">Die Meldung, in der die Ausnahme beschrieben wird Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde. </param>
      <param name="innerException">Die Ausnahme, die Ursache der aktuellen Ausnahme ist. Wenn der <paramref name="innerException" />-Parameter nicht null ist, wird die aktuelle Ausnahme in einem catch-Block ausgelöst, der die innere Ausnahme behandelt. </param>
    </member>
    <member name="T:System.Web.Mvc.Html.ChildActionExtensions">
      <summary>Stellt Unterstützung für das Aufrufen von untergeordneten Aktionsmethoden und das Rendern des Ergebnisses inline in einer übergeordneten Ansicht dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Ruft die angegebene untergeordnete Aktionsmethode auf und gibt das Ergebnis als HTML-Zeichenfolge zurück.</summary>
      <returns>Das Ergebnis der untergeordneten Aktion als HTML-Zeichenfolge.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="actionName">Der Name der aufzurufenden Aktionsmethode.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="htmlHelper" />-Parameter ist null.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="actionName" />-Parameter ist null oder leer.</exception>
      <exception cref="T:System.InvalidOperationException">Die erforderlichen virtuellen Pfaddaten können nicht gefunden werden.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Ruft die angegebene untergeordnete Aktionsmethode mit den angegebenen Parametern auf und gibt das Ergebnis als HTML-Zeichenfolge zurück.</summary>
      <returns>Das Ergebnis der untergeordneten Aktion als HTML-Zeichenfolge.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="actionName">Der Name der aufzurufenden Aktionsmethode.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Sie können die Parameter, die an die Aktionsmethodenparameter gebunden werden, mithilfe von <paramref name="routeValues" /> bereitstellen. Der <paramref name="routeValues" />-Parameter wird mit den ursprünglichen Routenwerten zusammengeführt und überschreibt diese.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="htmlHelper" />-Parameter ist null.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="actionName" />-Parameter ist null oder leer.</exception>
      <exception cref="T:System.InvalidOperationException">Die erforderlichen virtuellen Pfaddaten können nicht gefunden werden.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Ruft die angegebene untergeordnete Aktionsmethode mit dem angegebenen Controllernamen auf und gibt das Ergebnis als HTML-Zeichenfolge zurück.</summary>
      <returns>Das Ergebnis der untergeordneten Aktion als HTML-Zeichenfolge.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="actionName">Der Name der aufzurufenden Aktionsmethode.</param>
      <param name="controllerName">Der Name des Controllers, der die Aktionsmethode enthält.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="htmlHelper" />-Parameter ist null.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="actionName" />-Parameter ist null oder leer.</exception>
      <exception cref="T:System.InvalidOperationException">Die erforderlichen virtuellen Pfaddaten können nicht gefunden werden.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Ruft die angegebene untergeordnete Aktionsmethode mit den angegebenen Parametern und dem angegebenen Controllernamen auf und gibt das Ergebnis als HTML-Zeichenfolge zurück.</summary>
      <returns>Das Ergebnis der untergeordneten Aktion als HTML-Zeichenfolge.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="actionName">Der Name der aufzurufenden Aktionsmethode.</param>
      <param name="controllerName">Der Name des Controllers, der die Aktionsmethode enthält.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Sie können die Parameter, die an die Aktionsmethodenparameter gebunden werden, mithilfe von <paramref name="routeValues" /> bereitstellen. Der <paramref name="routeValues" />-Parameter wird mit den ursprünglichen Routenwerten zusammengeführt und überschreibt diese.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="htmlHelper" />-Parameter ist null.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="actionName" />-Parameter ist null oder leer.</exception>
      <exception cref="T:System.InvalidOperationException">Die erforderlichen virtuellen Pfaddaten können nicht gefunden werden.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Ruft die angegebene untergeordnete Aktionsmethode mit den angegebenen Parametern und dem angegebenen Controllernamen auf und gibt das Ergebnis als HTML-Zeichenfolge zurück.</summary>
      <returns>Das Ergebnis der untergeordneten Aktion als HTML-Zeichenfolge.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="actionName">Der Name der aufzurufenden Aktionsmethode.</param>
      <param name="controllerName">Der Name des Controllers, der die Aktionsmethode enthält.</param>
      <param name="routeValues">Ein Wörterbuch, das die Parameter für eine Route enthält. Sie können die Parameter, die an die Aktionsmethodenparameter gebunden werden, mithilfe von <paramref name="routeValues" /> bereitstellen. Der <paramref name="routeValues" />-Parameter wird mit den ursprünglichen Routenwerten zusammengeführt und überschreibt diese.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="htmlHelper" />-Parameter ist null.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="actionName" />-Parameter ist null oder leer.</exception>
      <exception cref="T:System.InvalidOperationException">Die erforderlichen virtuellen Pfaddaten können nicht gefunden werden.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Ruft die angegebene untergeordnete Aktionsmethode mit den angegebenen Parametern auf und gibt das Ergebnis als HTML-Zeichenfolge zurück.</summary>
      <returns>Das Ergebnis der untergeordneten Aktion als HTML-Zeichenfolge.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="actionName">Der Name der aufzurufenden Aktionsmethode.</param>
      <param name="routeValues">Ein Wörterbuch, das die Parameter für eine Route enthält. Sie können die Parameter, die an die Aktionsmethodenparameter gebunden werden, mithilfe von <paramref name="routeValues" /> bereitstellen. Der <paramref name="routeValues" />-Parameter wird mit den ursprünglichen Routenwerten zusammengeführt und überschreibt diese.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="htmlHelper" />-Parameter ist null.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="actionName" />-Parameter ist null oder leer.</exception>
      <exception cref="T:System.InvalidOperationException">Die erforderlichen virtuellen Pfaddaten können nicht gefunden werden.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Ruft die angegebene untergeordnete Aktionsmethode auf und rendert das Ergebnis inline in der übergeordneten Ansicht.</summary>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="actionName">Der Name der aufzurufenden untergeordneten Aktionsmethode.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="htmlHelper" />-Parameter ist null.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="actionName" />-Parameter ist null oder leer.</exception>
      <exception cref="T:System.InvalidOperationException">Die erforderlichen virtuellen Pfaddaten können nicht gefunden werden.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Ruft die angegebene untergeordnete Aktionsmethode mithilfe der angegebenen Parameter auf und rendert das Ergebnis inline in der übergeordneten Ansicht.</summary>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="actionName">Der Name der aufzurufenden untergeordneten Aktionsmethode.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Sie können die Parameter, die an die Aktionsmethodenparameter gebunden werden, mithilfe von <paramref name="routeValues" /> bereitstellen. Der <paramref name="routeValues" />-Parameter wird mit den ursprünglichen Routenwerten zusammengeführt und überschreibt diese.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="htmlHelper" />-Parameter ist null.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="actionName" />-Parameter ist null oder leer.</exception>
      <exception cref="T:System.InvalidOperationException">Die erforderlichen virtuellen Pfaddaten können nicht gefunden werden.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Ruft die angegebene untergeordnete Aktionsmethode mithilfe des angegebenen Controllernamens auf und rendert das Ergebnis inline in der übergeordneten Ansicht.</summary>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="actionName">Der Name der aufzurufenden untergeordneten Aktionsmethode.</param>
      <param name="controllerName">Der Name des Controllers, der die Aktionsmethode enthält.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="htmlHelper" />-Parameter ist null.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="actionName" />-Parameter ist null oder leer.</exception>
      <exception cref="T:System.InvalidOperationException">Die erforderlichen virtuellen Pfaddaten können nicht gefunden werden.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Ruft die angegebene untergeordnete Aktionsmethode mithilfe der angegebenen Parameter und des angegebenen Controllernamens auf und rendert das Ergebnis inline in der übergeordneten Ansicht.</summary>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="actionName">Der Name der aufzurufenden untergeordneten Aktionsmethode.</param>
      <param name="controllerName">Der Name des Controllers, der die Aktionsmethode enthält.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Sie können die Parameter, die an die Aktionsmethodenparameter gebunden werden, mithilfe von <paramref name="routeValues" /> bereitstellen. Der <paramref name="routeValues" />-Parameter wird mit den ursprünglichen Routenwerten zusammengeführt und überschreibt diese.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="htmlHelper" />-Parameter ist null.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="actionName" />-Parameter ist null oder leer.</exception>
      <exception cref="T:System.InvalidOperationException">Die erforderlichen virtuellen Pfaddaten können nicht gefunden werden.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Ruft die angegebene untergeordnete Aktionsmethode mithilfe der angegebenen Parameter und des angegebenen Controllernamens auf und rendert das Ergebnis inline in der übergeordneten Ansicht.</summary>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="actionName">Der Name der aufzurufenden untergeordneten Aktionsmethode.</param>
      <param name="controllerName">Der Name des Controllers, der die Aktionsmethode enthält.</param>
      <param name="routeValues">Ein Wörterbuch, das die Parameter für eine Route enthält. Sie können die Parameter, die an die Aktionsmethodenparameter gebunden werden, mithilfe von <paramref name="routeValues" /> bereitstellen. Der <paramref name="routeValues" />-Parameter wird mit den ursprünglichen Routenwerten zusammengeführt und überschreibt diese.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="htmlHelper" />-Parameter ist null.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="actionName" />-Parameter ist null oder leer.</exception>
      <exception cref="T:System.InvalidOperationException">Die erforderlichen virtuellen Pfaddaten können nicht gefunden werden.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Ruft die angegebene untergeordnete Aktionsmethode mithilfe der angegebenen Parameter auf und rendert das Ergebnis inline in der übergeordneten Ansicht.</summary>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="actionName">Der Name der aufzurufenden untergeordneten Aktionsmethode.</param>
      <param name="routeValues">Ein Wörterbuch, das die Parameter für eine Route enthält. Sie können die Parameter, die an die Aktionsmethodenparameter gebunden werden, mithilfe von <paramref name="routeValues" /> bereitstellen. Der <paramref name="routeValues" />-Parameter wird mit den ursprünglichen Routenwerten zusammengeführt und überschreibt diese.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="htmlHelper" />-Parameter ist null.</exception>
      <exception cref="T:System.ArgumentException">Der <paramref name="actionName" />-Parameter ist null oder leer.</exception>
      <exception cref="T:System.InvalidOperationException">Die erforderlichen virtuellen Pfaddaten können nicht gefunden werden.</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.DisplayExtensions">
      <summary>Stellt Unterstützung für das Rendern von Objektwerten als HTML dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Gibt HTML-Markup für jede Eigenschaft im Objekt zurück, das durch einen Zeichenfolgenausdruck dargestellt wird.</summary>
      <returns>Das HTML-Markup für jede Eigenschaft im Objekt, das durch den Ausdruck dargestellt wird.</returns>
      <param name="html">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="expression">Ein Ausdruck, der das Objekt identifiziert, das die anzuzeigenden Eigenschaften enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Gibt mithilfe zusätzlicher Ansichtsdaten für jede Eigenschaft in dem Objekt ein HTML-Markup zurück, das durch den Zeichenfolgenausdruck dargestellt wird.</summary>
      <returns>Das HTML-Markup für jede Eigenschaft im Objekt, das durch den Ausdruck dargestellt wird.</returns>
      <param name="html">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="expression">Ein Ausdruck, der das Objekt identifiziert, das die anzuzeigenden Eigenschaften enthält.</param>
      <param name="additionalViewData">Ein anonymes Objekt, das zusätzliche Ansichtsdaten enthalten kann, die in der für die Vorlage erstellten <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />-Instanz zusammengeführt werden.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Gibt ein HTML-Markup für jede Eigenschaft im Objekt zurück, die durch den Ausdruck dargestellt wird. Hierbei wird die angegebene Vorlage verwendet.</summary>
      <returns>Das HTML-Markup für jede Eigenschaft im Objekt, das durch den Ausdruck dargestellt wird.</returns>
      <param name="html">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="expression">Ein Ausdruck, der das Objekt identifiziert, das die anzuzeigenden Eigenschaften enthält.</param>
      <param name="templateName">Der Name der Vorlage, die zum Rendern des Objekts verwendet wird.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Gibt mithilfe der angegebenen Vorlage und zusätzlicher Ansichtsdaten für jede Eigenschaft in dem Objekt ein HTML-Markup zurück, das durch den Ausdruck dargestellt wird.</summary>
      <returns>Das HTML-Markup für jede Eigenschaft im Objekt, das durch den Ausdruck dargestellt wird.</returns>
      <param name="html">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="expression">Ein Ausdruck, der das Objekt identifiziert, das die anzuzeigenden Eigenschaften enthält.</param>
      <param name="templateName">Der Name der Vorlage, die zum Rendern des Objekts verwendet wird.</param>
      <param name="additionalViewData">Ein anonymes Objekt, das zusätzliche Ansichtsdaten enthalten kann, die in der für die Vorlage erstellten <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />-Instanz zusammengeführt werden.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>Gibt ein HTML-Markup für jede Eigenschaft in dem Objekt zurück, das durch den Ausdruck dargestellt wird. Hierbei wird die angegebene Vorlage und eine HTML-Feld-ID verwendet.</summary>
      <returns>Das HTML-Markup für jede Eigenschaft im Objekt, das durch den Ausdruck dargestellt wird.</returns>
      <param name="html">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="expression">Ein Ausdruck, der das Objekt identifiziert, das die anzuzeigenden Eigenschaften enthält.</param>
      <param name="templateName">Der Name der Vorlage, die zum Rendern des Objekts verwendet wird.</param>
      <param name="htmlFieldName">Eine Zeichenfolge, die verwendet wird, um die Namen von HTML-input-Elementen eindeutig zu machen, die für Eigenschaften gerendert werden, die über den gleichen Namen verfügen.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object)">
      <summary>Gibt mithilfe der angegebenen Vorlage, der HTML-Feld-ID und zusätzlicher Ansichtsdaten für jede Eigenschaft in dem Objekt ein HTML-Markup zurück, das durch den Ausdruck dargestellt wird.</summary>
      <returns>Das HTML-Markup für jede Eigenschaft im Objekt, das durch den Ausdruck dargestellt wird.</returns>
      <param name="html">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="expression">Ein Ausdruck, der das Objekt identifiziert, das die anzuzeigenden Eigenschaften enthält.</param>
      <param name="templateName">Der Name der Vorlage, die zum Rendern des Objekts verwendet wird.</param>
      <param name="htmlFieldName">Eine Zeichenfolge, die verwendet wird, um die Namen von HTML-input-Elementen eindeutig zu machen, die für Eigenschaften gerendert werden, die über den gleichen Namen verfügen.</param>
      <param name="additionalViewData">Ein anonymes Objekt, das zusätzliche Ansichtsdaten enthalten kann, die in der für die Vorlage erstellten <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />-Instanz zusammengeführt werden.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2})">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TValue"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TValue"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean,``0)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TValue"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean,``0,``1)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TValue"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Gibt das HTML-Markup für jede Eigenschaft im Modell zurück.</summary>
      <returns>Das HTML-Markup für jede Eigenschaft im Modell.</returns>
      <param name="html">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Gibt mithilfe zusätzlicher Anzeigedaten für jede Eigenschaft im Modell ein HTML-Markup zurück.</summary>
      <returns>Das HTML-Markup für jede Eigenschaft im Modell.</returns>
      <param name="html">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="additionalViewData">Ein anonymes Objekt, das zusätzliche Ansichtsdaten enthalten kann, die in der für die Vorlage erstellten <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />-Instanz zusammengeführt werden.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Gibt HTML-Markup für jede Eigenschaft im Modell zurück. Hierbei wird die angegebene Vorlage verwendet.</summary>
      <returns>Das HTML-Markup für jede Eigenschaft im Modell.</returns>
      <param name="html">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="templateName">Der Name der Vorlage, die zum Rendern des Objekts verwendet wird.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Gibt mithilfe der angegebenen Vorlage und zusätzlicher Anzeigedaten für jede Eigenschaft im Modell ein HTML-Markup zurück.</summary>
      <returns>Das HTML-Markup für jede Eigenschaft im Modell.</returns>
      <param name="html">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="templateName">Der Name der Vorlage, die zum Rendern des Objekts verwendet wird.</param>
      <param name="additionalViewData">Ein anonymes Objekt, das zusätzliche Ansichtsdaten enthalten kann, die in der für die Vorlage erstellten <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />-Instanz zusammengeführt werden.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Gibt HTML-Markup für jede Eigenschaft im Modell zurück. Hierfür werden die angegebene Vorlage und die HTML-Feld-ID verwendet.</summary>
      <returns>Das HTML-Markup für jede Eigenschaft im Modell.</returns>
      <param name="html">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="templateName">Der Name der Vorlage, die zum Rendern des Objekts verwendet wird.</param>
      <param name="htmlFieldName">Eine Zeichenfolge, die verwendet wird, um die Namen von HTML-input-Elementen eindeutig zu machen, die für Eigenschaften gerendert werden, die über den gleichen Namen verfügen.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Gibt mithilfe der angegebenen Vorlage, der HTML-Feld-ID und zusätzlicher Anzeigedaten für jede Eigenschaft im Modell ein HTML-Markup zurück.</summary>
      <returns>Das HTML-Markup für jede Eigenschaft im Modell.</returns>
      <param name="html">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="templateName">Der Name der Vorlage, die zum Rendern des Objekts verwendet wird.</param>
      <param name="htmlFieldName">Eine Zeichenfolge, die verwendet wird, um die Namen von HTML-input-Elementen eindeutig zu machen, die für Eigenschaften gerendert werden, die über den gleichen Namen verfügen.</param>
      <param name="additionalViewData">Ein anonymes Objekt, das zusätzliche Ansichtsdaten enthalten kann, die in der für die Vorlage erstellten <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />-Instanz zusammengeführt werden.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.DisplayTextExtensions">
      <summary>Bietet eine Möglichkeit, Objektwerte als HTML zu rendern.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayTextExtensions.DisplayText(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Gibt HTML-Markup für jede Eigenschaft im Objekt zurück, das durch den angegebenen-Ausdruck dargestellt wird.</summary>
      <returns>Das HTML-Markup für jede Eigenschaft im Objekt, das durch den Ausdruck dargestellt wird.</returns>
      <param name="html">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Ein Ausdruck, der das Objekt identifiziert, das die anzuzeigenden Eigenschaften enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayTextExtensions.DisplayTextFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2})">
      <summary>Gibt HTML-Markup für jede Eigenschaft im Objekt zurück, das durch den angegebenen-Ausdruck dargestellt wird.</summary>
      <returns>Gibt <see cref="T:System.Web.Mvc.MvcHtmlString" /> zurück.</returns>
      <param name="html">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="expression">Ein Ausdruck, der das Objekt identifiziert, das die anzuzeigenden Eigenschaften enthält.</param>
      <typeparam name="TModel">Der Typ des Modells.</typeparam>
      <typeparam name="TResult">Der Typ des Ergebnisses.</typeparam>
    </member>
    <member name="T:System.Web.Mvc.Html.EditorExtensions">
      <summary>Stellt Unterstützung für das HTML-input-Element in einer Anwendung dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Gibt ein HTML-input-Element für jede Eigenschaft im Objekt zurück, das durch den Ausdruck dargestellt wird.</summary>
      <returns>Ein HTML-input-Element für jede Eigenschaft im Objekt, das durch den Ausdruck dargestellt wird.</returns>
      <param name="html">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="expression">Ein Ausdruck, der das Objekt identifiziert, das die anzuzeigenden Eigenschaften enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Gibt mithilfe zusätzlicher Ansichtsdaten für jede Eigenschaft im Objekt ein HTML-input-Element zurück, das durch den Ausdruck dargestellt wird.</summary>
      <returns>Ein HTML-input-Element für jede Eigenschaft im Objekt, das durch den Ausdruck dargestellt wird.</returns>
      <param name="html">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="expression">Ein Ausdruck, der das Objekt identifiziert, das die anzuzeigenden Eigenschaften enthält.</param>
      <param name="additionalViewData">Ein anonymes Objekt, das zusätzliche Ansichtsdaten enthalten kann, die in der für die Vorlage erstellten <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />-Instanz zusammengeführt werden.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Gibt ein HTML-input-Element für jede Eigenschaft im Objekt zurück, die durch den Ausdruck dargestellt wird. Hierbei wird die angegebene Vorlage verwendet.</summary>
      <returns>Ein HTML-input-Element für jede Eigenschaft im Objekt, das durch den Ausdruck dargestellt wird.</returns>
      <param name="html">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="expression">Ein Ausdruck, der das Objekt identifiziert, das die anzuzeigenden Eigenschaften enthält.</param>
      <param name="templateName">Der Name der Vorlage, die zum Rendern des Objekts verwendet wird.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Gibt mithilfe der angegebenen Vorlage und zusätzlicher Ansichtsdaten für jede Eigenschaft im Objekt ein HTML-input-Element zurück, das durch den Ausdruck dargestellt wird.</summary>
      <returns>Ein HTML-input-Element für jede Eigenschaft im Objekt, das durch den Ausdruck dargestellt wird.</returns>
      <param name="html">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="expression">Ein Ausdruck, der das Objekt identifiziert, das die anzuzeigenden Eigenschaften enthält.</param>
      <param name="templateName">Der Name der Vorlage, die zum Rendern des Objekts verwendet wird.</param>
      <param name="additionalViewData">Ein anonymes Objekt, das zusätzliche Ansichtsdaten enthalten kann, die in der für die Vorlage erstellten <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />-Instanz zusammengeführt werden.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>Gibt ein HTML-input-Element für jede Eigenschaft im Objekt zurück, das durch den Ausdruck dargestellt wird. Hierbei wird die angegebene Vorlage und der HTML-Feldname verwendet.</summary>
      <returns>Ein HTML-input-Element für jede Eigenschaft im Objekt, das durch den Ausdruck dargestellt wird.</returns>
      <param name="html">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="expression">Ein Ausdruck, der das Objekt identifiziert, das die anzuzeigenden Eigenschaften enthält.</param>
      <param name="templateName">Der Name der Vorlage, die zum Rendern des Objekts verwendet wird.</param>
      <param name="htmlFieldName">Eine Zeichenfolge, die verwendet wird, um die Namen von HTML-input-Elementen eindeutig zu machen, die für Eigenschaften gerendert werden, die über den gleichen Namen verfügen.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object)">
      <summary>Gibt mithilfe der angegebenen Vorlage, des HTML-Feldnamens und zusätzlicher Ansichtsdaten für jede Eigenschaft im Objekt ein HTML-input-Element zurück, das durch den Ausdruck dargestellt wird.</summary>
      <returns>Ein HTML-input-Element für jede Eigenschaft im Objekt, das durch den Ausdruck dargestellt wird.</returns>
      <param name="html">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="expression">Ein Ausdruck, der das Objekt identifiziert, das die anzuzeigenden Eigenschaften enthält.</param>
      <param name="templateName">Der Name der Vorlage, die zum Rendern des Objekts verwendet wird.</param>
      <param name="htmlFieldName">Eine Zeichenfolge, die verwendet wird, um die Namen von HTML-input-Elementen eindeutig zu machen, die für Eigenschaften gerendert werden, die über den gleichen Namen verfügen.</param>
      <param name="additionalViewData">Ein anonymes Objekt, das zusätzliche Ansichtsdaten enthalten kann, die in der für die Vorlage erstellten <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />-Instanz zusammengeführt werden.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2})">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TValue"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TValue"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean,``0)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TValue"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean,``0,``1)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TValue"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Gibt ein HTML-input-Element für jede Eigenschaft im Modell zurück.</summary>
      <returns>Gibt ein HTML-input-Element für jede Eigenschaft im Modell zurück.</returns>
      <param name="html">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Gibt mithilfe zusätzlicher Ansichtsdaten für jede Eigenschaft im Modell ein HTML-input-Element zurück.</summary>
      <returns>Gibt ein HTML-input-Element für jede Eigenschaft im Modell zurück.</returns>
      <param name="html">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="additionalViewData">Ein anonymes Objekt, das zusätzliche Ansichtsdaten enthalten kann, die in der für die Vorlage erstellten <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />-Instanz zusammengeführt werden.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Gibt ein HTML-input-Element für jede Eigenschaft im Modell zurück und verwendet dazu die angegebene Vorlage.</summary>
      <returns>Gibt ein HTML-input-Element für jede Eigenschaft im Modell und in der angegebenen Vorlage zurück.</returns>
      <param name="html">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="templateName">Der Name der Vorlage, die zum Rendern des Objekts verwendet wird.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Gibt mithilfe der angegebenen Vorlage und zusätzlicher Ansichtsdaten für jede Eigenschaft im Modell ein HTML-input-Element zurück.</summary>
      <returns>Gibt ein HTML-input-Element für jede Eigenschaft im Modell zurück.</returns>
      <param name="html">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="templateName">Der Name der Vorlage, die zum Rendern des Objekts verwendet wird.</param>
      <param name="additionalViewData">Ein anonymes Objekt, das zusätzliche Ansichtsdaten enthalten kann, die in der für die Vorlage erstellten <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />-Instanz zusammengeführt werden.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Gibt mithilfe des angegebenen Vorlagennamens und HTML-Feldnamens für jede Eigenschaft im Modell ein HTML-input-Element zurück.</summary>
      <returns>Ein HTML-input-Element für jede Eigenschaft im Modell und in der benannten Vorlage.</returns>
      <param name="html">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="templateName">Der Name der Vorlage, die zum Rendern des Objekts verwendet wird.</param>
      <param name="htmlFieldName">Eine Zeichenfolge, die verwendet wird, um die Namen von HTML-input-Elementen eindeutig zu machen, die für Eigenschaften gerendert werden, die über den gleichen Namen verfügen.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Gibt mithilfe des angegebenen Vorlagennamens, des HTML-Feldnamens und zusätzlicher Ansichtsdaten für jede Eigenschaft im Modell ein HTML-input-Element zurück.</summary>
      <returns>Gibt ein HTML-input-Element für jede Eigenschaft im Modell zurück.</returns>
      <param name="html">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="templateName">Der Name der Vorlage, die zum Rendern des Objekts verwendet wird.</param>
      <param name="htmlFieldName">Eine Zeichenfolge, die verwendet wird, um die Namen von HTML-input-Elementen eindeutig zu machen, die für Eigenschaften gerendert werden, die über den gleichen Namen verfügen.</param>
      <param name="additionalViewData">Ein anonymes Objekt, das zusätzliche Ansichtsdaten enthalten kann, die in der für die Vorlage erstellten <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />-Instanz zusammengeführt werden.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.FormExtensions">
      <summary>Stellt Unterstützung für HTML in einer Anwendung dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper)">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort. Wenn der Benutzer das Formular sendet, wird die Anforderung von einer Aktionsmethode verarbeitet.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag. </returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort. Wenn der Benutzer das Formular sendet, wird die Anforderung von einer Aktionsmethode verarbeitet.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Dieses Objekt wird normalerweise mit der Objektinitialisierersyntax erstellt.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort. Wenn der Benutzer das Formular sendet, wird die Anforderung von einer Aktionsmethode verarbeitet.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="actionName">Der Name der Aktionsmethode.</param>
      <param name="controllerName">Der Name des Controllers.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort. Wenn der Benutzer das Formular sendet, wird die Anforderung von einer Aktionsmethode verarbeitet.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="actionName">Der Name der Aktionsmethode.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Dieses Objekt wird normalerweise mit der Objektinitialisierersyntax erstellt.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Web.Mvc.FormMethod)">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort. Wenn der Benutzer das Formular sendet, wird die Anforderung von einer Aktionsmethode verarbeitet.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="actionName">Der Name der Aktionsmethode.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Dieses Objekt wird normalerweise mit der Objektinitialisierersyntax erstellt.</param>
      <param name="method">Die HTTP-Methode zum Verarbeiten des Formulars, entweder GET oder POST.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Web.Mvc.FormMethod,System.Object)">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort. Wenn der Benutzer das Formular sendet, wird die Anforderung von einer Aktionsmethode verarbeitet.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="actionName">Der Name der Aktionsmethode.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Dieses Objekt wird normalerweise mit der Objektinitialisierersyntax erstellt.</param>
      <param name="method">Die HTTP-Methode zum Verarbeiten des Formulars, entweder GET oder POST.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod)">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort. Wenn der Benutzer das Formular sendet, wird die Anforderung von einer Aktionsmethode verarbeitet.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="actionName">Der Name der Aktionsmethode.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="method">Die HTTP-Methode zum Verarbeiten des Formulars, entweder GET oder POST.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort. Wenn der Benutzer das Formular sendet, wird die Anforderung von einer Aktionsmethode verarbeitet.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="actionName">Der Name der Aktionsmethode.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="method">Die HTTP-Methode zum Verarbeiten des Formulars, entweder GET oder POST.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod,System.Object)">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort. Wenn der Benutzer das Formular sendet, wird die Anforderung von einer Aktionsmethode verarbeitet.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="actionName">Der Name der Aktionsmethode.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="method">Die HTTP-Methode zum Verarbeiten des Formulars, entweder GET oder POST.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort. Wenn der Benutzer das Formular sendet, wird die Anforderung von einer Aktionsmethode verarbeitet.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="actionName">Der Name der Aktionsmethode.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod)">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort. Wenn der Benutzer das Formular sendet, wird die Anforderung von einer Aktionsmethode verarbeitet.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="actionName">Der Name der Aktionsmethode.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <param name="method">Die HTTP-Methode zum Verarbeiten des Formulars, entweder GET oder POST.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort. Wenn der Benutzer das Formular sendet, wird die Anforderung von einer Aktionsmethode verarbeitet.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="actionName">Der Name der Aktionsmethode.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <param name="method">Die HTTP-Methode zum Verarbeiten des Formulars, entweder GET oder POST.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.Web.Routing.RouteValueDictionary)">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort. Wenn der Benutzer das Formular sendet, wird die Anforderung von einer Aktionsmethode verarbeitet.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort. Wenn der Benutzer das Formular sendet, wird die Anforderung vom Routenziel verarbeitet.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Dieses Objekt wird normalerweise mit der Objektinitialisierersyntax erstellt.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort. Wenn der Benutzer das Formular sendet, wird die Anforderung vom Routenziel verarbeitet.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="routeName">Der Name der Route, mit der die Formularbereitstellungs-URL abgerufen wird.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort. Wenn der Benutzer das Formular sendet, wird die Anforderung vom Routenziel verarbeitet.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="routeName">Der Name der Route, mit der die Formularbereitstellungs-URL abgerufen wird.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Dieses Objekt wird normalerweise mit der Objektinitialisierersyntax erstellt.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.FormMethod)">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort. Wenn der Benutzer das Formular sendet, wird die Anforderung vom Routenziel verarbeitet.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="routeName">Der Name der Route, mit der die Formularbereitstellungs-URL abgerufen wird.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Dieses Objekt wird normalerweise mit der Objektinitialisierersyntax erstellt.</param>
      <param name="method">Die HTTP-Methode zum Verarbeiten des Formulars, entweder GET oder POST.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.FormMethod,System.Object)">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort. Wenn der Benutzer das Formular sendet, wird die Anforderung vom Routenziel verarbeitet.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="routeName">Der Name der Route, mit der die Formularbereitstellungs-URL abgerufen wird.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Dieses Objekt wird normalerweise mit der Objektinitialisierersyntax erstellt.</param>
      <param name="method">Die HTTP-Methode zum Verarbeiten des Formulars, entweder GET oder POST.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod)">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort. Wenn der Benutzer das Formular sendet, wird die Anforderung vom Routenziel verarbeitet.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="routeName">Der Name der Route, mit der die Formularbereitstellungs-URL abgerufen wird.</param>
      <param name="method">Die HTTP-Methode zum Verarbeiten des Formulars, entweder GET oder POST.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort. Wenn der Benutzer das Formular sendet, wird die Anforderung vom Routenziel verarbeitet.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="routeName">Der Name der Route, mit der die Formularbereitstellungs-URL abgerufen wird.</param>
      <param name="method">Die HTTP-Methode zum Verarbeiten des Formulars, entweder GET oder POST.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod,System.Object)">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort. Wenn der Benutzer das Formular sendet, wird die Anforderung vom Routenziel verarbeitet.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="routeName">Der Name der Route, mit der die Formularbereitstellungs-URL abgerufen wird.</param>
      <param name="method">Die HTTP-Methode zum Verarbeiten des Formulars, entweder GET oder POST.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort. Wenn der Benutzer das Formular sendet, wird die Anforderung vom Routenziel verarbeitet.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="routeName">Der Name der Route, mit der die Formularbereitstellungs-URL abgerufen wird.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod)">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort. Wenn der Benutzer das Formular sendet, wird die Anforderung vom Routenziel verarbeitet.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="routeName">Der Name der Route, mit der die Formularbereitstellungs-URL abgerufen wird.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <param name="method">Die HTTP-Methode zum Verarbeiten des Formulars, entweder GET oder POST.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort. Wenn der Benutzer das Formular sendet, wird die Anforderung vom Routenziel verarbeitet.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="routeName">Der Name der Route, mit der die Formularbereitstellungs-URL abgerufen wird.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <param name="method">Die HTTP-Methode zum Verarbeiten des Formulars, entweder GET oder POST.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.Web.Routing.RouteValueDictionary)">
      <summary>Schreibt ein öffnendes &lt;form&gt;-Tag in die Antwort. Wenn der Benutzer das Formular sendet, wird die Anforderung vom Routenziel verarbeitet.</summary>
      <returns>Ein öffnendes &lt;form&gt;-Tag.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.EndForm(System.Web.Mvc.HtmlHelper)">
      <summary>Rendert das schließende &lt;/form&gt;-Tag in die Antwort. </summary>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.InputExtensions">
      <summary>Stellt Unterstützung für HTML-Eingabesteuerelemente in einer Anwendung dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Gibt ein input-Element für Kontrollkästchen zurück. Hierfür werden das angegebene HTML-Hilfsobjekt und der Name des Formularfelds verwendet.</summary>
      <returns>Ein input-Element, dessen type-Attribut auf "checkbox" festgelegt ist.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des Formularfelds.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean)">
      <summary>Gibt ein input-Element für Kontrollkästchen zurück. Hierfür werden das angegebene HTML-Hilfsobjekt, der Name des Formularfelds und ein Wert verwendet, der angibt, ob das Kontrollkästchen aktiviert ist.</summary>
      <returns>Ein input-Element, dessen type-Attribut auf "checkbox" festgelegt ist.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des Formularfelds.</param>
      <param name="isChecked">true, um das Kontrollkästchen zu aktivieren; andernfalls false.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein input-Element für Kontrollkästchen zurück. Hierfür werden das angegebene HTML-Hilfsobjekt, der Name des Formularfelds, ein Wert, der angibt, ob das Kontrollkästchen aktiviert ist, und die HTML-Attribute verwendet.</summary>
      <returns>Ein input-Element, dessen type-Attribut auf "checkbox" festgelegt ist.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des Formularfelds.</param>
      <param name="isChecked">true, um das Kontrollkästchen zu aktivieren; andernfalls false.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean,System.Object)">
      <summary>Gibt ein input-Element für Kontrollkästchen zurück. Hierfür werden das angegebene HTML-Hilfsobjekt, der Name des Formularfelds, ein Wert, der angibt, ob das Kontrollkästchen aktiviert ist, und die HTML-Attribute verwendet.</summary>
      <returns>Ein input-Element, dessen type-Attribut auf "checkbox" festgelegt ist.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des Formularfelds.</param>
      <param name="isChecked">true, um das Kontrollkästchen zu aktivieren; andernfalls false.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt das angegebene input-Element zurück. Hierfür werden das angegebene HTML-Hilfsobjekt, der Name des Formularfelds und die HTML-Attribute verwendet.</summary>
      <returns>Ein input-Element, dessen type-Attribut auf "checkbox" festgelegt ist.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des Formularfelds.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Gibt das angegebene input-Element zurück. Hierfür werden das angegebene HTML-Hilfsobjekt, der Name des Formularfelds und die HTML-Attribute verwendet.</summary>
      <returns>Ein input-Element, dessen type-Attribut auf "checkbox" festgelegt ist.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des Formularfelds.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2})">
      <typeparam name="TModel"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean)">
      <typeparam name="TModel"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Gibt ein ausgeblendetes input-Element zurück. Hierfür werden das angegebene HTML-Hilfsobjekt und der Name des Formularfelds verwendet.</summary>
      <returns>Ein input-Element, dessen type-Attribut auf "hidden" festgelegt ist.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des Formularfelds und des <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Schlüssels, der zum Nachschlagen des Werts verwendet wird.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Gibt ein ausgeblendetes input-Element zurück. Hierfür werden das angegebene HTML-Hilfsobjekt, der Name des Formularfelds und der Wert verwendet.</summary>
      <returns>Ein input-Element, dessen type-Attribut auf "hidden" festgelegt ist.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des Formularfelds und des <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Schlüssels, der zum Nachschlagen des Werts verwendet wird.</param>
      <param name="value">Der Wert des ausgeblendeten input-Elements. Falls dieser Wert null ist, wird der Wert des Elements aus dem <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Objekt abgerufen. Wenn kein Wert vorhanden ist, wird der Wert aus dem <see cref="T:System.Web.Mvc.ModelStateDictionary" />-Objekt abgerufen.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein ausgeblendetes input-Element zurück. Hierfür werden das angegebene HTML-Hilfsobjekt, der Name des Formularfelds, der Wert und die HTML-Attribute verwendet.</summary>
      <returns>Ein input-Element, dessen type-Attribut auf "hidden" festgelegt ist.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des Formularfelds und des <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Schlüssels, der zum Nachschlagen des Werts verwendet wird.</param>
      <param name="value">Der Wert des ausgeblendeten input-Elements. Falls dieser Wert null ist, wird der Wert des Elements aus dem <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Objekt abgerufen. Wenn kein Wert vorhanden ist, wird der Wert aus dem <see cref="T:System.Web.Mvc.ModelStateDictionary" />-Objekt abgerufen.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Gibt ein ausgeblendetes input-Element zurück. Hierfür werden das angegebene HTML-Hilfsobjekt, der Name des Formularfelds, der Wert und die HTML-Attribute verwendet.</summary>
      <returns>Ein input-Element, dessen type-Attribut auf "hidden" festgelegt ist.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des Formularfelds und des <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Schlüssels, der zum Nachschlagen des Werts verwendet wird.</param>
      <param name="value">Der Wert des ausgeblendeten input-Elements. Falls dieser Wert null ist, wird der Wert des Elements aus dem <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Objekt abgerufen. Wenn kein Wert vorhanden ist, wird der Wert aus dem <see cref="T:System.Web.Mvc.ModelStateDictionary" />-Objekt abgerufen.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2})">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Gibt ein input-Element für ein Kennwort zurück. Hierfür werden das angegebene HTML-Hilfsobjekt und der Name des Formularfelds verwendet.</summary>
      <returns>Ein input-Element, dessen type-Attribut auf "Password" festgelegt ist.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des Formularfelds und des <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Schlüssels, der zum Nachschlagen des Werts verwendet wird.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Gibt ein input-Element für ein Kennwort zurück. Hierfür werden das angegebene HTML-Hilfsobjekt, der Name des Formularfelds und der Wert verwendet.</summary>
      <returns>Ein input-Element, dessen type-Attribut auf "Password" festgelegt ist.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des Formularfelds und der <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Schlüssel, der zum Nachschlagen des Werts verwendet wird.</param>
      <param name="value">Der Wert des Kennwort-input-Elements. Falls dieser Wert null ist, wird der Wert des Elements aus dem <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Objekt abgerufen. Wenn kein Wert vorhanden ist, wird der Wert aus dem <see cref="T:System.Web.Mvc.ModelStateDictionary" />-Objekt abgerufen.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein input-Element für das Kennwort zurück. Hierfür werden das angegebene HTML-Hilfsobjekt, der Name des Formularfelds, der Wert und die HTML-Attribute verwendet.</summary>
      <returns>Ein input-Element, dessen type-Attribut auf "Password" festgelegt ist.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des Formularfelds und der <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Schlüssel, der zum Nachschlagen des Werts verwendet wird.</param>
      <param name="value">Der Wert des Kennwort-input-Elements. Falls dieser Wert null ist, wird der Wert des Elements aus dem <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Objekt abgerufen. Wenn kein Wert vorhanden ist, wird der Wert aus dem <see cref="T:System.Web.Mvc.ModelStateDictionary" />-Objekt abgerufen.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Gibt ein input-Element für das Kennwort zurück. Hierfür werden das angegebene HTML-Hilfsobjekt, der Name des Formularfelds, der Wert und die HTML-Attribute verwendet.</summary>
      <returns>Ein input-Element, dessen type-Attribut auf "Password" festgelegt ist.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des Formularfelds und der <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Schlüssel, der zum Nachschlagen des Werts verwendet wird.</param>
      <param name="value">Der Wert des Kennwort-input-Elements. Falls dieser Wert null ist, wird der Wert des Elements aus dem <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Objekt abgerufen. Wenn kein Wert vorhanden ist, wird der Wert aus dem <see cref="T:System.Web.Mvc.ModelStateDictionary" />-Objekt abgerufen.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2})">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Gibt ein input-Element für ein Optionsfeld zurück, das verwendet wird, um sich gegenseitig ausschließende Optionen zu präsentieren.</summary>
      <returns>Ein input-Element, dessen type-Attribut auf "radio" festgelegt ist.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des Formularfelds und der <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Schlüssel, der zum Nachschlagen des Werts verwendet wird.</param>
      <param name="value">Wenn dieses Optionsfeld aktiviert wird, der Wert des Optionsfelds, der beim Bereitstellen des Formulars gesendet wird. Wenn der Wert des aktivierten Optionsfelds im <see cref="T:System.Web.Mvc.ViewDataDictionary" />- oder <see cref="T:System.Web.Mvc.ModelStateDictionary" />-Objekt mit diesem Wert übereinstimmt, wird dieses Optionsfeld aktiviert.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="name" />-Parameter ist null oder leer.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="value" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean)">
      <summary>Gibt ein input-Element für ein Optionsfeld zurück, das verwendet wird, um sich gegenseitig ausschließende Optionen zu präsentieren.</summary>
      <returns>Ein input-Element, dessen type-Attribut auf "radio" festgelegt ist.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des Formularfelds und der <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Schlüssel, der zum Nachschlagen des Werts verwendet wird.</param>
      <param name="value">Wenn dieses Optionsfeld aktiviert wird, der Wert des Optionsfelds, der beim Bereitstellen des Formulars gesendet wird. Wenn der Wert des aktivierten Optionsfelds im <see cref="T:System.Web.Mvc.ViewDataDictionary" />- oder <see cref="T:System.Web.Mvc.ModelStateDictionary" />-Objekt mit diesem Wert übereinstimmt, wird dieses Optionsfeld aktiviert.</param>
      <param name="isChecked">true, um das Optionsfeld auszuwählen, andernfalls false.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="name" />-Parameter ist null oder leer.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="value" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein input-Element für ein Optionsfeld zurück, das verwendet wird, um sich gegenseitig ausschließende Optionen zu präsentieren.</summary>
      <returns>Ein input-Element, dessen type-Attribut auf "radio" festgelegt ist.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des Formularfelds und der <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Schlüssel, der zum Nachschlagen des Werts verwendet wird.</param>
      <param name="value">Wenn dieses Optionsfeld aktiviert wird, der Wert des Optionsfelds, der beim Bereitstellen des Formulars gesendet wird. Wenn der Wert des aktivierten Optionsfelds im <see cref="T:System.Web.Mvc.ViewDataDictionary" />- oder <see cref="T:System.Web.Mvc.ModelStateDictionary" />-Objekt mit diesem Wert übereinstimmt, wird dieses Optionsfeld aktiviert.</param>
      <param name="isChecked">true, um das Optionsfeld auszuwählen, andernfalls false.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="name" />-Parameter ist null oder leer.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="value" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean,System.Object)">
      <summary>Gibt ein input-Element für ein Optionsfeld zurück, das verwendet wird, um sich gegenseitig ausschließende Optionen zu präsentieren.</summary>
      <returns>Ein input-Element, dessen type-Attribut auf "radio" festgelegt ist.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des Formularfelds und der <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Schlüssel, der zum Nachschlagen des Werts verwendet wird.</param>
      <param name="value">Wenn dieses Optionsfeld aktiviert wird, der Wert des Optionsfelds, der beim Bereitstellen des Formulars gesendet wird. Wenn der Wert des aktivierten Optionsfelds im <see cref="T:System.Web.Mvc.ViewDataDictionary" />- oder <see cref="T:System.Web.Mvc.ModelStateDictionary" />-Objekt mit diesem Wert übereinstimmt, wird dieses Optionsfeld aktiviert.</param>
      <param name="isChecked">true, um das Optionsfeld auszuwählen, andernfalls false.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="name" />-Parameter ist null oder leer.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="value" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein input-Element für ein Optionsfeld zurück, das verwendet wird, um sich gegenseitig ausschließende Optionen zu präsentieren.</summary>
      <returns>Ein input-Element, dessen type-Attribut auf "radio" festgelegt ist.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des Formularfelds und der <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Schlüssel, der zum Nachschlagen des Werts verwendet wird.</param>
      <param name="value">Wenn dieses Optionsfeld aktiviert wird, der Wert des Optionsfelds, der beim Bereitstellen des Formulars gesendet wird. Wenn der Wert des aktivierten Optionsfelds im <see cref="T:System.Web.Mvc.ViewDataDictionary" />- oder <see cref="T:System.Web.Mvc.ModelStateDictionary" />-Objekt mit diesem Wert übereinstimmt, wird dieses Optionsfeld aktiviert.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="name" />-Parameter ist null oder leer.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="value" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Gibt ein input-Element für ein Optionsfeld zurück, das verwendet wird, um sich gegenseitig ausschließende Optionen zu präsentieren.</summary>
      <returns>Ein input-Element, dessen type-Attribut auf "radio" festgelegt ist.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des Formularfelds und der <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Schlüssel, der zum Nachschlagen des Werts verwendet wird.</param>
      <param name="value">Wenn dieses Optionsfeld aktiviert wird, der Wert des Optionsfelds, der beim Bereitstellen des Formulars gesendet wird. Wenn der Wert des aktivierten Optionsfelds im <see cref="T:System.Web.Mvc.ViewDataDictionary" />- oder <see cref="T:System.Web.Mvc.ModelStateDictionary" />-Objekt mit diesem Wert übereinstimmt, wird dieses Optionsfeld aktiviert.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="name" />-Parameter ist null oder leer.</exception>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="value" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean,``0)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Gibt ein input-Element für Text zurück. Hierfür werden das angegebene HTML-Hilfsobjekt und der Name des Formularfelds verwendet.</summary>
      <returns>Ein input-Element, dessen type-Attribut auf "text" festgelegt ist.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des Formularfelds und des <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Schlüssels, der zum Nachschlagen des Werts verwendet wird.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Gibt ein input-Element für Text zurück. Hierfür werden das angegebene HTML-Hilfsobjekt, der Name des Formularfelds und der Wert  verwendet.</summary>
      <returns>Ein input-Element, dessen type-Attribut auf "text" festgelegt ist.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des Formularfelds und der <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Schlüssel, der zum Nachschlagen des Werts verwendet wird.</param>
      <param name="value">Der Wert des Text-input-Elements. Falls dieser Wert null ist, wird der Wert des Elements aus dem <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Objekt abgerufen. Wenn kein Wert vorhanden ist, wird der Wert aus dem <see cref="T:System.Web.Mvc.ModelStateDictionary" />-Objekt abgerufen.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein input-Element für Text zurück. Hierfür werden das angegebene HTML-Hilfsobjekt, der Name des Formularfelds, der Wert und die HTML-Attribute verwendet.</summary>
      <returns>Ein input-Element, dessen type-Attribut auf "text" festgelegt ist.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des Formularfelds und der <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Schlüssel, der zum Nachschlagen des Werts verwendet wird.</param>
      <param name="value">Der Wert des Text-input-Elements. Falls dieser Wert null ist, wird der Wert des Elements aus dem <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Objekt abgerufen. Wenn kein Wert vorhanden ist, wird der Wert aus dem <see cref="T:System.Web.Mvc.ModelStateDictionary" />-Objekt abgerufen.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Gibt ein input-Element für Text zurück. Hierfür werden das angegebene HTML-Hilfsobjekt, der Name des Formularfelds, der Wert und die HTML-Attribute verwendet.</summary>
      <returns>Ein input-Element, dessen type-Attribut auf "text" festgelegt ist.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des Formularfelds und der <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Schlüssel, der zum Nachschlagen des Werts verwendet wird.</param>
      <param name="value">Der Wert des Text-input-Elements. Falls dieser Wert null ist, wird der Wert des Elements aus dem <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Objekt abgerufen. Wenn kein Wert vorhanden ist, wird der Wert aus dem <see cref="T:System.Web.Mvc.ModelStateDictionary" />-Objekt abgerufen.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2})">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="T:System.Web.Mvc.Html.LabelExtensions">
      <summary>Stellt Unterstützung für das HTML-label-Element in einer ASP.NET MVC-Ansicht dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Gibt ein HTML-label-Element und den Eigenschaftennamen der Eigenschaft zurück, die durch den angegebenen Ausdruck dargestellt wird.</summary>
      <returns>Ein HTML-label-Element und der Eigenschaftennamen der Eigenschaft, die durch den Ausdruck dargestellt wird.</returns>
      <param name="html">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="expression">Ein Ausdruck, der die anzuzeigende Eigenschaft bezeichnet.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <returns>Gibt <see cref="T:System.Web.Mvc.MvcHtmlString" /> zurück.</returns>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2})">
      <summary>Gibt ein HTML-label-Element und den Eigenschaftennamen der Eigenschaft zurück, die durch den angegebenen Ausdruck dargestellt wird.</summary>
      <returns>Ein HTML-label-Element und der Eigenschaftennamen der Eigenschaft, die durch den Ausdruck dargestellt wird.</returns>
      <param name="html">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="expression">Ein Ausdruck, der die anzuzeigende Eigenschaft bezeichnet.</param>
      <typeparam name="TModel">Der Typ des Modells.</typeparam>
      <typeparam name="TValue">Der Typ des Werts.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TValue"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Gibt ein HTML-label-Element und den Eigenschaftennamen der Eigenschaft zurück, die durch das Modell dargestellt wird.</summary>
      <returns>Ein HTML-label-Element und der Eigenschaftennamen der Eigenschaft, die durch das Modell dargestellt wird.</returns>
      <param name="html">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <returns>Gibt <see cref="T:System.Web.Mvc.MvcHtmlString" /> zurück.</returns>
    </member>
    <member name="T:System.Web.Mvc.Html.LinkExtensions">
      <summary>Stellt Unterstützung für HTML-Links in einer Anwendung dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Gibt ein Ankerelement (a-Element) zurück, das den virtuellen Pfad der angegebenen Aktion enthält.</summary>
      <returns>Ein Ankerelement (a-Element).</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="actionName">Der Name der Aktion.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Gibt ein Ankerelement (a-Element) zurück, das den virtuellen Pfad der angegebenen Aktion enthält.</summary>
      <returns>Ein Ankerelement (a-Element).</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="actionName">Der Name der Aktion.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Das Objekt wird normalerweise mithilfe der Objektinitialisierersyntax erstellt.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Object)">
      <summary>Gibt ein Ankerelement (a-Element) zurück, das den virtuellen Pfad der angegebenen Aktion enthält.</summary>
      <returns>Ein Ankerelement (a-Element).</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="actionName">Der Name der Aktion.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Das Objekt wird normalerweise mithilfe der Objektinitialisierersyntax erstellt.</param>
      <param name="htmlAttributes">Ein Objekt, das die HTML-Attribute für das Element enthält. Die Attribute werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Das Objekt wird normalerweise mithilfe der Objektinitialisierersyntax erstellt.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>Gibt ein Ankerelement (a-Element) zurück, das den virtuellen Pfad der angegebenen Aktion enthält.</summary>
      <returns>Ein Ankerelement (a-Element).</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="actionName">Der Name der Aktion.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object,System.Object)">
      <summary>Gibt ein Ankerelement (a-Element) zurück, das den virtuellen Pfad der angegebenen Aktion enthält.</summary>
      <returns>Ein Ankerelement (a-Element).</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="actionName">Der Name der Aktion.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Das Objekt wird normalerweise mithilfe der Objektinitialisierersyntax erstellt.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
      <summary>Gibt ein Ankerelement (a-Element) zurück, das den virtuellen Pfad der angegebenen Aktion enthält.</summary>
      <returns>Ein Ankerelement (a-Element).</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="actionName">Der Name der Aktion.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="protocol">Das Protokoll für die URL, beispielsweise "http" oder "https".</param>
      <param name="hostName">Der Hostname für die URL.</param>
      <param name="fragment">Der Name des URL-Fragments (der Ankername).</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Das Objekt wird normalerweise mithilfe der Objektinitialisierersyntax erstellt.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein Ankerelement (a-Element) zurück, das den virtuellen Pfad der angegebenen Aktion enthält.</summary>
      <returns>Ein Ankerelement (a-Element).</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="actionName">Der Name der Aktion.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="protocol">Das Protokoll für die URL, beispielsweise "http" oder "https".</param>
      <param name="hostName">Der Hostname für die URL.</param>
      <param name="fragment">Der Name des URL-Fragments (der Ankername).</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein Ankerelement (a-Element) zurück, das den virtuellen Pfad der angegebenen Aktion enthält.</summary>
      <returns>Ein Ankerelement (a-Element).</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="actionName">Der Name der Aktion.</param>
      <param name="controllerName">Der Name des Controllers.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Gibt ein Ankerelement (a-Element) zurück, das den virtuellen Pfad der angegebenen Aktion enthält.</summary>
      <returns>Ein Ankerelement (a-Element).</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="actionName">Der Name der Aktion.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein Ankerelement (a-Element) zurück, das den virtuellen Pfad der angegebenen Aktion enthält.</summary>
      <returns>Ein Ankerelement (a-Element).</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="actionName">Der Name der Aktion.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Gibt ein Ankerelement (a-Element) zurück, das den virtuellen Pfad der angegebenen Aktion enthält.</summary>
      <returns>Ein Ankerelement (a-Element).</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Das Objekt wird normalerweise mithilfe der Objektinitialisierersyntax erstellt.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Gibt ein Ankerelement (a-Element) zurück, das den virtuellen Pfad der angegebenen Aktion enthält.</summary>
      <returns>Ein Ankerelement (a-Element).</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Das Objekt wird normalerweise mithilfe der Objektinitialisierersyntax erstellt.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Gibt ein Ankerelement (a-Element) zurück, das den virtuellen Pfad der angegebenen Aktion enthält.</summary>
      <returns>Ein Ankerelement (a-Element).</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="routeName">Der Name der Route, die verwendet wird, um einen virtuellen Pfad zurückzugeben.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Gibt ein Ankerelement (a-Element) zurück, das den virtuellen Pfad der angegebenen Aktion enthält.</summary>
      <returns>Ein Ankerelement (a-Element).</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="routeName">Der Name der Route, die verwendet wird, um einen virtuellen Pfad zurückzugeben.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Das Objekt wird normalerweise mithilfe der Objektinitialisierersyntax erstellt.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Object)">
      <summary>Gibt ein Ankerelement (a-Element) zurück, das den virtuellen Pfad der angegebenen Aktion enthält.</summary>
      <returns>Ein Ankerelement (a-Element).</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="routeName">Der Name der Route, die verwendet wird, um einen virtuellen Pfad zurückzugeben.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Das Objekt wird normalerweise mithilfe der Objektinitialisierersyntax erstellt.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
      <summary>Gibt ein Ankerelement (a-Element) zurück, das den virtuellen Pfad der angegebenen Aktion enthält.</summary>
      <returns>Ein Ankerelement (a-Element).</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="routeName">Der Name der Route, die verwendet wird, um einen virtuellen Pfad zurückzugeben.</param>
      <param name="protocol">Das Protokoll für die URL, beispielsweise "http" oder "https".</param>
      <param name="hostName">Der Hostname für die URL.</param>
      <param name="fragment">Der Name des URL-Fragments (der Ankername).</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. Die Parameter werden durch Reflektion abgerufen, indem die Eigenschaften des Objekts untersucht werden. Das Objekt wird normalerweise mithilfe der Objektinitialisierersyntax erstellt.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein Ankerelement (a-Element) zurück, das den virtuellen Pfad der angegebenen Aktion enthält.</summary>
      <returns>Ein Ankerelement (a-Element).</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="routeName">Der Name der Route, die verwendet wird, um einen virtuellen Pfad zurückzugeben.</param>
      <param name="protocol">Das Protokoll für die URL, beispielsweise "http" oder "https".</param>
      <param name="hostName">Der Hostname für die URL.</param>
      <param name="fragment">Der Name des URL-Fragments (der Ankername).</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Gibt ein Ankerelement (a-Element) zurück, das den virtuellen Pfad der angegebenen Aktion enthält.</summary>
      <returns>Ein Ankerelement (a-Element).</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="routeName">Der Name der Route, die verwendet wird, um einen virtuellen Pfad zurückzugeben.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein Ankerelement (a-Element) zurück, das den virtuellen Pfad der angegebenen Aktion enthält.</summary>
      <returns>Ein Ankerelement (a-Element).</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="routeName">Der Name der Route, die verwendet wird, um einen virtuellen Pfad zurückzugeben.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält. </param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Gibt ein Ankerelement (a-Element) zurück, das den virtuellen Pfad der angegebenen Aktion enthält.</summary>
      <returns>Ein Ankerelement (a-Element).</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein Ankerelement (a-Element) zurück, das den virtuellen Pfad der angegebenen Aktion enthält.</summary>
      <returns>Ein Ankerelement (a-Element).</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="linkText">Der innere Text des Ankerelements.</param>
      <param name="routeValues">Ein Objekt, das die Parameter für eine Route enthält.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="linkText" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.MvcForm">
      <summary>Stellt ein HTML-form-Element in einer MVC-Ansicht dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.#ctor(System.Web.HttpResponseBase)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.Html.MvcForm" />-Klasse mit dem angegebenen HTTP-Antwortobjekt.</summary>
      <param name="httpResponse">Das HTTP-Antwortobjekt.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="httpResponse " />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.#ctor(System.Web.Mvc.ViewContext)">
      <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Mvc.Html.MvcForm" />-Klasse mit dem angegebenen Ansichtskontext.</summary>
      <param name="viewContext">Ein Objekt, das die Informationen kapselt, die erforderlich sind, um eine Ansicht zu rendern.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="viewContext" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.Dispose">
      <summary>Gibt alle von der aktuellen Instanz der <see cref="T:System.Web.Mvc.Html.MvcForm" />-Klasse verwendeten Ressourcen frei.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.Dispose(System.Boolean)">
      <summary>Gibt die von der aktuellen Instanz der <see cref="T:System.Web.Mvc.Html.MvcForm" />-Klasse verwendeten nicht verwalteten Ressourcen und optional auch die verwalteten Ressourcen frei.</summary>
      <param name="disposing">true, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. false, um ausschließlich nicht verwaltete Ressourcen freizugeben.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.EndForm">
      <summary>Beendet das Formular und löscht alle Formularressourcen.</summary>
    </member>
    <member name="T:System.Web.Mvc.Html.PartialExtensions">
      <summary>Stellt die Funktionalität zum Rendern einer Teilansicht als HTML-codierte Zeichenfolge dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Rendert die angegebene Teilansicht als HTML-codierte Zeichenfolge.</summary>
      <returns>Die als HTML-codierte Zeichenfolge gerenderte Teilansicht.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="partialViewName">Der Name der zu rendernden Teilansicht.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Rendert die angegebene Teilansicht als HTML-codierte Zeichenfolge.</summary>
      <returns>Die als HTML-codierte Zeichenfolge gerenderte Teilansicht.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="partialViewName">Der Name der zu rendernden Teilansicht.</param>
      <param name="model">Das Modell für die Teilansicht.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.ViewDataDictionary)">
      <summary>Rendert die angegebene Teilansicht als HTML-codierte Zeichenfolge.</summary>
      <returns>Die als HTML-codierte Zeichenfolge gerenderte Teilansicht.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="partialViewName">Der Name der Teilansicht.</param>
      <param name="model">Das Modell für die Teilansicht.</param>
      <param name="viewData">Das Ansichtsdatenwörterbuch für die Teilansicht.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.ViewDataDictionary)">
      <summary>Rendert die angegebene Teilansicht als HTML-codierte Zeichenfolge.</summary>
      <returns>Die als HTML-codierte Zeichenfolge gerenderte Teilansicht.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="partialViewName">Der Name der zu rendernden Teilansicht.</param>
      <param name="viewData">Das Ansichtsdatenwörterbuch für die Teilansicht.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.RenderPartialExtensions">
      <summary>Stellt Unterstützung zum Rendern einer Teilansicht bereit.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Rendert die angegebene Teilansicht mit dem angegebenen HMTL-Hilfsobjekt.</summary>
      <param name="htmlHelper">Das HTML-Hilfsobjekt.</param>
      <param name="partialViewName">Der Name der Teilansicht.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Rendert die angegebene Teilansicht und übergibt eine Kopie des aktuellen <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Objekts, jedoch mit der auf das angegebene Modell festgelegten Model-Eigenschaft.</summary>
      <param name="htmlHelper">Das HTML-Hilfsobjekt.</param>
      <param name="partialViewName">Der Name der Teilansicht.</param>
      <param name="model">Das Modell.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.ViewDataDictionary)">
      <summary>Rendert die angegebene Teilansicht, ersetzt die ViewData-Eigenschaft der Teilansicht durch das angegebene <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Objekt und legt die Model-Eigenschaft der Ansichtsdaten auf das angegebene Modell fest.</summary>
      <param name="htmlHelper">Das HTML-Hilfsobjekt.</param>
      <param name="partialViewName">Der Name der Teilansicht.</param>
      <param name="model">Das Modell für die Teilansicht.</param>
      <param name="viewData">Die Ansichtsdaten für die Teilansicht.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.ViewDataDictionary)">
      <summary>Rendert die angegebene Teilansicht und ersetzt seine ViewData-Eigenschaft durch das angegebene <see cref="T:System.Web.Mvc.ViewDataDictionary" />-Objekt.</summary>
      <param name="htmlHelper">Das HTML-Hilfsobjekt.</param>
      <param name="partialViewName">Der Name der Teilansicht.</param>
      <param name="viewData">Die Ansichtsdaten.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.SelectExtensions">
      <summary>Stellt Unterstützung für das Auswählen in einer Liste dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Gibt ein select-Element mit einfacher Auswahl zurück, indem das angegebene HTML-Hilfsobjekt und der Name des Formularfelds verwendet werden.</summary>
      <returns>Ein select-HTML-Element.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des zurückzugebenden Formularfelds.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="name" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>Gibt ein select-Element mit einfacher Auswahl zurück, indem das angegebene HTML-Hilfsobjekt, der Name des Formularfelds und die angegebenen Listenelemente verwendet werden.</summary>
      <returns>Ein select-HTML-Element mit einem option-Unterelement für jedes Element in der Liste.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des zurückzugebenden Formularfelds.</param>
      <param name="selectList">Eine Auflistung von <see cref="T:System.Web.Mvc.SelectListItem" />-Objekten, die zum Auffüllen der Dropdownliste verwendet werden.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="name" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein select-Element mit einfacher Auswahl zurück, indem das angegebene HTML-Hilfsobjekt, der Name des Formularfelds, die angegebenen Listenelemente und die angegebenen HTML-Attribute verwendet werden.</summary>
      <returns>Ein select-HTML-Element mit einem option-Unterelement für jedes Element in der Liste.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des zurückzugebenden Formularfelds.</param>
      <param name="selectList">Eine Auflistung von <see cref="T:System.Web.Mvc.SelectListItem" />-Objekten, die zum Auffüllen der Dropdownliste verwendet werden.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="name" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>Gibt ein select-Element mit einfacher Auswahl zurück, indem das angegebene HTML-Hilfsobjekt, der Name des Formularfelds, die angegebenen Listenelemente und die angegebenen HTML-Attribute verwendet werden.</summary>
      <returns>Ein select-HTML-Element mit einem option-Unterelement für jedes Element in der Liste.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des zurückzugebenden Formularfelds.</param>
      <param name="selectList">Eine Auflistung von <see cref="T:System.Web.Mvc.SelectListItem" />-Objekten, die zum Auffüllen der Dropdownliste verwendet werden.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="name" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String)">
      <summary>Gibt ein select-Element mit einfacher Auswahl zurück, indem das angegebene HTML-Hilfsobjekt, der Name des Formularfelds, die angegebenen Listenelemente und eine Optionsbezeichnung verwendet werden.</summary>
      <returns>Ein select-HTML-Element mit einem option-Unterelement für jedes Element in der Liste.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des zurückzugebenden Formularfelds.</param>
      <param name="selectList">Eine Auflistung von <see cref="T:System.Web.Mvc.SelectListItem" />-Objekten, die zum Auffüllen der Dropdownliste verwendet werden.</param>
      <param name="optionLabel">Der Text für ein standardmäßig leeres Element. Dieser Parameter kann null sein.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="name" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein select-Element mit einfacher Auswahl zurück, indem das angegebene HTML-Hilfsobjekt, der Name des Formularfelds, die angegebenen Listenelemente, eine Optionsbezeichnung und die angegebenen HTML-Attribute verwendet werden.</summary>
      <returns>Ein select-HTML-Element mit einem option-Unterelement für jedes Element in der Liste.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des zurückzugebenden Formularfelds.</param>
      <param name="selectList">Eine Auflistung von <see cref="T:System.Web.Mvc.SelectListItem" />-Objekten, die zum Auffüllen der Dropdownliste verwendet werden.</param>
      <param name="optionLabel">Der Text für ein standardmäßig leeres Element. Dieser Parameter kann null sein.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="name" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Object)">
      <summary>Gibt ein select-Element mit einfacher Auswahl zurück, indem das angegebene HTML-Hilfsobjekt, der Name des Formularfelds, die angegebenen Listenelemente, eine Optionsbezeichnung und die angegebenen HTML-Attribute verwendet werden.</summary>
      <returns>Ein select-HTML-Element mit einem option-Unterelement für jedes Element in der Liste.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des zurückzugebenden Formularfelds.</param>
      <param name="selectList">Eine Auflistung von <see cref="T:System.Web.Mvc.SelectListItem" />-Objekten, die zum Auffüllen der Dropdownliste verwendet werden.</param>
      <param name="optionLabel">Der Text für ein standardmäßig leeres Element. Dieser Parameter kann null sein.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="name" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Gibt ein select-Element mit einfacher Auswahl zurück, indem das angegebene HTML-Hilfsobjekt, der Name des Formularfelds und eine Optionsbezeichnung verwendet werden.</summary>
      <returns>Ein select-HTML-Element mit einem option-Unterelement für jedes Element in der Liste.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des zurückzugebenden Formularfelds.</param>
      <param name="optionLabel">Der Text für ein standardmäßig leeres Element. Dieser Parameter kann null sein.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="name" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean,``0)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean,``0,``1)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Gibt ein select-Element mit mehrfacher Auswahl zurück, indem das angegebene HTML-Hilfsobjekt und der Name des Formularfelds verwendet werden.</summary>
      <returns>Ein select-HTML-Element.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des zurückzugebenden Formularfelds.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="name" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>Gibt ein select-Element mit mehrfacher Auswahl zurück, indem das angegebene HTML-Hilfsobjekt, der Name des Formularfelds und die angegebenen Listenelemente verwendet werden.</summary>
      <returns>Ein select-HTML-Element mit einem option-Unterelement für jedes Element in der Liste.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des zurückzugebenden Formularfelds.</param>
      <param name="selectList">Eine Auflistung von <see cref="T:System.Web.Mvc.SelectListItem" />-Objekten, die zum Auffüllen der Dropdownliste verwendet werden.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="name" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt ein select-Element mit mehrfacher Auswahl zurück, indem das angegebene HTML-Hilfsobjekt, der Name des Formularfelds, die angegebenen Listenelemente und die angegebenen HTML-Attribute verwendet werden.</summary>
      <returns>Ein select-HTML-Element mit einem option-Unterelement für jedes Element in der Liste.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des zurückzugebenden Formularfelds.</param>
      <param name="selectList">Eine Auflistung von <see cref="T:System.Web.Mvc.SelectListItem" />-Objekten, die zum Auffüllen der Dropdownliste verwendet werden.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="name" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>Gibt ein select-Element mit mehrfacher Auswahl zurück, indem das angegebene HTML-Hilfsobjekt, der Name des Formularfelds und die angegebenen Listenelemente verwendet werden.</summary>
      <returns>Ein select-HTML-Element mit einem option-Unterelement für jedes Element in der Liste.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des zurückzugebenden Formularfelds.</param>
      <param name="selectList">Eine Auflistung von <see cref="T:System.Web.Mvc.SelectListItem" />-Objekten, die zum Auffüllen der Dropdownliste verwendet werden.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
      <exception cref="T:System.ArgumentException">Der <paramref name="name" />-Parameter ist null oder leer.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean,``0)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="T:System.Web.Mvc.Html.TextAreaExtensions">
      <summary>Stellt die Unterstützung für textarea-HTML-Steuerelemente dar.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Gibt das angegebene textarea-Element zurück, indem das angegebene HTML-Hilfsobjekt und der Name des Formularfelds verwendet werden.</summary>
      <returns>Das textarea-Element.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des zurückzugebenden Formularfelds.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt das angegebene textarea-Element zurück, indem das angegebene HTML-Hilfsobjekt, der Name des Formularfelds und die angegebenen HTML-Attribute verwendet werden.</summary>
      <returns>Das textarea-Element.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des zurückzugebenden Formularfelds.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Gibt das angegebene textarea-Element zurück, indem das angegebene HTML-Hilfsobjekt und die HTML-Attribute verwendet werden.</summary>
      <returns>Das textarea-Element.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des zurückzugebenden Formularfelds.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Gibt das angegebene textarea-Element zurück, indem das angegebene HTML-Hilfsobjekt, der Name des Formularfelds und der Textinhalt verwendet werden.</summary>
      <returns>Das textarea-Element.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des zurückzugebenden Formularfelds.</param>
      <param name="value">Der Textinhalt.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt das angegebene textarea-Element zurück, indem das angegebene HTML-Hilfsobjekt, der Name des Formularfelds, der Textinhalt und die angegebenen HTML-Attribute verwendet werden.</summary>
      <returns>Das textarea-Element.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des zurückzugebenden Formularfelds.</param>
      <param name="value">Der Textinhalt.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt das angegebene textarea-Element zurück, indem das angegebene HTML-Hilfsobjekt, der Name des Formularfelds, der Textinhalt, die Anzahl der Zeilen und Spalten und die angegebenen HTML-Attribute verwendet werden.</summary>
      <returns>Das textarea-Element.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des zurückzugebenden Formularfelds.</param>
      <param name="value">Der Textinhalt.</param>
      <param name="rows">Die Anzahl der Zeilen.</param>
      <param name="columns">Die Anzahl der Spalten.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Int32,System.Int32,System.Object)">
      <summary>Gibt das angegebene textarea-Element zurück, indem das angegebene HTML-Hilfsobjekt, der Name des Formularfelds, der Textinhalt, die Anzahl der Zeilen und Spalten und die angegebenen HTML-Attribute verwendet werden.</summary>
      <returns>Das textarea-Element.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des zurückzugebenden Formularfelds.</param>
      <param name="value">Der Textinhalt.</param>
      <param name="rows">Die Anzahl der Zeilen.</param>
      <param name="columns">Die Anzahl der Spalten.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Gibt das angegebene textarea-Element zurück, indem das angegebene HTML-Hilfsobjekt, der Name des Formularfelds, der Textinhalt und die angegebenen HTML-Attribute verwendet werden.</summary>
      <returns>Das textarea-Element.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="name">Der Name des zurückzugebenden Formularfelds.</param>
      <param name="value">Der Textinhalt.</param>
      <param name="htmlAttributes">Ein Objekt, das die für das Element festzulegenden HTML-Attribute enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2})">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean,``0,``1)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="T:System.Web.Mvc.Html.ValidationExtensions">
      <summary>Stellt Unterstützung für das Validieren der Eingabe aus einem HTML-Formular bereit.</summary>
    </member>
    <member name="P:System.Web.Mvc.Html.ValidationExtensions.ResourceClassKey">
      <summary>Ruft den Namen der Ressourcendatei (Klassenschlüssel) ab (bzw. legt diesen fest), die lokalisierte Zeichenfolgenwerte enthält.</summary>
      <returns>Der Name der Ressourcendatei (Klassenschlüssel).</returns>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.Validate(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Ruft die Validierungsmetadaten für das angegebene Modell ab und wendet die einzelnen Regeln auf das Datenfeld an.</summary>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="modelName">Der Name der Eigenschaft oder des Modellobjekts, das überprüft wird.</param>
      <exception cref="T:System.ArgumentNullException">Der <paramref name="modelName" />-Parameter ist null.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidateFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2})">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Zeigt eine Validierungsmeldung an, falls ein Fehler für das angegebene Feld im <see cref="T:System.Web.Mvc.ModelStateDictionary" />-Objekt vorliegt.</summary>
      <returns>Wenn die Eigenschaft oder das Objekt gültig ist, eine leere Zeichenfolge; andernfalls ein span-Element, das eine Fehlermeldung enthält.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="modelName">Der Name der Eigenschaft oder des Modellobjekts, das überprüft wird.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zeigt eine Validierungsmeldung an, falls ein Fehler für das angegebene Feld im <see cref="T:System.Web.Mvc.ModelStateDictionary" />-Objekt vorliegt.</summary>
      <returns>Wenn die Eigenschaft oder das Objekt gültig ist, eine leere Zeichenfolge; andernfalls ein span-Element, das eine Fehlermeldung enthält.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="modelName">Der Name der Eigenschaft oder des Modellobjekts, das überprüft wird.</param>
      <param name="htmlAttributes">Ein Objekt, das die HTML-Attribute für das Element enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Zeigt eine Validierungsmeldung an, falls ein Fehler für das angegebene Feld im <see cref="T:System.Web.Mvc.ModelStateDictionary" />-Objekt vorliegt.</summary>
      <returns>Wenn die Eigenschaft oder das Objekt gültig ist, eine leere Zeichenfolge; andernfalls ein span-Element, das eine Fehlermeldung enthält.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="modelName">Der Name der Eigenschaft oder des Modellobjekts, das überprüft wird.</param>
      <param name="htmlAttributes">Ein Objekt, das die HTML-Attribute für das Element enthält. </param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Zeigt eine Validierungsmeldung an, falls ein Fehler für das angegebene Feld im <see cref="T:System.Web.Mvc.ModelStateDictionary" />-Objekt vorliegt.</summary>
      <returns>Wenn die Eigenschaft oder das Objekt gültig ist, eine leere Zeichenfolge; andernfalls ein span-Element, das eine Fehlermeldung enthält.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="modelName">Der Name der Eigenschaft oder des Modellobjekts, das überprüft wird.</param>
      <param name="validationMessage">Die Meldung, die angezeigt werden soll, wenn das angegebene Feld einen Fehler enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Zeigt eine Validierungsmeldung an, falls ein Fehler für das angegebene Feld im <see cref="T:System.Web.Mvc.ModelStateDictionary" />-Objekt vorliegt.</summary>
      <returns>Wenn die Eigenschaft oder das Objekt gültig ist, eine leere Zeichenfolge; andernfalls ein span-Element, das eine Fehlermeldung enthält.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="modelName">Der Name der Eigenschaft oder des Modellobjekts, das überprüft wird.</param>
      <param name="validationMessage">Die Meldung, die angezeigt werden soll, wenn das angegebene Feld einen Fehler enthält.</param>
      <param name="htmlAttributes">Ein Objekt, das die HTML-Attribute für das Element enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Zeigt eine Validierungsmeldung an, falls ein Fehler für das angegebene Feld im <see cref="T:System.Web.Mvc.ModelStateDictionary" />-Objekt vorliegt.</summary>
      <returns>Wenn die Eigenschaft oder das Objekt gültig ist, eine leere Zeichenfolge; andernfalls ein span-Element, das eine Fehlermeldung enthält.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="modelName">Der Name der Eigenschaft oder des Modellobjekts, das überprüft wird.</param>
      <param name="validationMessage">Die Meldung, die angezeigt werden soll, wenn das angegebene Feld einen Fehler enthält.</param>
      <param name="htmlAttributes">Ein Objekt, das die HTML-Attribute für das Element enthält. </param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2})">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func`2},System.Boolean,``0)">
      <typeparam name="TModel"></typeparam>
      <typeparam name="TProperty"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper)">
      <summary>Gibt eine ungeordnete Liste (ul-Element) mit Validierungsmeldungen zurück, die im <see cref="T:System.Web.Mvc.ModelStateDictionary" />-Objekt enthalten sind.</summary>
      <returns>Eine Zeichenfolge, die eine ungeordnete Liste (ul-Element) mit Validierungsmeldungen enthält.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean)">
      <summary>Gibt eine ungeordnete Liste (ul-Element) mit Validierungsmeldungen zurück, die im <see cref="T:System.Web.Mvc.ModelStateDictionary" />-Objekt enthalten sind, und zeigt optional nur Fehler auf Modellebene an.</summary>
      <returns>Eine Zeichenfolge, die eine ungeordnete Liste (ul-Element) mit Validierungsmeldungen enthält.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="excludePropertyErrors">true, wenn in der Zusammenfassung nur Fehler auf Modellebene angezeigt werden sollen, oder false, wenn alle Fehler angezeigt werden sollen.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String)">
      <summary>Gibt eine ungeordnete Liste (ul-Element) mit Validierungsmeldungen zurück, die im <see cref="T:System.Web.Mvc.ModelStateDictionary" />-Objekt enthalten sind, und zeigt optional nur Fehler auf Modellebene an.</summary>
      <returns>Eine Zeichenfolge, die eine ungeordnete Liste (ul-Element) mit Validierungsmeldungen enthält.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="excludePropertyErrors">true, wenn in der Zusammenfassung nur Fehler auf Modellebene angezeigt werden sollen, oder false, wenn alle Fehler angezeigt werden sollen.</param>
      <param name="message">Die mit der Validierungszusammenfassung anzuzeigende Meldung.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt eine ungeordnete Liste (ul-Element) mit Validierungsmeldungen zurück, die im <see cref="T:System.Web.Mvc.ModelStateDictionary" />-Objekt enthalten sind, und zeigt optional nur Fehler auf Modellebene an.</summary>
      <returns>Eine Zeichenfolge, die eine ungeordnete Liste (ul-Element) mit Validierungsmeldungen enthält.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="excludePropertyErrors">true, wenn in der Zusammenfassung nur Fehler auf Modellebene angezeigt werden sollen, oder false, wenn alle Fehler angezeigt werden sollen.</param>
      <param name="message">Die mit der Validierungszusammenfassung anzuzeigende Meldung.</param>
      <param name="htmlAttributes">Ein Wörterbuch, das die HTML-Attribute für das Element enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Object)">
      <summary>Gibt eine ungeordnete Liste (ul-Element) mit Validierungsmeldungen zurück, die im <see cref="T:System.Web.Mvc.ModelStateDictionary" />-Objekt enthalten sind, und zeigt optional nur Fehler auf Modellebene an.</summary>
      <returns>Eine Zeichenfolge, die eine ungeordnete Liste (ul-Element) mit Validierungsmeldungen enthält.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="excludePropertyErrors">true, wenn in der Zusammenfassung nur Fehler auf Modellebene angezeigt werden sollen, oder false, wenn alle Fehler angezeigt werden sollen.</param>
      <param name="message">Die mit der Validierungszusammenfassung anzuzeigende Meldung.</param>
      <param name="htmlAttributes">Ein Objekt, das die HTML-Attribute für das Element enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Gibt eine ungeordnete Liste (ul-Element) mit Validierungsmeldungen zurück, die im <see cref="T:System.Web.Mvc.ModelStateDictionary" />-Objekt enthalten sind.</summary>
      <returns>Eine Zeichenfolge, die eine ungeordnete Liste (ul-Element) mit Validierungsmeldungen enthält.</returns>
      <param name="htmlHelper">Die HMTL-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="message">Die Meldung, die angezeigt werden soll, wenn das angegebene Feld einen Fehler enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gibt eine ungeordnete Liste (ul-Element) mit Validierungsmeldungen zurück, die im <see cref="T:System.Web.Mvc.ModelStateDictionary" />-Objekt enthalten sind.</summary>
      <returns>Eine Zeichenfolge, die eine ungeordnete Liste (ul-Element) mit Validierungsmeldungen enthält.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="message">Die Meldung, die angezeigt werden soll, wenn das angegebene Feld einen Fehler enthält.</param>
      <param name="htmlAttributes">Ein Wörterbuch, das die HTML-Attribute für das Element enthält.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Gibt eine ungeordnete Liste (ul-Element) mit Validierungsmeldungen im <see cref="T:System.Web.Mvc.ModelStateDictionary" />-Objekt zurück.</summary>
      <returns>Eine Zeichenfolge, die eine ungeordnete Liste (ul-Element) mit Validierungsmeldungen enthält.</returns>
      <param name="htmlHelper">Die HTML-Hilfsinstanz, die von dieser Methode erweitert wird.</param>
      <param name="message">Die Meldung, die angezeigt werden soll, wenn das angegebene Feld einen Fehler enthält.</param>
      <param name="htmlAttributes">Ein Objekt, das die HTML-Attribute für das Element enthält. </param>
    </member>
  </members>
</doc>