@using ASTRA.EMSG.Business.Models.Katalogs
@using ASTRA.EMSG.Common.Enums

@using ASTRA.EMSG.Web.Infrastructure.HtmlHelperExtensions
@using Resources
@using ASTRA.EMSG.Web.Infrastructure
@using System.Linq
@using Kendo.Mvc.UI
@model ASTRA.EMSG.Business.Models.Strassennamen.StrassenabschnittModel
@{
    string modelFieldBreiteFahrbahnClientId = Html.CollectionItemClientIdFor(m => m.BreiteFahrbahn).ToHtmlString();
    string modelFieldBreiteTrottoirRechtsClientId = Html.CollectionItemClientIdFor(m => m.BreiteTrottoirRechts).ToHtmlString();
    string modelFieldFlaecheTrottoirRechtsClientId = Html.CollectionItemClientIdFor(m => m.FlaecheTrottoirRechts).ToHtmlString();
    string modelFieldBreiteTrottoirLinksClientId = Html.CollectionItemClientIdFor(m => m.BreiteTrottoirLinks).ToHtmlString();
    string modelFieldFlaecheTrottoirLinksClientId = Html.CollectionItemClientIdFor(m => m.FlaecheTrottoirLinks).ToHtmlString();
    string modelFieldBelastungskategorieClientId = Html.CollectionItemClientIdFor(m => m.Belastungskategorie).ToHtmlString();
    string modelFieldBelagClientId = Html.CollectionItemClientIdFor(m => m.Belag).ToHtmlString();
    string modelFieldTrottoirClientId = Html.CollectionItemClientIdFor(m => m.Trottoir).ToHtmlString();

    string defaultBreiteFahrbahnPropertyName = ASTRA.EMSG.Common.ExpressionHelper.GetPropertyName<BelastungskategorieModel, decimal?>(sa => sa.DefaultBreiteFahrbahn);
    string defaultBreiteTrottoirRechtsPropertyName = ASTRA.EMSG.Common.ExpressionHelper.GetPropertyName<BelastungskategorieModel, decimal?>(sa => sa.DefaultBreiteTrottoirRechts);
    string defaultBreiteTrottoirLinksPropertyName = ASTRA.EMSG.Common.ExpressionHelper.GetPropertyName<BelastungskategorieModel, decimal?>(sa => sa.DefaultBreiteTrottoirLinks);

    string originalBelastungskategorieIdHiddenField = "OriginalBelastungskategorieId";
    string setDefaultBreitenFunctionName = "setDefaultBreiten";
    string trottoirChangeFunctionName = "trottoirChange";
    string hideLinksFuctionName = "HideLinks";
    string hideRechtsFunctionName = "HideRechts";
    string showLinksFunctionName = "ShowLinks";
    string showRechtsFunctionName = "ShowRechts";
    object strassenabschnittIndex = ViewData["strassenabschnittIndex"];

    bool isNotInSplitStrassenabschnittMode = strassenabschnittIndex == null;
}

@if (!isNotInSplitStrassenabschnittMode)
{
    modelFieldBreiteFahrbahnClientId = modelFieldBreiteFahrbahnClientId.EscapeAsSelector();
    modelFieldBelastungskategorieClientId = modelFieldBelastungskategorieClientId.EscapeAsSelector();
    modelFieldBelagClientId = modelFieldBelagClientId.EscapeAsSelector();
    modelFieldBreiteTrottoirRechtsClientId = modelFieldBreiteTrottoirRechtsClientId.EscapeAsSelector();
    modelFieldFlaecheTrottoirRechtsClientId = modelFieldFlaecheTrottoirRechtsClientId.EscapeAsSelector();
    modelFieldBreiteTrottoirLinksClientId = modelFieldBreiteTrottoirLinksClientId.EscapeAsSelector();
    modelFieldFlaecheTrottoirLinksClientId = modelFieldFlaecheTrottoirLinksClientId.EscapeAsSelector();
    modelFieldTrottoirClientId = modelFieldTrottoirClientId.EscapeAsSelector();

    setDefaultBreitenFunctionName = setDefaultBreitenFunctionName + strassenabschnittIndex;
    trottoirChangeFunctionName = trottoirChangeFunctionName + strassenabschnittIndex;
    hideLinksFuctionName = hideLinksFuctionName + strassenabschnittIndex;
    hideRechtsFunctionName = hideRechtsFunctionName + strassenabschnittIndex;
    showLinksFunctionName = showLinksFunctionName + strassenabschnittIndex;
    showRechtsFunctionName = showRechtsFunctionName + strassenabschnittIndex;
    originalBelastungskategorieIdHiddenField = originalBelastungskategorieIdHiddenField + "_" + strassenabschnittIndex;
}
<input id="@(originalBelastungskategorieIdHiddenField)" value="@(Model.Belastungskategorie)" type="hidden"/>
<script type="text/javascript">
    function @(setDefaultBreitenFunctionName)() {
        var belastungskategorienDictionary = @(Html.Raw(ViewBag.BelastungskategorienDictionary));
        
        var breiteFahrbahnTextBox = $("#@(modelFieldBreiteFahrbahnClientId)").data("kendoNumericTextBox");
        var breiteTrottoirRechtsTextBox = $("#@(modelFieldBreiteTrottoirRechtsClientId)").data("kendoNumericTextBox");
        var breiteTrottoirLinksTextBox = $("#@(modelFieldBreiteTrottoirLinksClientId)").data("kendoNumericTextBox");
        
        var originalBelastungskategorieId = $("#@(originalBelastungskategorieIdHiddenField)").val();
        
        var originalBreiteFahrbahn = breiteFahrbahnTextBox.value();
        var originalBreiteTrottoirRechts = breiteTrottoirRechtsTextBox.value();
        var originalBreiteTrottoirLinks = breiteTrottoirLinksTextBox.value();
        
        var newbelastungskategorieId = $("#@(modelFieldBelastungskategorieClientId)").val();

        var originalBelastungskategorie = null;
        if(originalBelastungskategorieId != null && originalBelastungskategorieId != "" && originalBelastungskategorieId != "@(Guid.Empty)")
            originalBelastungskategorie = belastungskategorienDictionary[originalBelastungskategorieId];
        
        var isNewBelastungskategorieIdNotNull = newbelastungskategorieId != null && newbelastungskategorieId != "" && newbelastungskategorieId != "@(Guid.Empty)";
        
        if ((originalBelastungskategorie != null ? originalBelastungskategorie.@(defaultBreiteFahrbahnPropertyName) : null) == originalBreiteFahrbahn)
            breiteFahrbahnTextBox.value(isNewBelastungskategorieIdNotNull ? belastungskategorienDictionary[newbelastungskategorieId].@(defaultBreiteFahrbahnPropertyName) : null);
        
        if ((originalBelastungskategorie != null ? originalBelastungskategorie.@(defaultBreiteTrottoirRechtsPropertyName) : null) == originalBreiteTrottoirRechts) 
            breiteTrottoirRechtsTextBox.value(isNewBelastungskategorieIdNotNull ? belastungskategorienDictionary[newbelastungskategorieId].@(defaultBreiteTrottoirRechtsPropertyName) : null);
        
        if ((originalBelastungskategorie != null ? originalBelastungskategorie.@(defaultBreiteTrottoirLinksPropertyName) : null) == originalBreiteTrottoirLinks) 
            breiteTrottoirLinksTextBox.value(isNewBelastungskategorieIdNotNull ? belastungskategorienDictionary[newbelastungskategorieId].@(defaultBreiteTrottoirLinksPropertyName) : null);
        
        $("#@(originalBelastungskategorieIdHiddenField)").val(newbelastungskategorieId);
    }

    $(function() {
        @(trottoirChangeFunctionName)();
    });

    function @(trottoirChangeFunctionName)() {

        var trottoir = $("#@(modelFieldTrottoirClientId)").val();
        
        switch(trottoir)
        {
            case "@((int)TrottoirTyp.KeinTrottoir)":
                @(hideLinksFuctionName)();
                @(hideRechtsFunctionName)();
                break;
            case "@((int)TrottoirTyp.NochNichtErfasst)":
                @(hideLinksFuctionName)();
                @(hideRechtsFunctionName)();
                break;
            case "@((int)TrottoirTyp.Links)":
                @(showLinksFunctionName)();
                @(hideRechtsFunctionName)();
                break;
            case "@((int)TrottoirTyp.Rechts)":
                @(showRechtsFunctionName)();
                @(hideLinksFuctionName)();
                break;
            case "@((int)TrottoirTyp.BeideSeiten)":
                @(showRechtsFunctionName)();
                @(showLinksFunctionName)();
                break;
        }
    }
    
    function @(hideLinksFuctionName)() {
         $('#@(modelFieldBreiteTrottoirLinksClientId)').closest('tr').detach().appendTo("#tortoirDefaults");
         $('#@(modelFieldFlaecheTrottoirLinksClientId)').closest('tr').detach().appendTo("#tortoirDefaults");
    }
    
    function @(hideRechtsFunctionName)() {
        $('#@(modelFieldBreiteTrottoirRechtsClientId)').closest('tr').detach().appendTo("#tortoirDefaults");
        $('#@(modelFieldFlaecheTrottoirRechtsClientId)').closest('tr').detach().appendTo("#tortoirDefaults");
    }
    
    function @(showLinksFunctionName)() {
        $('#@(modelFieldFlaecheTrottoirLinksClientId)').closest('tr').detach().insertAfter($("#@(modelFieldTrottoirClientId)").closest('tr'));
        $('#@(modelFieldBreiteTrottoirLinksClientId)').closest('tr').detach().insertAfter($("#@(modelFieldTrottoirClientId)").closest('tr'));
    }
    
    function @(showRechtsFunctionName)() {
        $('#@(modelFieldFlaecheTrottoirRechtsClientId)').closest('tr').detach().insertAfter($("#@(modelFieldTrottoirClientId)").closest('tr'));
        $('#@(modelFieldBreiteTrottoirRechtsClientId)').closest('tr').detach().insertAfter($("#@(modelFieldTrottoirClientId)").closest('tr'));
    }

</script>
    @Html.HiddenFor(m => m.Id)
    @{
        var belastungskategorieModels = ((List<BelastungskategorieModel>)ViewBag.Belastungskategorien);
        var dropDownItemList = belastungskategorieModels.ToDropDownItemList(tvp => LookupLocalization.ResourceManager.GetString(tvp.Typ), tvp => tvp.Id,
                                                                            belastungskategorieModels.FirstOrDefault(b => b.Id == Model.Belastungskategorie),
                                                                            TextLocalization.EmptyMessage);
    }
    <input id="OriginalBelag" value="@(Model.Belag)" type="hidden"/>
    <input id="ShouldCheckBelagChange" value="@(Model.ShouldCheckBelagChange)" type="hidden"/>
@(Html.EditorTable(225)
      .WithTextBoxFor(m => m.Strassenname)
      .WithTextBoxFor(m => m.BezeichnungVon, false)
      .WithTextBoxFor(m => m.BezeichnungBis, false)
      .WithTextBoxFor(m => m.ExternalId, false)
      .WithIntegerEditorFor(m => m.Abschnittsnummer, 9, false)
      .WithEnumEditorFor(m => m.Strasseneigentuemer, () => Model.Strasseneigentuemer, c => c.Width(200))
      .WithTextBoxFor(m => m.Ortsbezeichnung, false)
      .WithCustomEditorFor(m => m.Belastungskategorie, MvcHtmlString.Create(Html.Kendo().DropDownListFor(m => m.Belastungskategorie).BindTo(dropDownItemList).Events(events => events.Change(setDefaultBreitenFunctionName)).HtmlAttributes(new { style = "width: 200px;" }).ToHtmlString()))
      .WithEnumEditorFor(m => m.Belag, () => Model.Belag, c => c.Width(200))
      .WithDecimalEditorFor(m => m.BreiteFahrbahn)
      .WithDecimalEditorFor(m => m.Laenge, 1)
      .WithDisplayFor(m => m.FlaecheFahrbahn, false, null, isNotInSplitStrassenabschnittMode)
      .WithSeparator()
      .WithEnumEditorFor(m => m.Trottoir, () => Model.Trottoir, b => b.Events(c => c.Change(trottoirChangeFunctionName)))
      .WithDecimalEditorFor(m => m.BreiteTrottoirLinks)
      .WithDisplayFor(m => m.FlaecheTrottoirLinks, false, null, isNotInSplitStrassenabschnittMode)
      .WithDecimalEditorFor(m => m.BreiteTrottoirRechts)
      .WithDisplayFor(m => m.FlaecheTrottoirRechts, false, null, isNotInSplitStrassenabschnittMode)
      .WithDisplayFor(m => m.FlaecheTrottoir, false, null, isNotInSplitStrassenabschnittMode))

<div class="emsg-strassenabschnitt-dropdown-ids" style="display: none" 
     data-belastungskategorie-id="@(modelFieldBelastungskategorieClientId.Replace("\\\\", "\\"))"
     data-belag-id="@(modelFieldBelagClientId.Replace("\\\\", "\\"))"></div>
