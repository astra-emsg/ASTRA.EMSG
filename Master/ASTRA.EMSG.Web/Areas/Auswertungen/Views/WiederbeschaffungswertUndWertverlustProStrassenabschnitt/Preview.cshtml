@using ASTRA.EMSG.Business.Reports.WiederbeschaffungswertUndWertverlustProStrassenabschnitt
@using ASTRA.EMSG.Common
@using ASTRA.EMSG.Common.Enums
@using Resources
@using Kendo.Mvc.UI
@using ASTRA.EMSG.Web.Infrastructure.HtmlHelperExtensions

@(Html.ToGridFilterBuilder<WiederbeschaffungswertUndWertverlustProStrassenabschnittParameter>()
                        .WithEnumFilter<EigentuemerTyp?, EigentuemerTyp>(f => f.Eigentuemer)
                        .WithTextFilter(f => f.Strassenname, triggerOn3Char: true, width: 198)
                        .WithTextFilter(f => f.Ortsbezeichnung, width: 198)
                        .WithFilterButton(true, "javascript: RefreshGrid"))

@ReportViewHelpers.TabellarischReportButtons(Html, "WiederbeschaffungswertUndWertverlustProStrassenabschnitt", "WiederbeschaffungswertUndWertverlustProStrassenabschnitt")
<div class="scrollable-grid-border">
    <div class="scrollable-grid">
        @(Html.Kendo().Grid<WiederbeschaffungswertUndWertverlustProStrassenabschnittPo>()
          .Name("WiederbeschaffungswertUndWertverlustProStrassenabschnitt")
          .ApplyEmsgSettings(editable: false)
          .Columns(columns =>
          {
              columns.Bound(m => m.Abschnittsnummer).Title(GridHeaderFooterLocalization.Strassenabschnittsnummer);
              columns.Bound(m => m.Strassenname).Title(GridHeaderFooterLocalization.Strassenname).SumLabel();
              columns.Bound(m => m.BezeichnungVon).Title(GridHeaderFooterLocalization.BezeichnungVon);
              columns.Bound(m => m.BezeichnungBis).Title(GridHeaderFooterLocalization.BezeichnungBis);
              columns.Bound(m => m.Strasseneigentuemer).Hidden();
              columns.Bound(m => m.StrasseneigentuemerBezeichnung).Title(GridHeaderFooterLocalization.Strasseneigentuemer);
              columns.Bound(m => m.Ortsbezeichnung).Title(GridHeaderFooterLocalization.Ortsbezeichnung);
              columns.Bound(m => m.BelastungskategorieTyp).Hidden();
              columns.Bound(m => m.BelastungskategorieBezeichnung).Title(GridHeaderFooterLocalization.BelastungskategorieTyp);
              columns.Bound(m => m.Laenge).Title(GridHeaderFooterLocalization.Laenge).Format(FormatStrings.NoDecimalFormat).Sum();
              columns.Bound(m => m.FlaecheFahrbahn).Title(GridHeaderFooterLocalization.FlaecheFahrbahn).Format(FormatStrings.NoDecimalFormat).Sum();
              columns.Bound(m => m.FlaecheTrottoirLinks).Title(GridHeaderFooterLocalization.FlaceheTrottoirLinks).Format(FormatStrings.NoDecimalFormat).Sum();
              columns.Bound(m => m.FlaecheTrottoirRechts).Title(GridHeaderFooterLocalization.FlaceheTrottoirRechts).Format(FormatStrings.NoDecimalFormat).Sum();
              columns.Bound(m => m.TrottoirBezeichnung).Title(GridHeaderFooterLocalization.Trottoirtyp);
              columns.Bound(m => m.Wiederbeschaffungswert).Title(GridHeaderFooterLocalization.Wiederbeschaffungswert).Format(FormatStrings.NoDecimalFormat).Sum();
              columns.Bound(m => m.AlterungsbeiwertI).Title(GridHeaderFooterLocalization.AlterungsbeiwertI).Format(FormatStrings.ShortDecimalFormat).AlignRight();
              columns.Bound(m => m.WertlustI).Title(GridHeaderFooterLocalization.WertlustI).Format(FormatStrings.NoDecimalFormat).Sum();
              columns.Bound(m => m.AlterungsbeiwertII).Title(GridHeaderFooterLocalization.AlterungsbeiwertII).Format(FormatStrings.ShortDecimalFormat).AlignRight();
              columns.Bound(m => m.WertlustII).Title(GridHeaderFooterLocalization.WertlustII).Format(FormatStrings.NoDecimalFormat).Sum();
          })          
          .DataSource(dataBinding => dataBinding
              .Ajax()
              .Read(c => c.Action("GetAll", "WiederbeschaffungswertUndWertverlustProStrassenabschnitt").Data("BuildParameter"))
              .Model(dataKey => dataKey.Id(m => m.Id))
              .PageSize(ASTRA.EMSG.Web.Infrastructure.ConstantSettings.GridPageSize)
              .Aggregates(aggregate =>
              {
                  aggregate.Add(p => p.Laenge).Sum();
                  aggregate.Add(p => p.FlaecheFahrbahn).Sum();
                  aggregate.Add(p => p.FlaecheTrottoirLinks).Sum();
                  aggregate.Add(p => p.FlaecheTrottoirRechts).Sum();
                  aggregate.Add(p => p.Wiederbeschaffungswert).Sum();
                  aggregate.Add(p => p.WertlustI).Sum();
                  aggregate.Add(p => p.WertlustII).Sum();
              }))
          .HtmlAttributes(new { style = "display: inline-block" })
          .Events(c => c.DataBound("OnDataBound"))
          )
    </div>
</div>

<script type="text/javascript">

    function RefreshGrid() {
        common.refreshGrid('#WiederbeschaffungswertUndWertverlustProStrassenabschnitt');
    }

    function GetReportParameter() {
        var reportParameter = {};

        reportParameter.Eigentuemer = $("#Eigentuemer").val();
        reportParameter.Ortsbezeichnung = $("#Ortsbezeichnung").val();
        reportParameter.Strassenname = $("#Strassenname").val();

        return reportParameter;
    }
</script>
