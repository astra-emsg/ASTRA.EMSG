{"version":3,"sources":["kendo.scheduler.timelineview.js"],"names":["f","define","$","undefined","toInvariantTime","date","staticDate","Date","setTime","getMilliseconds","getWorkDays","options","workDays","dayIndex","workWeekStart","push","workWeekEnd","setColspan","columnLevel","i","count","columns","length","colspan","collidingEvents","elements","left","right","idx","startPosition","overlaps","endPosition","rectLeft","rectRight","eventsForSlot","event","events","kendo","window","ui","SchedulerView","extend","proxy","getDate","MS_PER_DAY","MS_PER_MINUTE","CURRENT_TIME_MARKER_CLASS","CURRENT_TIME_MARKER_ARROW_CLASS","SCHEDULER_HEADER_WRAP_CLASS","BORDER_SIZE_COEFF","NS","EVENT_TEMPLATE","template","DATA_HEADER_TEMPLATE","EVENT_WRAPPER_STRING","TimelineView","init","element","that","this","fn","call","title","name","_workDays","_templates","_editable","calculateDateRange","_groups","_currentTime","_currentTimeMarkerUpdater","_updateCurrentTimeMarker","currentTime","timezone","timezoneOffset","groupsCount","groupIndex","currentGroup","utcCurrentTime","ranges","collection","slotElement","elementHtml","headerWrap","timesTableMarker","datesHeader","find","remove","content","_isInDateSlot","start","end","currentTimeMarker","useLocalTimezone","dataSource","schema","offset","convert","getTimezoneOffset","group","orientation","groups","toUtcTime","timeSlotRanges","slotByStartDate","Math","round","innerRect","getTime","prependTo","addClass","css","_adjustLeftPosition","outerWidth","top","prev","position","width","height","scrollHeight","_isRtl","scrollWidth","offsetWidth","setUpdateTimer","markerOptions","updateInterval","_currentTimeUpdateTimer","setInterval","editable","_isMobile","_touchEditable","_mouseEditable","on","e","trigger","uid","closest","attr","preventDefault","create","resourceInfo","slot","_slotByPosition","pageX","pageY","_resourceBySlot","eventInfo","startDate","endDate","update","threshold","support","mobileOS","android","_addUserEvents","UserEvents","filter","tap","x","location","y","_editUserEvents","eventElement","target","hasClass","browser","mozilla","scrollLeft","msie","webkit","scrollTop","ceil","timeSlotByPosition","selectedDateFormat","selectedShortDateFormat","today","startTime","endTime","showWorkHours","minorTickCount","workDayStart","workDayEnd","majorTick","eventHeight","eventMinWidth","columnWidth","groupHeaderTemplate","majorTimeHeaderTemplate","slotTemplate","eventTemplate","dateHeaderTemplate","footer","command","messages","defaultRowText","showFullDay","showWorkDay","settings","Template","templateSettings","_eventTmpl","_render","dates","_dates","_startDate","_endDate","_calculateSlotRanges","createLayout","_layout","_content","_footer","_setContentWidth","refreshLayout","th","currentTarget","view","timesHeader","hide","contentWidth","contentTable","columnCount","children","minWidth","calculatedWidth","add","slotRanges","rangeStart","rangeEnd","slotStartTime","slotEndTime","_slotRanges","_forTimeRange","min","max","action","after","msMin","msMax","msMajorInterval","msInterval","startDay","msStart","html","majorTickDivider","isMajorTickColumn","isMiddleColumn","isLastSlotColumn","minorTickColumns","isLastMajorSlot","minorTickIndex","resources","timeColumns","rows","text","minorTickSlots","className","middleColumn","lastSlotColumn","minorSlotsCount","timeColumn","slice","groupedResources","_groupOrientation","_createRowsLayout","_createColumnsLayout","appendTo","isWorkDay","_columnCountForLevel","level","columnLevels","_rowCountForLevel","rowLevel","rowLevels","_isWorkDay","day","getDay","appendRow","rowIdx","groupIdx","rowCount","isVerticalGrouped","_groupCount","tmplDate","classes","isToday","append","groupCount","_addResourceView","addTimeSlotCollection","addDays","_timeSlotGroups","_isVerticallyGrouped","_isHorizontallyGrouped","datesCount","rowMultiplier","time","rowIndex","cellMultiplier","cells","cellsPerGroup","cellsPerDay","dateIndex","cellOffset","cellIndex","cell","currentDate","interval","_timeSlotInterval","isVerticallyGrouped","tableRows","floor","getTimeSlotCollection","UTC","getFullYear","getMonth","setAttribute","addTimeSlot","nextDate","nextDay","previousDate","previousDay","render","eventsByResource","eventGroups","maxRowCount","eventGroup","_headerColumnCount","data","Query","sort","field","dir","toArray","_eventsByResource","_renderEvents","_setRowsHeight","_positionEvents","eventsForGroup","eventUid","eventObject","_positionEvent","rowsCount","rowHeight","timesRow","row","eventBottomOffset","_getBottomRowOffset","times","_refreshSlots","minOffset","maxOffset","isMobile","slotsCollection","lastSlot","offsetRight","rect","slotRange","_slots","offsetLeft","offsetTop","refresh","result","itemIdx","value","eventsFilteredByResource","resource","_resourceValue","operator","groupEqFilter","_isInTimeSlot","slotIndex","_startTime","_endTime","_adjustEvent","occurrence","eventStartTime","_time","eventEndTime","adjustedStartDate","adjustedEndDate","head","tail","isAllDay","clone","isMultiDayEvent","container","adjustedEvent","range","_continuousEvents","_createEventElement","addContinuousEvent","_arrangeRows","showDelete","destroy","resizable","resize","eventStartDate","eventEndDate","eventResources","apply","ns","singleDay","inverseColor","_shouldInverseResourceColor","angular","dataItem","rowEvents","j","eventLength","startIndex","index","endIndex","addEvent","createRows","_updateEventForSelection","_eventOptionsForMove","_updateEventForResize","set","_updateMoveHint","distance","rangeIndex","startSlot","hint","clonedEvent","eventDuraton","duration","_removeMoveHint","snap","offsetHeight","_moveHint","_updateResizeHint","startRect","format","_removeResizeHint","_createResizeHint","_resizeHint","first","toString","toLocalDate","last","selectionByElement","_updateDirection","selection","multiple","reverse","vertical","endSlot","collectionIndex","backward","_changeGroup","previous","method","prevGroupSlot","isDay","_collection","nextGroupSlot","_verticalSlots","_horizontalSlots","_changeViewPeriod","move","key","shift","slots","handled","keys","DOWN","UP","LEFT","RIGHT","off","clearInterval","TimelineWeekView","selectedDate","dayOfWeek","calendarInfo","firstDay","TimelineWorkWeekView","TimelineMonthView","firstDayOfMonth","lastDayOfMonth","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.scheduler.timelineview.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.scheduler.timelineview', ['kendo.scheduler.view'], f);\n}(function () {\n    var __meta__ = {\n        id: 'scheduler.timelineview',\n        name: 'Scheduler Timeline View',\n        category: 'web',\n        description: 'The Scheduler Timeline View',\n        depends: ['scheduler.view'],\n        hidden: true\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, ui = kendo.ui, setTime = kendo.date.setTime, SchedulerView = ui.SchedulerView, extend = $.extend, proxy = $.proxy, getDate = kendo.date.getDate, getMilliseconds = kendo.date.getMilliseconds, MS_PER_DAY = kendo.date.MS_PER_DAY, MS_PER_MINUTE = kendo.date.MS_PER_MINUTE, CURRENT_TIME_MARKER_CLASS = 'k-current-time', CURRENT_TIME_MARKER_ARROW_CLASS = 'k-current-time-arrow', SCHEDULER_HEADER_WRAP_CLASS = 'k-scheduler-header-wrap', BORDER_SIZE_COEFF = 0.8666, NS = '.kendoTimelineView';\n        var EVENT_TEMPLATE = kendo.template('<div>' + '<div class=\"k-event-template k-event-time\">#:kendo.format(\"{0:t} - {1:t}\", start, end)#</div>' + '<div class=\"k-event-template\">${title}</div></div>'), DATA_HEADER_TEMPLATE = kendo.template('<span class=\\'k-link k-nav-day\\'>#=kendo.format(\\'{0:m}\\', date)#</span>'), EVENT_WRAPPER_STRING = '<div role=\"gridcell\" aria-selected=\"false\" ' + 'data-#=ns#uid=\"#=uid#\"' + '#if (resources[0]) { #' + 'style=\"background-color:#=resources[0].color#; border-color: #=resources[0].color#\"' + 'class=\"k-event#=inverseColor ? \" k-event-inverse\" : \"\"#\" ' + '#} else {#' + 'class=\"k-event\"' + '#}#' + '>' + '<span class=\"k-event-actions\">' + '# if(data.tail) {#' + '<span class=\"k-icon k-i-arrow-w\"></span>' + '#}#' + '# if(data.isException()) {#' + '<span class=\"k-icon k-i-exception\"></span>' + '# } else if(data.isRecurring()) {#' + '<span class=\"k-icon k-i-refresh\"></span>' + '# } #' + '</span>' + '{0}' + '<span class=\"k-event-actions\">' + '#if (showDelete) {#' + '<a href=\"\\\\#\" class=\"k-link k-event-delete\"><span class=\"k-icon k-si-close\"></span></a>' + '#}#' + '# if(data.head) {#' + '<span class=\"k-icon k-i-arrow-e\"></span>' + '#}#' + '</span>' + '#if(resizable && !data.tail){#' + '<span class=\"k-resize-handle k-resize-w\"></span>' + '#}#' + '#if(resizable && !data.head){#' + '<span class=\"k-resize-handle k-resize-e\"></span>' + '#}#' + '</div>';\n        function toInvariantTime(date) {\n            var staticDate = new Date(1980, 1, 1, 0, 0, 0);\n            setTime(staticDate, getMilliseconds(date));\n            return staticDate;\n        }\n        function getWorkDays(options) {\n            var workDays = [];\n            var dayIndex = options.workWeekStart;\n            workDays.push(dayIndex);\n            while (options.workWeekEnd != dayIndex) {\n                if (dayIndex > 6) {\n                    dayIndex -= 7;\n                } else {\n                    dayIndex++;\n                }\n                workDays.push(dayIndex);\n            }\n            return workDays;\n        }\n        function setColspan(columnLevel) {\n            var count = 0;\n            if (columnLevel.columns) {\n                for (var i = 0; i < columnLevel.columns.length; i++) {\n                    count += setColspan(columnLevel.columns[i]);\n                }\n                columnLevel.colspan = count;\n                return count;\n            } else {\n                columnLevel.colspan = 1;\n                return 1;\n            }\n        }\n        function collidingEvents(elements, left, right) {\n            var idx, startPosition, overlaps, endPosition;\n            for (idx = elements.length - 1; idx >= 0; idx--) {\n                startPosition = elements[idx].rectLeft;\n                endPosition = elements[idx].rectRight;\n                overlaps = startPosition <= left && endPosition >= left;\n                if (overlaps || startPosition >= left && endPosition <= right || left <= startPosition && right >= startPosition) {\n                    if (startPosition < left) {\n                        left = startPosition;\n                    }\n                    if (endPosition > right) {\n                        right = endPosition;\n                    }\n                }\n            }\n            return eventsForSlot(elements, left, right);\n        }\n        function eventsForSlot(elements, left, right) {\n            var events = [];\n            for (var idx = 0; idx < elements.length; idx++) {\n                var event = {\n                    rectLeft: elements[idx].rectLeft,\n                    rectRight: elements[idx].rectRight\n                };\n                if (event.rectLeft < left && event.rectRight > left || event.rectLeft >= left && event.rectRight <= right) {\n                    events.push(elements[idx]);\n                }\n            }\n            return events;\n        }\n        var TimelineView = SchedulerView.extend({\n            init: function (element, options) {\n                var that = this;\n                SchedulerView.fn.init.call(that, element, options);\n                that.title = that.options.title || that.options.name;\n                that._workDays = getWorkDays(that.options);\n                that._templates();\n                that._editable();\n                that.calculateDateRange();\n                that._groups();\n                that._currentTime(true);\n            },\n            name: 'timeline',\n            _currentTimeMarkerUpdater: function () {\n                this._updateCurrentTimeMarker(new Date());\n            },\n            _updateCurrentTimeMarker: function (currentTime) {\n                var options = this.options;\n                this.datesHeader.find('.' + CURRENT_TIME_MARKER_CLASS).remove();\n                this.content.find('.' + CURRENT_TIME_MARKER_CLASS).remove();\n                if (!this._isInDateSlot({\n                        start: currentTime,\n                        end: currentTime\n                    })) {\n                    return;\n                }\n                if (options.currentTimeMarker.useLocalTimezone === false) {\n                    var timezone = options.dataSource.options.schema.timezone;\n                    if (options.dataSource && timezone) {\n                        var timezoneOffset = kendo.timezone.offset(currentTime, timezone);\n                        currentTime = kendo.timezone.convert(currentTime, currentTime.getTimezoneOffset(), timezoneOffset);\n                    }\n                }\n                var groupsCount = !options.group || options.group.orientation == 'vertical' ? 1 : this.groups.length;\n                for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                    var currentGroup = this.groups[groupIndex];\n                    if (!currentGroup) {\n                        return;\n                    }\n                    var utcCurrentTime = kendo.date.toUtcTime(currentTime);\n                    var ranges = currentGroup.timeSlotRanges(utcCurrentTime, utcCurrentTime + 1);\n                    if (ranges.length === 0) {\n                        return;\n                    }\n                    var collection = ranges[0].collection;\n                    var slotElement = collection.slotByStartDate(currentTime);\n                    if (slotElement) {\n                        var elementHtml = '<div class=\\'' + CURRENT_TIME_MARKER_CLASS + '\\'></div>';\n                        var headerWrap = this.datesHeader.find('.' + SCHEDULER_HEADER_WRAP_CLASS);\n                        var left = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).left);\n                        var timesTableMarker = $(elementHtml).prependTo(headerWrap).addClass(CURRENT_TIME_MARKER_ARROW_CLASS + '-down');\n                        timesTableMarker.css({\n                            left: this._adjustLeftPosition(left - timesTableMarker.outerWidth() * BORDER_SIZE_COEFF / 2),\n                            top: headerWrap.find('tr:last').prev().position().top\n                        });\n                        $(elementHtml).prependTo(this.content).css({\n                            left: this._adjustLeftPosition(left),\n                            width: '1px',\n                            height: this.content[0].scrollHeight - 1,\n                            top: 0\n                        });\n                    }\n                }\n            },\n            _adjustLeftPosition: function (left) {\n                if (this._isRtl) {\n                    left -= this.content[0].scrollWidth - this.content[0].offsetWidth;\n                }\n                return left;\n            },\n            _currentTime: function (setUpdateTimer) {\n                var that = this;\n                var markerOptions = that.options.currentTimeMarker;\n                if (markerOptions !== false && markerOptions.updateInterval !== undefined) {\n                    that._currentTimeMarkerUpdater();\n                    if (setUpdateTimer) {\n                        that._currentTimeUpdateTimer = setInterval(proxy(this._currentTimeMarkerUpdater, that), markerOptions.updateInterval);\n                    }\n                }\n            },\n            _editable: function () {\n                if (this.options.editable) {\n                    if (this._isMobile()) {\n                        this._touchEditable();\n                    } else {\n                        this._mouseEditable();\n                    }\n                }\n            },\n            _mouseEditable: function () {\n                var that = this;\n                that.element.on('click' + NS, '.k-event a:has(.k-si-close)', function (e) {\n                    that.trigger('remove', { uid: $(this).closest('.k-event').attr(kendo.attr('uid')) });\n                    e.preventDefault();\n                });\n                if (that.options.editable.create !== false) {\n                    that.element.on('dblclick' + NS, '.k-scheduler-content td', function (e) {\n                        var slot = that._slotByPosition(e.pageX, e.pageY);\n                        if (slot) {\n                            var resourceInfo = that._resourceBySlot(slot);\n                            that.trigger('add', {\n                                eventInfo: extend({\n                                    start: slot.startDate(),\n                                    end: slot.endDate()\n                                }, resourceInfo)\n                            });\n                        }\n                        e.preventDefault();\n                    });\n                }\n                if (that.options.editable.update !== false) {\n                    that.element.on('dblclick' + NS, '.k-event', function (e) {\n                        that.trigger('edit', { uid: $(this).closest('.k-event').attr(kendo.attr('uid')) });\n                        e.preventDefault();\n                    });\n                }\n            },\n            _touchEditable: function () {\n                var that = this;\n                var threshold = 0;\n                if (kendo.support.mobileOS.android) {\n                    threshold = 5;\n                }\n                if (that.options.editable.create !== false) {\n                    that._addUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        filter: '.k-scheduler-content td',\n                        tap: function (e) {\n                            var x = e.x.location !== undefined ? e.x.location : e.x;\n                            var y = e.y.location !== undefined ? e.y.location : e.y;\n                            var slot = that._slotByPosition(x, y);\n                            if (slot) {\n                                var resourceInfo = that._resourceBySlot(slot);\n                                that.trigger('add', {\n                                    eventInfo: extend({\n                                        start: slot.startDate(),\n                                        end: slot.endDate()\n                                    }, resourceInfo)\n                                });\n                            }\n                            e.preventDefault();\n                        }\n                    });\n                }\n                if (that.options.editable.update !== false) {\n                    that._editUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        filter: '.k-event',\n                        tap: function (e) {\n                            var eventElement = $(e.target).closest('.k-event');\n                            if (!eventElement.hasClass('k-event-active')) {\n                                that.trigger('edit', { uid: eventElement.attr(kendo.attr('uid')) });\n                            }\n                            e.preventDefault();\n                        }\n                    });\n                }\n            },\n            _slotByPosition: function (x, y) {\n                var slot;\n                var content = this.content;\n                var offset = content.offset();\n                var group;\n                var groupIndex;\n                x -= offset.left;\n                y -= offset.top;\n                if (this._isRtl) {\n                    var browser = kendo.support.browser;\n                    if (browser.mozilla) {\n                        x += content[0].scrollWidth - content[0].offsetWidth;\n                        x += content[0].scrollLeft;\n                    } else if (browser.msie) {\n                        x -= content.scrollLeft();\n                        x += content[0].scrollWidth - content[0].offsetWidth;\n                    } else if (browser.webkit) {\n                        x += content[0].scrollLeft;\n                    }\n                } else {\n                    x += content[0].scrollLeft;\n                }\n                y += content[0].scrollTop;\n                x = Math.ceil(x);\n                y = Math.ceil(y);\n                for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                    group = this.groups[groupIndex];\n                    slot = group.timeSlotByPosition(x, y);\n                    if (slot) {\n                        return slot;\n                    }\n                }\n                return null;\n            },\n            options: {\n                name: 'TimelineView',\n                title: 'Timeline',\n                selectedDateFormat: '{0:D}',\n                selectedShortDateFormat: '{0:d}',\n                date: kendo.date.today(),\n                startTime: kendo.date.today(),\n                endTime: kendo.date.today(),\n                showWorkHours: false,\n                minorTickCount: 2,\n                editable: true,\n                workDayStart: new Date(1980, 1, 1, 8, 0, 0),\n                workDayEnd: new Date(1980, 1, 1, 17, 0, 0),\n                workWeekStart: 1,\n                workWeekEnd: 5,\n                majorTick: 60,\n                eventHeight: 25,\n                eventMinWidth: 0,\n                columnWidth: 100,\n                groupHeaderTemplate: '#=text#',\n                majorTimeHeaderTemplate: '#=kendo.toString(date, \\'t\\')#',\n                slotTemplate: '&nbsp;',\n                eventTemplate: EVENT_TEMPLATE,\n                dateHeaderTemplate: DATA_HEADER_TEMPLATE,\n                footer: { command: 'workDay' },\n                currentTimeMarker: {\n                    updateInterval: 10000,\n                    useLocalTimezone: true\n                },\n                messages: {\n                    defaultRowText: 'All events',\n                    showFullDay: 'Show full day',\n                    showWorkDay: 'Show business hours'\n                }\n            },\n            events: [\n                'remove',\n                'add',\n                'edit'\n            ],\n            _templates: function () {\n                var options = this.options, settings = extend({}, kendo.Template, options.templateSettings);\n                this.eventTemplate = this._eventTmpl(options.eventTemplate, EVENT_WRAPPER_STRING);\n                this.majorTimeHeaderTemplate = kendo.template(options.majorTimeHeaderTemplate, settings);\n                this.dateHeaderTemplate = kendo.template(options.dateHeaderTemplate, settings);\n                this.slotTemplate = kendo.template(options.slotTemplate, settings);\n                this.groupHeaderTemplate = kendo.template(options.groupHeaderTemplate, settings);\n            },\n            _render: function (dates) {\n                var that = this;\n                dates = dates || [];\n                that._dates = dates;\n                that._startDate = dates[0];\n                that._endDate = dates[dates.length - 1 || 0];\n                that._calculateSlotRanges();\n                that.createLayout(that._layout(dates));\n                that._content(dates);\n                that._footer();\n                that._setContentWidth();\n                that.refreshLayout();\n                that.datesHeader.on('click' + NS, '.k-nav-day', function (e) {\n                    var th = $(e.currentTarget).closest('th');\n                    var slot = that._slotByPosition(th.offset().left, that.content.offset().top);\n                    that.trigger('navigate', {\n                        view: 'timeline',\n                        date: slot.startDate()\n                    });\n                });\n                that.timesHeader.find('table tr:last').hide();\n                that.datesHeader.find('table tr:last').hide();\n            },\n            _setContentWidth: function () {\n                var content = this.content;\n                var contentWidth = content.width();\n                var contentTable = this.content.find('table');\n                var columnCount = contentTable.find('tr:first').children().length;\n                var minWidth = 100;\n                var calculatedWidth = columnCount * this.options.columnWidth;\n                if (contentWidth < calculatedWidth) {\n                    minWidth = Math.ceil(calculatedWidth / contentWidth * 100);\n                }\n                contentTable.add(this.datesHeader.find('table')).css('width', minWidth + '%');\n            },\n            _calculateSlotRanges: function () {\n                var dates = this._dates;\n                var slotStartTime = this.startTime();\n                var slotEndTime = this.endTime();\n                if (getMilliseconds(slotEndTime) === getMilliseconds(kendo.date.getDate(slotEndTime))) {\n                    slotEndTime = kendo.date.getDate(slotEndTime);\n                    setTime(slotEndTime, MS_PER_DAY - 1);\n                }\n                slotEndTime = getMilliseconds(slotEndTime);\n                slotStartTime = getMilliseconds(slotStartTime);\n                var slotRanges = [];\n                for (var i = 0; i < dates.length; i++) {\n                    var rangeStart = getDate(dates[i]);\n                    setTime(rangeStart, slotStartTime);\n                    var rangeEnd = getDate(dates[i]);\n                    setTime(rangeEnd, slotEndTime);\n                    slotRanges.push({\n                        start: kendo.date.toUtcTime(rangeStart),\n                        end: kendo.date.toUtcTime(rangeEnd)\n                    });\n                }\n                this._slotRanges = slotRanges;\n            },\n            _forTimeRange: function (min, max, action, after) {\n                min = toInvariantTime(min);\n                max = toInvariantTime(max);\n                var that = this, msMin = getMilliseconds(min), msMax = getMilliseconds(max), minorTickCount = that.options.minorTickCount, msMajorInterval = that.options.majorTick * MS_PER_MINUTE, msInterval = msMajorInterval / minorTickCount || 1, start = new Date(+min), startDay = start.getDate(), msStart, idx = 0, length, html = '';\n                length = MS_PER_DAY / msInterval;\n                if (msMin != msMax) {\n                    if (msMin > msMax) {\n                        msMax += MS_PER_DAY;\n                    }\n                    length = (msMax - msMin) / msInterval;\n                }\n                length = Math.round(length);\n                for (; idx < length; idx++) {\n                    var majorTickDivider = idx % (msMajorInterval / msInterval);\n                    var isMajorTickColumn = majorTickDivider === 0;\n                    var isMiddleColumn = majorTickDivider < minorTickCount - 1;\n                    var isLastSlotColumn = majorTickDivider === minorTickCount - 1;\n                    var minorTickColumns = minorTickCount;\n                    if (length % minorTickCount !== 0) {\n                        var isLastMajorSlot = length - (idx + 1) < minorTickCount;\n                        if (isMajorTickColumn && isLastMajorSlot) {\n                            minorTickColumns = length % minorTickCount;\n                        }\n                    }\n                    html += action(start, isMajorTickColumn, isMiddleColumn, isLastSlotColumn, minorTickColumns);\n                    setTime(start, msInterval, false);\n                }\n                if (msMax) {\n                    msStart = getMilliseconds(start);\n                    if (startDay < start.getDate()) {\n                        msStart += MS_PER_DAY;\n                    }\n                    if (msStart > msMax) {\n                        start = new Date(+max);\n                    }\n                }\n                if (after) {\n                    html += after(start);\n                }\n                return html;\n            },\n            _layout: function (dates) {\n                var timeColumns = [];\n                var columns = [];\n                var that = this;\n                var rows = [{ text: that.options.messages.defaultRowText }];\n                var minorTickSlots = [];\n                for (var minorTickIndex = 0; minorTickIndex < that.options.minorTickCount; minorTickIndex++) {\n                    minorTickSlots.push({\n                        text: '',\n                        className: ''\n                    });\n                }\n                this._forTimeRange(that.startTime(), that.endTime(), function (date, majorTick, middleColumn, lastSlotColumn, minorSlotsCount) {\n                    var template = that.majorTimeHeaderTemplate;\n                    if (majorTick) {\n                        var timeColumn = {\n                            text: template({ date: date }),\n                            className: lastSlotColumn ? 'k-slot-cell' : '',\n                            columns: minorTickSlots.slice(0, minorSlotsCount)\n                        };\n                        setColspan(timeColumn);\n                        timeColumns.push(timeColumn);\n                    }\n                });\n                for (var idx = 0; idx < dates.length; idx++) {\n                    columns.push({\n                        text: that.dateHeaderTemplate({ date: dates[idx] }),\n                        className: 'k-slot-cell',\n                        columns: timeColumns.slice(0)\n                    });\n                }\n                var resources = this.groupedResources;\n                if (resources.length) {\n                    if (this._groupOrientation() === 'vertical') {\n                        rows = that._createRowsLayout(resources, null, this.groupHeaderTemplate);\n                    } else {\n                        columns = that._createColumnsLayout(resources, columns, this.groupHeaderTemplate);\n                    }\n                }\n                return {\n                    columns: columns,\n                    rows: rows\n                };\n            },\n            _footer: function () {\n                var options = this.options;\n                if (options.footer !== false) {\n                    var html = '<div class=\"k-header k-scheduler-footer\">';\n                    var command = options.footer.command;\n                    if (command && command === 'workDay') {\n                        html += '<ul class=\"k-reset k-header\">';\n                        html += '<li class=\"k-state-default k-scheduler-fullday\"><a href=\"#\" class=\"k-link\"><span class=\"k-icon k-i-clock\"></span>';\n                        html += (options.showWorkHours ? options.messages.showFullDay : options.messages.showWorkDay) + '</a></li>';\n                        html += '</ul>';\n                    } else {\n                        html += '&nbsp;';\n                    }\n                    html += '</div>';\n                    this.footer = $(html).appendTo(this.element);\n                    var that = this;\n                    this.footer.on('click' + NS, '.k-scheduler-fullday', function (e) {\n                        e.preventDefault();\n                        that.trigger('navigate', {\n                            view: that.name || options.name,\n                            date: that.startDate(),\n                            isWorkDay: !options.showWorkHours\n                        });\n                    });\n                }\n            },\n            _columnCountForLevel: function (level) {\n                var columnLevel = this.columnLevels[level];\n                return columnLevel ? columnLevel.length : 0;\n            },\n            _rowCountForLevel: function (level) {\n                var rowLevel = this.rowLevels[level];\n                return rowLevel ? rowLevel.length : 0;\n            },\n            _isWorkDay: function (date) {\n                var day = date.getDay();\n                var workDays = this._workDays;\n                for (var i = 0; i < workDays.length; i++) {\n                    if (workDays[i] === day) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _content: function (dates) {\n                var that = this;\n                var options = that.options;\n                var start = that.startTime();\n                var end = this.endTime();\n                var groupsCount = 1;\n                var rowCount = 1;\n                var columnCount = dates.length;\n                var html = '';\n                var resources = this.groupedResources;\n                var slotTemplate = this.slotTemplate;\n                var isVerticalGrouped = false;\n                if (resources.length) {\n                    isVerticalGrouped = that._groupOrientation() === 'vertical';\n                    if (isVerticalGrouped) {\n                        rowCount = that._groupCount();\n                    } else {\n                        groupsCount = that._groupCount();\n                    }\n                }\n                html += '<tbody>';\n                var appendRow = function (date) {\n                    var content = '';\n                    var classes = '';\n                    var tmplDate;\n                    var resources = function (groupIndex) {\n                        return function () {\n                            return that._resourceBySlot({ groupIndex: groupIndex });\n                        };\n                    };\n                    if (kendo.date.isToday(dates[idx])) {\n                        classes += 'k-today';\n                    }\n                    if (kendo.date.getMilliseconds(date) < kendo.date.getMilliseconds(options.workDayStart) || kendo.date.getMilliseconds(date) >= kendo.date.getMilliseconds(options.workDayEnd) || !that._isWorkDay(dates[idx])) {\n                        classes += ' k-nonwork-hour';\n                    }\n                    content += '<td' + (classes !== '' ? ' class=\"' + classes + '\"' : '') + '>';\n                    tmplDate = kendo.date.getDate(dates[idx]);\n                    kendo.date.setTime(tmplDate, kendo.date.getMilliseconds(date));\n                    content += slotTemplate({\n                        date: tmplDate,\n                        resources: resources(isVerticalGrouped ? rowIdx : groupIdx)\n                    });\n                    content += '</td>';\n                    return content;\n                };\n                for (var rowIdx = 0; rowIdx < rowCount; rowIdx++) {\n                    html += '<tr>';\n                    for (var groupIdx = 0; groupIdx < groupsCount; groupIdx++) {\n                        for (var idx = 0, length = columnCount; idx < length; idx++) {\n                            html += this._forTimeRange(start, end, appendRow);\n                        }\n                    }\n                    html += '</tr>';\n                }\n                html += '</tbody>';\n                this.content.find('table').append(html);\n            },\n            _groups: function () {\n                var groupCount = this._groupCount();\n                var dates = this._dates;\n                var columnCount = dates.length;\n                this.groups = [];\n                for (var idx = 0; idx < groupCount; idx++) {\n                    var view = this._addResourceView(idx);\n                    var start = dates[0];\n                    var end = dates[dates.length - 1 || 0];\n                    view.addTimeSlotCollection(start, kendo.date.addDays(end, 1));\n                }\n                this._timeSlotGroups(groupCount, columnCount);\n            },\n            _isVerticallyGrouped: function () {\n                return this.groupedResources.length && this._groupOrientation() === 'vertical';\n            },\n            _isHorizontallyGrouped: function () {\n                return this.groupedResources.length && this._groupOrientation() === 'horizontal';\n            },\n            _timeSlotGroups: function (groupCount, datesCount) {\n                var interval = this._timeSlotInterval();\n                var isVerticallyGrouped = this._isVerticallyGrouped();\n                var tableRows = this.content.find('tr');\n                var rowCount = tableRows.length;\n                tableRows.attr('role', 'row');\n                if (isVerticallyGrouped) {\n                    rowCount = Math.floor(rowCount / groupCount);\n                }\n                for (var groupIndex = 0; groupIndex < groupCount; groupIndex++) {\n                    var rowMultiplier = 0;\n                    var group = this.groups[groupIndex];\n                    var time;\n                    if (isVerticallyGrouped) {\n                        rowMultiplier = groupIndex;\n                    }\n                    var rowIndex = rowMultiplier * rowCount;\n                    var cellMultiplier = 0;\n                    if (!isVerticallyGrouped) {\n                        cellMultiplier = groupIndex;\n                    }\n                    var cells = tableRows[rowIndex].children;\n                    var cellsPerGroup = cells.length / (!isVerticallyGrouped ? groupCount : 1);\n                    var cellsPerDay = cellsPerGroup / datesCount;\n                    for (var dateIndex = 0; dateIndex < datesCount; dateIndex++) {\n                        var cellOffset = dateIndex * cellsPerDay + cellsPerGroup * cellMultiplier;\n                        time = getMilliseconds(new Date(+this.startTime()));\n                        for (var cellIndex = 0; cellIndex < cellsPerDay; cellIndex++) {\n                            var cell = cells[cellIndex + cellOffset];\n                            var collection = group.getTimeSlotCollection(0);\n                            var currentDate = this._dates[dateIndex];\n                            var currentTime = Date.UTC(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\n                            var start = currentTime + time;\n                            var end = start + interval;\n                            cell.setAttribute('role', 'gridcell');\n                            cell.setAttribute('aria-selected', false);\n                            collection.addTimeSlot(cell, start, end, true);\n                            time += interval;\n                        }\n                    }\n                }\n            },\n            startDate: function () {\n                return this._startDate;\n            },\n            endDate: function () {\n                return this._endDate;\n            },\n            startTime: function () {\n                var options = this.options;\n                return options.showWorkHours ? options.workDayStart : options.startTime;\n            },\n            endTime: function () {\n                var options = this.options;\n                return options.showWorkHours ? options.workDayEnd : options.endTime;\n            },\n            _timeSlotInterval: function () {\n                var options = this.options;\n                return options.majorTick / options.minorTickCount * MS_PER_MINUTE;\n            },\n            nextDate: function () {\n                return kendo.date.nextDay(this.endDate());\n            },\n            previousDate: function () {\n                return kendo.date.previousDay(this.startDate());\n            },\n            calculateDateRange: function () {\n                this._render([this.options.date]);\n            },\n            render: function (events) {\n                this._headerColumnCount = 0;\n                this._groups();\n                this.element.find('.k-event').remove();\n                events = new kendo.data.Query(events).sort([\n                    {\n                        field: 'start',\n                        dir: 'asc'\n                    },\n                    {\n                        field: 'end',\n                        dir: 'desc'\n                    }\n                ]).toArray();\n                var eventsByResource = [];\n                this._eventsByResource(events, this.groupedResources, eventsByResource);\n                var eventGroups = [];\n                var maxRowCount = 0;\n                for (var groupIndex = 0; groupIndex < eventsByResource.length; groupIndex++) {\n                    var eventGroup = {\n                        groupIndex: groupIndex,\n                        maxRowCount: 0,\n                        events: {}\n                    };\n                    eventGroups.push(eventGroup);\n                    this._renderEvents(eventsByResource[groupIndex], groupIndex, eventGroup);\n                    if (maxRowCount < eventGroup.maxRowCount) {\n                        maxRowCount = eventGroup.maxRowCount;\n                    }\n                }\n                this._setRowsHeight(eventGroups, eventsByResource.length, maxRowCount);\n                this._positionEvents(eventGroups, eventsByResource.length);\n                this._currentTime(false);\n                this.trigger('activate');\n            },\n            _positionEvents: function (eventGroups, groupsCount) {\n                for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                    var eventsForGroup = eventGroups[groupIndex].events;\n                    for (var eventUid in eventsForGroup) {\n                        var eventObject = eventsForGroup[eventUid];\n                        this._positionEvent(eventObject);\n                    }\n                }\n            },\n            _setRowsHeight: function (eventGroups, groupsCount, maxRowCount) {\n                var eventHeight = this.options.eventHeight + 2;\n                var eventBottomOffset = this._getBottomRowOffset();\n                groupsCount = this._isVerticallyGrouped() ? groupsCount : 1;\n                for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                    var rowsCount = this._isVerticallyGrouped() ? eventGroups[groupIndex].maxRowCount : maxRowCount;\n                    rowsCount = rowsCount ? rowsCount : 1;\n                    var rowHeight = (eventHeight + 2) * rowsCount + eventBottomOffset;\n                    var timesRow = $(this.times.find('tr')[groupIndex]);\n                    var row = $(this.content.find('tr')[groupIndex]);\n                    timesRow.height(rowHeight);\n                    row.height(rowHeight);\n                }\n                this._setContentWidth();\n                this.refreshLayout();\n                this._refreshSlots();\n            },\n            _getBottomRowOffset: function () {\n                var eventBottomOffset = this.options.eventHeight * 0.5;\n                var isMobile = this._isMobile();\n                var minOffset;\n                var maxOffset;\n                if (isMobile) {\n                    minOffset = 30;\n                    maxOffset = 60;\n                } else {\n                    minOffset = 15;\n                    maxOffset = 30;\n                }\n                if (eventBottomOffset > maxOffset) {\n                    eventBottomOffset = maxOffset;\n                } else if (eventBottomOffset < minOffset) {\n                    eventBottomOffset = minOffset;\n                }\n                return eventBottomOffset;\n            },\n            _positionEvent: function (eventObject) {\n                var eventHeight = this.options.eventHeight + 2;\n                var rect = eventObject.slotRange.innerRect(eventObject.start, eventObject.end, false);\n                var left = this._adjustLeftPosition(rect.left);\n                var width = rect.right - rect.left - 2;\n                if (width < 0) {\n                    width = 0;\n                }\n                if (width < this.options.eventMinWidth) {\n                    var slotsCollection = eventObject.slotRange.collection;\n                    var lastSlot = slotsCollection._slots[slotsCollection._slots.length - 1];\n                    var offsetRight = lastSlot.offsetLeft + lastSlot.offsetWidth;\n                    width = this.options.eventMinWidth;\n                    if (offsetRight < left + width) {\n                        width = offsetRight - rect.left - 2;\n                    }\n                }\n                eventObject.element.css({\n                    top: eventObject.slotRange.start.offsetTop + eventObject.rowIndex * (eventHeight + 2) + 'px',\n                    left: left,\n                    width: width\n                });\n            },\n            _refreshSlots: function () {\n                for (var groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                    this.groups[groupIndex].refresh();\n                }\n            },\n            _eventsByResource: function (events, resources, result) {\n                var resource = resources[0];\n                if (resource) {\n                    var view = resource.dataSource.view();\n                    for (var itemIdx = 0; itemIdx < view.length; itemIdx++) {\n                        var value = this._resourceValue(resource, view[itemIdx]);\n                        var eventsFilteredByResource = new kendo.data.Query(events).filter({\n                            field: resource.field,\n                            operator: SchedulerView.groupEqFilter(value)\n                        }).toArray();\n                        if (resources.length > 1) {\n                            this._eventsByResource(eventsFilteredByResource, resources.slice(1), result);\n                        } else {\n                            result.push(eventsFilteredByResource);\n                        }\n                    }\n                } else {\n                    result.push(events);\n                }\n            },\n            _isInDateSlot: function (event) {\n                var startTime = event.start;\n                var endTime = event.end;\n                var rangeStart = getDate(this._startDate);\n                var rangeEnd = kendo.date.addDays(getDate(this._endDate), 1);\n                if (startTime < rangeEnd && rangeStart <= endTime) {\n                    return true;\n                }\n                return false;\n            },\n            _isInTimeSlot: function (event) {\n                var startTime = event._startTime || kendo.date.toUtcTime(event.start);\n                var endTime = event._endTime || kendo.date.toUtcTime(event.end);\n                var slotRanges = this._slotRanges;\n                if (startTime === endTime) {\n                    endTime = endTime + 1;\n                }\n                for (var slotIndex = 0; slotIndex < slotRanges.length; slotIndex++) {\n                    if (startTime < slotRanges[slotIndex].end && slotRanges[slotIndex].start < endTime) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _adjustEvent: function (event) {\n                var start = event.start;\n                var end = event.end;\n                var eventStartTime = event._time('start');\n                var eventEndTime = event._time('end');\n                var startTime = getMilliseconds(this.startTime());\n                var endTime = getMilliseconds(this.endTime());\n                var adjustedStartDate = null;\n                var adjustedEndDate = null;\n                var occurrence;\n                var head = false;\n                var tail = false;\n                if (event.isAllDay) {\n                    adjustedStartDate = getDate(start);\n                    if (startTime > eventStartTime) {\n                        setTime(adjustedStartDate, startTime);\n                        tail = true;\n                    }\n                    adjustedEndDate = getDate(end);\n                    if (endTime === getMilliseconds(getDate(this.endTime()))) {\n                        adjustedEndDate = kendo.date.addDays(adjustedEndDate, 1);\n                    } else {\n                        setTime(adjustedEndDate, endTime);\n                        head = true;\n                    }\n                } else {\n                    endTime = endTime === 0 ? MS_PER_DAY : endTime;\n                    if (startTime > eventStartTime) {\n                        adjustedStartDate = getDate(start);\n                        setTime(adjustedStartDate, startTime);\n                        tail = true;\n                    } else if (endTime < eventStartTime) {\n                        adjustedStartDate = getDate(start);\n                        adjustedStartDate = kendo.date.addDays(adjustedStartDate, 1);\n                        setTime(adjustedStartDate, startTime);\n                        tail = true;\n                    }\n                    if (endTime < eventEndTime) {\n                        adjustedEndDate = getDate(end);\n                        setTime(adjustedEndDate, endTime);\n                        head = true;\n                    } else if (startTime > eventEndTime) {\n                        adjustedEndDate = getDate(end);\n                        adjustedEndDate = kendo.date.addDays(adjustedEndDate, -1);\n                        setTime(adjustedEndDate, endTime);\n                        head = true;\n                    }\n                }\n                occurrence = event.clone({\n                    start: adjustedStartDate ? adjustedStartDate : start,\n                    end: adjustedEndDate ? adjustedEndDate : end,\n                    _startTime: adjustedStartDate ? kendo.date.toUtcTime(adjustedStartDate) : event._startTime,\n                    _endTime: adjustedEndDate ? kendo.date.toUtcTime(adjustedEndDate) : event._endTime,\n                    isAllDay: false\n                });\n                return {\n                    occurrence: occurrence,\n                    head: head,\n                    tail: tail\n                };\n            },\n            _renderEvents: function (events, groupIndex, eventGroup) {\n                var event;\n                var idx;\n                var length;\n                for (idx = 0, length = events.length; idx < length; idx++) {\n                    event = events[idx];\n                    if (this._isInDateSlot(event)) {\n                        var isMultiDayEvent = event.isAllDay || event.end.getTime() - event.start.getTime() >= MS_PER_DAY;\n                        var container = this.content;\n                        if (isMultiDayEvent || this._isInTimeSlot(event)) {\n                            var adjustedEvent = this._adjustEvent(event);\n                            var group = this.groups[groupIndex];\n                            if (!group._continuousEvents) {\n                                group._continuousEvents = [];\n                            }\n                            var ranges = group.slotRanges(adjustedEvent.occurrence, false);\n                            var range = ranges[0];\n                            var element;\n                            if (this._isInTimeSlot(adjustedEvent.occurrence)) {\n                                element = this._createEventElement(adjustedEvent.occurrence, event, range.head || adjustedEvent.head, range.tail || adjustedEvent.tail);\n                                element.appendTo(container).css({\n                                    top: 0,\n                                    height: this.options.eventHeight\n                                });\n                                var eventObject = {\n                                    start: adjustedEvent.occurrence._startTime || adjustedEvent.occurrence.start,\n                                    end: adjustedEvent.occurrence._endTime || adjustedEvent.occurrence.end,\n                                    element: element,\n                                    uid: event.uid,\n                                    slotRange: range,\n                                    rowIndex: 0,\n                                    offsetTop: 0\n                                };\n                                eventGroup.events[event.uid] = eventObject;\n                                this.addContinuousEvent(group, range, element, event.isAllDay);\n                                this._arrangeRows(eventObject, range, eventGroup);\n                            }\n                        }\n                    }\n                }\n            },\n            addContinuousEvent: function (group, range, element, isAllDay) {\n                var events = group._continuousEvents;\n                events.push({\n                    element: element,\n                    isAllDay: isAllDay,\n                    uid: element.attr(kendo.attr('uid')),\n                    start: range.start,\n                    end: range.end\n                });\n            },\n            _createEventElement: function (occurrence, event, head, tail) {\n                var template = this.eventTemplate;\n                var editable = this.options.editable;\n                var isMobile = this._isMobile();\n                var showDelete = editable && editable.destroy !== false && !isMobile;\n                var resizable = editable && editable.resize !== false;\n                var eventStartTime = event._time('start');\n                var eventEndTime = event._time('end');\n                var eventStartDate = event.start;\n                var eventEndDate = event.end;\n                var resources = this.eventResources(event);\n                if (event._startTime && eventStartTime !== kendo.date.getMilliseconds(event.start)) {\n                    eventStartDate = new Date(eventStartTime);\n                    eventStartDate = kendo.timezone.apply(eventStartDate, 'Etc/UTC');\n                }\n                if (event._endTime && eventEndTime !== kendo.date.getMilliseconds(event.end)) {\n                    eventEndDate = new Date(eventEndTime);\n                    eventEndDate = kendo.timezone.apply(eventEndDate, 'Etc/UTC');\n                }\n                var data = extend({}, {\n                    ns: kendo.ns,\n                    resizable: resizable,\n                    showDelete: showDelete,\n                    head: head,\n                    tail: tail,\n                    singleDay: this._dates.length == 1,\n                    resources: resources,\n                    inverseColor: resources && resources[0] ? this._shouldInverseResourceColor(resources[0]) : false\n                }, event, {\n                    start: eventStartDate,\n                    end: eventEndDate\n                });\n                var element = $(template(data));\n                this.angular('compile', function () {\n                    return {\n                        elements: element,\n                        data: [{ dataItem: data }]\n                    };\n                });\n                return element;\n            },\n            _arrangeRows: function (eventObject, slotRange, eventGroup) {\n                var startIndex = slotRange.start.index;\n                var endIndex = slotRange.end.index;\n                var rect = eventObject.slotRange.innerRect(eventObject.start, eventObject.end, false);\n                var rectRight = rect.right + this.options.eventMinWidth;\n                var events = collidingEvents(slotRange.events(), rect.left, rectRight);\n                slotRange.addEvent({\n                    slotIndex: startIndex,\n                    start: startIndex,\n                    end: endIndex,\n                    rectLeft: rect.left,\n                    rectRight: rectRight,\n                    element: eventObject.element,\n                    uid: eventObject.uid\n                });\n                events.push({\n                    start: startIndex,\n                    end: endIndex,\n                    uid: eventObject.uid\n                });\n                var rows = SchedulerView.createRows(events);\n                if (eventGroup.maxRowCount < rows.length) {\n                    eventGroup.maxRowCount = rows.length;\n                }\n                for (var idx = 0, length = rows.length; idx < length; idx++) {\n                    var rowEvents = rows[idx].events;\n                    for (var j = 0, eventLength = rowEvents.length; j < eventLength; j++) {\n                        eventGroup.events[rowEvents[j].uid].rowIndex = idx;\n                    }\n                }\n            },\n            _groupCount: function () {\n                var resources = this.groupedResources;\n                if (resources.length) {\n                    if (this._groupOrientation() === 'vertical') {\n                        return this._rowCountForLevel(resources.length - 1);\n                    } else {\n                        return this._columnCountForLevel(resources.length - 1);\n                    }\n                }\n                return 1;\n            },\n            _updateEventForSelection: function (event) {\n                var adjustedEvent = this._adjustEvent(event.clone());\n                return adjustedEvent.occurrence;\n            },\n            _eventOptionsForMove: function (event) {\n                if (event.isAllDay) {\n                    return { isAllDay: false };\n                }\n                return {};\n            },\n            _updateEventForResize: function (event) {\n                if (event.isAllDay) {\n                    event.set('isAllDay', false);\n                }\n            },\n            _updateMoveHint: function (event, groupIndex, distance) {\n                var group = this.groups[groupIndex];\n                var clonedEvent = event.clone({\n                    start: event.start,\n                    end: event.end\n                });\n                var eventDuraton = clonedEvent.duration();\n                clonedEvent.start = new Date(clonedEvent.start.getTime() + distance);\n                clonedEvent.end = new Date(+clonedEvent.start + eventDuraton);\n                var adjustedEvent = this._adjustEvent(clonedEvent);\n                var ranges = group.slotRanges(adjustedEvent.occurrence, false);\n                this._removeMoveHint();\n                for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                    var range = ranges[rangeIndex];\n                    var startSlot = range.start;\n                    var hint = this._createEventElement(adjustedEvent.occurrence, adjustedEvent.occurrence, false, false);\n                    hint.addClass('k-event-drag-hint');\n                    var rect = range.innerRect(adjustedEvent.occurrence.start, adjustedEvent.occurrence.end, this.options.snap);\n                    var width = rect.right - rect.left - 2;\n                    if (width < 0) {\n                        width = 0;\n                    }\n                    var left = this._adjustLeftPosition(rect.left);\n                    var css = {\n                        left: left,\n                        top: startSlot.offsetTop,\n                        height: startSlot.offsetHeight - 2,\n                        width: width\n                    };\n                    hint.css(css);\n                    this._moveHint = this._moveHint.add(hint);\n                }\n                var content = this.content;\n                this._moveHint.appendTo(content);\n            },\n            _updateResizeHint: function (event, groupIndex, startTime, endTime) {\n                var group = this.groups[groupIndex];\n                var ranges = group.ranges(startTime, endTime, false, false);\n                this._removeResizeHint();\n                for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                    var range = ranges[rangeIndex];\n                    var start = range.startSlot();\n                    var startRect = range.innerRect(startTime, endTime, false);\n                    startRect.top = start.offsetTop;\n                    var width = startRect.right - startRect.left;\n                    var height = start.offsetHeight;\n                    var left = this._adjustLeftPosition(startRect.left);\n                    var hint = SchedulerView.fn._createResizeHint.call(this, left, startRect.top, width, height);\n                    this._resizeHint = this._resizeHint.add(hint);\n                }\n                var format = 't';\n                var container = this.content;\n                this._resizeHint.appendTo(container);\n                this._resizeHint.find('.k-label-top,.k-label-bottom').text('');\n                this._resizeHint.first().addClass('k-first').find('.k-label-top').text(kendo.toString(kendo.timezone.toLocalDate(startTime), format));\n                this._resizeHint.last().addClass('k-last').find('.k-label-bottom').text(kendo.toString(kendo.timezone.toLocalDate(endTime), format));\n            },\n            selectionByElement: function (cell) {\n                var offset = cell.offset();\n                return this._slotByPosition(offset.left, offset.top);\n            },\n            _updateDirection: function (selection, ranges, multiple, reverse, vertical) {\n                var startSlot = ranges[0].start;\n                var endSlot = ranges[ranges.length - 1].end;\n                if (multiple && !vertical) {\n                    if (startSlot.index === endSlot.index && startSlot.collectionIndex === endSlot.collectionIndex) {\n                        selection.backward = reverse;\n                    }\n                }\n            },\n            _changeGroup: function (selection, previous) {\n                var method = previous ? 'prevGroupSlot' : 'nextGroupSlot';\n                var slot = this[method](selection.start, selection.groupIndex, false);\n                if (slot) {\n                    selection.groupIndex += previous ? -1 : 1;\n                }\n                return slot;\n            },\n            prevGroupSlot: function (date, groupIndex, isDay) {\n                var group = this.groups[groupIndex];\n                var slot = group.ranges(date, date, isDay, false)[0].start;\n                if (groupIndex <= 0) {\n                    return;\n                }\n                if (this._isVerticallyGrouped()) {\n                    return slot;\n                } else {\n                    var collection = group._collection(0, isDay);\n                    return collection.last();\n                }\n            },\n            nextGroupSlot: function (date, groupIndex, isDay) {\n                var group = this.groups[groupIndex];\n                var slot = group.ranges(date, date, isDay, false)[0].start;\n                if (groupIndex >= this.groups.length - 1) {\n                    return;\n                }\n                if (this._isVerticallyGrouped()) {\n                    return slot;\n                } else {\n                    var collection = group._collection(0, isDay);\n                    return collection.first();\n                }\n            },\n            _verticalSlots: function (selection, ranges, multiple, reverse) {\n                var method = reverse ? 'leftSlot' : 'rightSlot';\n                var startSlot = ranges[0].start;\n                var endSlot = ranges[ranges.length - 1].end;\n                var group = this.groups[selection.groupIndex];\n                startSlot = group[method](startSlot);\n                endSlot = group[method](endSlot);\n                if (!multiple && this._isVerticallyGrouped() && (!startSlot || !endSlot)) {\n                    startSlot = endSlot = this._changeGroup(selection, reverse);\n                }\n                return {\n                    startSlot: startSlot,\n                    endSlot: endSlot\n                };\n            },\n            _horizontalSlots: function (selection, ranges, multiple, reverse) {\n                var method = reverse ? 'upSlot' : 'downSlot';\n                var startSlot = ranges[0].start;\n                var endSlot = ranges[ranges.length - 1].end;\n                var group = this.groups[selection.groupIndex];\n                startSlot = group[method](startSlot);\n                endSlot = group[method](endSlot);\n                if (!multiple && this._isHorizontallyGrouped() && (!startSlot || !endSlot)) {\n                    startSlot = endSlot = this._changeGroup(selection, reverse);\n                }\n                return {\n                    startSlot: startSlot,\n                    endSlot: endSlot\n                };\n            },\n            _changeViewPeriod: function (selection, reverse) {\n                var date = reverse ? this.previousDate() : this.nextDate();\n                var start = selection.start;\n                var end = selection.end;\n                selection.start = new Date(date);\n                selection.end = new Date(date);\n                if (this._isHorizontallyGrouped()) {\n                    selection.groupIndex = reverse ? this.groups.length - 1 : 0;\n                }\n                var duration = end - start;\n                if (reverse) {\n                    end = getMilliseconds(this.endTime());\n                    end = end === 0 ? MS_PER_DAY : end;\n                    setTime(selection.start, end - duration);\n                    setTime(selection.end, end);\n                } else {\n                    start = getMilliseconds(this.startTime());\n                    setTime(selection.start, start);\n                    setTime(selection.end, start + duration);\n                }\n                selection.events = [];\n                return true;\n            },\n            move: function (selection, key, shift) {\n                var handled = false;\n                var group = this.groups[selection.groupIndex];\n                var keys = kendo.keys;\n                var ranges = group.ranges(selection.start, selection.end, false, false);\n                var startSlot, endSlot, reverse, slots;\n                if (key === keys.DOWN || key === keys.UP) {\n                    handled = true;\n                    reverse = key === keys.UP;\n                    this._updateDirection(selection, ranges, shift, reverse, true);\n                    slots = this._verticalSlots(selection, ranges, shift, reverse);\n                } else if (key === keys.LEFT || key === keys.RIGHT) {\n                    handled = true;\n                    reverse = key === keys.LEFT;\n                    this._updateDirection(selection, ranges, shift, reverse, false);\n                    slots = this._horizontalSlots(selection, ranges, shift, reverse);\n                    if ((!slots.startSlot || !slots.endSlot) && !shift && this._changeViewPeriod(selection, reverse, false)) {\n                        return handled;\n                    }\n                }\n                if (handled) {\n                    startSlot = slots.startSlot;\n                    endSlot = slots.endSlot;\n                    if (shift) {\n                        var backward = selection.backward;\n                        if (backward && startSlot) {\n                            selection.start = startSlot.startDate();\n                        } else if (!backward && endSlot) {\n                            selection.end = endSlot.endDate();\n                        }\n                    } else if (startSlot && endSlot) {\n                        selection.start = startSlot.startDate();\n                        selection.end = endSlot.endDate();\n                    }\n                    selection.events = [];\n                }\n                return handled;\n            },\n            destroy: function () {\n                var that = this;\n                if (that.element) {\n                    that.element.off(NS);\n                }\n                if (that.footer) {\n                    that.footer.remove();\n                }\n                if (that._currentTimeUpdateTimer) {\n                    clearInterval(that._currentTimeUpdateTimer);\n                }\n                SchedulerView.fn.destroy.call(this);\n                if (this._isMobile() && that.options.editable) {\n                    if (that.options.editable.create !== false) {\n                        that._addUserEvents.destroy();\n                    }\n                    if (that.options.editable.update !== false) {\n                        that._editUserEvents.destroy();\n                    }\n                }\n            }\n        });\n        extend(true, ui, {\n            TimelineView: TimelineView,\n            TimelineWeekView: TimelineView.extend({\n                options: {\n                    name: 'TimelineWeekView',\n                    title: 'Timeline Week',\n                    selectedDateFormat: '{0:D} - {1:D}',\n                    selectedShortDateFormat: '{0:d} - {1:d}',\n                    majorTick: 120\n                },\n                name: 'timelineWeek',\n                calculateDateRange: function () {\n                    var selectedDate = this.options.date, start = kendo.date.dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1), idx, length, dates = [];\n                    for (idx = 0, length = 7; idx < length; idx++) {\n                        dates.push(start);\n                        start = kendo.date.nextDay(start);\n                    }\n                    this._render(dates);\n                }\n            }),\n            TimelineWorkWeekView: TimelineView.extend({\n                options: {\n                    name: 'TimelineWorkWeekView',\n                    title: 'Timeline Work Week',\n                    selectedDateFormat: '{0:D} - {1:D}',\n                    selectedShortDateFormat: '{0:d} - {1:d}',\n                    majorTick: 120\n                },\n                name: 'timelineWorkWeek',\n                nextDate: function () {\n                    return kendo.date.dayOfWeek(kendo.date.nextDay(this.endDate()), this.options.workWeekStart, 1);\n                },\n                previousDate: function () {\n                    return kendo.date.previousDay(this.startDate());\n                },\n                calculateDateRange: function () {\n                    var selectedDate = this.options.date, start = kendo.date.dayOfWeek(selectedDate, this.options.workWeekStart, -1), end = kendo.date.dayOfWeek(start, this.options.workWeekEnd, 1), dates = [];\n                    while (start <= end) {\n                        dates.push(start);\n                        start = kendo.date.nextDay(start);\n                    }\n                    this._render(dates);\n                }\n            }),\n            TimelineMonthView: TimelineView.extend({\n                options: {\n                    name: 'TimelineMonthView',\n                    title: 'Timeline Month',\n                    selectedDateFormat: '{0:D} - {1:D}',\n                    selectedShortDateFormat: '{0:d} - {1:d}',\n                    workDayStart: new Date(1980, 1, 1, 0, 0, 0),\n                    workDayEnd: new Date(1980, 1, 1, 23, 59, 59),\n                    footer: false,\n                    majorTick: 1440,\n                    minorTickCount: 1\n                },\n                name: 'timelineMonth',\n                calculateDateRange: function () {\n                    var selectedDate = this.options.date, start = kendo.date.firstDayOfMonth(selectedDate), end = kendo.date.lastDayOfMonth(selectedDate), idx, length, dates = [];\n                    for (idx = 0, length = end.getDate(); idx < length; idx++) {\n                        dates.push(start);\n                        start = kendo.date.nextDay(start);\n                    }\n                    this._render(dates);\n                }\n            })\n        });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"],"sourceRoot":"/source/"}