{"version":3,"sources":["kendo.scheduler.dayview.js"],"names":["f","define","$","undefined","toInvariantTime","date","staticDate","Date","setTime","getMilliseconds","isInDateRange","value","min","max","isInTimeRange","overlaps","addContinuousEvent","group","range","element","isAllDay","idx","events","_continuousEvents","lastEvent","length","startDate","getDate","start","getTime","splice","uid","attr","kendo","end","push","getWorkDays","options","workDays","dayIndex","workWeekStart","workWeekEnd","window","ui","SchedulerView","extend","proxy","MS_PER_MINUTE","MS_PER_DAY","CURRENT_TIME_MARKER_CLASS","CURRENT_TIME_MARKER_ARROW_CLASS","BORDER_SIZE_COEFF","NS","DAY_VIEW_EVENT_TEMPLATE","template","DAY_VIEW_ALL_DAY_EVENT_TEMPLATE","DATA_HEADER_TEMPLATE","ALLDAY_EVENT_WRAPPER_STRING","EVENT_WRAPPER_STRING","MultiDayView","init","that","this","fn","call","title","name","_workDays","_templates","_editable","calculateDateRange","_groups","_currentTime","_currentTimeMarkerUpdater","_updateCurrentTimeMarker","currentTime","timezone","timezoneOffset","groupsCount","firstTimesCell","lastTimesCell","groupIndex","currentGroup","utcCurrentTime","ranges","collection","slotElement","elementHtml","timesTableMarker","markerTopPosition","timesTableMarkerCss","currentTimeMarker","useLocalTimezone","dataSource","schema","offset","convert","getTimezoneOffset","times","find","remove","content","orientation","groups","toUtcTime","timeSlotRanges","slotByStartDate","prependTo","Math","round","innerRect","top","_isRtl","right","position","left","outerHeight","addClass","outerWidth","css","height","width","scrollWidth","setUpdateTimer","markerOptions","updateInterval","_currentTimeUpdateTimer","setInterval","_updateResizeHint","event","startTime","endTime","rangeIndex","rect","hint","format","container","multiday","isMultiDay","_removeResizeHint","startSlot","offsetWidth","clientHeight","offsetTop","innerWidth","outerRect","snap","bottom","_createResizeHint","offsetLeft","_resizeHint","add","appendTo","text","first","toString","toLocalDate","last","_updateMoveHint","distance","duration","_removeMoveHint","pop","_createEventElement","clone","clientWidth","_moveHint","_slotByPosition","x","y","slot","_isVerticallyGrouped","scrollTop","scrollLeft","ceil","daySlotByPosition","timeSlotByPosition","_groupCount","resources","groupedResources","_groupOrientation","_rowCountForLevel","_columnCountForLevel","_columnOffsetForResource","_columnCountInResourceView","_timeSlotGroups","groupCount","columnCount","rowCount","rowMultiplier","rowIndex","time","cellMultiplier","cells","cellIndex","cell","collectionIndex","currentDate","interval","_timeSlotInterval","tableRows","floor","children","getTimeSlotCollection","_dates","UTC","getFullYear","getMonth","setAttribute","addTimeSlot","_daySlotGroups","cellCount","getDaySlotCollection","addDaySlot","view","columnIndex","_addResourceView","addTimeSlotCollection","addDays","allDaySlot","addDaySlotCollection","selectedDateFormat","selectedShortDateFormat","showWorkHours","today","minorTickCount","majorTick","majorTimeHeaderTemplate","minorTimeHeaderTemplate","groupHeaderTemplate","slotTemplate","allDaySlotTemplate","eventTemplate","allDayEventTemplate","dateHeaderTemplate","editable","workDayStart","workDayEnd","footer","command","messages","allDay","showFullDay","showWorkDay","settings","Template","templateSettings","_eventTmpl","_isMobile","_touchEditable","_mouseEditable","on","e","trigger","closest","preventDefault","create","resourceInfo","parent","hasClass","pageX","pageY","_resourceBySlot","eventInfo","endDate","update","threshold","support","mobileOS","android","_addUserEvents","UserEvents","filter","tap","target","location","_allDayUserEvents","_editUserEvents","eventElement","_layout","dates","column","columns","rows","isToday","className","cellContent","_forTimeRange","middleRow","lastSlotRow","row","_createRowsLayout","_createColumnsLayout","_footer","html","isWorkDay","action","after","msMin","msMax","msMajorInterval","msInterval","startDay","msStart","majorTickDivider","isMajorTickRow","isMiddleRow","isLastSlotRow","_content","allDayVerticalGroupRow","appendRow","rowIdx","isVerticalGroupped","rowLevels","result","columnLevels","tmplDate","classes","groupIdx","_isWorkDay","append","i","day","getDay","_render","allDayHeader","_startDate","_endDate","createLayout","refreshLayout","_allDayHeaderHeight","datesHeader","th","currentTarget","_end","nextDate","nextDay","previousDate","previousDay","destroy","clearInterval","off","inRange","selectionByElement","_timeSlotIndex","eventStartTime","timeSlotInterval","_slotIndex","_dateSlotIndex","slotStart","slotEnd","slots","_positionAllDayEvent","slotRange","rowEvents","j","eventLength","slotWidth","startIndex","index","endIndex","allDayEvents","collidingEvents","currentColumnCount","_headerColumnCount","leftOffset","rightOffset","eventHeight","addEvent","slotIndex","createRows","_arrangeColumns","eventRightOffset","columnEvents","eventElements","slotEvents","columnWidth","createColumns","style","_positionEvent","_startTime","_endTime","isOneDayEvent","head","tail","middle","eventStartDate","eventEndDate","data","isMobile","showDelete","resizable","resize","_time","eventEndTime","eventResources","apply","ns","singleDay","inverseColor","_shouldInverseResourceColor","angular","elements","dataItem","_isInTimeSlot","slotStartTime","slotEndTime","_date","_isInDateSlot","firstSlot","lastSlot","_updateAllDayHeaderHeight","allDaySlots","_height","refresh","_renderEvents","isMultiDayEvent","rangeCount","occurrence","allDayEventContainer","slotRanges","render","eventsByResource","eventsPerDate","Query","sort","field","dir","toArray","_eventsByResource","map","grep","itemIdx","eventsFilteredByResource","resource","_resourceValue","operator","groupEqFilter","slice","level","columnLevel","rowLevel","clearSelection","removeAttr","removeClass","_updateDirection","selection","multiple","reverse","vertical","isDaySlot","endSlot","backward","_changeViewPeriod","endMilliseconds","DayView","WeekView","selectedDate","dayOfWeek","calendarInfo","firstDay","WorkWeekView","weekStart","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.scheduler.dayview.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.scheduler.dayview', ['kendo.scheduler.view'], f);\n}(function () {\n    var __meta__ = {\n        id: 'scheduler.dayview',\n        name: 'Scheduler Day View',\n        category: 'web',\n        description: 'The Scheduler Day View',\n        depends: ['scheduler.view'],\n        hidden: true\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, ui = kendo.ui, setTime = kendo.date.setTime, SchedulerView = ui.SchedulerView, extend = $.extend, proxy = $.proxy, getDate = kendo.date.getDate, MS_PER_MINUTE = kendo.date.MS_PER_MINUTE, MS_PER_DAY = kendo.date.MS_PER_DAY, CURRENT_TIME_MARKER_CLASS = 'k-current-time', CURRENT_TIME_MARKER_ARROW_CLASS = 'k-current-time-arrow', BORDER_SIZE_COEFF = 0.8666, getMilliseconds = kendo.date.getMilliseconds, NS = '.kendoMultiDayView';\n        var DAY_VIEW_EVENT_TEMPLATE = kendo.template('<div title=\"(#=kendo.format(\"{0:t} - {1:t}\", start, end)#): #=title.replace(/\"/g,\"&\\\\#34;\")#\">' + '<div class=\"k-event-template k-event-time\">#:kendo.format(\"{0:t} - {1:t}\", start, end)#</div>' + '<div class=\"k-event-template\">${title}</div>' + '</div>'), DAY_VIEW_ALL_DAY_EVENT_TEMPLATE = kendo.template('<div title=\"(#=kendo.format(\"{0:t}\", start)#): #=title.replace(/\"/g,\"&\\\\#34;\")#\">' + '<div class=\"k-event-template\">${title}</div>' + '</div>'), DATA_HEADER_TEMPLATE = kendo.template('<span class=\\'k-link k-nav-day\\'>#=kendo.toString(date, \\'ddd M/dd\\')#</span>'), ALLDAY_EVENT_WRAPPER_STRING = '<div role=\"gridcell\" aria-selected=\"false\" ' + 'data-#=ns#uid=\"#=uid#\"' + '#if (resources[0]) { #' + 'style=\"background-color:#=resources[0].color#; border-color: #=resources[0].color#\"' + 'class=\"k-event#=inverseColor ? \" k-event-inverse\" : \"\"#\" ' + '#} else {#' + 'class=\"k-event\"' + '#}#' + '>' + '<span class=\"k-event-actions\">' + '# if(data.tail || data.middle) {#' + '<span class=\"k-icon k-i-arrow-w\"></span>' + '#}#' + '# if(data.isException()) {#' + '<span class=\"k-icon k-i-exception\"></span>' + '# } else if(data.isRecurring()) {#' + '<span class=\"k-icon k-i-refresh\"></span>' + '# } #' + '</span>' + '{0}' + '<span class=\"k-event-actions\">' + '#if (showDelete) {#' + '<a href=\"\\\\#\" class=\"k-link k-event-delete\"><span class=\"k-icon k-si-close\"></span></a>' + '#}#' + '# if(data.head || data.middle) {#' + '<span class=\"k-icon k-i-arrow-e\"></span>' + '#}#' + '</span>' + '#if(resizable && !singleDay && !data.tail && !data.middle){#' + '<span class=\"k-resize-handle k-resize-w\"></span>' + '#}#' + '#if(resizable && !singleDay && !data.head && !data.middle){#' + '<span class=\"k-resize-handle k-resize-e\"></span>' + '#}#' + '</div>', EVENT_WRAPPER_STRING = '<div role=\"gridcell\" aria-selected=\"false\" ' + 'data-#=ns#uid=\"#=uid#\" ' + '#if (resources[0]) { #' + 'style=\"background-color:#=resources[0].color #; border-color: #=resources[0].color#\"' + 'class=\"k-event#=inverseColor ? \" k-event-inverse\" : \"\"#\"' + '#} else {#' + 'class=\"k-event\"' + '#}#' + '>' + '<span class=\"k-event-actions\">' + '# if(data.isException()) {#' + '<span class=\"k-icon k-i-exception\"></span>' + '# } else if(data.isRecurring()) {#' + '<span class=\"k-icon k-i-refresh\"></span>' + '# } #' + '</span>' + '{0}' + '<span class=\"k-event-actions\">' + '#if (showDelete) {#' + '<a href=\"\\\\#\" class=\"k-link k-event-delete\"><span class=\"k-icon k-si-close\"></span></a>' + '#}#' + '</span>' + '<span class=\"k-event-top-actions\">' + '# if(data.tail || data.middle) {#' + '<span class=\"k-icon k-i-arrow-n\"></span>' + '# } #' + '</span>' + '<span class=\"k-event-bottom-actions\">' + '# if(data.head || data.middle) {#' + '<span class=\"k-icon k-i-arrow-s\"></span>' + '# } #' + '</span>' + '# if(resizable && !data.tail && !data.middle) {#' + '<span class=\"k-resize-handle k-resize-n\"></span>' + '# } #' + '# if(resizable && !data.head && !data.middle) {#' + '<span class=\"k-resize-handle k-resize-s\"></span>' + '# } #' + '</div>';\n        function toInvariantTime(date) {\n            var staticDate = new Date(1980, 1, 1, 0, 0, 0);\n            setTime(staticDate, getMilliseconds(date));\n            return staticDate;\n        }\n        function isInDateRange(value, min, max) {\n            return value >= min && value <= max;\n        }\n        function isInTimeRange(value, min, max, overlaps) {\n            overlaps = overlaps ? value <= max : value < max;\n            return value > min && overlaps;\n        }\n        function addContinuousEvent(group, range, element, isAllDay) {\n            var events = group._continuousEvents;\n            var lastEvent = events[events.length - 1];\n            var startDate = getDate(range.start.startDate()).getTime();\n            if (isAllDay && lastEvent && getDate(lastEvent.start.startDate()).getTime() == startDate) {\n                var idx = events.length - 1;\n                for (; idx > -1; idx--) {\n                    if (events[idx].isAllDay || getDate(events[idx].start.startDate()).getTime() < startDate) {\n                        break;\n                    }\n                }\n                events.splice(idx + 1, 0, {\n                    element: element,\n                    isAllDay: true,\n                    uid: element.attr(kendo.attr('uid')),\n                    start: range.start,\n                    end: range.end\n                });\n            } else {\n                events.push({\n                    element: element,\n                    isAllDay: isAllDay,\n                    uid: element.attr(kendo.attr('uid')),\n                    start: range.start,\n                    end: range.end\n                });\n            }\n        }\n        function getWorkDays(options) {\n            var workDays = [];\n            var dayIndex = options.workWeekStart;\n            workDays.push(dayIndex);\n            while (options.workWeekEnd != dayIndex) {\n                if (dayIndex > 6) {\n                    dayIndex -= 7;\n                } else {\n                    dayIndex++;\n                }\n                workDays.push(dayIndex);\n            }\n            return workDays;\n        }\n        var MultiDayView = SchedulerView.extend({\n            init: function (element, options) {\n                var that = this;\n                SchedulerView.fn.init.call(that, element, options);\n                that.title = that.options.title || that.options.name;\n                that._workDays = getWorkDays(that.options);\n                that._templates();\n                that._editable();\n                that.calculateDateRange();\n                that._groups();\n                that._currentTime(true);\n            },\n            _currentTimeMarkerUpdater: function () {\n                this._updateCurrentTimeMarker(new Date());\n            },\n            _updateCurrentTimeMarker: function (currentTime) {\n                var options = this.options;\n                if (options.currentTimeMarker.useLocalTimezone === false) {\n                    var timezone = options.dataSource.options.schema.timezone;\n                    if (options.dataSource && timezone) {\n                        var timezoneOffset = kendo.timezone.offset(currentTime, timezone);\n                        currentTime = kendo.timezone.convert(currentTime, currentTime.getTimezoneOffset(), timezoneOffset);\n                    }\n                }\n                this.times.find('.' + CURRENT_TIME_MARKER_CLASS).remove();\n                this.content.find('.' + CURRENT_TIME_MARKER_CLASS).remove();\n                var groupsCount = !options.group || options.group.orientation == 'horizontal' ? 1 : this.groups.length;\n                var firstTimesCell = this.times.find('tr:first th:first');\n                var lastTimesCell = this.times.find('tr:first th:last');\n                for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                    var currentGroup = this.groups[groupIndex];\n                    if (!currentGroup) {\n                        return;\n                    }\n                    var utcCurrentTime = kendo.date.toUtcTime(currentTime);\n                    var ranges = currentGroup.timeSlotRanges(utcCurrentTime, utcCurrentTime + 1);\n                    if (ranges.length === 0) {\n                        return;\n                    }\n                    var collection = ranges[0].collection;\n                    var slotElement = collection.slotByStartDate(currentTime);\n                    if (slotElement) {\n                        var elementHtml = '<div class=\\'' + CURRENT_TIME_MARKER_CLASS + '\\'></div>';\n                        var timesTableMarker = $(elementHtml).prependTo(this.times);\n                        var markerTopPosition = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).top);\n                        var timesTableMarkerCss = {};\n                        if (this._isRtl) {\n                            timesTableMarkerCss.right = firstTimesCell.position().left + firstTimesCell.outerHeight() - lastTimesCell.outerHeight();\n                            timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + '-left');\n                        } else {\n                            timesTableMarkerCss.left = lastTimesCell.position().left;\n                            timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + '-right');\n                        }\n                        timesTableMarkerCss.top = markerTopPosition - timesTableMarker.outerWidth() * BORDER_SIZE_COEFF / 2;\n                        timesTableMarker.css(timesTableMarkerCss);\n                        $(elementHtml).prependTo(this.content).css({\n                            top: markerTopPosition,\n                            height: '1px',\n                            right: '1px',\n                            width: this.content[0].scrollWidth,\n                            left: 0\n                        });\n                    }\n                }\n            },\n            _currentTime: function (setUpdateTimer) {\n                var that = this;\n                var markerOptions = that.options.currentTimeMarker;\n                if (markerOptions !== false && markerOptions.updateInterval !== undefined) {\n                    that._currentTimeMarkerUpdater();\n                    if (setUpdateTimer) {\n                        that._currentTimeUpdateTimer = setInterval(proxy(this._currentTimeMarkerUpdater, that), markerOptions.updateInterval);\n                    }\n                }\n            },\n            _updateResizeHint: function (event, groupIndex, startTime, endTime) {\n                var multiday = event.isMultiDay();\n                var group = this.groups[groupIndex];\n                var ranges = group.ranges(startTime, endTime, multiday, event.isAllDay);\n                this._removeResizeHint();\n                for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                    var range = ranges[rangeIndex];\n                    var start = range.startSlot();\n                    var width = start.offsetWidth;\n                    var height = start.clientHeight;\n                    var top = start.offsetTop;\n                    if (multiday) {\n                        width = range.innerWidth();\n                    } else {\n                        var rect = range.outerRect(startTime, endTime, this.options.snap);\n                        top = rect.top;\n                        height = rect.bottom - rect.top;\n                    }\n                    var hint = SchedulerView.fn._createResizeHint.call(this, start.offsetLeft, top, width, height);\n                    this._resizeHint = this._resizeHint.add(hint);\n                }\n                var format = 't';\n                var container = this.content;\n                if (multiday) {\n                    format = 'M/dd';\n                    container = this.element.find('.k-scheduler-header-wrap:has(.k-scheduler-header-all-day) > div');\n                    if (!container.length) {\n                        container = this.content;\n                    }\n                }\n                this._resizeHint.appendTo(container);\n                this._resizeHint.find('.k-label-top,.k-label-bottom').text('');\n                this._resizeHint.first().addClass('k-first').find('.k-label-top').text(kendo.toString(kendo.timezone.toLocalDate(startTime), format));\n                this._resizeHint.last().addClass('k-last').find('.k-label-bottom').text(kendo.toString(kendo.timezone.toLocalDate(endTime), format));\n            },\n            _updateMoveHint: function (event, groupIndex, distance) {\n                var multiday = event.isMultiDay();\n                var group = this.groups[groupIndex];\n                var start = kendo.date.toUtcTime(event.start) + distance;\n                var end = start + event.duration();\n                var ranges = group.ranges(start, end, multiday, event.isAllDay);\n                start = kendo.timezone.toLocalDate(start);\n                end = kendo.timezone.toLocalDate(end);\n                this._removeMoveHint();\n                if (!multiday && (getMilliseconds(end) === 0 || getMilliseconds(end) < getMilliseconds(this.startTime()))) {\n                    if (ranges.length > 1) {\n                        ranges.pop();\n                    }\n                }\n                for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                    var range = ranges[rangeIndex];\n                    var startSlot = range.start;\n                    var hint = this._createEventElement(event.clone({\n                        start: start,\n                        end: end\n                    }), !multiday);\n                    hint.addClass('k-event-drag-hint');\n                    var css = {\n                        left: startSlot.offsetLeft + 2,\n                        top: startSlot.offsetTop\n                    };\n                    if (this._isRtl) {\n                        css.left = startSlot.clientWidth * 0.1 + startSlot.offsetLeft + 2;\n                    }\n                    if (multiday) {\n                        css.width = range.innerWidth() - 4;\n                    } else {\n                        var rect = range.outerRect(start, end, this.options.snap);\n                        css.top = rect.top;\n                        css.height = rect.bottom - rect.top;\n                        css.width = startSlot.clientWidth * 0.9 - 4;\n                    }\n                    hint.css(css);\n                    this._moveHint = this._moveHint.add(hint);\n                }\n                var content = this.content;\n                if (multiday) {\n                    content = this.element.find('.k-scheduler-header-wrap:has(.k-scheduler-header-all-day) > div');\n                    if (!content.length) {\n                        content = this.content;\n                    }\n                }\n                this._moveHint.appendTo(content);\n            },\n            _slotByPosition: function (x, y) {\n                var slot;\n                var offset;\n                if (this._isVerticallyGrouped()) {\n                    offset = this.content.offset();\n                    y += this.content[0].scrollTop;\n                    x += this.content[0].scrollLeft;\n                } else {\n                    offset = this.element.find('.k-scheduler-header-wrap:has(.k-scheduler-header-all-day)').find('>div').offset();\n                }\n                if (offset) {\n                    x -= offset.left;\n                    y -= offset.top;\n                }\n                x = Math.ceil(x);\n                y = Math.ceil(y);\n                var group;\n                var groupIndex;\n                for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                    group = this.groups[groupIndex];\n                    slot = group.daySlotByPosition(x, y);\n                    if (slot) {\n                        return slot;\n                    }\n                }\n                if (offset) {\n                    x += offset.left;\n                    y += offset.top;\n                }\n                offset = this.content.offset();\n                x -= offset.left;\n                y -= offset.top;\n                if (!this._isVerticallyGrouped()) {\n                    y += this.content[0].scrollTop;\n                    x += this.content[0].scrollLeft;\n                }\n                x = Math.ceil(x);\n                y = Math.ceil(y);\n                for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                    group = this.groups[groupIndex];\n                    slot = group.timeSlotByPosition(x, y);\n                    if (slot) {\n                        return slot;\n                    }\n                }\n                return null;\n            },\n            _groupCount: function () {\n                var resources = this.groupedResources;\n                if (resources.length) {\n                    if (this._groupOrientation() === 'vertical') {\n                        return this._rowCountForLevel(resources.length - 1);\n                    } else {\n                        return this._columnCountForLevel(resources.length) / this._columnOffsetForResource(resources.length);\n                    }\n                }\n                return 1;\n            },\n            _columnCountInResourceView: function () {\n                var resources = this.groupedResources;\n                if (!resources.length || this._isVerticallyGrouped()) {\n                    return this._columnCountForLevel(0);\n                }\n                return this._columnOffsetForResource(resources.length);\n            },\n            _timeSlotGroups: function (groupCount, columnCount) {\n                var interval = this._timeSlotInterval();\n                var tableRows = this.content.find('tr:not(.k-scheduler-header-all-day)');\n                tableRows.attr('role', 'row');\n                var rowCount = tableRows.length;\n                if (this._isVerticallyGrouped()) {\n                    rowCount = Math.floor(rowCount / groupCount);\n                }\n                for (var groupIndex = 0; groupIndex < groupCount; groupIndex++) {\n                    var rowMultiplier = 0;\n                    if (this._isVerticallyGrouped()) {\n                        rowMultiplier = groupIndex;\n                    }\n                    var rowIndex = rowMultiplier * rowCount;\n                    var time;\n                    var cellMultiplier = 0;\n                    if (!this._isVerticallyGrouped()) {\n                        cellMultiplier = groupIndex;\n                    }\n                    while (rowIndex < (rowMultiplier + 1) * rowCount) {\n                        var cells = tableRows[rowIndex].children;\n                        var group = this.groups[groupIndex];\n                        if (rowIndex % rowCount === 0) {\n                            time = getMilliseconds(new Date(+this.startTime()));\n                        }\n                        for (var cellIndex = cellMultiplier * columnCount; cellIndex < (cellMultiplier + 1) * columnCount; cellIndex++) {\n                            var cell = cells[cellIndex];\n                            var collectionIndex = cellIndex % columnCount;\n                            var collection = group.getTimeSlotCollection(collectionIndex);\n                            var currentDate = this._dates[collectionIndex];\n                            var currentTime = Date.UTC(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\n                            var start = currentTime + time;\n                            var end = start + interval;\n                            cell.setAttribute('role', 'gridcell');\n                            cell.setAttribute('aria-selected', false);\n                            collection.addTimeSlot(cell, start, end);\n                        }\n                        time += interval;\n                        rowIndex++;\n                    }\n                }\n            },\n            _daySlotGroups: function (groupCount, columnCount) {\n                var tableRows;\n                if (this._isVerticallyGrouped()) {\n                    tableRows = this.element.find('.k-scheduler-header-all-day');\n                } else {\n                    tableRows = this.element.find('.k-scheduler-header-all-day tr');\n                }\n                tableRows.attr('role', 'row');\n                for (var groupIndex = 0; groupIndex < groupCount; groupIndex++) {\n                    var rowMultiplier = 0;\n                    if (this._isVerticallyGrouped()) {\n                        rowMultiplier = groupIndex;\n                    }\n                    var group = this.groups[groupIndex];\n                    var collection = group.getDaySlotCollection(0);\n                    var cells = tableRows[rowMultiplier].children;\n                    var cellMultiplier = 0;\n                    if (!this._isVerticallyGrouped()) {\n                        cellMultiplier = groupIndex;\n                    }\n                    var cellCount = 0;\n                    for (var cellIndex = cellMultiplier * columnCount; cellIndex < (cellMultiplier + 1) * columnCount; cellIndex++) {\n                        var cell = cells[cellIndex];\n                        if (cellIndex % columnCount === 0) {\n                            cellCount = 0;\n                        }\n                        var start = this._dates[cellCount];\n                        var currentTime = Date.UTC(start.getFullYear(), start.getMonth(), start.getDate());\n                        cellCount++;\n                        cell.setAttribute('role', 'gridcell');\n                        cell.setAttribute('aria-selected', false);\n                        collection.addDaySlot(cell, currentTime, currentTime + kendo.date.MS_PER_DAY);\n                    }\n                }\n            },\n            _groups: function () {\n                var groupCount = this._groupCount();\n                var columnCount = this._columnCountInResourceView();\n                this.groups = [];\n                for (var idx = 0; idx < groupCount; idx++) {\n                    var view = this._addResourceView(idx);\n                    for (var columnIndex = 0; columnIndex < columnCount; columnIndex++) {\n                        view.addTimeSlotCollection(this._dates[columnIndex], kendo.date.addDays(this._dates[columnIndex], 1));\n                    }\n                    if (this.options.allDaySlot) {\n                        view.addDaySlotCollection(this._dates[0], kendo.date.addDays(this._dates[this._dates.length - 1], 1));\n                    }\n                }\n                this._timeSlotGroups(groupCount, columnCount);\n                if (this.options.allDaySlot) {\n                    this._daySlotGroups(groupCount, columnCount);\n                }\n            },\n            options: {\n                name: 'MultiDayView',\n                selectedDateFormat: '{0:D}',\n                selectedShortDateFormat: '{0:d}',\n                allDaySlot: true,\n                showWorkHours: false,\n                title: '',\n                startTime: kendo.date.today(),\n                endTime: kendo.date.today(),\n                minorTickCount: 2,\n                majorTick: 60,\n                majorTimeHeaderTemplate: '#=kendo.toString(date, \\'t\\')#',\n                minorTimeHeaderTemplate: '&nbsp;',\n                groupHeaderTemplate: '#=text#',\n                slotTemplate: '&nbsp;',\n                allDaySlotTemplate: '&nbsp;',\n                eventTemplate: DAY_VIEW_EVENT_TEMPLATE,\n                allDayEventTemplate: DAY_VIEW_ALL_DAY_EVENT_TEMPLATE,\n                dateHeaderTemplate: DATA_HEADER_TEMPLATE,\n                editable: true,\n                workDayStart: new Date(1980, 1, 1, 8, 0, 0),\n                workDayEnd: new Date(1980, 1, 1, 17, 0, 0),\n                workWeekStart: 1,\n                workWeekEnd: 5,\n                footer: { command: 'workDay' },\n                messages: {\n                    allDay: 'all day',\n                    showFullDay: 'Show full day',\n                    showWorkDay: 'Show business hours'\n                },\n                currentTimeMarker: {\n                    updateInterval: 10000,\n                    useLocalTimezone: true\n                }\n            },\n            events: [\n                'remove',\n                'add',\n                'edit'\n            ],\n            _templates: function () {\n                var options = this.options, settings = extend({}, kendo.Template, options.templateSettings);\n                this.eventTemplate = this._eventTmpl(options.eventTemplate, EVENT_WRAPPER_STRING);\n                this.allDayEventTemplate = this._eventTmpl(options.allDayEventTemplate, ALLDAY_EVENT_WRAPPER_STRING);\n                this.majorTimeHeaderTemplate = kendo.template(options.majorTimeHeaderTemplate, settings);\n                this.minorTimeHeaderTemplate = kendo.template(options.minorTimeHeaderTemplate, settings);\n                this.dateHeaderTemplate = kendo.template(options.dateHeaderTemplate, settings);\n                this.slotTemplate = kendo.template(options.slotTemplate, settings);\n                this.allDaySlotTemplate = kendo.template(options.allDaySlotTemplate, settings);\n                this.groupHeaderTemplate = kendo.template(options.groupHeaderTemplate, settings);\n            },\n            _editable: function () {\n                if (this.options.editable) {\n                    if (this._isMobile()) {\n                        this._touchEditable();\n                    } else {\n                        this._mouseEditable();\n                    }\n                }\n            },\n            _mouseEditable: function () {\n                var that = this;\n                that.element.on('click' + NS, '.k-event a:has(.k-si-close)', function (e) {\n                    that.trigger('remove', { uid: $(this).closest('.k-event').attr(kendo.attr('uid')) });\n                    e.preventDefault();\n                });\n                if (that.options.editable.create !== false) {\n                    that.element.on('dblclick' + NS, '.k-scheduler-content td', function (e) {\n                        if (!$(this).parent().hasClass('k-scheduler-header-all-day')) {\n                            var slot = that._slotByPosition(e.pageX, e.pageY);\n                            if (slot) {\n                                var resourceInfo = that._resourceBySlot(slot);\n                                that.trigger('add', {\n                                    eventInfo: extend({\n                                        start: slot.startDate(),\n                                        end: slot.endDate()\n                                    }, resourceInfo)\n                                });\n                            }\n                            e.preventDefault();\n                        }\n                    }).on('dblclick' + NS, '.k-scheduler-header-all-day td', function (e) {\n                        var slot = that._slotByPosition(e.pageX, e.pageY);\n                        if (slot) {\n                            var resourceInfo = that._resourceBySlot(slot);\n                            that.trigger('add', {\n                                eventInfo: extend({}, {\n                                    isAllDay: true,\n                                    start: kendo.date.getDate(slot.startDate()),\n                                    end: kendo.date.getDate(slot.startDate())\n                                }, resourceInfo)\n                            });\n                        }\n                        e.preventDefault();\n                    });\n                }\n                if (that.options.editable.update !== false) {\n                    that.element.on('dblclick' + NS, '.k-event', function (e) {\n                        that.trigger('edit', { uid: $(this).closest('.k-event').attr(kendo.attr('uid')) });\n                        e.preventDefault();\n                    });\n                }\n            },\n            _touchEditable: function () {\n                var that = this;\n                var threshold = 0;\n                if (kendo.support.mobileOS.android) {\n                    threshold = 5;\n                }\n                if (that.options.editable.create !== false) {\n                    that._addUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        filter: '.k-scheduler-content td',\n                        tap: function (e) {\n                            if (!$(e.target).parent().hasClass('k-scheduler-header-all-day')) {\n                                var x = e.x.location !== undefined ? e.x.location : e.x;\n                                var y = e.y.location !== undefined ? e.y.location : e.y;\n                                var slot = that._slotByPosition(x, y);\n                                if (slot) {\n                                    var resourceInfo = that._resourceBySlot(slot);\n                                    that.trigger('add', {\n                                        eventInfo: extend({\n                                            start: slot.startDate(),\n                                            end: slot.endDate()\n                                        }, resourceInfo)\n                                    });\n                                }\n                                e.preventDefault();\n                            }\n                        }\n                    });\n                    that._allDayUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        filter: '.k-scheduler-header-all-day td',\n                        tap: function (e) {\n                            var x = e.x.location !== undefined ? e.x.location : e.x;\n                            var y = e.y.location !== undefined ? e.y.location : e.y;\n                            var slot = that._slotByPosition(x, y);\n                            if (slot) {\n                                var resourceInfo = that._resourceBySlot(slot);\n                                that.trigger('add', {\n                                    eventInfo: extend({}, {\n                                        isAllDay: true,\n                                        start: kendo.date.getDate(slot.startDate()),\n                                        end: kendo.date.getDate(slot.startDate())\n                                    }, resourceInfo)\n                                });\n                            }\n                            e.preventDefault();\n                        }\n                    });\n                }\n                if (that.options.editable.update !== false) {\n                    that._editUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        filter: '.k-event',\n                        tap: function (e) {\n                            var eventElement = $(e.target).closest('.k-event');\n                            if (!eventElement.hasClass('k-event-active')) {\n                                that.trigger('edit', { uid: eventElement.attr(kendo.attr('uid')) });\n                            }\n                            e.preventDefault();\n                        }\n                    });\n                }\n            },\n            _layout: function (dates) {\n                var columns = [];\n                var rows = [];\n                var options = this.options;\n                var that = this;\n                for (var idx = 0; idx < dates.length; idx++) {\n                    var column = {};\n                    column.text = that.dateHeaderTemplate({ date: dates[idx] });\n                    if (kendo.date.isToday(dates[idx])) {\n                        column.className = 'k-today';\n                    }\n                    columns.push(column);\n                }\n                var resources = this.groupedResources;\n                if (options.allDaySlot) {\n                    rows.push({\n                        text: options.messages.allDay,\n                        allDay: true,\n                        cellContent: function (idx) {\n                            var groupIndex = idx;\n                            idx = resources.length && that._groupOrientation() !== 'vertical' ? idx % dates.length : idx;\n                            return that.allDaySlotTemplate({\n                                date: dates[idx],\n                                resources: function () {\n                                    return that._resourceBySlot({ groupIndex: groupIndex });\n                                }\n                            });\n                        }\n                    });\n                }\n                this._forTimeRange(this.startTime(), this.endTime(), function (date, majorTick, middleRow, lastSlotRow) {\n                    var template = majorTick ? that.majorTimeHeaderTemplate : that.minorTimeHeaderTemplate;\n                    var row = {\n                        text: template({ date: date }),\n                        className: lastSlotRow ? 'k-slot-cell' : ''\n                    };\n                    rows.push(row);\n                });\n                if (resources.length) {\n                    if (this._groupOrientation() === 'vertical') {\n                        rows = this._createRowsLayout(resources, rows, this.groupHeaderTemplate);\n                    } else {\n                        columns = this._createColumnsLayout(resources, columns, this.groupHeaderTemplate);\n                    }\n                }\n                return {\n                    columns: columns,\n                    rows: rows\n                };\n            },\n            _footer: function () {\n                var options = this.options;\n                if (options.footer !== false) {\n                    var html = '<div class=\"k-header k-scheduler-footer\">';\n                    var command = options.footer.command;\n                    if (command && command === 'workDay') {\n                        html += '<ul class=\"k-reset k-header\">';\n                        html += '<li class=\"k-state-default k-scheduler-fullday\"><a href=\"#\" class=\"k-link\"><span class=\"k-icon k-i-clock\"></span>';\n                        html += (options.showWorkHours ? options.messages.showFullDay : options.messages.showWorkDay) + '</a></li>';\n                        html += '</ul>';\n                    } else {\n                        html += '&nbsp;';\n                    }\n                    html += '</div>';\n                    this.footer = $(html).appendTo(this.element);\n                    var that = this;\n                    this.footer.on('click' + NS, '.k-scheduler-fullday', function (e) {\n                        e.preventDefault();\n                        that.trigger('navigate', {\n                            view: that.name || options.name,\n                            date: that.startDate(),\n                            isWorkDay: !options.showWorkHours\n                        });\n                    });\n                }\n            },\n            _forTimeRange: function (min, max, action, after) {\n                min = toInvariantTime(min);\n                max = toInvariantTime(max);\n                var that = this, msMin = getMilliseconds(min), msMax = getMilliseconds(max), minorTickCount = that.options.minorTickCount, msMajorInterval = that.options.majorTick * MS_PER_MINUTE, msInterval = msMajorInterval / minorTickCount || 1, start = new Date(+min), startDay = start.getDate(), msStart, idx = 0, length, html = '';\n                length = MS_PER_DAY / msInterval;\n                if (msMin != msMax) {\n                    if (msMin > msMax) {\n                        msMax += MS_PER_DAY;\n                    }\n                    length = (msMax - msMin) / msInterval;\n                }\n                length = Math.round(length);\n                for (; idx < length; idx++) {\n                    var majorTickDivider = idx % (msMajorInterval / msInterval), isMajorTickRow = majorTickDivider === 0, isMiddleRow = majorTickDivider < minorTickCount - 1, isLastSlotRow = majorTickDivider === minorTickCount - 1;\n                    html += action(start, isMajorTickRow, isMiddleRow, isLastSlotRow);\n                    setTime(start, msInterval, false);\n                }\n                if (msMax) {\n                    msStart = getMilliseconds(start);\n                    if (startDay < start.getDate()) {\n                        msStart += MS_PER_DAY;\n                    }\n                    if (msStart > msMax) {\n                        start = new Date(+max);\n                    }\n                }\n                if (after) {\n                    html += after(start);\n                }\n                return html;\n            },\n            _content: function (dates) {\n                var that = this;\n                var options = that.options;\n                var start = that.startTime();\n                var end = this.endTime();\n                var groupsCount = 1;\n                var rowCount = 1;\n                var columnCount = dates.length;\n                var html = '';\n                var resources = this.groupedResources;\n                var slotTemplate = this.slotTemplate;\n                var allDaySlotTemplate = this.allDaySlotTemplate;\n                var isVerticalGroupped = false;\n                var allDayVerticalGroupRow;\n                if (resources.length) {\n                    isVerticalGroupped = that._groupOrientation() === 'vertical';\n                    if (isVerticalGroupped) {\n                        rowCount = this._rowCountForLevel(this.rowLevels.length - 2);\n                        if (options.allDaySlot) {\n                            allDayVerticalGroupRow = function (groupIndex) {\n                                var result = '<tr class=\"k-scheduler-header-all-day\">';\n                                var resources = function () {\n                                    return that._resourceBySlot({ groupIndex: groupIndex });\n                                };\n                                for (var idx = 0, length = dates.length; idx < length; idx++) {\n                                    result += '<td>' + allDaySlotTemplate({\n                                        date: dates[idx],\n                                        resources: resources\n                                    }) + '</td>';\n                                }\n                                return result + '</tr>';\n                            };\n                        }\n                    } else {\n                        groupsCount = this._columnCountForLevel(this.columnLevels.length - 2);\n                    }\n                }\n                html += '<tbody>';\n                var appendRow = function (date, majorTick) {\n                    var content = '';\n                    var idx;\n                    var length;\n                    var classes = '';\n                    var tmplDate;\n                    var groupIdx = 0;\n                    content = '<tr' + (majorTick ? ' class=\"k-middle-row\"' : '') + '>';\n                    var resources = function (groupIndex) {\n                        return function () {\n                            return that._resourceBySlot({ groupIndex: groupIndex });\n                        };\n                    };\n                    for (; groupIdx < groupsCount; groupIdx++) {\n                        for (idx = 0, length = columnCount; idx < length; idx++) {\n                            classes = '';\n                            if (kendo.date.isToday(dates[idx])) {\n                                classes += 'k-today';\n                            }\n                            if (kendo.date.getMilliseconds(date) < kendo.date.getMilliseconds(that.options.workDayStart) || kendo.date.getMilliseconds(date) >= kendo.date.getMilliseconds(that.options.workDayEnd) || !that._isWorkDay(dates[idx])) {\n                                classes += ' k-nonwork-hour';\n                            }\n                            content += '<td' + (classes !== '' ? ' class=\"' + classes + '\"' : '') + '>';\n                            tmplDate = kendo.date.getDate(dates[idx]);\n                            kendo.date.setTime(tmplDate, kendo.date.getMilliseconds(date));\n                            content += slotTemplate({\n                                date: tmplDate,\n                                resources: resources(isVerticalGroupped ? rowIdx : groupIdx)\n                            });\n                            content += '</td>';\n                        }\n                    }\n                    content += '</tr>';\n                    return content;\n                };\n                for (var rowIdx = 0; rowIdx < rowCount; rowIdx++) {\n                    html += allDayVerticalGroupRow ? allDayVerticalGroupRow(rowIdx) : '';\n                    html += this._forTimeRange(start, end, appendRow);\n                }\n                html += '</tbody>';\n                this.content.find('table').append(html);\n            },\n            _isWorkDay: function (date) {\n                var day = date.getDay();\n                var workDays = this._workDays;\n                for (var i = 0; i < workDays.length; i++) {\n                    if (workDays[i] === day) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            _render: function (dates) {\n                var that = this;\n                dates = dates || [];\n                this._dates = dates;\n                this._startDate = dates[0];\n                this._endDate = dates[dates.length - 1 || 0];\n                this.createLayout(this._layout(dates));\n                this._content(dates);\n                this._footer();\n                this.refreshLayout();\n                var allDayHeader = this.element.find('.k-scheduler-header-all-day td');\n                if (allDayHeader.length) {\n                    this._allDayHeaderHeight = allDayHeader.first()[0].clientHeight;\n                }\n                that.datesHeader.on('click' + NS, '.k-nav-day', function (e) {\n                    var th = $(e.currentTarget).closest('th');\n                    var offset = th.offset();\n                    var slot = that._slotByPosition(offset.left, offset.top + th.outerHeight());\n                    that.trigger('navigate', {\n                        view: 'day',\n                        date: slot.startDate()\n                    });\n                });\n            },\n            startTime: function () {\n                var options = this.options;\n                return options.showWorkHours ? options.workDayStart : options.startTime;\n            },\n            endTime: function () {\n                var options = this.options;\n                return options.showWorkHours ? options.workDayEnd : options.endTime;\n            },\n            startDate: function () {\n                return this._startDate;\n            },\n            endDate: function () {\n                return this._endDate;\n            },\n            _end: function (isAllDay) {\n                var time = getMilliseconds(this.endTime()) || MS_PER_DAY;\n                if (isAllDay) {\n                    time = 0;\n                }\n                return new Date(this._endDate.getTime() + time);\n            },\n            nextDate: function () {\n                return kendo.date.nextDay(this.endDate());\n            },\n            previousDate: function () {\n                return kendo.date.previousDay(this.startDate());\n            },\n            calculateDateRange: function () {\n                this._render([this.options.date]);\n            },\n            destroy: function () {\n                var that = this;\n                if (that._currentTimeUpdateTimer) {\n                    clearInterval(that._currentTimeUpdateTimer);\n                }\n                if (that.datesHeader) {\n                    that.datesHeader.off(NS);\n                }\n                if (that.element) {\n                    that.element.off(NS);\n                }\n                if (that.footer) {\n                    that.footer.remove();\n                }\n                SchedulerView.fn.destroy.call(this);\n                if (this._isMobile() && that.options.editable) {\n                    if (that.options.editable.create !== false) {\n                        that._addUserEvents.destroy();\n                        that._allDayUserEvents.destroy();\n                    }\n                    if (that.options.editable.update !== false) {\n                        that._editUserEvents.destroy();\n                    }\n                }\n            },\n            inRange: function (options) {\n                var inRange = SchedulerView.fn.inRange.call(this, options);\n                var startTime = getMilliseconds(this.startTime());\n                var endTime = getMilliseconds(this.endTime()) || kendo.date.MS_PER_DAY;\n                var start = getMilliseconds(options.start);\n                var end = getMilliseconds(options.end) || kendo.date.MS_PER_DAY;\n                return inRange && startTime <= start && end <= endTime;\n            },\n            selectionByElement: function (cell) {\n                var offset = cell.offset();\n                return this._slotByPosition(offset.left, offset.top);\n            },\n            _timeSlotInterval: function () {\n                var options = this.options;\n                return options.majorTick / options.minorTickCount * MS_PER_MINUTE;\n            },\n            _timeSlotIndex: function (date) {\n                var options = this.options;\n                var eventStartTime = getMilliseconds(date);\n                var startTime = getMilliseconds(this.startTime());\n                var timeSlotInterval = options.majorTick / options.minorTickCount * MS_PER_MINUTE;\n                return (eventStartTime - startTime) / timeSlotInterval;\n            },\n            _slotIndex: function (date, multiday) {\n                if (multiday) {\n                    return this._dateSlotIndex(date);\n                }\n                return this._timeSlotIndex(date);\n            },\n            _dateSlotIndex: function (date, overlaps) {\n                var idx;\n                var length;\n                var slots = this._dates || [];\n                var slotStart;\n                var slotEnd;\n                var offset = 1;\n                for (idx = 0, length = slots.length; idx < length; idx++) {\n                    slotStart = kendo.date.getDate(slots[idx]);\n                    slotEnd = new Date(kendo.date.getDate(slots[idx]).getTime() + MS_PER_DAY - (overlaps ? 0 : 1));\n                    if (isInDateRange(date, slotStart, slotEnd)) {\n                        return idx * offset;\n                    }\n                }\n                return -1;\n            },\n            _positionAllDayEvent: function (element, slotRange) {\n                var slotWidth = slotRange.innerWidth();\n                var startIndex = slotRange.start.index;\n                var endIndex = slotRange.end.index;\n                var allDayEvents = SchedulerView.collidingEvents(slotRange.events(), startIndex, endIndex);\n                var currentColumnCount = this._headerColumnCount || 0;\n                var leftOffset = 2;\n                var rightOffset = startIndex !== endIndex ? 5 : 4;\n                var eventHeight = this._allDayHeaderHeight;\n                var start = slotRange.startSlot();\n                element.css({\n                    left: start.offsetLeft + leftOffset,\n                    width: slotWidth - rightOffset\n                });\n                slotRange.addEvent({\n                    slotIndex: startIndex,\n                    start: startIndex,\n                    end: endIndex,\n                    element: element\n                });\n                allDayEvents.push({\n                    slotIndex: startIndex,\n                    start: startIndex,\n                    end: endIndex,\n                    element: element\n                });\n                var rows = SchedulerView.createRows(allDayEvents);\n                if (rows.length && rows.length > currentColumnCount) {\n                    this._headerColumnCount = rows.length;\n                }\n                var top = slotRange.start.offsetTop;\n                for (var idx = 0, length = rows.length; idx < length; idx++) {\n                    var rowEvents = rows[idx].events;\n                    for (var j = 0, eventLength = rowEvents.length; j < eventLength; j++) {\n                        $(rowEvents[j].element).css({ top: top + idx * eventHeight });\n                    }\n                }\n            },\n            _arrangeColumns: function (element, top, height, slotRange) {\n                var startSlot = slotRange.start;\n                element = {\n                    element: element,\n                    slotIndex: startSlot.index,\n                    start: top,\n                    end: top + height\n                };\n                var columns, slotWidth = startSlot.clientWidth, eventRightOffset = slotWidth * 0.1, columnEvents, eventElements = slotRange.events(), slotEvents = SchedulerView.collidingEvents(eventElements, element.start, element.end);\n                slotRange.addEvent(element);\n                slotEvents.push(element);\n                columns = SchedulerView.createColumns(slotEvents);\n                var columnWidth = (slotWidth - eventRightOffset) / columns.length;\n                for (var idx = 0, length = columns.length; idx < length; idx++) {\n                    columnEvents = columns[idx].events;\n                    for (var j = 0, eventLength = columnEvents.length; j < eventLength; j++) {\n                        columnEvents[j].element[0].style.width = columnWidth - 4 + 'px';\n                        columnEvents[j].element[0].style.left = (this._isRtl ? eventRightOffset : 0) + startSlot.offsetLeft + idx * columnWidth + 2 + 'px';\n                    }\n                }\n            },\n            _positionEvent: function (event, element, slotRange) {\n                var start = event._startTime || event.start;\n                var end = event._endTime || event.end;\n                var rect = slotRange.innerRect(start, end, false);\n                var height = rect.bottom - rect.top - 2;\n                if (height < 0) {\n                    height = 0;\n                }\n                element.css({\n                    top: rect.top,\n                    height: height\n                });\n                this._arrangeColumns(element, rect.top, element[0].clientHeight, slotRange);\n            },\n            _createEventElement: function (event, isOneDayEvent, head, tail) {\n                var template = isOneDayEvent ? this.eventTemplate : this.allDayEventTemplate;\n                var options = this.options;\n                var editable = options.editable;\n                var isMobile = this._isMobile();\n                var showDelete = editable && editable.destroy !== false && !isMobile;\n                var resizable = editable && editable.resize !== false;\n                var startDate = getDate(this.startDate());\n                var endDate = getDate(this.endDate());\n                var startTime = getMilliseconds(this.startTime());\n                var endTime = getMilliseconds(this.endTime());\n                var eventStartTime = event._time('start');\n                var eventEndTime = event._time('end');\n                var middle;\n                if (startTime >= endTime) {\n                    endTime = getMilliseconds(new Date(this.endTime().getTime() + MS_PER_DAY - 1));\n                }\n                if (!isOneDayEvent && !event.isAllDay) {\n                    endDate = new Date(endDate.getTime() + MS_PER_DAY);\n                }\n                var eventStartDate = event.start;\n                var eventEndDate = event.end;\n                if (event.isAllDay) {\n                    eventEndDate = getDate(event.end);\n                }\n                if (!isInDateRange(getDate(eventStartDate), startDate, endDate) && !isInDateRange(eventEndDate, startDate, endDate) || isOneDayEvent && eventStartTime < startTime && eventEndTime > endTime) {\n                    middle = true;\n                } else if (getDate(eventStartDate) < startDate || isOneDayEvent && eventStartTime < startTime) {\n                    tail = true;\n                } else if (eventEndDate > endDate && !isOneDayEvent || isOneDayEvent && eventEndTime > endTime) {\n                    head = true;\n                }\n                var resources = this.eventResources(event);\n                if (event._startTime && eventStartTime !== kendo.date.getMilliseconds(event.start)) {\n                    eventStartDate = new Date(eventStartTime);\n                    eventStartDate = kendo.timezone.apply(eventStartDate, 'Etc/UTC');\n                }\n                if (event._endTime && eventEndTime !== kendo.date.getMilliseconds(event.end)) {\n                    eventEndDate = new Date(eventEndTime);\n                    eventEndDate = kendo.timezone.apply(eventEndDate, 'Etc/UTC');\n                }\n                var data = extend({}, {\n                    ns: kendo.ns,\n                    resizable: resizable,\n                    showDelete: showDelete,\n                    middle: middle,\n                    head: head,\n                    tail: tail,\n                    singleDay: this._dates.length == 1,\n                    resources: resources,\n                    inverseColor: resources && resources[0] ? this._shouldInverseResourceColor(resources[0]) : false\n                }, event, {\n                    start: eventStartDate,\n                    end: eventEndDate\n                });\n                var element = $(template(data));\n                this.angular('compile', function () {\n                    return {\n                        elements: element,\n                        data: [{ dataItem: data }]\n                    };\n                });\n                return element;\n            },\n            _isInTimeSlot: function (event) {\n                var slotStartTime = this.startTime(), slotEndTime = this.endTime(), startTime = event._startTime || event.start, endTime = event._endTime || event.end;\n                if (getMilliseconds(slotEndTime) === getMilliseconds(kendo.date.getDate(slotEndTime))) {\n                    slotEndTime = kendo.date.getDate(slotEndTime);\n                    setTime(slotEndTime, MS_PER_DAY - 1);\n                }\n                if (event._date('end') > event._date('start')) {\n                    endTime = +event._date('end') + (MS_PER_DAY - 1);\n                }\n                endTime = endTime - event._date('end');\n                startTime = startTime - event._date('start');\n                slotEndTime = getMilliseconds(slotEndTime);\n                slotStartTime = getMilliseconds(slotStartTime);\n                if (slotStartTime === startTime && startTime === endTime) {\n                    return true;\n                }\n                var overlaps = startTime !== slotEndTime;\n                return isInTimeRange(startTime, slotStartTime, slotEndTime, overlaps) || isInTimeRange(endTime, slotStartTime, slotEndTime, overlaps) || isInTimeRange(slotStartTime, startTime, endTime) || isInTimeRange(slotEndTime, startTime, endTime);\n            },\n            _isInDateSlot: function (event) {\n                var groups = this.groups[0];\n                var slotStart = groups.firstSlot().start;\n                var slotEnd = groups.lastSlot().end - 1;\n                var startTime = kendo.date.toUtcTime(event.start);\n                var endTime = kendo.date.toUtcTime(event.end);\n                return (isInDateRange(startTime, slotStart, slotEnd) || isInDateRange(endTime, slotStart, slotEnd) || isInDateRange(slotStart, startTime, endTime) || isInDateRange(slotEnd, startTime, endTime)) && (!isInDateRange(endTime, slotStart, slotStart) || isInDateRange(endTime, startTime, startTime) || event.isAllDay);\n            },\n            _updateAllDayHeaderHeight: function (height) {\n                if (this._height !== height) {\n                    this._height = height;\n                    var allDaySlots = this.element.find('.k-scheduler-header-all-day td');\n                    if (allDaySlots.length) {\n                        allDaySlots.parent().add(this.element.find('.k-scheduler-times-all-day').parent()).height(height);\n                        for (var groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                            this.groups[groupIndex].refresh();\n                        }\n                    }\n                }\n            },\n            _renderEvents: function (events, groupIndex) {\n                var allDayEventContainer = this.datesHeader.find('.k-scheduler-header-wrap > div');\n                var event;\n                var idx;\n                var length;\n                for (idx = 0, length = events.length; idx < length; idx++) {\n                    event = events[idx];\n                    if (this._isInDateSlot(event)) {\n                        var isMultiDayEvent = event.isAllDay || event.end.getTime() - event.start.getTime() >= MS_PER_DAY;\n                        var container = isMultiDayEvent && !this._isVerticallyGrouped() ? allDayEventContainer : this.content;\n                        var element;\n                        var ranges;\n                        var group;\n                        if (!isMultiDayEvent) {\n                            if (this._isInTimeSlot(event)) {\n                                group = this.groups[groupIndex];\n                                if (!group._continuousEvents) {\n                                    group._continuousEvents = [];\n                                }\n                                ranges = group.slotRanges(event);\n                                var rangeCount = ranges.length;\n                                for (var rangeIndex = 0; rangeIndex < rangeCount; rangeIndex++) {\n                                    var range = ranges[rangeIndex];\n                                    var start = event.start;\n                                    var end = event.end;\n                                    if (rangeCount > 1) {\n                                        if (rangeIndex === 0) {\n                                            end = range.end.endDate();\n                                        } else if (rangeIndex == rangeCount - 1) {\n                                            start = range.start.startDate();\n                                        } else {\n                                            start = range.start.startDate();\n                                            end = range.end.endDate();\n                                        }\n                                    }\n                                    var occurrence = event.clone({\n                                        start: start,\n                                        end: end,\n                                        _startTime: event._startTime,\n                                        _endTime: event.endTime\n                                    });\n                                    if (this._isInTimeSlot(occurrence)) {\n                                        var head = range.head;\n                                        element = this._createEventElement(event, !isMultiDayEvent, head, range.tail);\n                                        element.appendTo(container);\n                                        this._positionEvent(occurrence, element, range);\n                                        addContinuousEvent(group, range, element, false);\n                                    }\n                                }\n                            }\n                        } else if (this.options.allDaySlot) {\n                            group = this.groups[groupIndex];\n                            if (!group._continuousEvents) {\n                                group._continuousEvents = [];\n                            }\n                            ranges = group.slotRanges(event);\n                            if (ranges.length) {\n                                element = this._createEventElement(event, !isMultiDayEvent);\n                                this._positionAllDayEvent(element, ranges[0]);\n                                addContinuousEvent(group, ranges[0], element, true);\n                                element.appendTo(container);\n                            }\n                        }\n                    }\n                }\n            },\n            render: function (events) {\n                this._headerColumnCount = 0;\n                this._groups();\n                this.element.find('.k-event').remove();\n                events = new kendo.data.Query(events).sort([\n                    {\n                        field: 'start',\n                        dir: 'asc'\n                    },\n                    {\n                        field: 'end',\n                        dir: 'desc'\n                    }\n                ]).toArray();\n                var eventsByResource = [];\n                this._eventsByResource(events, this.groupedResources, eventsByResource);\n                var eventsPerDate = $.map(this._dates, function (date) {\n                    return Math.max.apply(null, $.map(eventsByResource, function (events) {\n                        return $.grep(events, function (event) {\n                            return event.isMultiDay() && isInDateRange(date, getDate(event.start), getDate(event.end));\n                        }).length;\n                    }));\n                });\n                var height = Math.max.apply(null, eventsPerDate);\n                this._updateAllDayHeaderHeight((height + 1) * this._allDayHeaderHeight);\n                for (var groupIndex = 0; groupIndex < eventsByResource.length; groupIndex++) {\n                    this._renderEvents(eventsByResource[groupIndex], groupIndex);\n                }\n                this.refreshLayout();\n                this._currentTime(false);\n                this.trigger('activate');\n            },\n            _eventsByResource: function (events, resources, result) {\n                var resource = resources[0];\n                if (resource) {\n                    var view = resource.dataSource.view();\n                    for (var itemIdx = 0; itemIdx < view.length; itemIdx++) {\n                        var value = this._resourceValue(resource, view[itemIdx]);\n                        var eventsFilteredByResource = new kendo.data.Query(events).filter({\n                            field: resource.field,\n                            operator: SchedulerView.groupEqFilter(value)\n                        }).toArray();\n                        if (resources.length > 1) {\n                            this._eventsByResource(eventsFilteredByResource, resources.slice(1), result);\n                        } else {\n                            result.push(eventsFilteredByResource);\n                        }\n                    }\n                } else {\n                    result.push(events);\n                }\n            },\n            _columnOffsetForResource: function (index) {\n                return this._columnCountForLevel(index) / this._columnCountForLevel(index - 1);\n            },\n            _columnCountForLevel: function (level) {\n                var columnLevel = this.columnLevels[level];\n                return columnLevel ? columnLevel.length : 0;\n            },\n            _rowCountForLevel: function (level) {\n                var rowLevel = this.rowLevels[level];\n                return rowLevel ? rowLevel.length : 0;\n            },\n            clearSelection: function () {\n                this.content.add(this.datesHeader).find('.k-state-selected').removeAttr('id').attr('aria-selected', false).removeClass('k-state-selected');\n            },\n            _updateDirection: function (selection, ranges, multiple, reverse, vertical) {\n                var isDaySlot = selection.isAllDay;\n                var startSlot = ranges[0].start;\n                var endSlot = ranges[ranges.length - 1].end;\n                if (multiple) {\n                    if (vertical) {\n                        if (!isDaySlot && startSlot.index === endSlot.index && startSlot.collectionIndex === endSlot.collectionIndex) {\n                            selection.backward = reverse;\n                        }\n                    } else {\n                        if (isDaySlot && startSlot.index === endSlot.index || !isDaySlot && startSlot.collectionIndex === endSlot.collectionIndex) {\n                            selection.backward = reverse;\n                        }\n                    }\n                }\n            },\n            _changeViewPeriod: function (selection, reverse, vertical) {\n                if (!vertical) {\n                    var date = reverse ? this.previousDate() : this.nextDate();\n                    var start = selection.start;\n                    var end = selection.end;\n                    selection.start = new Date(date);\n                    selection.end = new Date(date);\n                    var endMilliseconds = selection.isAllDay ? MS_PER_DAY : getMilliseconds(end);\n                    setTime(selection.start, getMilliseconds(start));\n                    setTime(selection.end, endMilliseconds);\n                    if (!this._isVerticallyGrouped()) {\n                        selection.groupIndex = reverse ? this.groups.length - 1 : 0;\n                    }\n                    selection.events = [];\n                    return true;\n                }\n            }\n        });\n        extend(true, ui, {\n            MultiDayView: MultiDayView,\n            DayView: MultiDayView.extend({\n                options: {\n                    name: 'DayView',\n                    title: 'Day'\n                },\n                name: 'day'\n            }),\n            WeekView: MultiDayView.extend({\n                options: {\n                    name: 'WeekView',\n                    title: 'Week',\n                    selectedDateFormat: '{0:D} - {1:D}',\n                    selectedShortDateFormat: '{0:d} - {1:d}'\n                },\n                name: 'week',\n                calculateDateRange: function () {\n                    var selectedDate = this.options.date, start = kendo.date.dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1), idx, length, dates = [];\n                    for (idx = 0, length = 7; idx < length; idx++) {\n                        dates.push(start);\n                        start = kendo.date.nextDay(start);\n                    }\n                    this._render(dates);\n                }\n            }),\n            WorkWeekView: MultiDayView.extend({\n                options: {\n                    name: 'WorkWeekView',\n                    title: 'Work Week',\n                    selectedDateFormat: '{0:D} - {1:D}',\n                    selectedShortDateFormat: '{0:d} - {1:d}'\n                },\n                name: 'workWeek',\n                nextDate: function () {\n                    return kendo.date.dayOfWeek(kendo.date.nextDay(this.startDate()), this.calendarInfo().firstDay, 1);\n                },\n                previousDate: function () {\n                    var weekStart = kendo.date.dayOfWeek(this.startDate(), this.calendarInfo().firstDay, -1);\n                    return kendo.date.previousDay(weekStart);\n                },\n                calculateDateRange: function () {\n                    var selectedDate = this.options.date, dayOfWeek = kendo.date.dayOfWeek, weekStart = dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1), start = dayOfWeek(weekStart, this.options.workWeekStart, 1), end = dayOfWeek(start, this.options.workWeekEnd, 1), dates = [];\n                    while (start <= end) {\n                        dates.push(start);\n                        start = kendo.date.nextDay(start);\n                    }\n                    this._render(dates);\n                }\n            })\n        });\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"],"sourceRoot":"/source/"}