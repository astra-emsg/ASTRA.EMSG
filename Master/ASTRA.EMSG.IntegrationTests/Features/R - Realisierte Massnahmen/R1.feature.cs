// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ASTRA.EMSG.IntegrationTests.Features.R_RealisierteMassnahmen
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("R1 - Realisierte Massnahmen im summarischen Modus erfassen", Description="\tAls Data-Manager,\r\n\twill ich realisierte Massnahmen im summarischen Modus erfass" +
        "en\r\n\tdamit ich in Auswertungen einen Überblick über meine Baumassnahmen bekomme", SourceFile="Features\\R - Realisierte Massnahmen\\R1.feature", SourceLine=0)]
    public partial class R1_RealisierteMassnahmenImSummarischenModusErfassenFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "R1.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "R1 - Realisierte Massnahmen im summarischen Modus erfassen", "\tAls Data-Manager,\r\n\twill ich realisierte Massnahmen im summarischen Modus erfass" +
                    "en\r\n\tdamit ich in Auswertungen einen Überblick über meine Baumassnahmen bekomme", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann realisierte Massnahmen erfassen", new string[] {
                "Manuell"}, SourceLine=9)]
        public virtual void DerData_ManagerKannRealisierteMassnahmenErfassen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann realisierte Massnahmen erfassen", new string[] {
                        "Manuell"});
#line 10
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table1.AddRow(new string[] {
                        "Mandant_1",
                        "summarisch"});
#line 11
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table1, "Gegeben sei ");
#line 15
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mengentyp",
                        "Projektname",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Belastungskategorie",
                        "Menge"});
            table2.AddRow(new string[] {
                        "Gesamtlänge",
                        "Projekt 1",
                        "Alle Felder",
                        "10000",
                        "1A",
                        "1000"});
            table2.AddRow(new string[] {
                        "Gesamtlänge",
                        "Projekt 1",
                        "Gleicher Name",
                        "",
                        "",
                        ""});
            table2.AddRow(new string[] {
                        "Gesamtlänge",
                        "Projekt 2",
                        "Nur Pflichtfelder",
                        "",
                        "",
                        ""});
#line 17
 testRunner.When("ich folgende realisierte Massnahme eingebe:", ((string)(null)), table2, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Mengentyp",
                        "Projektname",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Belastungskategorie",
                        "Menge Gesamtlänge"});
            table3.AddRow(new string[] {
                        "Mandant_1",
                        "Gesamtlänge",
                        "Projekt 1",
                        "Alle Felder",
                        "10000",
                        "1A",
                        "1000"});
            table3.AddRow(new string[] {
                        "Mandant_1",
                        "Gesamtlänge",
                        "Projekt 1",
                        "Gleicher Name",
                        "",
                        "",
                        ""});
            table3.AddRow(new string[] {
                        "Mandant_1",
                        "Gesamtlänge",
                        "Projekt 2",
                        "Nur Pflichtfelder",
                        "",
                        "",
                        ""});
#line 23
 testRunner.Then("sind folgende realisierte Massnahmen im System:", ((string)(null)), table3, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann entweder die ‚Gesamtlänge‘ oder ‚Gesamtfläche der Fahrbahne" +
            "n‘ oder ‚Gesamtfläche der Fahrbahnen und Trottoirs‘ der Massnahme (Mengentyp ent" +
            "sprechend der Selektion des Benutzeradministrators) erfassen", new string[] {
                "Manuell"}, SourceLine=32)]
        public virtual void DerData_ManagerKannEntwederDieGesamtlangeOderGesamtflacheDerFahrbahnenOderGesamtflacheDerFahrbahnenUndTrottoirsDerMassnahmeMengentypEntsprechendDerSelektionDesBenutzeradministratorsErfassen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann entweder die ‚Gesamtlänge‘ oder ‚Gesamtfläche der Fahrbahne" +
                    "n‘ oder ‚Gesamtfläche der Fahrbahnen und Trottoirs‘ der Massnahme (Mengentyp ent" +
                    "sprechend der Selektion des Benutzeradministrators) erfassen", new string[] {
                        "Manuell"});
#line 33
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table4.AddRow(new string[] {
                        "Mandant_1",
                        "summarisch"});
#line 34
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table4, "Gegeben sei ");
#line 38
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Mengentyp",
                        "Projektname",
                        "Menge"});
            table5.AddRow(new string[] {
                        "1",
                        "Gesamtlänge",
                        "Projekt L",
                        "300"});
            table5.AddRow(new string[] {
                        "2",
                        "Gesamtfläche",
                        "Projekt F",
                        "300"});
#line 40
 testRunner.When("ich folgende realisierte Massnahme eingebe:", ((string)(null)), table5, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Mandant",
                        "Mengentyp",
                        "Projektname",
                        "Menge Gesamtlänge",
                        "Menge Gesamtfläche",
                        "Menge Gesamtfläche und Trottoir"});
            table6.AddRow(new string[] {
                        "1",
                        "Mandant_1",
                        "Gesamtlänge",
                        "Projekt L",
                        "300",
                        "-",
                        "-"});
            table6.AddRow(new string[] {
                        "2",
                        "Mandant_1",
                        "Gesamtfläche",
                        "Projekt F",
                        "-",
                        "300",
                        "-"});
#line 45
 testRunner.Then("sind folgende realisierte Massnahmen im System:", ((string)(null)), table6, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann alle Attribute der realisierten Massnahme bearbeiten", new string[] {
                "Manuell"}, SourceLine=53)]
        public virtual void DerData_ManagerKannAlleAttributeDerRealisiertenMassnahmeBearbeiten()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann alle Attribute der realisierten Massnahme bearbeiten", new string[] {
                        "Manuell"});
#line 54
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus",
                        "Mengentyp"});
            table7.AddRow(new string[] {
                        "Mandant_1",
                        "summarisch",
                        "<Mengentyp>"});
#line 55
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table7, "Gegeben sei ");
#line 59
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Mengentyp",
                        "Projektname",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Belastungskategorie",
                        "Menge"});
            table8.AddRow(new string[] {
                        "1",
                        "Gesamtlänge",
                        "Projekt 1",
                        "Alle Felder",
                        "10000",
                        "1A",
                        "1000"});
            table8.AddRow(new string[] {
                        "2",
                        "Gesamtlänge",
                        "Projekt 1",
                        "Gleicher Name",
                        "",
                        "",
                        ""});
            table8.AddRow(new string[] {
                        "3",
                        "Gesamtlänge",
                        "Projekt 2",
                        "Nur Pflichtfelder",
                        "",
                        "",
                        ""});
#line 61
 testRunner.And("für Mandant \'Mandant_1\' folgende realisierte Massnahmen existieren:", ((string)(null)), table8, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Belastungskategorie",
                        "Menge"});
            table9.AddRow(new string[] {
                        "1",
                        "Projekt A",
                        "Alles geändert",
                        "20000",
                        "1C",
                        "10000"});
            table9.AddRow(new string[] {
                        "2",
                        "Projekt 1",
                        "Gleicher Name",
                        "",
                        "",
                        ""});
            table9.AddRow(new string[] {
                        "3",
                        "Projekt B",
                        "Alles geändert",
                        "10000",
                        "2",
                        "2000"});
#line 67
 testRunner.When("ich folgende folgende realisierte Massnahme eingebe:", ((string)(null)), table9, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Mengentyp",
                        "Projektname",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Belastungskategorie",
                        "Menge Gesamtlänge"});
            table10.AddRow(new string[] {
                        "1",
                        "Gesamtlänge",
                        "Projekt A",
                        "Alles geändert",
                        "20000",
                        "1C",
                        "10000"});
            table10.AddRow(new string[] {
                        "2",
                        "Gesamtlänge",
                        "Projekt 1",
                        "Gleicher Name",
                        "",
                        "",
                        ""});
            table10.AddRow(new string[] {
                        "3",
                        "Gesamtlänge",
                        "Projekt B",
                        "Alles geändert",
                        "10000",
                        "2",
                        "2000"});
#line 73
 testRunner.Then("sind folgende realisierte Massnahmen im System:", ((string)(null)), table10, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann eine realisierte Massnahme löschen", new string[] {
                "Manuell"}, SourceLine=82)]
        public virtual void DerData_ManagerKannEineRealisierteMassnahmeLoschen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann eine realisierte Massnahme löschen", new string[] {
                        "Manuell"});
#line 83
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus",
                        "Mengentyp"});
            table11.AddRow(new string[] {
                        "Mandant_1",
                        "summarisch",
                        "<Mengentyp>"});
#line 84
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table11, "Gegeben sei ");
#line 88
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Mengentyp",
                        "Projektname",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Belastungskategorie",
                        "Menge"});
            table12.AddRow(new string[] {
                        "1",
                        "Gesamtlänge",
                        "Projekt A",
                        "Alles geändert",
                        "20000",
                        "1C",
                        "10000"});
            table12.AddRow(new string[] {
                        "2",
                        "Gesamtlänge",
                        "Projekt 1",
                        "Gleicher Name",
                        "",
                        "",
                        ""});
            table12.AddRow(new string[] {
                        "3",
                        "Gesamtlänge",
                        "Projekt B",
                        "Alles geändert",
                        "10000",
                        "2",
                        "2000"});
#line 90
 testRunner.And("für Mandant \'Mandant_1\' folgende realisierte Massnahmen existieren:", ((string)(null)), table12, "Und ");
#line 96
 testRunner.When("ich die realisierte Massname mit der Id \'2\' lösche", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Mengentyp",
                        "Projektname",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Belastungskategorie",
                        "Menge Gesamtlänge"});
            table13.AddRow(new string[] {
                        "1",
                        "Gesamtlänge",
                        "Projekt A",
                        "Alles geändert",
                        "20000",
                        "1C",
                        "10000"});
            table13.AddRow(new string[] {
                        "3",
                        "Gesamtlänge",
                        "Projekt B",
                        "Alles geändert",
                        "10000",
                        "2",
                        "2000"});
#line 98
 testRunner.Then("sind folgende realisierte Massnahmen im System:", ((string)(null)), table13, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System fordert den Data-Manager nach Speichern der realisierten Massnahme zur" +
            " Anpassung des mittleren Zustands auf", new string[] {
                "Manuell"}, SourceLine=105)]
        public virtual void DasSystemFordertDenData_ManagerNachSpeichernDerRealisiertenMassnahmeZurAnpassungDesMittlerenZustandsAuf()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System fordert den Data-Manager nach Speichern der realisierten Massnahme zur" +
                    " Anpassung des mittleren Zustands auf", new string[] {
                        "Manuell"});
#line 106
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System listet alle realisierten Massnahmen in einer Übersichtstabelle", new string[] {
                "Manuell"}, SourceLine=110)]
        public virtual void DasSystemListetAlleRealisiertenMassnahmenInEinerUbersichtstabelle()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System listet alle realisierten Massnahmen in einer Übersichtstabelle", new string[] {
                        "Manuell"});
#line 111
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann in einem Textfeld nach Projektname suchen", new string[] {
                "Manuell"}, SourceLine=115)]
        public virtual void DerData_ManagerKannInEinemTextfeldNachProjektnameSuchen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann in einem Textfeld nach Projektname suchen", new string[] {
                        "Manuell"});
#line 116
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus",
                        "Mengentyp"});
            table14.AddRow(new string[] {
                        "Mandant_1",
                        "summarisch",
                        "<Mengentyp>"});
#line 117
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table14, "Gegeben sei ");
#line 121
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Mengentyp",
                        "Projektname"});
            table15.AddRow(new string[] {
                        "1",
                        "Gesamtlänge",
                        "ABC"});
            table15.AddRow(new string[] {
                        "2",
                        "Gesamtlänge",
                        "CDE"});
            table15.AddRow(new string[] {
                        "3",
                        "Gesamtlänge",
                        "ABC DEF"});
#line 123
 testRunner.And("für Mandant \'Mandant_1\' folgende realisierte Massnahmen existieren:", ((string)(null)), table15, "Und ");
#line 129
 testRunner.And("ich nach Projektname \'DE\' filtere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Mengentyp",
                        "Projektname"});
            table16.AddRow(new string[] {
                        "2",
                        "Gesamtlänge",
                        "CDE"});
            table16.AddRow(new string[] {
                        "3",
                        "Gesamtlänge",
                        "ABC DEF"});
#line 131
 testRunner.Then("werden folgende realisierte Massnahmen angezeigt:", ((string)(null)), table16, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Beim Jahresabschluss werden die erfassten realisierten Massnahmen vom System dem " +
            "Jahr des Jahresabschlusses zugeordnet", new string[] {
                "Manuell"}, SourceLine=138)]
        public virtual void BeimJahresabschlussWerdenDieErfasstenRealisiertenMassnahmenVomSystemDemJahrDesJahresabschlussesZugeordnet()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Beim Jahresabschluss werden die erfassten realisierten Massnahmen vom System dem " +
                    "Jahr des Jahresabschlusses zugeordnet", new string[] {
                        "Manuell"});
#line 139
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus",
                        "Mengentyp"});
            table17.AddRow(new string[] {
                        "Mandant_1",
                        "summarisch",
                        "<Mengentyp>"});
#line 140
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table17, "Gegeben sei ");
#line 144
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Mengentyp",
                        "Projektname",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Belastungskategorie",
                        "Menge"});
            table18.AddRow(new string[] {
                        "1",
                        "Gesamtlänge",
                        "Projekt A",
                        "Alles geändert",
                        "20000",
                        "1C",
                        "10000"});
            table18.AddRow(new string[] {
                        "2",
                        "Gesamtlänge",
                        "Projekt 1",
                        "Gleicher Name",
                        "",
                        "",
                        ""});
            table18.AddRow(new string[] {
                        "3",
                        "Gesamtlänge",
                        "Projekt B",
                        "Alles geändert",
                        "10000",
                        "2",
                        "2000"});
#line 146
 testRunner.And("für Mandant \'Mandant_1\' folgende realisierte Massnahmen existieren:", ((string)(null)), table18, "Und ");
#line 152
 testRunner.And("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Mengentyp",
                        "Projektname",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Belastungskategorie",
                        "Menge Gesamtlänge"});
#line 154
 testRunner.Then("werden folgende realisierte Massnahmen angezeigt:", ((string)(null)), table19, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("R1 - Realisierte Massnahmen im summarischen Modus erfassen")]
    public partial class R1_RealisierteMassnahmenImSummarischenModusErfassenFeature_NUnit
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "R1.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "R1 - Realisierte Massnahmen im summarischen Modus erfassen", "\tAls Data-Manager,\r\n\twill ich realisierte Massnahmen im summarischen Modus erfass" +
                    "en\r\n\tdamit ich in Auswertungen einen Überblick über meine Baumassnahmen bekomme", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann realisierte Massnahmen erfassen")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannRealisierteMassnahmenErfassen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann realisierte Massnahmen erfassen", new string[] {
                        "Manuell"});
#line 10
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table1.AddRow(new string[] {
                        "Mandant_1",
                        "summarisch"});
#line 11
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table1, "Gegeben sei ");
#line 15
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mengentyp",
                        "Projektname",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Belastungskategorie",
                        "Menge"});
            table2.AddRow(new string[] {
                        "Gesamtlänge",
                        "Projekt 1",
                        "Alle Felder",
                        "10000",
                        "1A",
                        "1000"});
            table2.AddRow(new string[] {
                        "Gesamtlänge",
                        "Projekt 1",
                        "Gleicher Name",
                        "",
                        "",
                        ""});
            table2.AddRow(new string[] {
                        "Gesamtlänge",
                        "Projekt 2",
                        "Nur Pflichtfelder",
                        "",
                        "",
                        ""});
#line 17
 testRunner.When("ich folgende realisierte Massnahme eingebe:", ((string)(null)), table2, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Mengentyp",
                        "Projektname",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Belastungskategorie",
                        "Menge Gesamtlänge"});
            table3.AddRow(new string[] {
                        "Mandant_1",
                        "Gesamtlänge",
                        "Projekt 1",
                        "Alle Felder",
                        "10000",
                        "1A",
                        "1000"});
            table3.AddRow(new string[] {
                        "Mandant_1",
                        "Gesamtlänge",
                        "Projekt 1",
                        "Gleicher Name",
                        "",
                        "",
                        ""});
            table3.AddRow(new string[] {
                        "Mandant_1",
                        "Gesamtlänge",
                        "Projekt 2",
                        "Nur Pflichtfelder",
                        "",
                        "",
                        ""});
#line 23
 testRunner.Then("sind folgende realisierte Massnahmen im System:", ((string)(null)), table3, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann entweder die ‚Gesamtlänge‘ oder ‚Gesamtfläche der Fahrbahne" +
            "n‘ oder ‚Gesamtfläche der Fahrbahnen und Trottoirs‘ der Massnahme (Mengentyp ent" +
            "sprechend der Selektion des Benutzeradministrators) erfassen")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannEntwederDieGesamtlangeOderGesamtflacheDerFahrbahnenOderGesamtflacheDerFahrbahnenUndTrottoirsDerMassnahmeMengentypEntsprechendDerSelektionDesBenutzeradministratorsErfassen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann entweder die ‚Gesamtlänge‘ oder ‚Gesamtfläche der Fahrbahne" +
                    "n‘ oder ‚Gesamtfläche der Fahrbahnen und Trottoirs‘ der Massnahme (Mengentyp ent" +
                    "sprechend der Selektion des Benutzeradministrators) erfassen", new string[] {
                        "Manuell"});
#line 33
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table4.AddRow(new string[] {
                        "Mandant_1",
                        "summarisch"});
#line 34
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table4, "Gegeben sei ");
#line 38
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Mengentyp",
                        "Projektname",
                        "Menge"});
            table5.AddRow(new string[] {
                        "1",
                        "Gesamtlänge",
                        "Projekt L",
                        "300"});
            table5.AddRow(new string[] {
                        "2",
                        "Gesamtfläche",
                        "Projekt F",
                        "300"});
#line 40
 testRunner.When("ich folgende realisierte Massnahme eingebe:", ((string)(null)), table5, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Mandant",
                        "Mengentyp",
                        "Projektname",
                        "Menge Gesamtlänge",
                        "Menge Gesamtfläche",
                        "Menge Gesamtfläche und Trottoir"});
            table6.AddRow(new string[] {
                        "1",
                        "Mandant_1",
                        "Gesamtlänge",
                        "Projekt L",
                        "300",
                        "-",
                        "-"});
            table6.AddRow(new string[] {
                        "2",
                        "Mandant_1",
                        "Gesamtfläche",
                        "Projekt F",
                        "-",
                        "300",
                        "-"});
#line 45
 testRunner.Then("sind folgende realisierte Massnahmen im System:", ((string)(null)), table6, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann alle Attribute der realisierten Massnahme bearbeiten")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannAlleAttributeDerRealisiertenMassnahmeBearbeiten()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann alle Attribute der realisierten Massnahme bearbeiten", new string[] {
                        "Manuell"});
#line 54
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus",
                        "Mengentyp"});
            table7.AddRow(new string[] {
                        "Mandant_1",
                        "summarisch",
                        "<Mengentyp>"});
#line 55
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table7, "Gegeben sei ");
#line 59
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Mengentyp",
                        "Projektname",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Belastungskategorie",
                        "Menge"});
            table8.AddRow(new string[] {
                        "1",
                        "Gesamtlänge",
                        "Projekt 1",
                        "Alle Felder",
                        "10000",
                        "1A",
                        "1000"});
            table8.AddRow(new string[] {
                        "2",
                        "Gesamtlänge",
                        "Projekt 1",
                        "Gleicher Name",
                        "",
                        "",
                        ""});
            table8.AddRow(new string[] {
                        "3",
                        "Gesamtlänge",
                        "Projekt 2",
                        "Nur Pflichtfelder",
                        "",
                        "",
                        ""});
#line 61
 testRunner.And("für Mandant \'Mandant_1\' folgende realisierte Massnahmen existieren:", ((string)(null)), table8, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Belastungskategorie",
                        "Menge"});
            table9.AddRow(new string[] {
                        "1",
                        "Projekt A",
                        "Alles geändert",
                        "20000",
                        "1C",
                        "10000"});
            table9.AddRow(new string[] {
                        "2",
                        "Projekt 1",
                        "Gleicher Name",
                        "",
                        "",
                        ""});
            table9.AddRow(new string[] {
                        "3",
                        "Projekt B",
                        "Alles geändert",
                        "10000",
                        "2",
                        "2000"});
#line 67
 testRunner.When("ich folgende folgende realisierte Massnahme eingebe:", ((string)(null)), table9, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Mengentyp",
                        "Projektname",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Belastungskategorie",
                        "Menge Gesamtlänge"});
            table10.AddRow(new string[] {
                        "1",
                        "Gesamtlänge",
                        "Projekt A",
                        "Alles geändert",
                        "20000",
                        "1C",
                        "10000"});
            table10.AddRow(new string[] {
                        "2",
                        "Gesamtlänge",
                        "Projekt 1",
                        "Gleicher Name",
                        "",
                        "",
                        ""});
            table10.AddRow(new string[] {
                        "3",
                        "Gesamtlänge",
                        "Projekt B",
                        "Alles geändert",
                        "10000",
                        "2",
                        "2000"});
#line 73
 testRunner.Then("sind folgende realisierte Massnahmen im System:", ((string)(null)), table10, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann eine realisierte Massnahme löschen")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannEineRealisierteMassnahmeLoschen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann eine realisierte Massnahme löschen", new string[] {
                        "Manuell"});
#line 83
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus",
                        "Mengentyp"});
            table11.AddRow(new string[] {
                        "Mandant_1",
                        "summarisch",
                        "<Mengentyp>"});
#line 84
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table11, "Gegeben sei ");
#line 88
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Mengentyp",
                        "Projektname",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Belastungskategorie",
                        "Menge"});
            table12.AddRow(new string[] {
                        "1",
                        "Gesamtlänge",
                        "Projekt A",
                        "Alles geändert",
                        "20000",
                        "1C",
                        "10000"});
            table12.AddRow(new string[] {
                        "2",
                        "Gesamtlänge",
                        "Projekt 1",
                        "Gleicher Name",
                        "",
                        "",
                        ""});
            table12.AddRow(new string[] {
                        "3",
                        "Gesamtlänge",
                        "Projekt B",
                        "Alles geändert",
                        "10000",
                        "2",
                        "2000"});
#line 90
 testRunner.And("für Mandant \'Mandant_1\' folgende realisierte Massnahmen existieren:", ((string)(null)), table12, "Und ");
#line 96
 testRunner.When("ich die realisierte Massname mit der Id \'2\' lösche", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Mengentyp",
                        "Projektname",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Belastungskategorie",
                        "Menge Gesamtlänge"});
            table13.AddRow(new string[] {
                        "1",
                        "Gesamtlänge",
                        "Projekt A",
                        "Alles geändert",
                        "20000",
                        "1C",
                        "10000"});
            table13.AddRow(new string[] {
                        "3",
                        "Gesamtlänge",
                        "Projekt B",
                        "Alles geändert",
                        "10000",
                        "2",
                        "2000"});
#line 98
 testRunner.Then("sind folgende realisierte Massnahmen im System:", ((string)(null)), table13, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System fordert den Data-Manager nach Speichern der realisierten Massnahme zur" +
            " Anpassung des mittleren Zustands auf")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemFordertDenData_ManagerNachSpeichernDerRealisiertenMassnahmeZurAnpassungDesMittlerenZustandsAuf()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System fordert den Data-Manager nach Speichern der realisierten Massnahme zur" +
                    " Anpassung des mittleren Zustands auf", new string[] {
                        "Manuell"});
#line 106
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System listet alle realisierten Massnahmen in einer Übersichtstabelle")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemListetAlleRealisiertenMassnahmenInEinerUbersichtstabelle()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System listet alle realisierten Massnahmen in einer Übersichtstabelle", new string[] {
                        "Manuell"});
#line 111
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann in einem Textfeld nach Projektname suchen")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannInEinemTextfeldNachProjektnameSuchen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann in einem Textfeld nach Projektname suchen", new string[] {
                        "Manuell"});
#line 116
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus",
                        "Mengentyp"});
            table14.AddRow(new string[] {
                        "Mandant_1",
                        "summarisch",
                        "<Mengentyp>"});
#line 117
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table14, "Gegeben sei ");
#line 121
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Mengentyp",
                        "Projektname"});
            table15.AddRow(new string[] {
                        "1",
                        "Gesamtlänge",
                        "ABC"});
            table15.AddRow(new string[] {
                        "2",
                        "Gesamtlänge",
                        "CDE"});
            table15.AddRow(new string[] {
                        "3",
                        "Gesamtlänge",
                        "ABC DEF"});
#line 123
 testRunner.And("für Mandant \'Mandant_1\' folgende realisierte Massnahmen existieren:", ((string)(null)), table15, "Und ");
#line 129
 testRunner.And("ich nach Projektname \'DE\' filtere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Mengentyp",
                        "Projektname"});
            table16.AddRow(new string[] {
                        "2",
                        "Gesamtlänge",
                        "CDE"});
            table16.AddRow(new string[] {
                        "3",
                        "Gesamtlänge",
                        "ABC DEF"});
#line 131
 testRunner.Then("werden folgende realisierte Massnahmen angezeigt:", ((string)(null)), table16, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Beim Jahresabschluss werden die erfassten realisierten Massnahmen vom System dem " +
            "Jahr des Jahresabschlusses zugeordnet")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void BeimJahresabschlussWerdenDieErfasstenRealisiertenMassnahmenVomSystemDemJahrDesJahresabschlussesZugeordnet()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Beim Jahresabschluss werden die erfassten realisierten Massnahmen vom System dem " +
                    "Jahr des Jahresabschlusses zugeordnet", new string[] {
                        "Manuell"});
#line 139
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus",
                        "Mengentyp"});
            table17.AddRow(new string[] {
                        "Mandant_1",
                        "summarisch",
                        "<Mengentyp>"});
#line 140
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table17, "Gegeben sei ");
#line 144
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Mengentyp",
                        "Projektname",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Belastungskategorie",
                        "Menge"});
            table18.AddRow(new string[] {
                        "1",
                        "Gesamtlänge",
                        "Projekt A",
                        "Alles geändert",
                        "20000",
                        "1C",
                        "10000"});
            table18.AddRow(new string[] {
                        "2",
                        "Gesamtlänge",
                        "Projekt 1",
                        "Gleicher Name",
                        "",
                        "",
                        ""});
            table18.AddRow(new string[] {
                        "3",
                        "Gesamtlänge",
                        "Projekt B",
                        "Alles geändert",
                        "10000",
                        "2",
                        "2000"});
#line 146
 testRunner.And("für Mandant \'Mandant_1\' folgende realisierte Massnahmen existieren:", ((string)(null)), table18, "Und ");
#line 152
 testRunner.And("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Mengentyp",
                        "Projektname",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Belastungskategorie",
                        "Menge Gesamtlänge"});
#line 154
 testRunner.Then("werden folgende realisierte Massnahmen angezeigt:", ((string)(null)), table19, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
