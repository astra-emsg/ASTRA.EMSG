// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ASTRA.EMSG.IntegrationTests.Features.R_RealisierteMassnahmen
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("R2 - Realisierte Massnahmen im Strassennamenmodus erfassen", Description="\tAls Data-Manager,\r\n\twill ich realisierte Massnahmen im Strassennamenmodus erfass" +
        "en\r\n\tdamit ich in Auswertungen einen Überblick über meine Baumassnahmen bekomme", SourceFile="Features\\R - Realisierte Massnahmen\\R2.feature", SourceLine=0)]
    public partial class R2_RealisierteMassnahmenImStrassennamenmodusErfassenFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "R2.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "R2 - Realisierte Massnahmen im Strassennamenmodus erfassen", "\tAls Data-Manager,\r\n\twill ich realisierte Massnahmen im Strassennamenmodus erfass" +
                    "en\r\n\tdamit ich in Auswertungen einen Überblick über meine Baumassnahmen bekomme", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann realisierte Massnahmen erfassen", new string[] {
                "Manuell"}, SourceLine=9)]
        public virtual void DerData_ManagerKannRealisierteMassnahmenErfassen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann realisierte Massnahmen erfassen", new string[] {
                        "Manuell"});
#line 10
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table1.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 11
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table1, "Gegeben sei ");
#line 15
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname",
                        "Bezeichnung von",
                        "Bezeichnung bis",
                        "Länge",
                        "Breite Fahrbahn",
                        "Breite Trottoir links",
                        "Breite Trottoir rechts",
                        "Massnahmenbeschreibung Fahrbahn",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Kosten Trottoir links",
                        "Kosten Trottoir rechts"});
            table2.AddRow(new string[] {
                        "1",
                        "Projekt 1",
                        "Kirche",
                        "Post",
                        "500",
                        "10",
                        "2,0",
                        "1,5",
                        "Deckbelagserneuerung",
                        "Alle Felder",
                        "20000",
                        "5000",
                        "3000"});
            table2.AddRow(new string[] {
                        "2",
                        "Projekt 1",
                        "Post",
                        "Bahnhof",
                        "600",
                        "9",
                        "1,5",
                        "1,1",
                        "Erneuerung Oberbau",
                        "Gleicher Name",
                        "15000",
                        "4000",
                        "2000"});
            table2.AddRow(new string[] {
                        "3",
                        "Projekt 2",
                        "",
                        "",
                        "700",
                        "8",
                        "",
                        "",
                        "",
                        "Pflichtfelder",
                        "",
                        "",
                        ""});
#line 17
 testRunner.When("ich folgende realisierte Massnahme eingebe:", ((string)(null)), table2, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname",
                        "Bezeichnung von",
                        "Bezeichnung bis",
                        "Länge",
                        "Breite Fahrbahn",
                        "Breite Trottoir links",
                        "Breite Trottoir rechts",
                        "Massnahmenbeschreibung Fahrbahn",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Kosten Trottoir links",
                        "Kosten Trottoir rechts"});
            table3.AddRow(new string[] {
                        "1",
                        "Projekt 1",
                        "Kirche",
                        "Post",
                        "500",
                        "10",
                        "2,0",
                        "1,5",
                        "Deckbelagserneuerung",
                        "Alle Felder",
                        "20000",
                        "5000",
                        "3000"});
            table3.AddRow(new string[] {
                        "2",
                        "Projekt 1",
                        "Post",
                        "Bahnhof",
                        "600",
                        "9",
                        "1,5",
                        "1,1",
                        "Erneuerung Oberbau",
                        "Gleicher Name",
                        "15000",
                        "4000",
                        "2000"});
            table3.AddRow(new string[] {
                        "3",
                        "Projekt 2",
                        "",
                        "",
                        "700",
                        "8",
                        "",
                        "",
                        "",
                        "Pflichtfelder",
                        "",
                        "",
                        ""});
#line 23
 testRunner.Then("sind folgende realisierte Massnahmen im System:", ((string)(null)), table3, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System berechnet die Fläche Fahrbahn (m²) nachdem der Data-Manager die realis" +
            "ierte Massnahme gespeichert hat", new string[] {
                "Manuell"}, SourceLine=32)]
        public virtual void DasSystemBerechnetDieFlacheFahrbahnMNachdemDerData_ManagerDieRealisierteMassnahmeGespeichertHat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Fläche Fahrbahn (m²) nachdem der Data-Manager die realis" +
                    "ierte Massnahme gespeichert hat", new string[] {
                        "Manuell"});
#line 33
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table4.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 34
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table4, "Gegeben sei ");
#line 38
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname",
                        "Länge",
                        "Breite Fahrbahn"});
            table5.AddRow(new string[] {
                        "1",
                        "Projekt 1",
                        "500",
                        "10"});
            table5.AddRow(new string[] {
                        "2",
                        "Projekt 2",
                        "600",
                        "9"});
#line 40
 testRunner.When("ich folgende realisierte Massnahme eingebe:", ((string)(null)), table5, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname",
                        "Fläche Fahrbahn"});
            table6.AddRow(new string[] {
                        "1",
                        "Projekt 1",
                        "5000"});
            table6.AddRow(new string[] {
                        "2",
                        "Projekt 2",
                        "5400"});
#line 45
 testRunner.Then("sind folgende realisierte Massnahmen im System:", ((string)(null)), table6, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System berechnet die Fläche Trottoir links (m²) nachdem der Data-Manager die " +
            "realisierte Massnahme gespeichert hat", new string[] {
                "Manuell"}, SourceLine=53)]
        public virtual void DasSystemBerechnetDieFlacheTrottoirLinksMNachdemDerData_ManagerDieRealisierteMassnahmeGespeichertHat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Fläche Trottoir links (m²) nachdem der Data-Manager die " +
                    "realisierte Massnahme gespeichert hat", new string[] {
                        "Manuell"});
#line 54
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table7.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 55
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table7, "Gegeben sei ");
#line 59
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname",
                        "Länge",
                        "Breite Trottoir links"});
            table8.AddRow(new string[] {
                        "1",
                        "Projekt 1",
                        "500",
                        "2,0"});
            table8.AddRow(new string[] {
                        "2",
                        "Projekt 2",
                        "600",
                        "1,5"});
#line 61
 testRunner.When("ich folgende realisierte Massnahme eingebe:", ((string)(null)), table8, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname",
                        "Fläche Trottoir rechts"});
            table9.AddRow(new string[] {
                        "1",
                        "Projekt 1",
                        "1000"});
            table9.AddRow(new string[] {
                        "2",
                        "Projekt 2",
                        "900"});
#line 66
 testRunner.Then("sind folgende realisierte Massnahmen im System:", ((string)(null)), table9, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System berechnet die Fläche Trottoir rechts (m²) nachdem der Data-Manager die" +
            " realisierte Massnahme gespeichert hat", new string[] {
                "Manuell"}, SourceLine=74)]
        public virtual void DasSystemBerechnetDieFlacheTrottoirRechtsMNachdemDerData_ManagerDieRealisierteMassnahmeGespeichertHat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Fläche Trottoir rechts (m²) nachdem der Data-Manager die" +
                    " realisierte Massnahme gespeichert hat", new string[] {
                        "Manuell"});
#line 75
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table10.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 76
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table10, "Gegeben sei ");
#line 80
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname",
                        "Länge",
                        "Breite Trottoir rechts"});
            table11.AddRow(new string[] {
                        "1",
                        "Projekt 1",
                        "500",
                        "1,5"});
            table11.AddRow(new string[] {
                        "2",
                        "Projekt 2",
                        "600",
                        "1,1"});
#line 82
 testRunner.When("ich folgende realisierte Massnahme eingebe:", ((string)(null)), table11, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname",
                        "Fläche Trottoir rechts"});
            table12.AddRow(new string[] {
                        "1",
                        "Projekt 1",
                        "750"});
            table12.AddRow(new string[] {
                        "2",
                        "Projekt 2",
                        "660"});
#line 87
 testRunner.Then("sind folgende realisierte Massnahmen im System:", ((string)(null)), table12, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann alle Attribute der realisierten Massnahme bearbeiten", new string[] {
                "Manuell"}, SourceLine=95)]
        public virtual void DerData_ManagerKannAlleAttributeDerRealisiertenMassnahmeBearbeiten()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann alle Attribute der realisierten Massnahme bearbeiten", new string[] {
                        "Manuell"});
#line 96
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table13.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 97
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table13, "Gegeben sei ");
#line 101
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname",
                        "Bezeichnung von",
                        "Bezeichnung bis",
                        "Länge",
                        "Breite Fahrbahn",
                        "Breite Trottoir links",
                        "Breite Trottoir rechts",
                        "Massnahmenbeschreibung Fahrbahn",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Kosten Trottoir links",
                        "Kosten Trottoir rechts"});
            table14.AddRow(new string[] {
                        "1",
                        "Projekt A",
                        "Post",
                        "Kirche",
                        "400",
                        "7",
                        "1,5",
                        "2,0",
                        "Erneuerung Oberbau",
                        "Alles geändert",
                        "25000",
                        "",
                        "4000"});
            table14.AddRow(new string[] {
                        "2",
                        "Projekt 1",
                        "Post",
                        "Bahnhof",
                        "600",
                        "9",
                        "1,5",
                        "1,1",
                        "Erneuerung Oberbau",
                        "Gleicher Name",
                        "15000",
                        "4000",
                        "2000"});
            table14.AddRow(new string[] {
                        "3",
                        "Projekt B",
                        "Kirche",
                        "Friedhof",
                        "800",
                        "6",
                        "1,6",
                        "1,8",
                        "Deckbelagserneuerung",
                        "Alles geändert",
                        "10000",
                        "3000",
                        "4000"});
#line 103
 testRunner.And("für Mandant \'Mandant_1\' folgende realisierte Massnahmen existieren:", ((string)(null)), table14, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname",
                        "Bezeichnung von",
                        "Bezeichnung bis",
                        "Länge",
                        "Breite Fahrbahn",
                        "Breite Trottoir links",
                        "Breite Trottoir rechts",
                        "Massnahmenbeschreibung Fahrbahn",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Kosten Trottoir links",
                        "Kosten Trottoir rechts"});
            table15.AddRow(new string[] {
                        "1",
                        "Projekt A",
                        "Post",
                        "Kirche",
                        "400",
                        "7",
                        "1,5",
                        "2,0",
                        "Erneuerung Oberbau",
                        "Alles geändert",
                        "25000",
                        "",
                        "4000"});
            table15.AddRow(new string[] {
                        "2",
                        "Projekt 1",
                        "Post",
                        "Bahnhof",
                        "600",
                        "9",
                        "1,5",
                        "1,1",
                        "Erneuerung Oberbau",
                        "Gleicher Name",
                        "15000",
                        "4000",
                        "2000"});
            table15.AddRow(new string[] {
                        "3",
                        "Projekt B",
                        "Kirche",
                        "Friedhof",
                        "800",
                        "6",
                        "1,6",
                        "1,8",
                        "Deckbelagserneuerung",
                        "Alles geändert",
                        "10000",
                        "3000",
                        "4000"});
#line 109
 testRunner.When("ich folgende folgende realisierte Massnahme eingebe:", ((string)(null)), table15, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname",
                        "Bezeichnung von",
                        "Bezeichnung bis",
                        "Länge",
                        "Breite Fahrbahn",
                        "Breite Trottoir links",
                        "Breite Trottoir rechts",
                        "Massnahmenbeschreibung Fahrbahn",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Kosten Trottoir links",
                        "Kosten Trottoir rechts"});
            table16.AddRow(new string[] {
                        "1",
                        "Projekt A",
                        "Post",
                        "Kirche",
                        "400",
                        "7",
                        "1,5",
                        "2,0",
                        "Erneuerung Oberbau",
                        "Alles geändert",
                        "25000",
                        "",
                        "4000"});
            table16.AddRow(new string[] {
                        "2",
                        "Projekt 1",
                        "Post",
                        "Bahnhof",
                        "600",
                        "9",
                        "1,5",
                        "1,1",
                        "Erneuerung Oberbau",
                        "Gleicher Name",
                        "15000",
                        "4000",
                        "2000"});
            table16.AddRow(new string[] {
                        "3",
                        "Projekt B",
                        "Kirche",
                        "Friedhof",
                        "800",
                        "6",
                        "1,6",
                        "1,8",
                        "Deckbelagserneuerung",
                        "Alles geändert",
                        "10000",
                        "3000",
                        "4000"});
#line 115
 testRunner.Then("sind folgende realisierte Massnahmen im System:", ((string)(null)), table16, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann eine realisierte Massnahme löschen", new string[] {
                "Manuell"}, SourceLine=124)]
        public virtual void DerData_ManagerKannEineRealisierteMassnahmeLoschen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann eine realisierte Massnahme löschen", new string[] {
                        "Manuell"});
#line 125
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table17.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 126
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table17, "Gegeben sei ");
#line 130
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname",
                        "Bezeichnung von",
                        "Bezeichnung bis",
                        "Länge",
                        "Breite Fahrbahn",
                        "Breite Trottoir links",
                        "Breite Trottoir rechts",
                        "Massnahmenbeschreibung Fahrbahn",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Kosten Trottoir links",
                        "Kosten Trottoir rechts"});
            table18.AddRow(new string[] {
                        "1",
                        "Projekt A",
                        "Post",
                        "Kirche",
                        "400",
                        "7",
                        "1,5",
                        "2,0",
                        "Erneuerung Oberbau",
                        "Alles geändert",
                        "25000",
                        "",
                        "4000"});
            table18.AddRow(new string[] {
                        "2",
                        "Projekt 1",
                        "Post",
                        "Bahnhof",
                        "600",
                        "9",
                        "1,5",
                        "1,1",
                        "Erneuerung Oberbau",
                        "Gleicher Name",
                        "15000",
                        "4000",
                        "2000"});
            table18.AddRow(new string[] {
                        "3",
                        "Projekt B",
                        "Kirche",
                        "Friedhof",
                        "800",
                        "6",
                        "1,6",
                        "1,8",
                        "Deckbelagserneuerung",
                        "Alles geändert",
                        "10000",
                        "3000",
                        "4000"});
#line 132
 testRunner.And("für Mandant \'Mandant_1\' folgende realisierte Massnahmen existieren:", ((string)(null)), table18, "Und ");
#line 138
 testRunner.When("ich die realisierte Massname mit der Id \'2\' lösche", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname",
                        "Bezeichnung von",
                        "Bezeichnung bis",
                        "Länge",
                        "Breite Fahrbahn",
                        "Breite Trottoir links",
                        "Breite Trottoir rechts",
                        "Massnahmenbeschreibung Fahrbahn",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Kosten Trottoir links",
                        "Kosten Trottoir rechts"});
            table19.AddRow(new string[] {
                        "1",
                        "Projekt A",
                        "Post",
                        "Kirche",
                        "400",
                        "7",
                        "1,5",
                        "2,0",
                        "Erneuerung Oberbau",
                        "Alles geändert",
                        "25000",
                        "",
                        "4000"});
            table19.AddRow(new string[] {
                        "3",
                        "Projekt B",
                        "Kirche",
                        "Friedhof",
                        "800",
                        "6",
                        "1,6",
                        "1,8",
                        "Deckbelagserneuerung",
                        "Alles geändert",
                        "10000",
                        "3000",
                        "4000"});
#line 140
 testRunner.Then("sind folgende realisierte Massnahmen im System:", ((string)(null)), table19, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System stellt die Konsistenz der Trottoir Einträge zu „Breite“ und „Kosten“ s" +
            "icher", new string[] {
                "Manuell"}, SourceLine=147)]
        public virtual void DasSystemStelltDieKonsistenzDerTrottoirEintrageZuBreiteUndKostenSicher()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System stellt die Konsistenz der Trottoir Einträge zu „Breite“ und „Kosten“ s" +
                    "icher", new string[] {
                        "Manuell"});
#line 148
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System fordert den Data-Manager nach dem Speichern der realisierten Massnahme" +
            " zur Anpassung der Zustände auf", new string[] {
                "Manuell"}, SourceLine=153)]
        public virtual void DasSystemFordertDenData_ManagerNachDemSpeichernDerRealisiertenMassnahmeZurAnpassungDerZustandeAuf()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System fordert den Data-Manager nach dem Speichern der realisierten Massnahme" +
                    " zur Anpassung der Zustände auf", new string[] {
                        "Manuell"});
#line 154
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System listet alle realisierten Massnahmen in einer Übersichtstabelle", new string[] {
                "Manuell"}, SourceLine=158)]
        public virtual void DasSystemListetAlleRealisiertenMassnahmenInEinerUbersichtstabelle()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System listet alle realisierten Massnahmen in einer Übersichtstabelle", new string[] {
                        "Manuell"});
#line 159
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann in einem Textfeld nach Projektname suchen", new string[] {
                "Manuell"}, SourceLine=163)]
        public virtual void DerData_ManagerKannInEinemTextfeldNachProjektnameSuchen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann in einem Textfeld nach Projektname suchen", new string[] {
                        "Manuell"});
#line 164
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table20.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 165
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table20, "Gegeben sei ");
#line 169
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname"});
            table21.AddRow(new string[] {
                        "1",
                        "ABC"});
            table21.AddRow(new string[] {
                        "2",
                        "CDE"});
            table21.AddRow(new string[] {
                        "3",
                        "ABC DEF"});
#line 171
 testRunner.And("für Mandant \'Mandant_1\' folgende realisierte Massnahmen existieren:", ((string)(null)), table21, "Und ");
#line 177
 testRunner.And("ich nach Projektname \'DE\' filtere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname"});
            table22.AddRow(new string[] {
                        "2",
                        "CDE"});
            table22.AddRow(new string[] {
                        "3",
                        "ABC DEF"});
#line 179
 testRunner.Then("werden folgende realisierte Massnahmen angezeigt:", ((string)(null)), table22, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Beim Jahresabschluss werden die erfassten realisierten Massnahmen vom System dem " +
            "Jahr des Jahresabschlusses zugeordnet", new string[] {
                "Manuell"}, SourceLine=186)]
        public virtual void BeimJahresabschlussWerdenDieErfasstenRealisiertenMassnahmenVomSystemDemJahrDesJahresabschlussesZugeordnet()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Beim Jahresabschluss werden die erfassten realisierten Massnahmen vom System dem " +
                    "Jahr des Jahresabschlusses zugeordnet", new string[] {
                        "Manuell"});
#line 187
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table23.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 188
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table23, "Gegeben sei ");
#line 192
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname",
                        "Bezeichnung von",
                        "Bezeichnung bis",
                        "Länge",
                        "Breite Fahrbahn",
                        "Breite Trottoir links",
                        "Breite Trottoir rechts",
                        "Massnahmenbeschreibung Fahrbahn",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Kosten Trottoir links",
                        "Kosten Trottoir rechts"});
            table24.AddRow(new string[] {
                        "1",
                        "Projekt A",
                        "Post",
                        "Kirche",
                        "400",
                        "7",
                        "1,5",
                        "2,0",
                        "Erneuerung Oberbau",
                        "Alles geändert",
                        "25000",
                        "",
                        "4000"});
            table24.AddRow(new string[] {
                        "2",
                        "Projekt 1",
                        "Post",
                        "Bahnhof",
                        "600",
                        "9",
                        "1,5",
                        "1,1",
                        "Erneuerung Oberbau",
                        "Gleicher Name",
                        "15000",
                        "4000",
                        "2000"});
            table24.AddRow(new string[] {
                        "3",
                        "Projekt B",
                        "Kirche",
                        "Friedhof",
                        "800",
                        "6",
                        "1,6",
                        "1,8",
                        "Deckbelagserneuerung",
                        "Alles geändert",
                        "10000",
                        "3000",
                        "4000"});
#line 194
 testRunner.And("für Mandant \'Mandant_1\' folgende realisierte Massnahmen existieren:", ((string)(null)), table24, "Und ");
#line 200
 testRunner.And("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname",
                        "Bezeichnung von",
                        "Bezeichnung bis",
                        "Länge",
                        "Breite Fahrbahn",
                        "Breite Trottoir links",
                        "Breite Trottoir rechts",
                        "Massnahmenbeschreibung Fahrbahn",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Kosten Trottoir links",
                        "Kosten Trottoir rechts"});
#line 202
 testRunner.Then("werden folgende realisierte Massnahmen angezeigt:", ((string)(null)), table25, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("R2 - Realisierte Massnahmen im Strassennamenmodus erfassen")]
    public partial class R2_RealisierteMassnahmenImStrassennamenmodusErfassenFeature_NUnit
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "R2.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "R2 - Realisierte Massnahmen im Strassennamenmodus erfassen", "\tAls Data-Manager,\r\n\twill ich realisierte Massnahmen im Strassennamenmodus erfass" +
                    "en\r\n\tdamit ich in Auswertungen einen Überblick über meine Baumassnahmen bekomme", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann realisierte Massnahmen erfassen")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannRealisierteMassnahmenErfassen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann realisierte Massnahmen erfassen", new string[] {
                        "Manuell"});
#line 10
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table1.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 11
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table1, "Gegeben sei ");
#line 15
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname",
                        "Bezeichnung von",
                        "Bezeichnung bis",
                        "Länge",
                        "Breite Fahrbahn",
                        "Breite Trottoir links",
                        "Breite Trottoir rechts",
                        "Massnahmenbeschreibung Fahrbahn",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Kosten Trottoir links",
                        "Kosten Trottoir rechts"});
            table2.AddRow(new string[] {
                        "1",
                        "Projekt 1",
                        "Kirche",
                        "Post",
                        "500",
                        "10",
                        "2,0",
                        "1,5",
                        "Deckbelagserneuerung",
                        "Alle Felder",
                        "20000",
                        "5000",
                        "3000"});
            table2.AddRow(new string[] {
                        "2",
                        "Projekt 1",
                        "Post",
                        "Bahnhof",
                        "600",
                        "9",
                        "1,5",
                        "1,1",
                        "Erneuerung Oberbau",
                        "Gleicher Name",
                        "15000",
                        "4000",
                        "2000"});
            table2.AddRow(new string[] {
                        "3",
                        "Projekt 2",
                        "",
                        "",
                        "700",
                        "8",
                        "",
                        "",
                        "",
                        "Pflichtfelder",
                        "",
                        "",
                        ""});
#line 17
 testRunner.When("ich folgende realisierte Massnahme eingebe:", ((string)(null)), table2, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname",
                        "Bezeichnung von",
                        "Bezeichnung bis",
                        "Länge",
                        "Breite Fahrbahn",
                        "Breite Trottoir links",
                        "Breite Trottoir rechts",
                        "Massnahmenbeschreibung Fahrbahn",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Kosten Trottoir links",
                        "Kosten Trottoir rechts"});
            table3.AddRow(new string[] {
                        "1",
                        "Projekt 1",
                        "Kirche",
                        "Post",
                        "500",
                        "10",
                        "2,0",
                        "1,5",
                        "Deckbelagserneuerung",
                        "Alle Felder",
                        "20000",
                        "5000",
                        "3000"});
            table3.AddRow(new string[] {
                        "2",
                        "Projekt 1",
                        "Post",
                        "Bahnhof",
                        "600",
                        "9",
                        "1,5",
                        "1,1",
                        "Erneuerung Oberbau",
                        "Gleicher Name",
                        "15000",
                        "4000",
                        "2000"});
            table3.AddRow(new string[] {
                        "3",
                        "Projekt 2",
                        "",
                        "",
                        "700",
                        "8",
                        "",
                        "",
                        "",
                        "Pflichtfelder",
                        "",
                        "",
                        ""});
#line 23
 testRunner.Then("sind folgende realisierte Massnahmen im System:", ((string)(null)), table3, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System berechnet die Fläche Fahrbahn (m²) nachdem der Data-Manager die realis" +
            "ierte Massnahme gespeichert hat")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemBerechnetDieFlacheFahrbahnMNachdemDerData_ManagerDieRealisierteMassnahmeGespeichertHat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Fläche Fahrbahn (m²) nachdem der Data-Manager die realis" +
                    "ierte Massnahme gespeichert hat", new string[] {
                        "Manuell"});
#line 33
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table4.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 34
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table4, "Gegeben sei ");
#line 38
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname",
                        "Länge",
                        "Breite Fahrbahn"});
            table5.AddRow(new string[] {
                        "1",
                        "Projekt 1",
                        "500",
                        "10"});
            table5.AddRow(new string[] {
                        "2",
                        "Projekt 2",
                        "600",
                        "9"});
#line 40
 testRunner.When("ich folgende realisierte Massnahme eingebe:", ((string)(null)), table5, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname",
                        "Fläche Fahrbahn"});
            table6.AddRow(new string[] {
                        "1",
                        "Projekt 1",
                        "5000"});
            table6.AddRow(new string[] {
                        "2",
                        "Projekt 2",
                        "5400"});
#line 45
 testRunner.Then("sind folgende realisierte Massnahmen im System:", ((string)(null)), table6, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System berechnet die Fläche Trottoir links (m²) nachdem der Data-Manager die " +
            "realisierte Massnahme gespeichert hat")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemBerechnetDieFlacheTrottoirLinksMNachdemDerData_ManagerDieRealisierteMassnahmeGespeichertHat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Fläche Trottoir links (m²) nachdem der Data-Manager die " +
                    "realisierte Massnahme gespeichert hat", new string[] {
                        "Manuell"});
#line 54
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table7.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 55
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table7, "Gegeben sei ");
#line 59
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname",
                        "Länge",
                        "Breite Trottoir links"});
            table8.AddRow(new string[] {
                        "1",
                        "Projekt 1",
                        "500",
                        "2,0"});
            table8.AddRow(new string[] {
                        "2",
                        "Projekt 2",
                        "600",
                        "1,5"});
#line 61
 testRunner.When("ich folgende realisierte Massnahme eingebe:", ((string)(null)), table8, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname",
                        "Fläche Trottoir rechts"});
            table9.AddRow(new string[] {
                        "1",
                        "Projekt 1",
                        "1000"});
            table9.AddRow(new string[] {
                        "2",
                        "Projekt 2",
                        "900"});
#line 66
 testRunner.Then("sind folgende realisierte Massnahmen im System:", ((string)(null)), table9, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System berechnet die Fläche Trottoir rechts (m²) nachdem der Data-Manager die" +
            " realisierte Massnahme gespeichert hat")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemBerechnetDieFlacheTrottoirRechtsMNachdemDerData_ManagerDieRealisierteMassnahmeGespeichertHat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Fläche Trottoir rechts (m²) nachdem der Data-Manager die" +
                    " realisierte Massnahme gespeichert hat", new string[] {
                        "Manuell"});
#line 75
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table10.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 76
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table10, "Gegeben sei ");
#line 80
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname",
                        "Länge",
                        "Breite Trottoir rechts"});
            table11.AddRow(new string[] {
                        "1",
                        "Projekt 1",
                        "500",
                        "1,5"});
            table11.AddRow(new string[] {
                        "2",
                        "Projekt 2",
                        "600",
                        "1,1"});
#line 82
 testRunner.When("ich folgende realisierte Massnahme eingebe:", ((string)(null)), table11, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname",
                        "Fläche Trottoir rechts"});
            table12.AddRow(new string[] {
                        "1",
                        "Projekt 1",
                        "750"});
            table12.AddRow(new string[] {
                        "2",
                        "Projekt 2",
                        "660"});
#line 87
 testRunner.Then("sind folgende realisierte Massnahmen im System:", ((string)(null)), table12, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann alle Attribute der realisierten Massnahme bearbeiten")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannAlleAttributeDerRealisiertenMassnahmeBearbeiten()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann alle Attribute der realisierten Massnahme bearbeiten", new string[] {
                        "Manuell"});
#line 96
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table13.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 97
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table13, "Gegeben sei ");
#line 101
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname",
                        "Bezeichnung von",
                        "Bezeichnung bis",
                        "Länge",
                        "Breite Fahrbahn",
                        "Breite Trottoir links",
                        "Breite Trottoir rechts",
                        "Massnahmenbeschreibung Fahrbahn",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Kosten Trottoir links",
                        "Kosten Trottoir rechts"});
            table14.AddRow(new string[] {
                        "1",
                        "Projekt A",
                        "Post",
                        "Kirche",
                        "400",
                        "7",
                        "1,5",
                        "2,0",
                        "Erneuerung Oberbau",
                        "Alles geändert",
                        "25000",
                        "",
                        "4000"});
            table14.AddRow(new string[] {
                        "2",
                        "Projekt 1",
                        "Post",
                        "Bahnhof",
                        "600",
                        "9",
                        "1,5",
                        "1,1",
                        "Erneuerung Oberbau",
                        "Gleicher Name",
                        "15000",
                        "4000",
                        "2000"});
            table14.AddRow(new string[] {
                        "3",
                        "Projekt B",
                        "Kirche",
                        "Friedhof",
                        "800",
                        "6",
                        "1,6",
                        "1,8",
                        "Deckbelagserneuerung",
                        "Alles geändert",
                        "10000",
                        "3000",
                        "4000"});
#line 103
 testRunner.And("für Mandant \'Mandant_1\' folgende realisierte Massnahmen existieren:", ((string)(null)), table14, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname",
                        "Bezeichnung von",
                        "Bezeichnung bis",
                        "Länge",
                        "Breite Fahrbahn",
                        "Breite Trottoir links",
                        "Breite Trottoir rechts",
                        "Massnahmenbeschreibung Fahrbahn",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Kosten Trottoir links",
                        "Kosten Trottoir rechts"});
            table15.AddRow(new string[] {
                        "1",
                        "Projekt A",
                        "Post",
                        "Kirche",
                        "400",
                        "7",
                        "1,5",
                        "2,0",
                        "Erneuerung Oberbau",
                        "Alles geändert",
                        "25000",
                        "",
                        "4000"});
            table15.AddRow(new string[] {
                        "2",
                        "Projekt 1",
                        "Post",
                        "Bahnhof",
                        "600",
                        "9",
                        "1,5",
                        "1,1",
                        "Erneuerung Oberbau",
                        "Gleicher Name",
                        "15000",
                        "4000",
                        "2000"});
            table15.AddRow(new string[] {
                        "3",
                        "Projekt B",
                        "Kirche",
                        "Friedhof",
                        "800",
                        "6",
                        "1,6",
                        "1,8",
                        "Deckbelagserneuerung",
                        "Alles geändert",
                        "10000",
                        "3000",
                        "4000"});
#line 109
 testRunner.When("ich folgende folgende realisierte Massnahme eingebe:", ((string)(null)), table15, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname",
                        "Bezeichnung von",
                        "Bezeichnung bis",
                        "Länge",
                        "Breite Fahrbahn",
                        "Breite Trottoir links",
                        "Breite Trottoir rechts",
                        "Massnahmenbeschreibung Fahrbahn",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Kosten Trottoir links",
                        "Kosten Trottoir rechts"});
            table16.AddRow(new string[] {
                        "1",
                        "Projekt A",
                        "Post",
                        "Kirche",
                        "400",
                        "7",
                        "1,5",
                        "2,0",
                        "Erneuerung Oberbau",
                        "Alles geändert",
                        "25000",
                        "",
                        "4000"});
            table16.AddRow(new string[] {
                        "2",
                        "Projekt 1",
                        "Post",
                        "Bahnhof",
                        "600",
                        "9",
                        "1,5",
                        "1,1",
                        "Erneuerung Oberbau",
                        "Gleicher Name",
                        "15000",
                        "4000",
                        "2000"});
            table16.AddRow(new string[] {
                        "3",
                        "Projekt B",
                        "Kirche",
                        "Friedhof",
                        "800",
                        "6",
                        "1,6",
                        "1,8",
                        "Deckbelagserneuerung",
                        "Alles geändert",
                        "10000",
                        "3000",
                        "4000"});
#line 115
 testRunner.Then("sind folgende realisierte Massnahmen im System:", ((string)(null)), table16, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann eine realisierte Massnahme löschen")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannEineRealisierteMassnahmeLoschen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann eine realisierte Massnahme löschen", new string[] {
                        "Manuell"});
#line 125
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table17.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 126
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table17, "Gegeben sei ");
#line 130
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname",
                        "Bezeichnung von",
                        "Bezeichnung bis",
                        "Länge",
                        "Breite Fahrbahn",
                        "Breite Trottoir links",
                        "Breite Trottoir rechts",
                        "Massnahmenbeschreibung Fahrbahn",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Kosten Trottoir links",
                        "Kosten Trottoir rechts"});
            table18.AddRow(new string[] {
                        "1",
                        "Projekt A",
                        "Post",
                        "Kirche",
                        "400",
                        "7",
                        "1,5",
                        "2,0",
                        "Erneuerung Oberbau",
                        "Alles geändert",
                        "25000",
                        "",
                        "4000"});
            table18.AddRow(new string[] {
                        "2",
                        "Projekt 1",
                        "Post",
                        "Bahnhof",
                        "600",
                        "9",
                        "1,5",
                        "1,1",
                        "Erneuerung Oberbau",
                        "Gleicher Name",
                        "15000",
                        "4000",
                        "2000"});
            table18.AddRow(new string[] {
                        "3",
                        "Projekt B",
                        "Kirche",
                        "Friedhof",
                        "800",
                        "6",
                        "1,6",
                        "1,8",
                        "Deckbelagserneuerung",
                        "Alles geändert",
                        "10000",
                        "3000",
                        "4000"});
#line 132
 testRunner.And("für Mandant \'Mandant_1\' folgende realisierte Massnahmen existieren:", ((string)(null)), table18, "Und ");
#line 138
 testRunner.When("ich die realisierte Massname mit der Id \'2\' lösche", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname",
                        "Bezeichnung von",
                        "Bezeichnung bis",
                        "Länge",
                        "Breite Fahrbahn",
                        "Breite Trottoir links",
                        "Breite Trottoir rechts",
                        "Massnahmenbeschreibung Fahrbahn",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Kosten Trottoir links",
                        "Kosten Trottoir rechts"});
            table19.AddRow(new string[] {
                        "1",
                        "Projekt A",
                        "Post",
                        "Kirche",
                        "400",
                        "7",
                        "1,5",
                        "2,0",
                        "Erneuerung Oberbau",
                        "Alles geändert",
                        "25000",
                        "",
                        "4000"});
            table19.AddRow(new string[] {
                        "3",
                        "Projekt B",
                        "Kirche",
                        "Friedhof",
                        "800",
                        "6",
                        "1,6",
                        "1,8",
                        "Deckbelagserneuerung",
                        "Alles geändert",
                        "10000",
                        "3000",
                        "4000"});
#line 140
 testRunner.Then("sind folgende realisierte Massnahmen im System:", ((string)(null)), table19, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System stellt die Konsistenz der Trottoir Einträge zu „Breite“ und „Kosten“ s" +
            "icher")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemStelltDieKonsistenzDerTrottoirEintrageZuBreiteUndKostenSicher()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System stellt die Konsistenz der Trottoir Einträge zu „Breite“ und „Kosten“ s" +
                    "icher", new string[] {
                        "Manuell"});
#line 148
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System fordert den Data-Manager nach dem Speichern der realisierten Massnahme" +
            " zur Anpassung der Zustände auf")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemFordertDenData_ManagerNachDemSpeichernDerRealisiertenMassnahmeZurAnpassungDerZustandeAuf()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System fordert den Data-Manager nach dem Speichern der realisierten Massnahme" +
                    " zur Anpassung der Zustände auf", new string[] {
                        "Manuell"});
#line 154
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System listet alle realisierten Massnahmen in einer Übersichtstabelle")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemListetAlleRealisiertenMassnahmenInEinerUbersichtstabelle()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System listet alle realisierten Massnahmen in einer Übersichtstabelle", new string[] {
                        "Manuell"});
#line 159
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann in einem Textfeld nach Projektname suchen")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannInEinemTextfeldNachProjektnameSuchen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann in einem Textfeld nach Projektname suchen", new string[] {
                        "Manuell"});
#line 164
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table20.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 165
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table20, "Gegeben sei ");
#line 169
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname"});
            table21.AddRow(new string[] {
                        "1",
                        "ABC"});
            table21.AddRow(new string[] {
                        "2",
                        "CDE"});
            table21.AddRow(new string[] {
                        "3",
                        "ABC DEF"});
#line 171
 testRunner.And("für Mandant \'Mandant_1\' folgende realisierte Massnahmen existieren:", ((string)(null)), table21, "Und ");
#line 177
 testRunner.And("ich nach Projektname \'DE\' filtere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname"});
            table22.AddRow(new string[] {
                        "2",
                        "CDE"});
            table22.AddRow(new string[] {
                        "3",
                        "ABC DEF"});
#line 179
 testRunner.Then("werden folgende realisierte Massnahmen angezeigt:", ((string)(null)), table22, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Beim Jahresabschluss werden die erfassten realisierten Massnahmen vom System dem " +
            "Jahr des Jahresabschlusses zugeordnet")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void BeimJahresabschlussWerdenDieErfasstenRealisiertenMassnahmenVomSystemDemJahrDesJahresabschlussesZugeordnet()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Beim Jahresabschluss werden die erfassten realisierten Massnahmen vom System dem " +
                    "Jahr des Jahresabschlusses zugeordnet", new string[] {
                        "Manuell"});
#line 187
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table23.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 188
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table23, "Gegeben sei ");
#line 192
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname",
                        "Bezeichnung von",
                        "Bezeichnung bis",
                        "Länge",
                        "Breite Fahrbahn",
                        "Breite Trottoir links",
                        "Breite Trottoir rechts",
                        "Massnahmenbeschreibung Fahrbahn",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Kosten Trottoir links",
                        "Kosten Trottoir rechts"});
            table24.AddRow(new string[] {
                        "1",
                        "Projekt A",
                        "Post",
                        "Kirche",
                        "400",
                        "7",
                        "1,5",
                        "2,0",
                        "Erneuerung Oberbau",
                        "Alles geändert",
                        "25000",
                        "",
                        "4000"});
            table24.AddRow(new string[] {
                        "2",
                        "Projekt 1",
                        "Post",
                        "Bahnhof",
                        "600",
                        "9",
                        "1,5",
                        "1,1",
                        "Erneuerung Oberbau",
                        "Gleicher Name",
                        "15000",
                        "4000",
                        "2000"});
            table24.AddRow(new string[] {
                        "3",
                        "Projekt B",
                        "Kirche",
                        "Friedhof",
                        "800",
                        "6",
                        "1,6",
                        "1,8",
                        "Deckbelagserneuerung",
                        "Alles geändert",
                        "10000",
                        "3000",
                        "4000"});
#line 194
 testRunner.And("für Mandant \'Mandant_1\' folgende realisierte Massnahmen existieren:", ((string)(null)), table24, "Und ");
#line 200
 testRunner.And("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Projektname",
                        "Bezeichnung von",
                        "Bezeichnung bis",
                        "Länge",
                        "Breite Fahrbahn",
                        "Breite Trottoir links",
                        "Breite Trottoir rechts",
                        "Massnahmenbeschreibung Fahrbahn",
                        "Beschreibung",
                        "Kosten Fahrbahn",
                        "Kosten Trottoir links",
                        "Kosten Trottoir rechts"});
#line 202
 testRunner.Then("werden folgende realisierte Massnahmen angezeigt:", ((string)(null)), table25, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
