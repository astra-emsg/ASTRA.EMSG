// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ASTRA.EMSG.IntegrationTests.Features.Z_ZustandeUndMassnahmenvorschlage
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Z4 - Im GIS-Modus Inspektionsrouten planen", Description="\tAls Data-Manager,\r\n\twill ich im GIS-Modus Inspektionsrouten planen\r\n\tdamit ich m" +
        "eine Strassenabschnitte in der optimalen Reihenfolge inspizieren kann", SourceFile="Features\\Z - Zustände und Massnahmenvorschläge\\Z4.feature", SourceLine=0)]
    public partial class Z4_ImGIS_ModusInspektionsroutenPlanenFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Z4.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "Z4 - Im GIS-Modus Inspektionsrouten planen", "\tAls Data-Manager,\r\n\twill ich im GIS-Modus Inspektionsrouten planen\r\n\tdamit ich m" +
                    "eine Strassenabschnitte in der optimalen Reihenfolge inspizieren kann", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table1.AddRow(new string[] {
                        "Mandant_1",
                        "GIS"});
#line 7
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table1, "Gegeben sei ");
#line 10
testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 11
testRunner.And("ich öffne die Seite \'Inspektionsroute planen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung"});
            table2.AddRow(new string[] {
                        "1",
                        "Bahnstrasse",
                        "-",
                        "-",
                        "IC",
                        "Beton",
                        "5,75",
                        "KeinTrottoir",
                        "-",
                        "-",
                        "Private",
                        "Mitterndorf",
                        "Nein"});
            table2.AddRow(new string[] {
                        "2",
                        "Moosgasse",
                        "0",
                        "2",
                        "IB",
                        "Asphalt",
                        "5,50",
                        "BeideSeiten",
                        "1,5",
                        "2",
                        "Gemeinde",
                        "Ortsteil Mossbrunn",
                        "Nein"});
            table2.AddRow(new string[] {
                        "3",
                        "Hauptstrasse",
                        "2,25",
                        "1,5",
                        "II",
                        "Beton",
                        "7",
                        "NochNichtErfasst",
                        "-",
                        "-",
                        "Korporation",
                        "Ortsteil Gramatneusiedl",
                        "Nein"});
            table2.AddRow(new string[] {
                        "4",
                        "Klostergasse",
                        "2",
                        "-",
                        "II",
                        "Beton",
                        "7",
                        "Links",
                        "2,1",
                        "-",
                        "Gemeinde",
                        "Ortsteil Gramatneusiedl",
                        "Nein"});
#line 12
testRunner.And("für Mandant \'Mandant_1\' existieren folgende Netzinformationen:", ((string)(null)), table2, "Und ");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann auf der Karte Strassenabschnitte selektieren", new string[] {
                "Manuell"}, SourceLine=19)]
        public virtual void DerData_ManagerKannAufDerKarteStrassenabschnitteSelektieren()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann auf der Karte Strassenabschnitte selektieren", new string[] {
                        "Manuell"});
#line 20
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 21
testRunner.Given("ich will eine Insepktionsroute zusammenstellen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 22
testRunner.And("ich öffne die Seite \'Inspektionsroute planen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 23
testRunner.And("ich wähle mit einem Klick auf die Karte einen Strassenabschnitt", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 24
testRunner.Then("wird der Strassenabschnitt der Inpektionsroute zugeordnet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System visualisiert selektierte Strassenabschnitte auf der Karte", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DasSystemVisualisiertSelektierteStrassenabschnitteAufDerKarte()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System visualisiert selektierte Strassenabschnitte auf der Karte", new string[] {
                        "Manuell"});
#line 29
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System fügt selektierte Strassenabschnitte zu einer Inspektionsroute hinzu", new string[] {
                "Manuell"}, SourceLine=33)]
        public virtual void DasSystemFugtSelektierteStrassenabschnitteZuEinerInspektionsrouteHinzu()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System fügt selektierte Strassenabschnitte zu einer Inspektionsroute hinzu", new string[] {
                        "Manuell"});
#line 34
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 35
testRunner.Given("ich erstelle eine neue Inspektionsroute mit der Bezeichnung \'Inspektionsroute1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 36
testRunner.When("ich den Strassenabschnitt mit der Id \'1\' auf der Karte selektiere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung"});
            table3.AddRow(new string[] {
                        "1",
                        "Bahnstrasse",
                        "-",
                        "-",
                        "IC",
                        "Beton",
                        "5,75",
                        "KeinTrottoir",
                        "-",
                        "-",
                        "Private",
                        "Mitterndorf",
                        "Nein"});
#line 37
testRunner.Then("ist folgender Strassenabschnitt der \'Inspektionsroute1\' zugeordnet:", ((string)(null)), table3, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann die Reihenfolge der Strassenabschnitte auf der Inspektionsr" +
            "oute verändern", new string[] {
                "Manuell"}, SourceLine=43)]
        public virtual void DerData_ManagerKannDieReihenfolgeDerStrassenabschnitteAufDerInspektionsrouteVerandern()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann die Reihenfolge der Strassenabschnitte auf der Inspektionsr" +
                    "oute verändern", new string[] {
                        "Manuell"});
#line 44
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 45
testRunner.Given("für Mandant \'Mandant_1\' existiert eine Inspektionsroute mit der Bezeichnung \'Insp" +
                    "ektionsroute1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Reihenfolge"});
            table4.AddRow(new string[] {
                        "1",
                        "Bahnstrasse",
                        "-",
                        "-",
                        "IC",
                        "Beton",
                        "5,75",
                        "KeinTrottoir",
                        "-",
                        "-",
                        "Private",
                        "Mitterndorf",
                        "Nein",
                        "1"});
            table4.AddRow(new string[] {
                        "2",
                        "Moosgasse",
                        "0",
                        "2",
                        "IB",
                        "Asphalt",
                        "5,50",
                        "BeideSeiten",
                        "1,5",
                        "2",
                        "Gemeinde",
                        "Ortsteil Mossbrunn",
                        "Nein",
                        "2"});
            table4.AddRow(new string[] {
                        "3",
                        "Hauptstrasse",
                        "2,25",
                        "1,5",
                        "II",
                        "Beton",
                        "7",
                        "NochNichtErfasst",
                        "-",
                        "-",
                        "Korporation",
                        "Ortsteil Gramatneusiedl",
                        "Nein",
                        "3"});
            table4.AddRow(new string[] {
                        "4",
                        "Klostergasse",
                        "2",
                        "-",
                        "II",
                        "Beton",
                        "7",
                        "Links",
                        "2,1",
                        "-",
                        "Gemeinde",
                        "Ortsteil Gramatneusiedl",
                        "Nein",
                        "4"});
#line 46
testRunner.And("dieser Inspektionsroute sind folgende Strassenabschnitte zugeordnet:", ((string)(null)), table4, "Und ");
#line 52
 testRunner.When("ich die Platzierung von dem Strassenabschnitt mit der Id \'3\' erhöhe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Reihenfolge"});
            table5.AddRow(new string[] {
                        "1",
                        "Bahnstrasse",
                        "-",
                        "-",
                        "IC",
                        "Beton",
                        "5,75",
                        "KeinTrottoir",
                        "-",
                        "-",
                        "Private",
                        "Mitterndorf",
                        "Nein",
                        "1"});
            table5.AddRow(new string[] {
                        "2",
                        "Moosgasse",
                        "0",
                        "2",
                        "IB",
                        "Asphalt",
                        "5,50",
                        "BeideSeiten",
                        "1,5",
                        "2",
                        "Gemeinde",
                        "Ortsteil Mossbrunn",
                        "Nein",
                        "3"});
            table5.AddRow(new string[] {
                        "3",
                        "Hauptstrasse",
                        "2,25",
                        "1,5",
                        "II",
                        "Beton",
                        "7",
                        "NochNichtErfasst",
                        "-",
                        "-",
                        "Korporation",
                        "Ortsteil Gramatneusiedl",
                        "Nein",
                        "2"});
            table5.AddRow(new string[] {
                        "4",
                        "Klostergasse",
                        "2",
                        "-",
                        "II",
                        "Beton",
                        "7",
                        "Links",
                        "2,1",
                        "-",
                        "Gemeinde",
                        "Ortsteil Gramatneusiedl",
                        "Nein",
                        "4"});
#line 53
 testRunner.Then("sind folgende Daten im System:", ((string)(null)), table5, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann die Liste der Strassenabschnitte als Inspektionsroute (mit " +
            "einem Namen) speichern", new string[] {
                "Manuell"}, SourceLine=62)]
        public virtual void DerData_ManagerKannDieListeDerStrassenabschnitteAlsInspektionsrouteMitEinemNamenSpeichern()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann die Liste der Strassenabschnitte als Inspektionsroute (mit " +
                    "einem Namen) speichern", new string[] {
                        "Manuell"});
#line 63
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Bezeichnung",
                        "Checkoutgis_id"});
            table6.AddRow(new string[] {
                        "1",
                        "Stadtteil_nord",
                        ""});
            table6.AddRow(new string[] {
                        "2",
                        "Stadtteil_süden",
                        ""});
            table6.AddRow(new string[] {
                        "3",
                        "Stadtteil_osten",
                        ""});
#line 64
testRunner.Given("für Mandant \'Mandant_1\' existieren folgende Inspektionsrouten:", ((string)(null)), table6, "Gegeben sei ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Reihenfolge"});
            table7.AddRow(new string[] {
                        "1",
                        "Bahnstrasse",
                        "-",
                        "-",
                        "IC",
                        "Beton",
                        "5,75",
                        "KeinTrottoir",
                        "-",
                        "-",
                        "Private",
                        "Mitterndorf",
                        "Nein",
                        "1"});
            table7.AddRow(new string[] {
                        "2",
                        "Moosgasse",
                        "0",
                        "2",
                        "IB",
                        "Asphalt",
                        "5,50",
                        "BeideSeiten",
                        "1,5",
                        "2",
                        "Gemeinde",
                        "Ortsteil Mossbrunn",
                        "Nein",
                        "2"});
#line 69
testRunner.And("ich habe folgende Strassenabschnitte ausgewählt:", ((string)(null)), table7, "Und ");
#line 73
testRunner.When("ich diese Liste mit Strassenabschnitten mit der Bezeichnung \'Stadtteil_westen\' sp" +
                    "eichere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Bezeichnung",
                        "Checkoutgis_id"});
            table8.AddRow(new string[] {
                        "1",
                        "Stadtteil_nord",
                        ""});
            table8.AddRow(new string[] {
                        "2",
                        "Stadtteil_süden",
                        ""});
            table8.AddRow(new string[] {
                        "3",
                        "Stadtteil_osten",
                        ""});
            table8.AddRow(new string[] {
                        "4",
                        "Stadtteil_westen",
                        ""});
#line 74
testRunner.Then("sind folgende Daten im System:", ((string)(null)), table8, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann bestehende Inspektionsrouten bearbeiten", new string[] {
                "Manuell"}, SourceLine=83)]
        public virtual void DerData_ManagerKannBestehendeInspektionsroutenBearbeiten()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann bestehende Inspektionsrouten bearbeiten", new string[] {
                        "Manuell"});
#line 84
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 85
testRunner.Given("eine bestehende Inspektionsroute", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 86
testRunner.And("der Data-Manager wählt \'Bearbeiten Inspektionsroute\' aus", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 87
testRunner.And("der Data-Manager wählt zugeordnete Strassenabschnitte auf der Karte aus", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 88
testRunner.And("der Data-Manager wählt \'Inspektionsroute\' speichern aus", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 89
testRunner.Then("wird die bearbeitet Inpektionsroute gespeichert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte aus einer Inspektionsrouten löschen.", new string[] {
                "Manuell"}, SourceLine=93)]
        public virtual void DerData_ManagerKannStrassenabschnitteAusEinerInspektionsroutenLoschen_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann Strassenabschnitte aus einer Inspektionsrouten löschen.", new string[] {
                        "Manuell"});
#line 94
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Bezeichnung",
                        "Checkoutgis_id"});
            table9.AddRow(new string[] {
                        "1",
                        "Inspektionsroute_1",
                        ""});
#line 95
testRunner.Given("es existiert für Mandant \'Mandant_1\' folgende Inspektionsroute:", ((string)(null)), table9, "Gegeben sei ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Reihenfolge"});
            table10.AddRow(new string[] {
                        "1",
                        "Bahnstrasse",
                        "-",
                        "-",
                        "IC",
                        "Beton",
                        "5,75",
                        "KeinTrottoir",
                        "-",
                        "-",
                        "Private",
                        "Mitterndorf",
                        "Nein",
                        "1"});
            table10.AddRow(new string[] {
                        "2",
                        "Moosgasse",
                        "0",
                        "2",
                        "IB",
                        "Asphalt",
                        "5,50",
                        "BeideSeiten",
                        "1,5",
                        "2",
                        "Gemeinde",
                        "Ortsteil Mossbrunn",
                        "Nein",
                        "2"});
#line 98
testRunner.And("dieser Inspektionsroute sind folgende Strassenabschnitte zugeordnet:", ((string)(null)), table10, "Und ");
#line 102
testRunner.When("ich den Strassenabschnitt mit der Id \'1\' lösche", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Reihenfolge"});
            table11.AddRow(new string[] {
                        "2",
                        "Moosgasse",
                        "0",
                        "2",
                        "IB",
                        "Asphalt",
                        "5,50",
                        "BeideSeiten",
                        "1,5",
                        "2",
                        "Gemeinde",
                        "Ortsteil Mossbrunn",
                        "Nein",
                        "1"});
#line 103
testRunner.Then("sind folgende Strassenabschnitte der Inspektionsroute zugeordnet:", ((string)(null)), table11, "Dann ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung"});
            table12.AddRow(new string[] {
                        "1",
                        "Bahnstrasse",
                        "-",
                        "-",
                        "IC",
                        "Beton",
                        "5,75",
                        "KeinTrottoir",
                        "-",
                        "-",
                        "Private",
                        "Mitterndorf",
                        "Nein"});
            table12.AddRow(new string[] {
                        "2",
                        "Moosgasse",
                        "0",
                        "2",
                        "IB",
                        "Asphalt",
                        "5,50",
                        "BeideSeiten",
                        "1,5",
                        "2",
                        "Gemeinde",
                        "Ortsteil Mossbrunn",
                        "Nein"});
            table12.AddRow(new string[] {
                        "3",
                        "Hauptstrasse",
                        "2,25",
                        "1,5",
                        "II",
                        "Beton",
                        "7",
                        "NochNichtErfasst",
                        "-",
                        "-",
                        "Korporation",
                        "Ortsteil Gramatneusiedl",
                        "Nein"});
            table12.AddRow(new string[] {
                        "4",
                        "Klostergasse",
                        "2",
                        "-",
                        "II",
                        "Beton",
                        "7",
                        "Links",
                        "2,1",
                        "-",
                        "Gemeinde",
                        "Ortsteil Gramatneusiedl",
                        "Nein"});
#line 106
testRunner.And("folgende Netzinformationen im System:", ((string)(null)), table12, "Und ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann neue Strassenabschnitte in eine vorhanden Inspektionsroute " +
            "aufnehmen.", new string[] {
                "Manuell"}, SourceLine=115)]
        public virtual void DerData_ManagerKannNeueStrassenabschnitteInEineVorhandenInspektionsrouteAufnehmen_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann neue Strassenabschnitte in eine vorhanden Inspektionsroute " +
                    "aufnehmen.", new string[] {
                        "Manuell"});
#line 116
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Bezeichnung",
                        "Checkoutgis_id"});
            table13.AddRow(new string[] {
                        "1",
                        "Inspektionsroute_1",
                        ""});
#line 117
testRunner.Given("es existiert für Mandant \'Mandant_1\' folgende Inspektionsroute:", ((string)(null)), table13, "Gegeben sei ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Reihenfolge"});
            table14.AddRow(new string[] {
                        "1",
                        "Bahnstrasse",
                        "-",
                        "-",
                        "IC",
                        "Beton",
                        "5,75",
                        "KeinTrottoir",
                        "-",
                        "-",
                        "Private",
                        "Mitterndorf",
                        "Nein",
                        "1"});
            table14.AddRow(new string[] {
                        "2",
                        "Moosgasse",
                        "0",
                        "2",
                        "IB",
                        "Asphalt",
                        "5,50",
                        "BeideSeiten",
                        "1,5",
                        "2",
                        "Gemeinde",
                        "Ortsteil Mossbrunn",
                        "Nein",
                        "2"});
#line 120
testRunner.And("dieser Inspektionsroute sind folgende Strassenabschnitte zugeordnet:", ((string)(null)), table14, "Und ");
#line 124
testRunner.When("ich den Strassenabschnitt mit der Id \'3\' auf der Karte selektiere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Reihenfolge"});
            table15.AddRow(new string[] {
                        "1",
                        "Bahnstrasse",
                        "-",
                        "-",
                        "IC",
                        "Beton",
                        "5,75",
                        "KeinTrottoir",
                        "-",
                        "-",
                        "Private",
                        "Mitterndorf",
                        "Nein",
                        "1"});
            table15.AddRow(new string[] {
                        "2",
                        "Moosgasse",
                        "0",
                        "2",
                        "IB",
                        "Asphalt",
                        "5,50",
                        "BeideSeiten",
                        "1,5",
                        "2",
                        "Gemeinde",
                        "Ortsteil Mossbrunn",
                        "Nein",
                        "2"});
            table15.AddRow(new string[] {
                        "3",
                        "Hauptstrasse",
                        "2,25",
                        "1,5",
                        "II",
                        "Beton",
                        "7",
                        "NochNichtErfasst",
                        "-",
                        "-",
                        "Korporation",
                        "Ortsteil Gramatneusiedl",
                        "Nein",
                        "3"});
#line 125
testRunner.Then("sind folgende Strassenabschnitte der Inspektionsroute zugeordnet:", ((string)(null)), table15, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System stellt sicher, dass ein Strassenabschnitt nur auf einer Inspektionsrou" +
            "te vorkommt", new string[] {
                "Manuell"}, SourceLine=133)]
        public virtual void DasSystemStelltSicherDassEinStrassenabschnittNurAufEinerInspektionsrouteVorkommt()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System stellt sicher, dass ein Strassenabschnitt nur auf einer Inspektionsrou" +
                    "te vorkommt", new string[] {
                        "Manuell"});
#line 134
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System stellt sicher, dass der Benutzer Strassenabschnitte, die bereits einer" +
            " Inspektionsroute zugeordnet wurden, nicht mehr für (die Planung von) weiteren I" +
            "nspektionsrouten selektieren kann", new string[] {
                "Manuell"}, SourceLine=138)]
        public virtual void DasSystemStelltSicherDassDerBenutzerStrassenabschnitteDieBereitsEinerInspektionsrouteZugeordnetWurdenNichtMehrFurDiePlanungVonWeiterenInspektionsroutenSelektierenKann()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System stellt sicher, dass der Benutzer Strassenabschnitte, die bereits einer" +
                    " Inspektionsroute zugeordnet wurden, nicht mehr für (die Planung von) weiteren I" +
                    "nspektionsrouten selektieren kann", new string[] {
                        "Manuell"});
#line 139
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System visualisiert Strassenabschnitte, die bereits einer Inspektionsroute zu" +
            "geordnet sind bzw. noch zur Aufnahme in eine Inspektionsroute zur Verfügung steh" +
            "en.", new string[] {
                "Manuell"}, SourceLine=143)]
        public virtual void DasSystemVisualisiertStrassenabschnitteDieBereitsEinerInspektionsrouteZugeordnetSindBzw_NochZurAufnahmeInEineInspektionsrouteZurVerfugungStehen_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System visualisiert Strassenabschnitte, die bereits einer Inspektionsroute zu" +
                    "geordnet sind bzw. noch zur Aufnahme in eine Inspektionsroute zur Verfügung steh" +
                    "en.", new string[] {
                        "Manuell"});
#line 144
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Inspektionsrouten löschen", new string[] {
                "Manuell"}, SourceLine=148)]
        public virtual void DerData_ManagerKannInspektionsroutenLoschen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann Inspektionsrouten löschen", new string[] {
                        "Manuell"});
#line 149
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Bezeichnung",
                        "Checkoutgis_id"});
            table16.AddRow(new string[] {
                        "1",
                        "Stadtteil_nord",
                        ""});
            table16.AddRow(new string[] {
                        "2",
                        "Stadtteil_süden",
                        ""});
            table16.AddRow(new string[] {
                        "3",
                        "Stadtteil_osten",
                        ""});
#line 150
testRunner.Given("für Mandant \'Mandant_1\' existieren folgende Inspektionsrouten:", ((string)(null)), table16, "Gegeben sei ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Bezeichnung",
                        "Checkoutgis_id"});
            table17.AddRow(new string[] {
                        "1",
                        "Stadtteil_nord",
                        ""});
            table17.AddRow(new string[] {
                        "3",
                        "Stadtteil_osten",
                        ""});
#line 155
testRunner.When("ich die Inspektionsroute mit der Id \'2\' lösche sind folgende Inspektionsrouten im" +
                    " System:", ((string)(null)), table17, "Wenn ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann eine exportierte Inspektionsroute nur nach entsprechender W" +
            "arnmeldung löschen (Z5).", new string[] {
                "Manuell"}, SourceLine=162)]
        public virtual void DerData_ManagerKannEineExportierteInspektionsrouteNurNachEntsprechenderWarnmeldungLoschenZ5_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann eine exportierte Inspektionsroute nur nach entsprechender W" +
                    "arnmeldung löschen (Z5).", new string[] {
                        "Manuell"});
#line 163
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System stellt beim Löschen von Strassenabschnitten sicher, dass diese keiner " +
            "Inspektionsroute zugeordnet sind", new string[] {
                "Manuell"}, SourceLine=167)]
        public virtual void DasSystemStelltBeimLoschenVonStrassenabschnittenSicherDassDieseKeinerInspektionsrouteZugeordnetSind()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System stellt beim Löschen von Strassenabschnitten sicher, dass diese keiner " +
                    "Inspektionsroute zugeordnet sind", new string[] {
                        "Manuell"});
#line 168
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Z4 - Im GIS-Modus Inspektionsrouten planen")]
    public partial class Z4_ImGIS_ModusInspektionsroutenPlanenFeature_NUnit
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Z4.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "Z4 - Im GIS-Modus Inspektionsrouten planen", "\tAls Data-Manager,\r\n\twill ich im GIS-Modus Inspektionsrouten planen\r\n\tdamit ich m" +
                    "eine Strassenabschnitte in der optimalen Reihenfolge inspizieren kann", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table1.AddRow(new string[] {
                        "Mandant_1",
                        "GIS"});
#line 7
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table1, "Gegeben sei ");
#line 10
testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 11
testRunner.And("ich öffne die Seite \'Inspektionsroute planen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung"});
            table2.AddRow(new string[] {
                        "1",
                        "Bahnstrasse",
                        "-",
                        "-",
                        "IC",
                        "Beton",
                        "5,75",
                        "KeinTrottoir",
                        "-",
                        "-",
                        "Private",
                        "Mitterndorf",
                        "Nein"});
            table2.AddRow(new string[] {
                        "2",
                        "Moosgasse",
                        "0",
                        "2",
                        "IB",
                        "Asphalt",
                        "5,50",
                        "BeideSeiten",
                        "1,5",
                        "2",
                        "Gemeinde",
                        "Ortsteil Mossbrunn",
                        "Nein"});
            table2.AddRow(new string[] {
                        "3",
                        "Hauptstrasse",
                        "2,25",
                        "1,5",
                        "II",
                        "Beton",
                        "7",
                        "NochNichtErfasst",
                        "-",
                        "-",
                        "Korporation",
                        "Ortsteil Gramatneusiedl",
                        "Nein"});
            table2.AddRow(new string[] {
                        "4",
                        "Klostergasse",
                        "2",
                        "-",
                        "II",
                        "Beton",
                        "7",
                        "Links",
                        "2,1",
                        "-",
                        "Gemeinde",
                        "Ortsteil Gramatneusiedl",
                        "Nein"});
#line 12
testRunner.And("für Mandant \'Mandant_1\' existieren folgende Netzinformationen:", ((string)(null)), table2, "Und ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann auf der Karte Strassenabschnitte selektieren")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannAufDerKarteStrassenabschnitteSelektieren()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann auf der Karte Strassenabschnitte selektieren", new string[] {
                        "Manuell"});
#line 20
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 21
testRunner.Given("ich will eine Insepktionsroute zusammenstellen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 22
testRunner.And("ich öffne die Seite \'Inspektionsroute planen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 23
testRunner.And("ich wähle mit einem Klick auf die Karte einen Strassenabschnitt", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 24
testRunner.Then("wird der Strassenabschnitt der Inpektionsroute zugeordnet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System visualisiert selektierte Strassenabschnitte auf der Karte")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemVisualisiertSelektierteStrassenabschnitteAufDerKarte()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System visualisiert selektierte Strassenabschnitte auf der Karte", new string[] {
                        "Manuell"});
#line 29
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System fügt selektierte Strassenabschnitte zu einer Inspektionsroute hinzu")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemFugtSelektierteStrassenabschnitteZuEinerInspektionsrouteHinzu()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System fügt selektierte Strassenabschnitte zu einer Inspektionsroute hinzu", new string[] {
                        "Manuell"});
#line 34
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 35
testRunner.Given("ich erstelle eine neue Inspektionsroute mit der Bezeichnung \'Inspektionsroute1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 36
testRunner.When("ich den Strassenabschnitt mit der Id \'1\' auf der Karte selektiere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung"});
            table3.AddRow(new string[] {
                        "1",
                        "Bahnstrasse",
                        "-",
                        "-",
                        "IC",
                        "Beton",
                        "5,75",
                        "KeinTrottoir",
                        "-",
                        "-",
                        "Private",
                        "Mitterndorf",
                        "Nein"});
#line 37
testRunner.Then("ist folgender Strassenabschnitt der \'Inspektionsroute1\' zugeordnet:", ((string)(null)), table3, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann die Reihenfolge der Strassenabschnitte auf der Inspektionsr" +
            "oute verändern")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannDieReihenfolgeDerStrassenabschnitteAufDerInspektionsrouteVerandern()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann die Reihenfolge der Strassenabschnitte auf der Inspektionsr" +
                    "oute verändern", new string[] {
                        "Manuell"});
#line 44
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 45
testRunner.Given("für Mandant \'Mandant_1\' existiert eine Inspektionsroute mit der Bezeichnung \'Insp" +
                    "ektionsroute1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Reihenfolge"});
            table4.AddRow(new string[] {
                        "1",
                        "Bahnstrasse",
                        "-",
                        "-",
                        "IC",
                        "Beton",
                        "5,75",
                        "KeinTrottoir",
                        "-",
                        "-",
                        "Private",
                        "Mitterndorf",
                        "Nein",
                        "1"});
            table4.AddRow(new string[] {
                        "2",
                        "Moosgasse",
                        "0",
                        "2",
                        "IB",
                        "Asphalt",
                        "5,50",
                        "BeideSeiten",
                        "1,5",
                        "2",
                        "Gemeinde",
                        "Ortsteil Mossbrunn",
                        "Nein",
                        "2"});
            table4.AddRow(new string[] {
                        "3",
                        "Hauptstrasse",
                        "2,25",
                        "1,5",
                        "II",
                        "Beton",
                        "7",
                        "NochNichtErfasst",
                        "-",
                        "-",
                        "Korporation",
                        "Ortsteil Gramatneusiedl",
                        "Nein",
                        "3"});
            table4.AddRow(new string[] {
                        "4",
                        "Klostergasse",
                        "2",
                        "-",
                        "II",
                        "Beton",
                        "7",
                        "Links",
                        "2,1",
                        "-",
                        "Gemeinde",
                        "Ortsteil Gramatneusiedl",
                        "Nein",
                        "4"});
#line 46
testRunner.And("dieser Inspektionsroute sind folgende Strassenabschnitte zugeordnet:", ((string)(null)), table4, "Und ");
#line 52
 testRunner.When("ich die Platzierung von dem Strassenabschnitt mit der Id \'3\' erhöhe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Reihenfolge"});
            table5.AddRow(new string[] {
                        "1",
                        "Bahnstrasse",
                        "-",
                        "-",
                        "IC",
                        "Beton",
                        "5,75",
                        "KeinTrottoir",
                        "-",
                        "-",
                        "Private",
                        "Mitterndorf",
                        "Nein",
                        "1"});
            table5.AddRow(new string[] {
                        "2",
                        "Moosgasse",
                        "0",
                        "2",
                        "IB",
                        "Asphalt",
                        "5,50",
                        "BeideSeiten",
                        "1,5",
                        "2",
                        "Gemeinde",
                        "Ortsteil Mossbrunn",
                        "Nein",
                        "3"});
            table5.AddRow(new string[] {
                        "3",
                        "Hauptstrasse",
                        "2,25",
                        "1,5",
                        "II",
                        "Beton",
                        "7",
                        "NochNichtErfasst",
                        "-",
                        "-",
                        "Korporation",
                        "Ortsteil Gramatneusiedl",
                        "Nein",
                        "2"});
            table5.AddRow(new string[] {
                        "4",
                        "Klostergasse",
                        "2",
                        "-",
                        "II",
                        "Beton",
                        "7",
                        "Links",
                        "2,1",
                        "-",
                        "Gemeinde",
                        "Ortsteil Gramatneusiedl",
                        "Nein",
                        "4"});
#line 53
 testRunner.Then("sind folgende Daten im System:", ((string)(null)), table5, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann die Liste der Strassenabschnitte als Inspektionsroute (mit " +
            "einem Namen) speichern")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannDieListeDerStrassenabschnitteAlsInspektionsrouteMitEinemNamenSpeichern()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann die Liste der Strassenabschnitte als Inspektionsroute (mit " +
                    "einem Namen) speichern", new string[] {
                        "Manuell"});
#line 63
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Bezeichnung",
                        "Checkoutgis_id"});
            table6.AddRow(new string[] {
                        "1",
                        "Stadtteil_nord",
                        ""});
            table6.AddRow(new string[] {
                        "2",
                        "Stadtteil_süden",
                        ""});
            table6.AddRow(new string[] {
                        "3",
                        "Stadtteil_osten",
                        ""});
#line 64
testRunner.Given("für Mandant \'Mandant_1\' existieren folgende Inspektionsrouten:", ((string)(null)), table6, "Gegeben sei ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Reihenfolge"});
            table7.AddRow(new string[] {
                        "1",
                        "Bahnstrasse",
                        "-",
                        "-",
                        "IC",
                        "Beton",
                        "5,75",
                        "KeinTrottoir",
                        "-",
                        "-",
                        "Private",
                        "Mitterndorf",
                        "Nein",
                        "1"});
            table7.AddRow(new string[] {
                        "2",
                        "Moosgasse",
                        "0",
                        "2",
                        "IB",
                        "Asphalt",
                        "5,50",
                        "BeideSeiten",
                        "1,5",
                        "2",
                        "Gemeinde",
                        "Ortsteil Mossbrunn",
                        "Nein",
                        "2"});
#line 69
testRunner.And("ich habe folgende Strassenabschnitte ausgewählt:", ((string)(null)), table7, "Und ");
#line 73
testRunner.When("ich diese Liste mit Strassenabschnitten mit der Bezeichnung \'Stadtteil_westen\' sp" +
                    "eichere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Bezeichnung",
                        "Checkoutgis_id"});
            table8.AddRow(new string[] {
                        "1",
                        "Stadtteil_nord",
                        ""});
            table8.AddRow(new string[] {
                        "2",
                        "Stadtteil_süden",
                        ""});
            table8.AddRow(new string[] {
                        "3",
                        "Stadtteil_osten",
                        ""});
            table8.AddRow(new string[] {
                        "4",
                        "Stadtteil_westen",
                        ""});
#line 74
testRunner.Then("sind folgende Daten im System:", ((string)(null)), table8, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann bestehende Inspektionsrouten bearbeiten")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannBestehendeInspektionsroutenBearbeiten()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann bestehende Inspektionsrouten bearbeiten", new string[] {
                        "Manuell"});
#line 84
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 85
testRunner.Given("eine bestehende Inspektionsroute", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 86
testRunner.And("der Data-Manager wählt \'Bearbeiten Inspektionsroute\' aus", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 87
testRunner.And("der Data-Manager wählt zugeordnete Strassenabschnitte auf der Karte aus", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 88
testRunner.And("der Data-Manager wählt \'Inspektionsroute\' speichern aus", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 89
testRunner.Then("wird die bearbeitet Inpektionsroute gespeichert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann Strassenabschnitte aus einer Inspektionsrouten löschen.")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannStrassenabschnitteAusEinerInspektionsroutenLoschen_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann Strassenabschnitte aus einer Inspektionsrouten löschen.", new string[] {
                        "Manuell"});
#line 94
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Bezeichnung",
                        "Checkoutgis_id"});
            table9.AddRow(new string[] {
                        "1",
                        "Inspektionsroute_1",
                        ""});
#line 95
testRunner.Given("es existiert für Mandant \'Mandant_1\' folgende Inspektionsroute:", ((string)(null)), table9, "Gegeben sei ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Reihenfolge"});
            table10.AddRow(new string[] {
                        "1",
                        "Bahnstrasse",
                        "-",
                        "-",
                        "IC",
                        "Beton",
                        "5,75",
                        "KeinTrottoir",
                        "-",
                        "-",
                        "Private",
                        "Mitterndorf",
                        "Nein",
                        "1"});
            table10.AddRow(new string[] {
                        "2",
                        "Moosgasse",
                        "0",
                        "2",
                        "IB",
                        "Asphalt",
                        "5,50",
                        "BeideSeiten",
                        "1,5",
                        "2",
                        "Gemeinde",
                        "Ortsteil Mossbrunn",
                        "Nein",
                        "2"});
#line 98
testRunner.And("dieser Inspektionsroute sind folgende Strassenabschnitte zugeordnet:", ((string)(null)), table10, "Und ");
#line 102
testRunner.When("ich den Strassenabschnitt mit der Id \'1\' lösche", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Reihenfolge"});
            table11.AddRow(new string[] {
                        "2",
                        "Moosgasse",
                        "0",
                        "2",
                        "IB",
                        "Asphalt",
                        "5,50",
                        "BeideSeiten",
                        "1,5",
                        "2",
                        "Gemeinde",
                        "Ortsteil Mossbrunn",
                        "Nein",
                        "1"});
#line 103
testRunner.Then("sind folgende Strassenabschnitte der Inspektionsroute zugeordnet:", ((string)(null)), table11, "Dann ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung"});
            table12.AddRow(new string[] {
                        "1",
                        "Bahnstrasse",
                        "-",
                        "-",
                        "IC",
                        "Beton",
                        "5,75",
                        "KeinTrottoir",
                        "-",
                        "-",
                        "Private",
                        "Mitterndorf",
                        "Nein"});
            table12.AddRow(new string[] {
                        "2",
                        "Moosgasse",
                        "0",
                        "2",
                        "IB",
                        "Asphalt",
                        "5,50",
                        "BeideSeiten",
                        "1,5",
                        "2",
                        "Gemeinde",
                        "Ortsteil Mossbrunn",
                        "Nein"});
            table12.AddRow(new string[] {
                        "3",
                        "Hauptstrasse",
                        "2,25",
                        "1,5",
                        "II",
                        "Beton",
                        "7",
                        "NochNichtErfasst",
                        "-",
                        "-",
                        "Korporation",
                        "Ortsteil Gramatneusiedl",
                        "Nein"});
            table12.AddRow(new string[] {
                        "4",
                        "Klostergasse",
                        "2",
                        "-",
                        "II",
                        "Beton",
                        "7",
                        "Links",
                        "2,1",
                        "-",
                        "Gemeinde",
                        "Ortsteil Gramatneusiedl",
                        "Nein"});
#line 106
testRunner.And("folgende Netzinformationen im System:", ((string)(null)), table12, "Und ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann neue Strassenabschnitte in eine vorhanden Inspektionsroute " +
            "aufnehmen.")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannNeueStrassenabschnitteInEineVorhandenInspektionsrouteAufnehmen_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann neue Strassenabschnitte in eine vorhanden Inspektionsroute " +
                    "aufnehmen.", new string[] {
                        "Manuell"});
#line 116
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Bezeichnung",
                        "Checkoutgis_id"});
            table13.AddRow(new string[] {
                        "1",
                        "Inspektionsroute_1",
                        ""});
#line 117
testRunner.Given("es existiert für Mandant \'Mandant_1\' folgende Inspektionsroute:", ((string)(null)), table13, "Gegeben sei ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Reihenfolge"});
            table14.AddRow(new string[] {
                        "1",
                        "Bahnstrasse",
                        "-",
                        "-",
                        "IC",
                        "Beton",
                        "5,75",
                        "KeinTrottoir",
                        "-",
                        "-",
                        "Private",
                        "Mitterndorf",
                        "Nein",
                        "1"});
            table14.AddRow(new string[] {
                        "2",
                        "Moosgasse",
                        "0",
                        "2",
                        "IB",
                        "Asphalt",
                        "5,50",
                        "BeideSeiten",
                        "1,5",
                        "2",
                        "Gemeinde",
                        "Ortsteil Mossbrunn",
                        "Nein",
                        "2"});
#line 120
testRunner.And("dieser Inspektionsroute sind folgende Strassenabschnitte zugeordnet:", ((string)(null)), table14, "Und ");
#line 124
testRunner.When("ich den Strassenabschnitt mit der Id \'3\' auf der Karte selektiere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Reihenfolge"});
            table15.AddRow(new string[] {
                        "1",
                        "Bahnstrasse",
                        "-",
                        "-",
                        "IC",
                        "Beton",
                        "5,75",
                        "KeinTrottoir",
                        "-",
                        "-",
                        "Private",
                        "Mitterndorf",
                        "Nein",
                        "1"});
            table15.AddRow(new string[] {
                        "2",
                        "Moosgasse",
                        "0",
                        "2",
                        "IB",
                        "Asphalt",
                        "5,50",
                        "BeideSeiten",
                        "1,5",
                        "2",
                        "Gemeinde",
                        "Ortsteil Mossbrunn",
                        "Nein",
                        "2"});
            table15.AddRow(new string[] {
                        "3",
                        "Hauptstrasse",
                        "2,25",
                        "1,5",
                        "II",
                        "Beton",
                        "7",
                        "NochNichtErfasst",
                        "-",
                        "-",
                        "Korporation",
                        "Ortsteil Gramatneusiedl",
                        "Nein",
                        "3"});
#line 125
testRunner.Then("sind folgende Strassenabschnitte der Inspektionsroute zugeordnet:", ((string)(null)), table15, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System stellt sicher, dass ein Strassenabschnitt nur auf einer Inspektionsrou" +
            "te vorkommt")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemStelltSicherDassEinStrassenabschnittNurAufEinerInspektionsrouteVorkommt()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System stellt sicher, dass ein Strassenabschnitt nur auf einer Inspektionsrou" +
                    "te vorkommt", new string[] {
                        "Manuell"});
#line 134
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System stellt sicher, dass der Benutzer Strassenabschnitte, die bereits einer" +
            " Inspektionsroute zugeordnet wurden, nicht mehr für (die Planung von) weiteren I" +
            "nspektionsrouten selektieren kann")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemStelltSicherDassDerBenutzerStrassenabschnitteDieBereitsEinerInspektionsrouteZugeordnetWurdenNichtMehrFurDiePlanungVonWeiterenInspektionsroutenSelektierenKann()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System stellt sicher, dass der Benutzer Strassenabschnitte, die bereits einer" +
                    " Inspektionsroute zugeordnet wurden, nicht mehr für (die Planung von) weiteren I" +
                    "nspektionsrouten selektieren kann", new string[] {
                        "Manuell"});
#line 139
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System visualisiert Strassenabschnitte, die bereits einer Inspektionsroute zu" +
            "geordnet sind bzw. noch zur Aufnahme in eine Inspektionsroute zur Verfügung steh" +
            "en.")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemVisualisiertStrassenabschnitteDieBereitsEinerInspektionsrouteZugeordnetSindBzw_NochZurAufnahmeInEineInspektionsrouteZurVerfugungStehen_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System visualisiert Strassenabschnitte, die bereits einer Inspektionsroute zu" +
                    "geordnet sind bzw. noch zur Aufnahme in eine Inspektionsroute zur Verfügung steh" +
                    "en.", new string[] {
                        "Manuell"});
#line 144
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann Inspektionsrouten löschen")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannInspektionsroutenLoschen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann Inspektionsrouten löschen", new string[] {
                        "Manuell"});
#line 149
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Bezeichnung",
                        "Checkoutgis_id"});
            table16.AddRow(new string[] {
                        "1",
                        "Stadtteil_nord",
                        ""});
            table16.AddRow(new string[] {
                        "2",
                        "Stadtteil_süden",
                        ""});
            table16.AddRow(new string[] {
                        "3",
                        "Stadtteil_osten",
                        ""});
#line 150
testRunner.Given("für Mandant \'Mandant_1\' existieren folgende Inspektionsrouten:", ((string)(null)), table16, "Gegeben sei ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Bezeichnung",
                        "Checkoutgis_id"});
            table17.AddRow(new string[] {
                        "1",
                        "Stadtteil_nord",
                        ""});
            table17.AddRow(new string[] {
                        "3",
                        "Stadtteil_osten",
                        ""});
#line 155
testRunner.When("ich die Inspektionsroute mit der Id \'2\' lösche sind folgende Inspektionsrouten im" +
                    " System:", ((string)(null)), table17, "Wenn ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann eine exportierte Inspektionsroute nur nach entsprechender W" +
            "arnmeldung löschen (Z5).")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannEineExportierteInspektionsrouteNurNachEntsprechenderWarnmeldungLoschenZ5_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann eine exportierte Inspektionsroute nur nach entsprechender W" +
                    "arnmeldung löschen (Z5).", new string[] {
                        "Manuell"});
#line 163
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System stellt beim Löschen von Strassenabschnitten sicher, dass diese keiner " +
            "Inspektionsroute zugeordnet sind")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemStelltBeimLoschenVonStrassenabschnittenSicherDassDieseKeinerInspektionsrouteZugeordnetSind()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System stellt beim Löschen von Strassenabschnitten sicher, dass diese keiner " +
                    "Inspektionsroute zugeordnet sind", new string[] {
                        "Manuell"});
#line 168
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
