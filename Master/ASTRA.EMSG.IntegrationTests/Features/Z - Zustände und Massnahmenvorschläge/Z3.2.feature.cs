// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ASTRA.EMSG.IntegrationTests.Features.Z_ZustandeUndMassnahmenvorschlage
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Z3.2 - Mit EMSG-Master Schäden und Massnahmenvorschläge für Zustandsabschnitte na" +
        "chbearbeiten", Description="\tAls Data-Manager\r\n\twill ich auf EMSG-Master Schäden und Massnahmenvorschläge für" +
        " Zustandsabschnitte nachbearbeiten\r\n\tdamit ich die Qualität der Inspektionsergeb" +
        "nisse verbessern bzw. Daten effizienter eingeben kann", SourceFile="Features\\Z - Zustände und Massnahmenvorschläge\\Z3.2.feature", SourceLine=0)]
    public partial class Z3_2_MitEMSG_MasterSchadenUndMassnahmenvorschlageFurZustandsabschnitteNachbearbeitenFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Z3.2.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "Z3.2 - Mit EMSG-Master Schäden und Massnahmenvorschläge für Zustandsabschnitte na" +
                    "chbearbeiten", "\tAls Data-Manager\r\n\twill ich auf EMSG-Master Schäden und Massnahmenvorschläge für" +
                    " Zustandsabschnitte nachbearbeiten\r\n\tdamit ich die Qualität der Inspektionsergeb" +
                    "nisse verbessern bzw. Daten effizienter eingeben kann", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table1.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 7
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table1, "Gegeben sei ");
#line 10
testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belagsart",
                        "BreiteFahrbahn",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechtss"});
            table2.AddRow(new string[] {
                        "1",
                        "Kantonsstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "Asphalt",
                        "4,5",
                        "beide Seiten",
                        "2,5",
                        "3"});
            table2.AddRow(new string[] {
                        "2",
                        "Kantonsstrasse",
                        "Abschnitt B Anfang",
                        "Abschnitt B Ende",
                        "Asphalt",
                        "5,5",
                        "beide Seiten",
                        "2,5",
                        "3"});
            table2.AddRow(new string[] {
                        "3",
                        "Landstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "Beton",
                        "5,75",
                        "beide Seiten",
                        "2,5",
                        "3"});
            table2.AddRow(new string[] {
                        "4",
                        "Hauptstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "Beton",
                        "7",
                        "beide Seiten",
                        "2,5",
                        "3"});
            table2.AddRow(new string[] {
                        "5",
                        "Hauptstrasse",
                        "Abschnitt B Anfang",
                        "Abschnitt B Ende",
                        "Asphalt",
                        "7",
                        "beide Seiten",
                        "2,5",
                        "3"});
            table2.AddRow(new string[] {
                        "6",
                        "Hauptstrasse",
                        "Abschnitt C Anfang",
                        "Abschnitt C Ende",
                        "Asphalt",
                        "14",
                        "beide Seiten",
                        "2,5",
                        "3"});
#line 11
testRunner.And("folgende Netzinformationen existieren:", ((string)(null)), table2, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVonStrasse",
                        "BezeichnungBisStrasse",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Länge",
                        "Aufnahmedatum",
                        "Aufnahmeteam",
                        "Wetter",
                        "ZustandsIndexFahrbahn",
                        "ZustandsindexTrottoirLinks",
                        "ZustandsindexTrottoirRechts",
                        "MassnahmenvorschlagFahrbahn",
                        "DringlichkeitMassnahmenvorschlagFahrbahn",
                        "TrottoirLinksErneuerung",
                        "DringlichkeitTrottoirLinksErneuerung",
                        "TrottoirRechtsErneuerung",
                        "DringlichkeitTrottoirRechtsErneuerung"});
            table3.AddRow(new string[] {
                        "1",
                        "Kantonsstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "0.2",
                        "1.2",
                        "1000",
                        "12.14.2009",
                        "Drei",
                        "Nass",
                        "2,3",
                        "",
                        "",
                        "Instandsetzung",
                        "dringlich",
                        "",
                        "",
                        "",
                        ""});
            table3.AddRow(new string[] {
                        "2",
                        "Kantonsstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "1.2",
                        "2.0",
                        "800",
                        "12.14.2009",
                        "Drei",
                        "Nass",
                        "2,3",
                        "",
                        "",
                        "Instandsetzung",
                        "dringlich",
                        "",
                        "",
                        "",
                        ""});
            table3.AddRow(new string[] {
                        "3",
                        "Kantonsstrasse",
                        "Abschnitt B Anfang",
                        "Abschnitt B Ende",
                        "2.0",
                        "7.0",
                        "5000",
                        "23.03.2009",
                        "A",
                        "Trocken",
                        "1,2",
                        "Gut",
                        "",
                        "Instandsetzung",
                        "mittelfristig",
                        "",
                        "",
                        "",
                        ""});
            table3.AddRow(new string[] {
                        "4",
                        "Landstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "0.0",
                        "2.1",
                        "2100",
                        "21.05.2009",
                        "B",
                        "Trocken",
                        "1,1",
                        "",
                        "Kritisch",
                        "Ersatz",
                        "langfristig",
                        "",
                        "",
                        "ja",
                        "dringend"});
            table3.AddRow(new string[] {
                        "5",
                        "Landstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "2.1",
                        "2.4",
                        "300",
                        "21.05.2009",
                        "B",
                        "Trocken",
                        "1,1",
                        "",
                        "Kritisch",
                        "Ersatz",
                        "langfristig",
                        "",
                        "",
                        "ja",
                        "dringend"});
            table3.AddRow(new string[] {
                        "6",
                        "Landstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "2.4",
                        "2.5",
                        "100",
                        "21.05.2009",
                        "B",
                        "Trocken",
                        "2,1",
                        "",
                        "Ausreichend",
                        "Ersatz",
                        "langfristig",
                        "",
                        "",
                        "ja",
                        "mittelfristig"});
            table3.AddRow(new string[] {
                        "7",
                        "Hauptstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "1.2",
                        "2.5",
                        "1300",
                        "21.10.2009",
                        "Meyer",
                        "Trocken",
                        "3,4",
                        "Mittel",
                        "Gut",
                        "",
                        "",
                        "ja",
                        "langfristig",
                        "",
                        ""});
            table3.AddRow(new string[] {
                        "8",
                        "Hauptstrasse",
                        "Abschnitt B Anfang",
                        "Abschnitt B Ende",
                        "0.4",
                        "0.8",
                        "400",
                        "13.09.2009",
                        "A",
                        "Trocken",
                        "2,3",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table3.AddRow(new string[] {
                        "9",
                        "Hauptstrasse",
                        "Abschnitt B Anfang",
                        "Abschnitt B Ende",
                        "0.8",
                        "1.2",
                        "400",
                        "13.09.2009",
                        "A",
                        "Trocken",
                        "2,3",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table3.AddRow(new string[] {
                        "10",
                        "Hauptstrasse",
                        "Abschnitt C Anfang",
                        "Abschnitt C Ende",
                        "0.0",
                        "0.1",
                        "100",
                        "24.07.2009",
                        "B",
                        "Trocken",
                        "3,3",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table3.AddRow(new string[] {
                        "11",
                        "Hauptstrasse",
                        "Abschnitt C Anfang",
                        "Abschnitt C Ende",
                        "0.1",
                        "0.2",
                        "100",
                        "24.07.2009",
                        "B",
                        "Trocken",
                        "4,3",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table3.AddRow(new string[] {
                        "12",
                        "Hauptstrasse",
                        "Abschnitt C Anfang",
                        "Abschnitt C Ende",
                        "0.2",
                        "0.4",
                        "200",
                        "24.07.2009",
                        "B",
                        "Trocken",
                        "4,8",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 19
testRunner.And("folgende Zustandsinformationen existieren:", ((string)(null)), table3, "Und ");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Schäden und Massnahmenvorschläge bestehender Zustandsabschn" +
            "itte vollumfänglich nachbearbeiten", new string[] {
                "Manuell"}, SourceLine=36)]
        public virtual void DerData_ManagerKannSchadenUndMassnahmenvorschlageBestehenderZustandsabschnitteVollumfanglichNachbearbeiten()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann Schäden und Massnahmenvorschläge bestehender Zustandsabschn" +
                    "itte vollumfänglich nachbearbeiten", new string[] {
                        "Manuell"});
#line 37
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "ZustandsIndexFahrbahn",
                        "ZustandsindexTrottoirLinks",
                        "MassnahmenvorschlagFahrbahn",
                        "DringlichkeitMassnahmenvorschlagFahrbahn",
                        "TrottoirLinksErneuerung",
                        "DringlichkeitTrottoirLinksErneuerung",
                        "TrottoirRechtsErneuerung",
                        "DringlichkeitTrottoirRechtsErneuerung"});
            table4.AddRow(new string[] {
                        "1",
                        "3.2",
                        "",
                        "Instandsetzung",
                        "dringlich",
                        "",
                        "",
                        "",
                        ""});
            table4.AddRow(new string[] {
                        "2",
                        "2.3",
                        "",
                        "Ersatz",
                        "dringlich",
                        "",
                        "",
                        "",
                        ""});
            table4.AddRow(new string[] {
                        "3",
                        "1.2",
                        "Gut",
                        "Instandsetzung",
                        "dringlich",
                        "ja",
                        "langfristig",
                        "ja",
                        "dringend"});
#line 38
testRunner.When("ich die Schäden und Massnahmenvorschläge folgendermassen editere:", ((string)(null)), table4, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVonStrasse",
                        "BezeichnungBisStrasse",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Länge",
                        "Aufnahmedatum",
                        "Aufnahmeteam",
                        "Wetter",
                        "ZustandsIndexFahrbahn",
                        "ZustandsindexTrottoirLinks",
                        "ZustandsindexTrottoirRechts",
                        "MassnahmenvorschlagFahrbahn",
                        "DringlichkeitMassnahmenvorschlagFahrbahn",
                        "TrottoirLinksErneuerung",
                        "DringlichkeitTrottoirLinksErneuerung",
                        "TrottoirRechtsErneuerung",
                        "DringlichkeitTrottoirRechtsErneuerung"});
            table5.AddRow(new string[] {
                        "1",
                        "Kantonsstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "0.2",
                        "1.2",
                        "1000",
                        "12.14.2009",
                        "Drei",
                        "Nass",
                        "3,2",
                        "",
                        "",
                        "Instandsetzung",
                        "dringlich",
                        "",
                        "",
                        "",
                        ""});
            table5.AddRow(new string[] {
                        "2",
                        "Kantonsstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "1.2",
                        "2.0",
                        "800",
                        "12.14.2009",
                        "Drei",
                        "Nass",
                        "2,3",
                        "",
                        "",
                        "Ersatz",
                        "dringlich",
                        "",
                        "",
                        "",
                        ""});
            table5.AddRow(new string[] {
                        "3",
                        "Kantonsstrasse",
                        "Abschnitt B Anfang",
                        "Abschnitt B Ende",
                        "2.0",
                        "7.0",
                        "5000",
                        "23.03.2009",
                        "A",
                        "Trocken",
                        "1,2",
                        "Gut",
                        "",
                        "Instandsetzung",
                        "dringlich",
                        "ja",
                        "langfristig",
                        "ja",
                        "dringend"});
            table5.AddRow(new string[] {
                        "4",
                        "Landstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "0.0",
                        "2.1",
                        "2100",
                        "21.05.2009",
                        "B",
                        "Trocken",
                        "1,1",
                        "",
                        "Kritisch",
                        "Ersatz",
                        "langfristig",
                        "",
                        "",
                        "ja",
                        "dringend"});
            table5.AddRow(new string[] {
                        "5",
                        "Landstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "2.1",
                        "2.4",
                        "300",
                        "21.05.2009",
                        "B",
                        "Trocken",
                        "1,1",
                        "",
                        "Kritisch",
                        "Ersatz",
                        "langfristig",
                        "",
                        "",
                        "ja",
                        "dringend"});
            table5.AddRow(new string[] {
                        "6",
                        "Landstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "2.4",
                        "2.5",
                        "100",
                        "21.05.2009",
                        "B",
                        "Trocken",
                        "2,1",
                        "",
                        "Ausreichend",
                        "Ersatz",
                        "langfristig",
                        "",
                        "",
                        "ja",
                        "mittelfristig"});
            table5.AddRow(new string[] {
                        "7",
                        "Hauptstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "1.2",
                        "2.5",
                        "1300",
                        "21.10.2009",
                        "Meyer",
                        "Trocken",
                        "3,4",
                        "Mittel",
                        "Gut",
                        "",
                        "",
                        "ja",
                        "langfristig",
                        "",
                        ""});
            table5.AddRow(new string[] {
                        "8",
                        "Hauptstrasse",
                        "Abschnitt B Anfang",
                        "Abschnitt B Ende",
                        "0.4",
                        "0.8",
                        "400",
                        "13.09.2009",
                        "A",
                        "Trocken",
                        "2,3",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table5.AddRow(new string[] {
                        "9",
                        "Hauptstrasse",
                        "Abschnitt B Anfang",
                        "Abschnitt B Ende",
                        "0.8",
                        "1.2",
                        "400",
                        "13.09.2009",
                        "A",
                        "Trocken",
                        "2,3",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table5.AddRow(new string[] {
                        "10",
                        "Hauptstrasse",
                        "Abschnitt C Anfang",
                        "Abschnitt C Ende",
                        "0.0",
                        "0.1",
                        "100",
                        "24.07.2009",
                        "B",
                        "Trocken",
                        "3,3",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table5.AddRow(new string[] {
                        "11",
                        "Hauptstrasse",
                        "Abschnitt C Anfang",
                        "Abschnitt C Ende",
                        "0.1",
                        "0.2",
                        "100",
                        "24.07.2009",
                        "B",
                        "Trocken",
                        "4,3",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table5.AddRow(new string[] {
                        "12",
                        "Hauptstrasse",
                        "Abschnitt C Anfang",
                        "Abschnitt C Ende",
                        "0.2",
                        "0.4",
                        "200",
                        "24.07.2009",
                        "B",
                        "Trocken",
                        "4,8",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 43
testRunner.Then("existieren folgende Zustandsinformationen:", ((string)(null)), table5, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Zustandsabschnitte bearbeiten", new string[] {
                "Manuell"}, SourceLine=60)]
        public virtual void DerData_ManagerKannZustandsabschnitteBearbeiten()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann Zustandsabschnitte bearbeiten", new string[] {
                        "Manuell"});
#line 61
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Länge",
                        "Aufnahmedatum",
                        "Aufnahmeteam",
                        "Wetter",
                        "ZustandsIndexFahrbahn",
                        "ZustandsindexTrottoirRechts",
                        "MassnahmenvorschlagFahrbahn",
                        "DringlichkeitMassnahmenvorschlagFahrbahn",
                        "TrottoirLinksErneuerung",
                        "DringlichkeitTrottoirLinksErneuerung",
                        "TrottoirRechtsErneuerung",
                        "DringlichkeitTrottoirRechtsErneuerung"});
            table6.AddRow(new string[] {
                        "4",
                        "0.0",
                        "2.1",
                        "2100",
                        "31.03.2010",
                        "A",
                        "Nass",
                        "1,5",
                        "Ausreichend",
                        "Instandsetzung",
                        "dringlich",
                        "",
                        "",
                        "nein",
                        ""});
            table6.AddRow(new string[] {
                        "6",
                        "2.4",
                        "2.6",
                        "200",
                        "21.05.2009",
                        "B",
                        "Trocken",
                        "2,1",
                        "Ausreichend",
                        "Ersatz",
                        "langfristig",
                        "",
                        "",
                        "ja",
                        "mittelfristig"});
#line 62
testRunner.When("ich die Zustandsabschnitte für die Strasse mit der Id \'3\' folgendermassen editier" +
                    "e:", ((string)(null)), table6, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVonStrasse",
                        "BezeichnungBisStrasse",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Länge",
                        "Aufnahmedatum",
                        "Aufnahmeteam",
                        "Wetter",
                        "ZustandsIndexFahrbahn",
                        "ZustandsindexTrottoirLinks",
                        "ZustandsindexTrottoirRechts",
                        "MassnahmenvorschlagFahrbahn",
                        "DringlichkeitMassnahmenvorschlagFahrbahn",
                        "TrottoirLinksErneuerung",
                        "DringlichkeitTrottoirLinksErneuerung",
                        "TrottoirRechtsErneuerung",
                        "DringlichkeitTrottoirRechtsErneuerung"});
            table7.AddRow(new string[] {
                        "4",
                        "Landstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "0.0",
                        "2.1",
                        "2100",
                        "31.03.2010",
                        "A",
                        "Nass",
                        "1,5",
                        "",
                        "Ausreichend",
                        "Instandsetzung",
                        "dringlich",
                        "",
                        "",
                        "nein",
                        ""});
            table7.AddRow(new string[] {
                        "5",
                        "Landstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "2.1",
                        "2.4",
                        "300",
                        "21.05.2009",
                        "B",
                        "Trocken",
                        "1,1",
                        "",
                        "Kritisch",
                        "Ersatz",
                        "langfristig",
                        "",
                        "",
                        "ja",
                        "dringend"});
            table7.AddRow(new string[] {
                        "6",
                        "Landstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "2.4",
                        "2.6",
                        "200",
                        "21.05.2009",
                        "B",
                        "Trocken",
                        "2,1",
                        "",
                        "Ausreichend",
                        "Ersatz",
                        "langfristig",
                        "",
                        "",
                        "ja",
                        "mittelfristig"});
#line 66
testRunner.Then("existieren folgende Zustandsinformationen für die Strasse mit der Id \'3\':", ((string)(null)), table7, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann das Zustandserfassungsformular (Erfassungsformular für Ober" +
            "flächenschäden) ausfüllen", new string[] {
                "Manuell"}, SourceLine=74)]
        public virtual void DerData_ManagerKannDasZustandserfassungsformularErfassungsformularFurOberflachenschadenAusfullen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann das Zustandserfassungsformular (Erfassungsformular für Ober" +
                    "flächenschäden) ausfüllen", new string[] {
                        "Manuell"});
#line 75
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 76
testRunner.When("ich das Erfassungsformular für Oberflächenschäden für den Zustandsabschnitt mit d" +
                    "er Id \'1\' öffne", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Möglichkeit"});
            table8.AddRow(new string[] {
                        "Erfassung des Zustandsindex"});
            table8.AddRow(new string[] {
                        "Grobe Zustandserfassung"});
            table8.AddRow(new string[] {
                        "Detaillierte Zustandserfassung"});
#line 77
testRunner.Then("habe ich folgende Möglichkeiten zur Auswahl:", ((string)(null)), table8, "Dann ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis"});
            table9.AddRow(new string[] {
                        "Kantonsstrasse",
                        "0.2",
                        "1.2"});
#line 82
testRunner.And("sehe folgende Informationen:", ((string)(null)), table9, "Und ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System stellt sicher, dass die Summe der Längen der Zustandsabschnitte nicht " +
            "grösser ist, als die Länge des Strassenabschnitts", new string[] {
                "Manuell"}, SourceLine=88)]
        public virtual void DasSystemStelltSicherDassDieSummeDerLangenDerZustandsabschnitteNichtGrosserIstAlsDieLangeDesStrassenabschnitts()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System stellt sicher, dass die Summe der Längen der Zustandsabschnitte nicht " +
                    "grösser ist, als die Länge des Strassenabschnitts", new string[] {
                        "Manuell"});
#line 89
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System stellt bei grober und detaillierter Erfassung das Formular entsprechen" +
            "d der Belagsart des Strassenabschnitts dar", new string[] {
                "Manuell"}, SourceLine=93)]
        public virtual void DasSystemStelltBeiGroberUndDetaillierterErfassungDasFormularEntsprechendDerBelagsartDesStrassenabschnittsDar()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System stellt bei grober und detaillierter Erfassung das Formular entsprechen" +
                    "d der Belagsart des Strassenabschnitts dar", new string[] {
                        "Manuell"});
#line 94
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Erfassungsformular Oberflächenschäden Betonbelag (Beton) - detailliert", new string[] {
                "Manuell"}, SourceLine=98)]
        public virtual void ErfassungsformularOberflachenschadenBetonbelagBeton_Detailliert()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Erfassungsformular Oberflächenschäden Betonbelag (Beton) - detailliert", new string[] {
                        "Manuell"});
#line 99
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 100
testRunner.When("ich das Erfassungsformular für Oberflächenschäden für den Zustandsabschnitt mit d" +
                    "er Id \'5\' öffne", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Kategorie",
                        "Schaden"});
            table10.AddRow(new string[] {
                        "Oberflächenglätte",
                        "Polieren"});
            table10.AddRow(new string[] {
                        "Materialverluste",
                        "Abrieb"});
            table10.AddRow(new string[] {
                        "Materialverluste",
                        "Abblätterung"});
            table10.AddRow(new string[] {
                        "Materialverluste",
                        "Abplatzungen"});
            table10.AddRow(new string[] {
                        "Fugen- und Kantenschäden",
                        "Kantenschäden, Absplitterung"});
            table10.AddRow(new string[] {
                        "Fugen- und Kantenschäden",
                        "Fehlender oder spröder Fugenverguss"});
            table10.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Setzungen, Frosthebungen"});
            table10.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Stufenbildung"});
            table10.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Pumpen"});
            table10.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Blow-up"});
            table10.AddRow(new string[] {
                        "Risse, Brüche",
                        "Risse"});
            table10.AddRow(new string[] {
                        "Risse, Brüche",
                        "Zerstörte Platten"});
            table10.AddRow(new string[] {
                        "Flicke",
                        "Flicke"});
#line 101
testRunner.Then("sehe ich das Schadenerfassungsformular mit folgenden Möglichkeiten:", ((string)(null)), table10, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Erfassungsformular Oberflächenschäden bitumenhaltiger Belag (Asphalt) - detaillie" +
            "rt", new string[] {
                "Manuell"}, SourceLine=119)]
        public virtual void ErfassungsformularOberflachenschadenBitumenhaltigerBelagAsphalt_Detailliert()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Erfassungsformular Oberflächenschäden bitumenhaltiger Belag (Asphalt) - detaillie" +
                    "rt", new string[] {
                        "Manuell"});
#line 120
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 121
testRunner.When("ich das Erfassungsformular für Oberflächenschäden für den Zustandsabschnitt mit d" +
                    "er Id \'1\' öffne", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Kategorie",
                        "Schaden"});
            table11.AddRow(new string[] {
                        "Oberflächenglätte",
                        "Polieren"});
            table11.AddRow(new string[] {
                        "Oberflächenglätte",
                        "Schwitzen"});
            table11.AddRow(new string[] {
                        "Belagschäden",
                        "Abrieb"});
            table11.AddRow(new string[] {
                        "Belagschäden",
                        "Ausmagerung, Absanden"});
            table11.AddRow(new string[] {
                        "Belagschäden",
                        "Kornausbrüche"});
            table11.AddRow(new string[] {
                        "Belagschäden",
                        "Ablösungen"});
            table11.AddRow(new string[] {
                        "Belagschäden",
                        "Schlaglöcher"});
            table11.AddRow(new string[] {
                        "Belagschäden",
                        "Offene Nähte"});
            table11.AddRow(new string[] {
                        "Belagschäden",
                        "Querrisse"});
            table11.AddRow(new string[] {
                        "Belagschäden",
                        "Wilde Risse"});
            table11.AddRow(new string[] {
                        "Belagsverformungen",
                        "Spurrinnen"});
            table11.AddRow(new string[] {
                        "Belagsverformungen",
                        "Aufwölbungen"});
            table11.AddRow(new string[] {
                        "Belagsverformungen",
                        "Wellblechverformungen"});
            table11.AddRow(new string[] {
                        "Belagsverformungen",
                        "Schubverformungen"});
            table11.AddRow(new string[] {
                        "Strukturelle Schäden",
                        "Anrisse von Setzungen"});
            table11.AddRow(new string[] {
                        "Strukturelle Schäden",
                        "Setzungen, Einsenkungen"});
            table11.AddRow(new string[] {
                        "Strukturelle Schäden",
                        "Abgedrückte Ränder"});
            table11.AddRow(new string[] {
                        "Strukturelle Schäden",
                        "Frosthebungen"});
            table11.AddRow(new string[] {
                        "Strukturelle Schäden",
                        "Längsrisse"});
            table11.AddRow(new string[] {
                        "Strukturelle Schäden",
                        "Netzrisse"});
            table11.AddRow(new string[] {
                        "Strukturelle Schäden",
                        "Belagsrandrisse"});
            table11.AddRow(new string[] {
                        "Flicke",
                        "Flicke"});
#line 122
testRunner.Then("sehe ich das Schadenerfassungsformular mit folgenden Möglichkeiten:", ((string)(null)), table11, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann die Schadenschwere erfassen", new string[] {
                "Manuell"}, SourceLine=149)]
        public virtual void DerData_ManagerKannDieSchadenschwereErfassen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann die Schadenschwere erfassen", new string[] {
                        "Manuell"});
#line 150
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 151
testRunner.When("ich das Erfassungsformular für Oberflächenschäden für den Zustandsabschnitt mit d" +
                    "er Id \'1\' öffne", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Schwere"});
            table12.AddRow(new string[] {
                        "S0"});
            table12.AddRow(new string[] {
                        "S1"});
            table12.AddRow(new string[] {
                        "S2"});
            table12.AddRow(new string[] {
                        "S3"});
#line 152
testRunner.Then("sehe ich das Schadenerfassungsformular mit folgenden Möglichkeiten:", ((string)(null)), table12, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann das Schadenausmass erfassen", new string[] {
                "Manuell"}, SourceLine=161)]
        public virtual void DerData_ManagerKannDasSchadenausmassErfassen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann das Schadenausmass erfassen", new string[] {
                        "Manuell"});
#line 162
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 163
testRunner.When("ich das Erfassungsformular für Oberflächenschäden für den Zustandsabschnitt mit d" +
                    "er Id \'1\' öffne", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Schadenausmass"});
            table13.AddRow(new string[] {
                        "A1"});
            table13.AddRow(new string[] {
                        "A2"});
            table13.AddRow(new string[] {
                        "A3"});
#line 164
testRunner.Then("sehe ich das Schadenerfassungsformular mit folgenden Möglichkeiten:", ((string)(null)), table13, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System errechnet die Matrixwerte", new string[] {
                "Manuell"}, SourceLine=172)]
        public virtual void DasSystemErrechnetDieMatrixwerte()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System errechnet die Matrixwerte", new string[] {
                        "Manuell"});
#line 173
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 174
testRunner.When("ich das Erfassungsformular für Oberflächenschäden für den Zustandsabschnitt mit d" +
                    "er Id \'5\' öffne", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Kategorie",
                        "Schaden",
                        "Schwere",
                        "Schadenausmass"});
            table14.AddRow(new string[] {
                        "Oberflächenglätte",
                        "Polieren",
                        "S0",
                        "A1"});
            table14.AddRow(new string[] {
                        "Materialverluste",
                        "Abrieb",
                        "S1",
                        "A1"});
            table14.AddRow(new string[] {
                        "Materialverluste",
                        "Abblätterung",
                        "S2",
                        "A1"});
            table14.AddRow(new string[] {
                        "Materialverluste",
                        "Abplatzungen",
                        "S3",
                        "A1"});
            table14.AddRow(new string[] {
                        "Fugen- und Kantenschäden",
                        "Kantenschäden, Absplitterung",
                        "S0",
                        "A2"});
            table14.AddRow(new string[] {
                        "Fugen- und Kantenschäden",
                        "Fehlender oder spröder Fugenverguss",
                        "S1",
                        "A2"});
            table14.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Setzungen, Frosthebungen",
                        "S2",
                        "A2"});
            table14.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Stufenbildung",
                        "S3",
                        "A2"});
            table14.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Pumpen",
                        "S0",
                        "A3"});
            table14.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Blow-up",
                        "S1",
                        "A3"});
            table14.AddRow(new string[] {
                        "Risse, Brüche",
                        "Risse",
                        "S2",
                        "A3"});
            table14.AddRow(new string[] {
                        "Risse, Brüche",
                        "Zerstörte Platten",
                        "S3",
                        "A3"});
            table14.AddRow(new string[] {
                        "Flicke",
                        "Flicke",
                        "S0",
                        "A1"});
#line 175
testRunner.And("ich folgende Schäden erfasse:", ((string)(null)), table14, "Und ");
#line 190
testRunner.And("ich die Schäden speichere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Kategorie",
                        "Schaden",
                        "Matrix"});
            table15.AddRow(new string[] {
                        "Oberflächenglätte",
                        "Polieren",
                        "0"});
            table15.AddRow(new string[] {
                        "Materialverluste",
                        "Abrieb",
                        "1"});
            table15.AddRow(new string[] {
                        "Materialverluste",
                        "Abblätterung",
                        "2"});
            table15.AddRow(new string[] {
                        "Materialverluste",
                        "Abplatzungen",
                        "3"});
            table15.AddRow(new string[] {
                        "Fugen- und Kantenschäden",
                        "Kantenschäden, Absplitterung",
                        "0"});
            table15.AddRow(new string[] {
                        "Fugen- und Kantenschäden",
                        "Fehlender oder spröder Fugenverguss",
                        "2"});
            table15.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Setzungen, Frosthebungen",
                        "4"});
            table15.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Stufenbildung",
                        "6"});
            table15.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Pumpen",
                        "0"});
            table15.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Blow-up",
                        "3"});
            table15.AddRow(new string[] {
                        "Risse, Brüche",
                        "Risse",
                        "6"});
            table15.AddRow(new string[] {
                        "Risse, Brüche",
                        "Zerstörte Platten",
                        "9"});
            table15.AddRow(new string[] {
                        "Flicke",
                        "Flicke",
                        "0"});
#line 191
testRunner.Then("sehe ich folgende Matrixwerte:", ((string)(null)), table15, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System berechnet die Schadenbewertung", new string[] {
                "Manuell"}, SourceLine=209)]
        public virtual void DasSystemBerechnetDieSchadenbewertung()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Schadenbewertung", new string[] {
                        "Manuell"});
#line 210
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 211
testRunner.When("ich das Erfassungsformular für Oberflächenschäden für den Zustandsabschnitt mit d" +
                    "er Id \'5\' öffne", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Kategorie",
                        "Schaden",
                        "Schwere",
                        "Schadenausmass"});
            table16.AddRow(new string[] {
                        "Oberflächenglätte",
                        "Polieren",
                        "S0",
                        "A1"});
            table16.AddRow(new string[] {
                        "Materialverluste",
                        "Abrieb",
                        "S1",
                        "A1"});
            table16.AddRow(new string[] {
                        "Materialverluste",
                        "Abblätterung",
                        "S2",
                        "A1"});
            table16.AddRow(new string[] {
                        "Materialverluste",
                        "Abplatzungen",
                        "S3",
                        "A1"});
            table16.AddRow(new string[] {
                        "Fugen- und Kantenschäden",
                        "Kantenschäden, Absplitterung",
                        "S0",
                        "A2"});
            table16.AddRow(new string[] {
                        "Fugen- und Kantenschäden",
                        "Fehlender oder spröder Fugenverguss",
                        "S1",
                        "A2"});
            table16.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Setzungen, Frosthebungen",
                        "S2",
                        "A2"});
            table16.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Stufenbildung",
                        "S3",
                        "A2"});
            table16.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Pumpen",
                        "S0",
                        "A3"});
            table16.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Blow-up",
                        "S1",
                        "A3"});
            table16.AddRow(new string[] {
                        "Risse, Brüche",
                        "Risse",
                        "S2",
                        "A3"});
            table16.AddRow(new string[] {
                        "Risse, Brüche",
                        "Zerstörte Platten",
                        "S3",
                        "A3"});
            table16.AddRow(new string[] {
                        "Flicke",
                        "Flicke",
                        "S0",
                        "A1"});
#line 212
testRunner.And("ich folgende Schäden erfasse:", ((string)(null)), table16, "Und ");
#line 227
testRunner.And("ich die Schäden speichere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Kategorie",
                        "Bewertung"});
            table17.AddRow(new string[] {
                        "Oberflächenglätte",
                        "0"});
            table17.AddRow(new string[] {
                        "Materialverluste",
                        "6"});
            table17.AddRow(new string[] {
                        "Fugen- und Kantenschäden",
                        "2"});
            table17.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "18"});
            table17.AddRow(new string[] {
                        "Risse, Brüche",
                        "18"});
            table17.AddRow(new string[] {
                        "Flicke",
                        "0"});
#line 228
testRunner.Then("sehe ich folgende Schadenbewertung:", ((string)(null)), table17, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System berechnet die Schadensumme bei Grober- und detaillierter Erfassung", new string[] {
                "Manuell"}, SourceLine=239)]
        public virtual void DasSystemBerechnetDieSchadensummeBeiGrober_UndDetaillierterErfassung()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Schadensumme bei Grober- und detaillierter Erfassung", new string[] {
                        "Manuell"});
#line 240
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 241
testRunner.When("ich das Erfassungsformular für Oberflächenschäden für den Zustandsabschnitt mit d" +
                    "er Id \'5\' öffne", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Kategorie",
                        "Schaden",
                        "Schwere",
                        "Schadenausmass"});
            table18.AddRow(new string[] {
                        "Oberflächenglätte",
                        "Polieren",
                        "S0",
                        "A1"});
            table18.AddRow(new string[] {
                        "Materialverluste",
                        "Abrieb",
                        "S1",
                        "A1"});
            table18.AddRow(new string[] {
                        "Materialverluste",
                        "Abblätterung",
                        "S2",
                        "A1"});
            table18.AddRow(new string[] {
                        "Materialverluste",
                        "Abplatzungen",
                        "S3",
                        "A1"});
            table18.AddRow(new string[] {
                        "Fugen- und Kantenschäden",
                        "Kantenschäden, Absplitterung",
                        "S0",
                        "A2"});
            table18.AddRow(new string[] {
                        "Fugen- und Kantenschäden",
                        "Fehlender oder spröder Fugenverguss",
                        "S1",
                        "A2"});
            table18.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Setzungen, Frosthebungen",
                        "S2",
                        "A2"});
            table18.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Stufenbildung",
                        "S3",
                        "A2"});
            table18.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Pumpen",
                        "S0",
                        "A3"});
            table18.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Blow-up",
                        "S1",
                        "A3"});
            table18.AddRow(new string[] {
                        "Risse, Brüche",
                        "Risse",
                        "S2",
                        "A3"});
            table18.AddRow(new string[] {
                        "Risse, Brüche",
                        "Zerstörte Platten",
                        "S3",
                        "A3"});
            table18.AddRow(new string[] {
                        "Flicke",
                        "Flicke",
                        "S0",
                        "A1"});
#line 242
testRunner.And("ich folgende Schäden erfasse:", ((string)(null)), table18, "Und ");
#line 257
testRunner.And("ich die Schäden speichere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 258
testRunner.Then("sehe ich die Schadenssumme \'44\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System berechnet den Zustandsindex (I1) bei grober und detaillierter Erfassun" +
            "g", new string[] {
                "Manuell"}, SourceLine=262)]
        public virtual void DasSystemBerechnetDenZustandsindexI1BeiGroberUndDetaillierterErfassung()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet den Zustandsindex (I1) bei grober und detaillierter Erfassun" +
                    "g", new string[] {
                        "Manuell"});
#line 263
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 264
testRunner.When("ich das Erfassungsformular für Oberflächenschäden für den Zustandsabschnitt mit d" +
                    "er Id \'5\' öffne", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Kategorie",
                        "Schaden",
                        "Schwere",
                        "Schadenausmass"});
            table19.AddRow(new string[] {
                        "Oberflächenglätte",
                        "Polieren",
                        "S0",
                        "A1"});
            table19.AddRow(new string[] {
                        "Materialverluste",
                        "Abrieb",
                        "S1",
                        "A1"});
            table19.AddRow(new string[] {
                        "Materialverluste",
                        "Abblätterung",
                        "S2",
                        "A1"});
            table19.AddRow(new string[] {
                        "Materialverluste",
                        "Abplatzungen",
                        "S3",
                        "A1"});
            table19.AddRow(new string[] {
                        "Fugen- und Kantenschäden",
                        "Kantenschäden, Absplitterung",
                        "S0",
                        "A2"});
            table19.AddRow(new string[] {
                        "Fugen- und Kantenschäden",
                        "Fehlender oder spröder Fugenverguss",
                        "S1",
                        "A2"});
            table19.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Setzungen, Frosthebungen",
                        "S2",
                        "A2"});
            table19.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Stufenbildung",
                        "S3",
                        "A2"});
            table19.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Pumpen",
                        "S0",
                        "A3"});
            table19.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Blow-up",
                        "S1",
                        "A3"});
            table19.AddRow(new string[] {
                        "Risse, Brüche",
                        "Risse",
                        "S2",
                        "A3"});
            table19.AddRow(new string[] {
                        "Risse, Brüche",
                        "Zerstörte Platten",
                        "S3",
                        "A3"});
            table19.AddRow(new string[] {
                        "Flicke",
                        "Flicke",
                        "S0",
                        "A1"});
#line 265
testRunner.And("ich folgende Schäden erfasse:", ((string)(null)), table19, "Und ");
#line 280
testRunner.And("ich die Schäden speichere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 281
testRunner.And("ich das Formular schliesse", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 282
testRunner.Then("sehe ich für den Zustandsabschnitt mit der Id \'5\' den Zustandsindex \'4.4\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Zustandsabschnitte über die Karte löschen", new string[] {
                "Manuell"}, SourceLine=286)]
        public virtual void DerData_ManagerKannZustandsabschnitteUberDieKarteLoschen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann Zustandsabschnitte über die Karte löschen", new string[] {
                        "Manuell"});
#line 287
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table20.AddRow(new string[] {
                        "Mandant_1",
                        "gis"});
#line 288
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table20, "Gegeben sei ");
#line 291
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 292
 testRunner.And("ich öffne die Seite \'Netzdefinition und Hauptabschnitt mit Strassennamen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 293
 testRunner.And("ich wähle den Modus \"Zustandabschnitt erfassen\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 295
 testRunner.When("ich den Zustandsabschnitt (ID 2) durch Auswahl in der Karte selektiere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 296
 testRunner.And("ich die Netzinformationen für diesen Zustandsabschnitt lösche", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVonStrasse",
                        "BezeichnungBisStrasse",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Länge",
                        "Aufnahmedatum",
                        "Aufnahmeteam",
                        "Wetter",
                        "ZustandsIndexFahrbahn",
                        "ZustandsindexTrottoirLinks",
                        "ZustandsindexTrottoirRechts",
                        "MassnahmenvorschlagFahrbahn",
                        "DringlichkeitMassnahmenvorschlagFahrbahn",
                        "TrottoirLinksErneuerung",
                        "DringlichkeitTrottoirLinksErneuerung",
                        "TrottoirRechtsErneuerung",
                        "DringlichkeitTrottoirRechtsErneuerung"});
            table21.AddRow(new string[] {
                        "1",
                        "Kantonsstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "0.2",
                        "1.2",
                        "1000",
                        "12.14.2009",
                        "Drei",
                        "Nass",
                        "2,3",
                        "",
                        "",
                        "Instandsetzung",
                        "dringlich",
                        "",
                        "",
                        "",
                        ""});
            table21.AddRow(new string[] {
                        "3",
                        "Kantonsstrasse",
                        "Abschnitt B Anfang",
                        "Abschnitt B Ende",
                        "2.0",
                        "7.0",
                        "5000",
                        "23.03.2009",
                        "A",
                        "Trocken",
                        "1,2",
                        "Gut",
                        "",
                        "Instandsetzung",
                        "mittelfristig",
                        "",
                        "",
                        "",
                        ""});
            table21.AddRow(new string[] {
                        "4",
                        "Landstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "0.0",
                        "2.1",
                        "2100",
                        "21.05.2009",
                        "B",
                        "Trocken",
                        "1,1",
                        "",
                        "Kritisch",
                        "Ersatz",
                        "langfristig",
                        "",
                        "",
                        "ja",
                        "dringend"});
            table21.AddRow(new string[] {
                        "5",
                        "Landstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "2.1",
                        "2.4",
                        "300",
                        "21.05.2009",
                        "B",
                        "Trocken",
                        "1,1",
                        "",
                        "Kritisch",
                        "Ersatz",
                        "langfristig",
                        "",
                        "",
                        "ja",
                        "dringend"});
            table21.AddRow(new string[] {
                        "6",
                        "Landstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "2.4",
                        "2.5",
                        "100",
                        "21.05.2009",
                        "B",
                        "Trocken",
                        "2,1",
                        "",
                        "Ausreichend",
                        "Ersatz",
                        "langfristig",
                        "",
                        "",
                        "ja",
                        "mittelfristig"});
            table21.AddRow(new string[] {
                        "7",
                        "Hauptstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "1.2",
                        "2.5",
                        "1300",
                        "21.10.2009",
                        "Meyer",
                        "Trocken",
                        "3,4",
                        "Mittel",
                        "Gut",
                        "",
                        "",
                        "ja",
                        "langfristig",
                        "",
                        ""});
            table21.AddRow(new string[] {
                        "8",
                        "Hauptstrasse",
                        "Abschnitt B Anfang",
                        "Abschnitt B Ende",
                        "0.4",
                        "0.8",
                        "400",
                        "13.09.2009",
                        "A",
                        "Trocken",
                        "2,3",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table21.AddRow(new string[] {
                        "9",
                        "Hauptstrasse",
                        "Abschnitt B Anfang",
                        "Abschnitt B Ende",
                        "0.8",
                        "1.2",
                        "400",
                        "13.09.2009",
                        "A",
                        "Trocken",
                        "2,3",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table21.AddRow(new string[] {
                        "10",
                        "Hauptstrasse",
                        "Abschnitt C Anfang",
                        "Abschnitt C Ende",
                        "0.0",
                        "0.1",
                        "100",
                        "24.07.2009",
                        "B",
                        "Trocken",
                        "3,3",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table21.AddRow(new string[] {
                        "11",
                        "Hauptstrasse",
                        "Abschnitt C Anfang",
                        "Abschnitt C Ende",
                        "0.1",
                        "0.2",
                        "100",
                        "24.07.2009",
                        "B",
                        "Trocken",
                        "4,3",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table21.AddRow(new string[] {
                        "12",
                        "Hauptstrasse",
                        "Abschnitt C Anfang",
                        "Abschnitt C Ende",
                        "0.2",
                        "0.4",
                        "200",
                        "24.07.2009",
                        "B",
                        "Trocken",
                        "4,8",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 298
 testRunner.Then("sind folgende Netzinformationen im System:", ((string)(null)), table21, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System berechnet die Fläche Fahrbahn (m²) nachdem der Data-Manager den Zustan" +
            "dsabschnitt gespeichert hat", new string[] {
                "Manuell"}, SourceLine=314)]
        public virtual void DasSystemBerechnetDieFlacheFahrbahnMNachdemDerData_ManagerDenZustandsabschnittGespeichertHat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Fläche Fahrbahn (m²) nachdem der Data-Manager den Zustan" +
                    "dsabschnitt gespeichert hat", new string[] {
                        "Manuell"});
#line 315
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Länge"});
            table22.AddRow(new string[] {
                        "4",
                        "2000"});
            table22.AddRow(new string[] {
                        "6",
                        "200"});
#line 316
testRunner.When("ich die Zustandsabschnitte für die Strasse mit der Id \'3\' folgendermassen editier" +
                    "e:", ((string)(null)), table22, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "FlächeFahrbahn"});
            table23.AddRow(new string[] {
                        "4",
                        "11500"});
            table23.AddRow(new string[] {
                        "5",
                        "1725"});
            table23.AddRow(new string[] {
                        "6",
                        "1150"});
#line 320
testRunner.Then("werden folgende Zustandsinformationen für die Strasse mit der Id \'3\' angezeigt:", ((string)(null)), table23, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System berechnet die Fläche Trottoir links (m²) nachdem der Data-Manager den " +
            "Zustandsabschnitt gespeichert hat", new string[] {
                "Manuell"}, SourceLine=328)]
        public virtual void DasSystemBerechnetDieFlacheTrottoirLinksMNachdemDerData_ManagerDenZustandsabschnittGespeichertHat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Fläche Trottoir links (m²) nachdem der Data-Manager den " +
                    "Zustandsabschnitt gespeichert hat", new string[] {
                        "Manuell"});
#line 329
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Länge"});
            table24.AddRow(new string[] {
                        "4",
                        "2000"});
            table24.AddRow(new string[] {
                        "6",
                        "200"});
#line 330
testRunner.When("ich die Zustandsabschnitte für die Strasse mit der Id \'3\' folgendermassen editier" +
                    "e:", ((string)(null)), table24, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "FlächeTrottoirLinks"});
            table25.AddRow(new string[] {
                        "4",
                        "5000"});
            table25.AddRow(new string[] {
                        "5",
                        "750"});
            table25.AddRow(new string[] {
                        "6",
                        "500"});
#line 334
testRunner.Then("werden folgende Zustandsinformationen für die Strasse mit der Id \'3\' angezeigt:", ((string)(null)), table25, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System berechnet die Fläche Trottoir rechts (m²) nachdem der Data-Manager den" +
            " Zustandsabschnitt gespeichert hat", new string[] {
                "Manuell"}, SourceLine=342)]
        public virtual void DasSystemBerechnetDieFlacheTrottoirRechtsMNachdemDerData_ManagerDenZustandsabschnittGespeichertHat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Fläche Trottoir rechts (m²) nachdem der Data-Manager den" +
                    " Zustandsabschnitt gespeichert hat", new string[] {
                        "Manuell"});
#line 343
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Länge"});
            table26.AddRow(new string[] {
                        "4",
                        "2000"});
            table26.AddRow(new string[] {
                        "6",
                        "200"});
#line 344
testRunner.When("ich die Zustandsabschnitte für die Strasse mit der Id \'3\' folgendermassen editier" +
                    "e:", ((string)(null)), table26, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "FlächeTrottoirLinks"});
            table27.AddRow(new string[] {
                        "4",
                        "6000"});
            table27.AddRow(new string[] {
                        "5",
                        "900"});
            table27.AddRow(new string[] {
                        "6",
                        "600"});
#line 348
testRunner.Then("werden folgende Zustandsinformationen für die Strasse mit der Id \'3\' angezeigt:", ((string)(null)), table27, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann zu jedem Zustandsabschnitt einen Massnahmenvorschlag erfass" +
            "en", new string[] {
                "Manuell"}, SourceLine=356)]
        public virtual void DerData_ManagerKannZuJedemZustandsabschnittEinenMassnahmenvorschlagErfassen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann zu jedem Zustandsabschnitt einen Massnahmenvorschlag erfass" +
                    "en", new string[] {
                        "Manuell"});
#line 357
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void DasSystemBerechnetDieKostenFurDenGewahltenMassnahmenvorschlag(string id, string massnahme, string kosten, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Manuell"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Kosten für den gewählten Massnahmenvorschlag", @__tags);
#line 362
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Massnahme",
                        "Kosten"});
            table28.AddRow(new string[] {
                        "Oberflächenverbesserung",
                        "50"});
            table28.AddRow(new string[] {
                        "Deckbelagserneuerung",
                        "100"});
            table28.AddRow(new string[] {
                        "Belagserneuerung mit teilweiser Verstärkung",
                        "200"});
            table28.AddRow(new string[] {
                        "Erneuerung Oberbau",
                        "300"});
            table28.AddRow(new string[] {
                        "Trottoir",
                        "50"});
#line 363
testRunner.When("folgende Kosten pro m² für \'Mandant_1\' gelten:", ((string)(null)), table28, "Wenn ");
#line 370
testRunner.And(string.Format("ich für den Zustandsabschnitt mit der Id \'{0}\' die Massnahme \'{1}\' vorschlage", id, massnahme), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 371
testRunner.And("ich die Schäden speichere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 372
testRunner.Then(string.Format("werden folgende \'{0}\' für den Massnahmenvorschlag angezeigt", kosten), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System berechnet die Kosten für den gewählten Massnahmenvorschlag, 1", new string[] {
                "Manuell"}, SourceLine=375)]
        public virtual void DasSystemBerechnetDieKostenFurDenGewahltenMassnahmenvorschlag_1()
        {
            this.DasSystemBerechnetDieKostenFurDenGewahltenMassnahmenvorschlag("1", "Oberflächenverbesserung", "CHF 225000", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System berechnet die Kosten für den gewählten Massnahmenvorschlag, 2", new string[] {
                "Manuell"}, SourceLine=375)]
        public virtual void DasSystemBerechnetDieKostenFurDenGewahltenMassnahmenvorschlag_2()
        {
            this.DasSystemBerechnetDieKostenFurDenGewahltenMassnahmenvorschlag("2", "Deckbelagserneuerung", "CHF 360000", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System berechnet die Kosten für den gewählten Massnahmenvorschlag, 3", new string[] {
                "Manuell"}, SourceLine=375)]
        public virtual void DasSystemBerechnetDieKostenFurDenGewahltenMassnahmenvorschlag_3()
        {
            this.DasSystemBerechnetDieKostenFurDenGewahltenMassnahmenvorschlag("3", "Belagserneuerung mit teilweiser Verstärkung", "CHF 5500000", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System berechnet die Kosten für den gewählten Massnahmenvorschlag, 4", new string[] {
                "Manuell"}, SourceLine=375)]
        public virtual void DasSystemBerechnetDieKostenFurDenGewahltenMassnahmenvorschlag_4()
        {
            this.DasSystemBerechnetDieKostenFurDenGewahltenMassnahmenvorschlag("4", "Erneuerung Oberbau", "CHF 3622500", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System berechnet die Kosten für den gewählten Massnahmenvorschlag, 7", new string[] {
                "Manuell"}, SourceLine=375)]
        public virtual void DasSystemBerechnetDieKostenFurDenGewahltenMassnahmenvorschlag_7()
        {
            this.DasSystemBerechnetDieKostenFurDenGewahltenMassnahmenvorschlag("7", "Erneuerung Trottoir links", "CHF 162500", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System berechnet die Kosten für den gewählten Massnahmenvorschlag, 6", new string[] {
                "Manuell"}, SourceLine=375)]
        public virtual void DasSystemBerechnetDieKostenFurDenGewahltenMassnahmenvorschlag_6()
        {
            this.DasSystemBerechnetDieKostenFurDenGewahltenMassnahmenvorschlag("6", "Erneuerung Trottoir rechts", "CHF 15000", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Archivierte Daten können nicht verändert werden", new string[] {
                "Manuell"}, SourceLine=385)]
        public virtual void ArchivierteDatenKonnenNichtVerandertWerden()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Archivierte Daten können nicht verändert werden", new string[] {
                        "Manuell"});
#line 386
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Werden Zustandsabschnitte gelöscht, hat das keine Auswirkungen auf historische Da" +
            "ten", new string[] {
                "Manuell"}, SourceLine=390)]
        public virtual void WerdenZustandsabschnitteGeloschtHatDasKeineAuswirkungenAufHistorischeDaten()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Werden Zustandsabschnitte gelöscht, hat das keine Auswirkungen auf historische Da" +
                    "ten", new string[] {
                        "Manuell"});
#line 391
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System listet alle Zustandsabschnitte in einer Übersichtstabelle", new string[] {
                "Manuell"}, SourceLine=395)]
        public virtual void DasSystemListetAlleZustandsabschnitteInEinerUbersichtstabelle()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System listet alle Zustandsabschnitte in einer Übersichtstabelle", new string[] {
                        "Manuell"});
#line 396
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 397
testRunner.When("ich die Übersichtstabelle für die Strasse mit der Id \'3\' aufrufe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "ZustandsIndexFahrbahn",
                        "FlächeFahrbahn",
                        "FlächeTrottoirLinks",
                        "FlächeTrottoirRechts"});
            table29.AddRow(new string[] {
                        "4",
                        "Landstrasse",
                        "0.0",
                        "2.1",
                        "1,1",
                        "12075",
                        "5250",
                        "6300"});
            table29.AddRow(new string[] {
                        "5",
                        "Landstrasse",
                        "2.1",
                        "2.4",
                        "1,1",
                        "1725",
                        "750",
                        "900"});
            table29.AddRow(new string[] {
                        "6",
                        "Landstrasse",
                        "2.4",
                        "2.5",
                        "2,1",
                        "575",
                        "250",
                        "300"});
#line 398
testRunner.Then("sehe ich folgende Informationen zu den Zustandsabschnitten:", ((string)(null)), table29, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann einen Zustandsabschnitt auf der Karte digitalisieren", new string[] {
                "Manuell"}, SourceLine=408)]
        public virtual void DerData_ManagerKannEinenZustandsabschnittAufDerKarteDigitalisieren()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann einen Zustandsabschnitt auf der Karte digitalisieren", new string[] {
                        "Manuell"});
#line 409
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Benutzer wählt eine zu bearbeitende Inspektionsroute aus. Die dazugehörigen S" +
            "trassenabschnitte werden auf der Karte angezeigt.", new string[] {
                "Manuell"}, SourceLine=412)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void DerBenutzerWahltEineZuBearbeitendeInspektionsrouteAus_DieDazugehorigenStrassenabschnitteWerdenAufDerKarteAngezeigt_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Benutzer wählt eine zu bearbeitende Inspektionsroute aus. Die dazugehörigen S" +
                    "trassenabschnitte werden auf der Karte angezeigt.", new string[] {
                        "Manuell",
                        "ignore"});
#line 413
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Anfangs- und Endpunkt eines Zustandsabschnitts auf der Kart" +
            "e festlegen", new string[] {
                "Manuell"}, SourceLine=418)]
        public virtual void DerData_ManagerKannAnfangs_UndEndpunktEinesZustandsabschnittsAufDerKarteFestlegen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann Anfangs- und Endpunkt eines Zustandsabschnitts auf der Kart" +
                    "e festlegen", new string[] {
                        "Manuell"});
#line 419
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 420
testRunner.Given("ich öffne die Seite \'Netzverwaltung\\Zustände und Massnahmenvorschläge\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 421
 testRunner.And("ich wähle einen beliebigen Zustandsabschnitt aus", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 422
 testRunner.And("ich aktiviere das Tool \'Zustandsabschnitts Geometrie bearbeiten\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 423
 testRunner.When("ich einen Anfangs oder Endpunkt  entlang des darunterliegendem Strassenabschnitt " +
                    "bewege", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 424
 testRunner.Then("wird der Zustandsabschnitt entsprechend verlängert oder verkürzt", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Anfangs und Endpunkt beziehen sich auf einen einzelnes Segment eines Strassenabsc" +
            "hnittes", new string[] {
                "Manuell"}, SourceLine=428)]
        public virtual void AnfangsUndEndpunktBeziehenSichAufEinenEinzelnesSegmentEinesStrassenabschnittes()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Anfangs und Endpunkt beziehen sich auf einen einzelnes Segment eines Strassenabsc" +
                    "hnittes", new string[] {
                        "Manuell"});
#line 429
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 430
testRunner.When("ich versuche einen End- oder Anfangspunkt über das Segment des darunterliegenden " +
                    "Strassenabschnittes hinauszuziehen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 431
testRunner.Then("stoppt der Punkt am Ende des Segments des Strassenabschnitts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Zustandsabschnitte dürfen sich nicht überlappen", new string[] {
                "Manuell"}, SourceLine=435)]
        public virtual void ZustandsabschnitteDurfenSichNichtUberlappen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Zustandsabschnitte dürfen sich nicht überlappen", new string[] {
                        "Manuell"});
#line 436
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 437
testRunner.When("ich versuche eine den Endpunkt eines Zustandabschnittes über die räumliche Defini" +
                    "tion eines für den selben Strassenabschnitt vorliegenden Zustandabschnittes  auf" +
                    " der Karte zu ziehen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 438
testRunner.Then("stoppt der Punkt am Ende, bzw. Anfang des Zustandabschnittes", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Zustandsabschnitt muss immer einem Strassenabschnitt zugeordnet sein", new string[] {
                "Manuell"}, SourceLine=442)]
        public virtual void DerZustandsabschnittMussImmerEinemStrassenabschnittZugeordnetSein()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Zustandsabschnitt muss immer einem Strassenabschnitt zugeordnet sein", new string[] {
                        "Manuell"});
#line 443
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Zustandsabschnitt erbt ‚Strassenname‘, ‚Belagsart‘, ‚Breite Fahrbahn‘, ‚Trott" +
            "oir‘, ‚Breite Trottoir links‘ und ‚Breite Trottoir rechts‘ vom Strassenabschnitt" +
            "", new string[] {
                "Manuell"}, SourceLine=447)]
        public virtual void DerZustandsabschnittErbtStrassennameBelagsartBreiteFahrbahnTrottoirBreiteTrottoirLinksUndBreiteTrottoirRechtsVomStrassenabschnitt()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Zustandsabschnitt erbt ‚Strassenname‘, ‚Belagsart‘, ‚Breite Fahrbahn‘, ‚Trott" +
                    "oir‘, ‚Breite Trottoir links‘ und ‚Breite Trottoir rechts‘ vom Strassenabschnitt" +
                    "", new string[] {
                        "Manuell"});
#line 448
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Angaben zum Trottoir wie Zustandsindex, Erneuerung usw. können nur erfasst werden" +
            ", sofern der Strassenabschnitt auch einen entsprechenden Trottoir(typ) aufweist", new string[] {
                "Manuell"}, SourceLine=452)]
        public virtual void AngabenZumTrottoirWieZustandsindexErneuerungUsw_KonnenNurErfasstWerdenSofernDerStrassenabschnittAuchEinenEntsprechendenTrottoirTypAufweist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Angaben zum Trottoir wie Zustandsindex, Erneuerung usw. können nur erfasst werden" +
                    ", sofern der Strassenabschnitt auch einen entsprechenden Trottoir(typ) aufweist", new string[] {
                        "Manuell"});
#line 453
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Ein Strassenabschnitt kann mehrere Zustandsabschnitte umfassen.", new string[] {
                "Manuell"}, SourceLine=457)]
        public virtual void EinStrassenabschnittKannMehrereZustandsabschnitteUmfassen_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Ein Strassenabschnitt kann mehrere Zustandsabschnitte umfassen.", new string[] {
                        "Manuell"});
#line 458
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 459
testRunner.Given("ein Strassenabschnitt auf welchem ein Zustandsabschnitt vorliegt, welcher nicht d" +
                    "en gesamten Strassenabschnitt umfasst", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 460
testRunner.When("ich einen neuen Zustandabschnitt auf diesem Strassenabschnitt anlege", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 461
testRunner.Then("wird dieser auf der verbleibenden Länge des Strassenabschnittes erzeugt", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das  System schlägt Anfangs- und Endkilometer des Zustandsabschnitts vor", new string[] {
                "Manuell"}, SourceLine=465)]
        public virtual void DasSystemSchlagtAnfangs_UndEndkilometerDesZustandsabschnittsVor()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das  System schlägt Anfangs- und Endkilometer des Zustandsabschnitts vor", new string[] {
                        "Manuell"});
#line 466
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System verwendet die vom Data-Manager eingetragenen Kilometerwerte zur Defini" +
            "tion des genauen Anfangs bzw. des Ende des Abschnitts", new string[] {
                "Manuell"}, SourceLine=471)]
        public virtual void DasSystemVerwendetDieVomData_ManagerEingetragenenKilometerwerteZurDefinitionDesGenauenAnfangsBzw_DesEndeDesAbschnitts()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System verwendet die vom Data-Manager eingetragenen Kilometerwerte zur Defini" +
                    "tion des genauen Anfangs bzw. des Ende des Abschnitts", new string[] {
                        "Manuell"});
#line 472
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void DerData_ManagerKannAttributeVonZustandsabschnittenErfassen(
                    string tF, 
                    string strassenname, 
                    string bezeichnungVonStrasse, 
                    string bezeichnungBisStrasse, 
                    string bezeichnungVon, 
                    string bezeichnungBis, 
                    string lange, 
                    string aufnahmedatum, 
                    string aufnahmeteam, 
                    string wetter, 
                    string zustandsIndexFahrbahn, 
                    string zustandsindexTrottoirLinks, 
                    string zustandsindexTrottoirRechts, 
                    string massnahmenvorschlagFahrbahn, 
                    string dringlichkeitMassnahmenvorschlagFahrbahn, 
                    string trottoirLinksErneuerung, 
                    string dringlichkeitTrottoirLinksErneuerung, 
                    string trottoirRechtsErneuerung, 
                    string dringlichkeitTrottoirRechtsErneuerung, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Manuell"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann Attribute von Zustandsabschnitten erfassen", @__tags);
#line 478
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVonStrasse",
                        "BezeichnungBisStrasse",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Länge",
                        "Aufnahmedatum",
                        "Aufnahmeteam",
                        "Wetter",
                        "ZustandsIndexFahrbahn",
                        "ZustandsindexTrottoirLinks",
                        "ZustandsindexTrottoirRechts",
                        "MassnahmenvorschlagFahrbahn",
                        "DringlichkeitMassnahmenvorschlagFahrbahn",
                        "TrottoirLinksErneuerung",
                        "DringlichkeitTrottoirLinksErneuerung",
                        "TrottoirRechtsErneuerung",
                        "DringlichkeitTrottoirRechtsErneuerung"});
            table30.AddRow(new string[] {
                        string.Format("{0}", strassenname),
                        string.Format("{0}", bezeichnungVonStrasse),
                        string.Format("{0}", bezeichnungBisStrasse),
                        string.Format("{0}", bezeichnungVon),
                        string.Format("{0}", bezeichnungBis),
                        string.Format("{0}", lange),
                        string.Format("{0}", aufnahmedatum),
                        string.Format("{0}", aufnahmeteam),
                        string.Format("{0}", wetter),
                        string.Format("{0}", zustandsIndexFahrbahn),
                        string.Format("{0}", zustandsindexTrottoirLinks),
                        string.Format("{0}", zustandsindexTrottoirRechts),
                        string.Format("{0}", massnahmenvorschlagFahrbahn),
                        string.Format("{0}", dringlichkeitMassnahmenvorschlagFahrbahn),
                        string.Format("{0}", trottoirLinksErneuerung),
                        string.Format("{0}", dringlichkeitTrottoirLinksErneuerung),
                        string.Format("{0}", trottoirRechtsErneuerung),
                        string.Format("{0}", dringlichkeitTrottoirRechtsErneuerung)});
#line 479
testRunner.When("ich folgende GIS-Netzinformationen eingebe:", ((string)(null)), table30, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVonStrasse",
                        "BezeichnungBisStrasse",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Länge",
                        "Aufnahmedatum",
                        "Aufnahmeteam",
                        "Wetter",
                        "ZustandsIndexFahrbahn",
                        "ZustandsindexTrottoirLinks",
                        "ZustandsindexTrottoirRechts",
                        "MassnahmenvorschlagFahrbahn",
                        "DringlichkeitMassnahmenvorschlagFahrbahn",
                        "TrottoirLinksErneuerung",
                        "DringlichkeitTrottoirLinksErneuerung",
                        "TrottoirRechtsErneuerung",
                        "DringlichkeitTrottoirRechtsErneuerung"});
            table31.AddRow(new string[] {
                        string.Format("{0}", strassenname),
                        string.Format("{0}", bezeichnungVonStrasse),
                        string.Format("{0}", bezeichnungBisStrasse),
                        string.Format("{0}", bezeichnungVon),
                        string.Format("{0}", bezeichnungBis),
                        string.Format("{0}", lange),
                        string.Format("{0}", aufnahmedatum),
                        string.Format("{0}", aufnahmeteam),
                        string.Format("{0}", wetter),
                        string.Format("{0}", zustandsIndexFahrbahn),
                        string.Format("{0}", zustandsindexTrottoirLinks),
                        string.Format("{0}", zustandsindexTrottoirRechts),
                        string.Format("{0}", massnahmenvorschlagFahrbahn),
                        string.Format("{0}", dringlichkeitMassnahmenvorschlagFahrbahn),
                        string.Format("{0}", trottoirLinksErneuerung),
                        string.Format("{0}", dringlichkeitTrottoirLinksErneuerung),
                        string.Format("{0}", trottoirRechtsErneuerung),
                        string.Format("{0}", dringlichkeitTrottoirRechtsErneuerung)});
#line 483
 testRunner.Then("sind folgende GIS-Netzinformationen im System:", ((string)(null)), table31, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute von Zustandsabschnitten erfassen, 1", new string[] {
                "Manuell"}, SourceLine=488)]
        public virtual void DerData_ManagerKannAttributeVonZustandsabschnittenErfassen_1()
        {
            this.DerData_ManagerKannAttributeVonZustandsabschnittenErfassen("1", "Kantonsstrasse", "Abschnitt A Anfang", "Abschnitt A Ende", "0.2", "1.2", "1000", "12.14.2009", "Drei", "Nass", "2,3", "", "", "Instandsetzung", "dringlich", "", "", "", "", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute von Zustandsabschnitten erfassen, 2", new string[] {
                "Manuell"}, SourceLine=488)]
        public virtual void DerData_ManagerKannAttributeVonZustandsabschnittenErfassen_2()
        {
            this.DerData_ManagerKannAttributeVonZustandsabschnittenErfassen("2", "Kantonsstrasse", "Abschnitt A Anfang", "Abschnitt A Ende", "1.2", "2.0", "800", "12.14.2009", "Drei", "Nass", "2,3", "", "", "Instandsetzung", "dringlich", "", "", "", "", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute von Zustandsabschnitten erfassen, 3", new string[] {
                "Manuell"}, SourceLine=488)]
        public virtual void DerData_ManagerKannAttributeVonZustandsabschnittenErfassen_3()
        {
            this.DerData_ManagerKannAttributeVonZustandsabschnittenErfassen("3", "Kantonsstrasse", "Abschnitt B Anfang", "Abschnitt B Ende", "2.0", "7.0", "5000", "23.03.2009", "A", "Trocken", "1,2", "Gut", "", "Instandsetzung", "mittelfristig", "", "", "", "", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute von Zustandsabschnitten erfassen, 4", new string[] {
                "Manuell"}, SourceLine=488)]
        public virtual void DerData_ManagerKannAttributeVonZustandsabschnittenErfassen_4()
        {
            this.DerData_ManagerKannAttributeVonZustandsabschnittenErfassen("4", "Landstrasse", "Abschnitt A Anfang", "Abschnitt A Ende", "0.0", "2.1", "2100", "21.05.2009", "B", "Trocken", "1,1", "", "Kritisch", "Ersatz", "langfristig", "", "", "ja", "dringend", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute von Zustandsabschnitten erfassen, 5", new string[] {
                "Manuell"}, SourceLine=488)]
        public virtual void DerData_ManagerKannAttributeVonZustandsabschnittenErfassen_5()
        {
            this.DerData_ManagerKannAttributeVonZustandsabschnittenErfassen("5", "Landstrasse", "Abschnitt A Anfang", "Abschnitt A Ende", "2.1", "2.4", "300", "21.05.2009", "B", "Trocken", "1,1", "", "Kritisch", "Ersatz", "langfristig", "", "", "ja", "dringend", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute von Zustandsabschnitten erfassen, 6", new string[] {
                "Manuell"}, SourceLine=488)]
        public virtual void DerData_ManagerKannAttributeVonZustandsabschnittenErfassen_6()
        {
            this.DerData_ManagerKannAttributeVonZustandsabschnittenErfassen("6", "Landstrasse", "Abschnitt A Anfang", "Abschnitt A Ende", "2.4", "2.5", "100", "21.05.2009", "B", "Trocken", "2,1", "", "Ausreichend", "Ersatz", "langfristig", "", "", "ja", "mittelfristig", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute von Zustandsabschnitten erfassen, 7", new string[] {
                "Manuell"}, SourceLine=488)]
        public virtual void DerData_ManagerKannAttributeVonZustandsabschnittenErfassen_7()
        {
            this.DerData_ManagerKannAttributeVonZustandsabschnittenErfassen("7", "Hauptstrasse", "Abschnitt A Anfang", "Abschnitt A Ende", "1.2", "2.5", "1300", "21.10.2009", "Meyer", "Trocken", "3,4", "Mittel", "Gut", "", "", "ja", "langfristig", "", "", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute von Zustandsabschnitten erfassen, 8", new string[] {
                "Manuell"}, SourceLine=488)]
        public virtual void DerData_ManagerKannAttributeVonZustandsabschnittenErfassen_8()
        {
            this.DerData_ManagerKannAttributeVonZustandsabschnittenErfassen("8", "Hauptstrasse", "Abschnitt B Anfang", "Abschnitt B Ende", "0.4", "0.8", "400", "13.09.2009", "A", "Trocken", "2,3", "", "", "", "", "", "", "", "", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute von Zustandsabschnitten erfassen, 9", new string[] {
                "Manuell"}, SourceLine=488)]
        public virtual void DerData_ManagerKannAttributeVonZustandsabschnittenErfassen_9()
        {
            this.DerData_ManagerKannAttributeVonZustandsabschnittenErfassen("9", "Hauptstrasse", "Abschnitt B Anfang", "Abschnitt B Ende", "0.8", "1.2", "400", "13.09.2009", "A", "Trocken", "2,3", "", "", "", "", "", "", "", "", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute von Zustandsabschnitten erfassen, 10", new string[] {
                "Manuell"}, SourceLine=488)]
        public virtual void DerData_ManagerKannAttributeVonZustandsabschnittenErfassen_10()
        {
            this.DerData_ManagerKannAttributeVonZustandsabschnittenErfassen("10", "Hauptstrasse", "Abschnitt C Anfang", "Abschnitt C Ende", "0.0", "0.1", "100", "24.07.2009", "B", "Trocken", "3,3", "", "", "", "", "", "", "", "", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute von Zustandsabschnitten erfassen, 11", new string[] {
                "Manuell"}, SourceLine=488)]
        public virtual void DerData_ManagerKannAttributeVonZustandsabschnittenErfassen_11()
        {
            this.DerData_ManagerKannAttributeVonZustandsabschnittenErfassen("11", "Hauptstrasse", "Abschnitt C Anfang", "Abschnitt C Ende", "0.1", "0.2", "100", "24.07.2009", "B", "Trocken", "4,3", "", "", "", "", "", "", "", "", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute von Zustandsabschnitten erfassen, 12", new string[] {
                "Manuell"}, SourceLine=488)]
        public virtual void DerData_ManagerKannAttributeVonZustandsabschnittenErfassen_12()
        {
            this.DerData_ManagerKannAttributeVonZustandsabschnittenErfassen("12", "Hauptstrasse", "Abschnitt C Anfang", "Abschnitt C Ende", "0.2", "0.4", "200", "24.07.2009", "B", "Trocken", "4,8", "", "", "", "", "", "", "", "", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Z3.2 - Mit EMSG-Master Schäden und Massnahmenvorschläge für Zustandsabschnitte na" +
        "chbearbeiten")]
    public partial class Z3_2_MitEMSG_MasterSchadenUndMassnahmenvorschlageFurZustandsabschnitteNachbearbeitenFeature_NUnit
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Z3.2.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "Z3.2 - Mit EMSG-Master Schäden und Massnahmenvorschläge für Zustandsabschnitte na" +
                    "chbearbeiten", "\tAls Data-Manager\r\n\twill ich auf EMSG-Master Schäden und Massnahmenvorschläge für" +
                    " Zustandsabschnitte nachbearbeiten\r\n\tdamit ich die Qualität der Inspektionsergeb" +
                    "nisse verbessern bzw. Daten effizienter eingeben kann", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table1.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 7
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table1, "Gegeben sei ");
#line 10
testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belagsart",
                        "BreiteFahrbahn",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechtss"});
            table2.AddRow(new string[] {
                        "1",
                        "Kantonsstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "Asphalt",
                        "4,5",
                        "beide Seiten",
                        "2,5",
                        "3"});
            table2.AddRow(new string[] {
                        "2",
                        "Kantonsstrasse",
                        "Abschnitt B Anfang",
                        "Abschnitt B Ende",
                        "Asphalt",
                        "5,5",
                        "beide Seiten",
                        "2,5",
                        "3"});
            table2.AddRow(new string[] {
                        "3",
                        "Landstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "Beton",
                        "5,75",
                        "beide Seiten",
                        "2,5",
                        "3"});
            table2.AddRow(new string[] {
                        "4",
                        "Hauptstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "Beton",
                        "7",
                        "beide Seiten",
                        "2,5",
                        "3"});
            table2.AddRow(new string[] {
                        "5",
                        "Hauptstrasse",
                        "Abschnitt B Anfang",
                        "Abschnitt B Ende",
                        "Asphalt",
                        "7",
                        "beide Seiten",
                        "2,5",
                        "3"});
            table2.AddRow(new string[] {
                        "6",
                        "Hauptstrasse",
                        "Abschnitt C Anfang",
                        "Abschnitt C Ende",
                        "Asphalt",
                        "14",
                        "beide Seiten",
                        "2,5",
                        "3"});
#line 11
testRunner.And("folgende Netzinformationen existieren:", ((string)(null)), table2, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVonStrasse",
                        "BezeichnungBisStrasse",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Länge",
                        "Aufnahmedatum",
                        "Aufnahmeteam",
                        "Wetter",
                        "ZustandsIndexFahrbahn",
                        "ZustandsindexTrottoirLinks",
                        "ZustandsindexTrottoirRechts",
                        "MassnahmenvorschlagFahrbahn",
                        "DringlichkeitMassnahmenvorschlagFahrbahn",
                        "TrottoirLinksErneuerung",
                        "DringlichkeitTrottoirLinksErneuerung",
                        "TrottoirRechtsErneuerung",
                        "DringlichkeitTrottoirRechtsErneuerung"});
            table3.AddRow(new string[] {
                        "1",
                        "Kantonsstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "0.2",
                        "1.2",
                        "1000",
                        "12.14.2009",
                        "Drei",
                        "Nass",
                        "2,3",
                        "",
                        "",
                        "Instandsetzung",
                        "dringlich",
                        "",
                        "",
                        "",
                        ""});
            table3.AddRow(new string[] {
                        "2",
                        "Kantonsstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "1.2",
                        "2.0",
                        "800",
                        "12.14.2009",
                        "Drei",
                        "Nass",
                        "2,3",
                        "",
                        "",
                        "Instandsetzung",
                        "dringlich",
                        "",
                        "",
                        "",
                        ""});
            table3.AddRow(new string[] {
                        "3",
                        "Kantonsstrasse",
                        "Abschnitt B Anfang",
                        "Abschnitt B Ende",
                        "2.0",
                        "7.0",
                        "5000",
                        "23.03.2009",
                        "A",
                        "Trocken",
                        "1,2",
                        "Gut",
                        "",
                        "Instandsetzung",
                        "mittelfristig",
                        "",
                        "",
                        "",
                        ""});
            table3.AddRow(new string[] {
                        "4",
                        "Landstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "0.0",
                        "2.1",
                        "2100",
                        "21.05.2009",
                        "B",
                        "Trocken",
                        "1,1",
                        "",
                        "Kritisch",
                        "Ersatz",
                        "langfristig",
                        "",
                        "",
                        "ja",
                        "dringend"});
            table3.AddRow(new string[] {
                        "5",
                        "Landstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "2.1",
                        "2.4",
                        "300",
                        "21.05.2009",
                        "B",
                        "Trocken",
                        "1,1",
                        "",
                        "Kritisch",
                        "Ersatz",
                        "langfristig",
                        "",
                        "",
                        "ja",
                        "dringend"});
            table3.AddRow(new string[] {
                        "6",
                        "Landstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "2.4",
                        "2.5",
                        "100",
                        "21.05.2009",
                        "B",
                        "Trocken",
                        "2,1",
                        "",
                        "Ausreichend",
                        "Ersatz",
                        "langfristig",
                        "",
                        "",
                        "ja",
                        "mittelfristig"});
            table3.AddRow(new string[] {
                        "7",
                        "Hauptstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "1.2",
                        "2.5",
                        "1300",
                        "21.10.2009",
                        "Meyer",
                        "Trocken",
                        "3,4",
                        "Mittel",
                        "Gut",
                        "",
                        "",
                        "ja",
                        "langfristig",
                        "",
                        ""});
            table3.AddRow(new string[] {
                        "8",
                        "Hauptstrasse",
                        "Abschnitt B Anfang",
                        "Abschnitt B Ende",
                        "0.4",
                        "0.8",
                        "400",
                        "13.09.2009",
                        "A",
                        "Trocken",
                        "2,3",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table3.AddRow(new string[] {
                        "9",
                        "Hauptstrasse",
                        "Abschnitt B Anfang",
                        "Abschnitt B Ende",
                        "0.8",
                        "1.2",
                        "400",
                        "13.09.2009",
                        "A",
                        "Trocken",
                        "2,3",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table3.AddRow(new string[] {
                        "10",
                        "Hauptstrasse",
                        "Abschnitt C Anfang",
                        "Abschnitt C Ende",
                        "0.0",
                        "0.1",
                        "100",
                        "24.07.2009",
                        "B",
                        "Trocken",
                        "3,3",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table3.AddRow(new string[] {
                        "11",
                        "Hauptstrasse",
                        "Abschnitt C Anfang",
                        "Abschnitt C Ende",
                        "0.1",
                        "0.2",
                        "100",
                        "24.07.2009",
                        "B",
                        "Trocken",
                        "4,3",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table3.AddRow(new string[] {
                        "12",
                        "Hauptstrasse",
                        "Abschnitt C Anfang",
                        "Abschnitt C Ende",
                        "0.2",
                        "0.4",
                        "200",
                        "24.07.2009",
                        "B",
                        "Trocken",
                        "4,8",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 19
testRunner.And("folgende Zustandsinformationen existieren:", ((string)(null)), table3, "Und ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann Schäden und Massnahmenvorschläge bestehender Zustandsabschn" +
            "itte vollumfänglich nachbearbeiten")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannSchadenUndMassnahmenvorschlageBestehenderZustandsabschnitteVollumfanglichNachbearbeiten()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann Schäden und Massnahmenvorschläge bestehender Zustandsabschn" +
                    "itte vollumfänglich nachbearbeiten", new string[] {
                        "Manuell"});
#line 37
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "ZustandsIndexFahrbahn",
                        "ZustandsindexTrottoirLinks",
                        "MassnahmenvorschlagFahrbahn",
                        "DringlichkeitMassnahmenvorschlagFahrbahn",
                        "TrottoirLinksErneuerung",
                        "DringlichkeitTrottoirLinksErneuerung",
                        "TrottoirRechtsErneuerung",
                        "DringlichkeitTrottoirRechtsErneuerung"});
            table4.AddRow(new string[] {
                        "1",
                        "3.2",
                        "",
                        "Instandsetzung",
                        "dringlich",
                        "",
                        "",
                        "",
                        ""});
            table4.AddRow(new string[] {
                        "2",
                        "2.3",
                        "",
                        "Ersatz",
                        "dringlich",
                        "",
                        "",
                        "",
                        ""});
            table4.AddRow(new string[] {
                        "3",
                        "1.2",
                        "Gut",
                        "Instandsetzung",
                        "dringlich",
                        "ja",
                        "langfristig",
                        "ja",
                        "dringend"});
#line 38
testRunner.When("ich die Schäden und Massnahmenvorschläge folgendermassen editere:", ((string)(null)), table4, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVonStrasse",
                        "BezeichnungBisStrasse",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Länge",
                        "Aufnahmedatum",
                        "Aufnahmeteam",
                        "Wetter",
                        "ZustandsIndexFahrbahn",
                        "ZustandsindexTrottoirLinks",
                        "ZustandsindexTrottoirRechts",
                        "MassnahmenvorschlagFahrbahn",
                        "DringlichkeitMassnahmenvorschlagFahrbahn",
                        "TrottoirLinksErneuerung",
                        "DringlichkeitTrottoirLinksErneuerung",
                        "TrottoirRechtsErneuerung",
                        "DringlichkeitTrottoirRechtsErneuerung"});
            table5.AddRow(new string[] {
                        "1",
                        "Kantonsstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "0.2",
                        "1.2",
                        "1000",
                        "12.14.2009",
                        "Drei",
                        "Nass",
                        "3,2",
                        "",
                        "",
                        "Instandsetzung",
                        "dringlich",
                        "",
                        "",
                        "",
                        ""});
            table5.AddRow(new string[] {
                        "2",
                        "Kantonsstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "1.2",
                        "2.0",
                        "800",
                        "12.14.2009",
                        "Drei",
                        "Nass",
                        "2,3",
                        "",
                        "",
                        "Ersatz",
                        "dringlich",
                        "",
                        "",
                        "",
                        ""});
            table5.AddRow(new string[] {
                        "3",
                        "Kantonsstrasse",
                        "Abschnitt B Anfang",
                        "Abschnitt B Ende",
                        "2.0",
                        "7.0",
                        "5000",
                        "23.03.2009",
                        "A",
                        "Trocken",
                        "1,2",
                        "Gut",
                        "",
                        "Instandsetzung",
                        "dringlich",
                        "ja",
                        "langfristig",
                        "ja",
                        "dringend"});
            table5.AddRow(new string[] {
                        "4",
                        "Landstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "0.0",
                        "2.1",
                        "2100",
                        "21.05.2009",
                        "B",
                        "Trocken",
                        "1,1",
                        "",
                        "Kritisch",
                        "Ersatz",
                        "langfristig",
                        "",
                        "",
                        "ja",
                        "dringend"});
            table5.AddRow(new string[] {
                        "5",
                        "Landstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "2.1",
                        "2.4",
                        "300",
                        "21.05.2009",
                        "B",
                        "Trocken",
                        "1,1",
                        "",
                        "Kritisch",
                        "Ersatz",
                        "langfristig",
                        "",
                        "",
                        "ja",
                        "dringend"});
            table5.AddRow(new string[] {
                        "6",
                        "Landstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "2.4",
                        "2.5",
                        "100",
                        "21.05.2009",
                        "B",
                        "Trocken",
                        "2,1",
                        "",
                        "Ausreichend",
                        "Ersatz",
                        "langfristig",
                        "",
                        "",
                        "ja",
                        "mittelfristig"});
            table5.AddRow(new string[] {
                        "7",
                        "Hauptstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "1.2",
                        "2.5",
                        "1300",
                        "21.10.2009",
                        "Meyer",
                        "Trocken",
                        "3,4",
                        "Mittel",
                        "Gut",
                        "",
                        "",
                        "ja",
                        "langfristig",
                        "",
                        ""});
            table5.AddRow(new string[] {
                        "8",
                        "Hauptstrasse",
                        "Abschnitt B Anfang",
                        "Abschnitt B Ende",
                        "0.4",
                        "0.8",
                        "400",
                        "13.09.2009",
                        "A",
                        "Trocken",
                        "2,3",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table5.AddRow(new string[] {
                        "9",
                        "Hauptstrasse",
                        "Abschnitt B Anfang",
                        "Abschnitt B Ende",
                        "0.8",
                        "1.2",
                        "400",
                        "13.09.2009",
                        "A",
                        "Trocken",
                        "2,3",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table5.AddRow(new string[] {
                        "10",
                        "Hauptstrasse",
                        "Abschnitt C Anfang",
                        "Abschnitt C Ende",
                        "0.0",
                        "0.1",
                        "100",
                        "24.07.2009",
                        "B",
                        "Trocken",
                        "3,3",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table5.AddRow(new string[] {
                        "11",
                        "Hauptstrasse",
                        "Abschnitt C Anfang",
                        "Abschnitt C Ende",
                        "0.1",
                        "0.2",
                        "100",
                        "24.07.2009",
                        "B",
                        "Trocken",
                        "4,3",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table5.AddRow(new string[] {
                        "12",
                        "Hauptstrasse",
                        "Abschnitt C Anfang",
                        "Abschnitt C Ende",
                        "0.2",
                        "0.4",
                        "200",
                        "24.07.2009",
                        "B",
                        "Trocken",
                        "4,8",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 43
testRunner.Then("existieren folgende Zustandsinformationen:", ((string)(null)), table5, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann Zustandsabschnitte bearbeiten")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannZustandsabschnitteBearbeiten()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann Zustandsabschnitte bearbeiten", new string[] {
                        "Manuell"});
#line 61
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Länge",
                        "Aufnahmedatum",
                        "Aufnahmeteam",
                        "Wetter",
                        "ZustandsIndexFahrbahn",
                        "ZustandsindexTrottoirRechts",
                        "MassnahmenvorschlagFahrbahn",
                        "DringlichkeitMassnahmenvorschlagFahrbahn",
                        "TrottoirLinksErneuerung",
                        "DringlichkeitTrottoirLinksErneuerung",
                        "TrottoirRechtsErneuerung",
                        "DringlichkeitTrottoirRechtsErneuerung"});
            table6.AddRow(new string[] {
                        "4",
                        "0.0",
                        "2.1",
                        "2100",
                        "31.03.2010",
                        "A",
                        "Nass",
                        "1,5",
                        "Ausreichend",
                        "Instandsetzung",
                        "dringlich",
                        "",
                        "",
                        "nein",
                        ""});
            table6.AddRow(new string[] {
                        "6",
                        "2.4",
                        "2.6",
                        "200",
                        "21.05.2009",
                        "B",
                        "Trocken",
                        "2,1",
                        "Ausreichend",
                        "Ersatz",
                        "langfristig",
                        "",
                        "",
                        "ja",
                        "mittelfristig"});
#line 62
testRunner.When("ich die Zustandsabschnitte für die Strasse mit der Id \'3\' folgendermassen editier" +
                    "e:", ((string)(null)), table6, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVonStrasse",
                        "BezeichnungBisStrasse",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Länge",
                        "Aufnahmedatum",
                        "Aufnahmeteam",
                        "Wetter",
                        "ZustandsIndexFahrbahn",
                        "ZustandsindexTrottoirLinks",
                        "ZustandsindexTrottoirRechts",
                        "MassnahmenvorschlagFahrbahn",
                        "DringlichkeitMassnahmenvorschlagFahrbahn",
                        "TrottoirLinksErneuerung",
                        "DringlichkeitTrottoirLinksErneuerung",
                        "TrottoirRechtsErneuerung",
                        "DringlichkeitTrottoirRechtsErneuerung"});
            table7.AddRow(new string[] {
                        "4",
                        "Landstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "0.0",
                        "2.1",
                        "2100",
                        "31.03.2010",
                        "A",
                        "Nass",
                        "1,5",
                        "",
                        "Ausreichend",
                        "Instandsetzung",
                        "dringlich",
                        "",
                        "",
                        "nein",
                        ""});
            table7.AddRow(new string[] {
                        "5",
                        "Landstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "2.1",
                        "2.4",
                        "300",
                        "21.05.2009",
                        "B",
                        "Trocken",
                        "1,1",
                        "",
                        "Kritisch",
                        "Ersatz",
                        "langfristig",
                        "",
                        "",
                        "ja",
                        "dringend"});
            table7.AddRow(new string[] {
                        "6",
                        "Landstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "2.4",
                        "2.6",
                        "200",
                        "21.05.2009",
                        "B",
                        "Trocken",
                        "2,1",
                        "",
                        "Ausreichend",
                        "Ersatz",
                        "langfristig",
                        "",
                        "",
                        "ja",
                        "mittelfristig"});
#line 66
testRunner.Then("existieren folgende Zustandsinformationen für die Strasse mit der Id \'3\':", ((string)(null)), table7, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann das Zustandserfassungsformular (Erfassungsformular für Ober" +
            "flächenschäden) ausfüllen")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannDasZustandserfassungsformularErfassungsformularFurOberflachenschadenAusfullen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann das Zustandserfassungsformular (Erfassungsformular für Ober" +
                    "flächenschäden) ausfüllen", new string[] {
                        "Manuell"});
#line 75
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 76
testRunner.When("ich das Erfassungsformular für Oberflächenschäden für den Zustandsabschnitt mit d" +
                    "er Id \'1\' öffne", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Möglichkeit"});
            table8.AddRow(new string[] {
                        "Erfassung des Zustandsindex"});
            table8.AddRow(new string[] {
                        "Grobe Zustandserfassung"});
            table8.AddRow(new string[] {
                        "Detaillierte Zustandserfassung"});
#line 77
testRunner.Then("habe ich folgende Möglichkeiten zur Auswahl:", ((string)(null)), table8, "Dann ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis"});
            table9.AddRow(new string[] {
                        "Kantonsstrasse",
                        "0.2",
                        "1.2"});
#line 82
testRunner.And("sehe folgende Informationen:", ((string)(null)), table9, "Und ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System stellt sicher, dass die Summe der Längen der Zustandsabschnitte nicht " +
            "grösser ist, als die Länge des Strassenabschnitts")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemStelltSicherDassDieSummeDerLangenDerZustandsabschnitteNichtGrosserIstAlsDieLangeDesStrassenabschnitts()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System stellt sicher, dass die Summe der Längen der Zustandsabschnitte nicht " +
                    "grösser ist, als die Länge des Strassenabschnitts", new string[] {
                        "Manuell"});
#line 89
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System stellt bei grober und detaillierter Erfassung das Formular entsprechen" +
            "d der Belagsart des Strassenabschnitts dar")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemStelltBeiGroberUndDetaillierterErfassungDasFormularEntsprechendDerBelagsartDesStrassenabschnittsDar()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System stellt bei grober und detaillierter Erfassung das Formular entsprechen" +
                    "d der Belagsart des Strassenabschnitts dar", new string[] {
                        "Manuell"});
#line 94
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Erfassungsformular Oberflächenschäden Betonbelag (Beton) - detailliert")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void ErfassungsformularOberflachenschadenBetonbelagBeton_Detailliert()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Erfassungsformular Oberflächenschäden Betonbelag (Beton) - detailliert", new string[] {
                        "Manuell"});
#line 99
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 100
testRunner.When("ich das Erfassungsformular für Oberflächenschäden für den Zustandsabschnitt mit d" +
                    "er Id \'5\' öffne", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Kategorie",
                        "Schaden"});
            table10.AddRow(new string[] {
                        "Oberflächenglätte",
                        "Polieren"});
            table10.AddRow(new string[] {
                        "Materialverluste",
                        "Abrieb"});
            table10.AddRow(new string[] {
                        "Materialverluste",
                        "Abblätterung"});
            table10.AddRow(new string[] {
                        "Materialverluste",
                        "Abplatzungen"});
            table10.AddRow(new string[] {
                        "Fugen- und Kantenschäden",
                        "Kantenschäden, Absplitterung"});
            table10.AddRow(new string[] {
                        "Fugen- und Kantenschäden",
                        "Fehlender oder spröder Fugenverguss"});
            table10.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Setzungen, Frosthebungen"});
            table10.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Stufenbildung"});
            table10.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Pumpen"});
            table10.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Blow-up"});
            table10.AddRow(new string[] {
                        "Risse, Brüche",
                        "Risse"});
            table10.AddRow(new string[] {
                        "Risse, Brüche",
                        "Zerstörte Platten"});
            table10.AddRow(new string[] {
                        "Flicke",
                        "Flicke"});
#line 101
testRunner.Then("sehe ich das Schadenerfassungsformular mit folgenden Möglichkeiten:", ((string)(null)), table10, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Erfassungsformular Oberflächenschäden bitumenhaltiger Belag (Asphalt) - detaillie" +
            "rt")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void ErfassungsformularOberflachenschadenBitumenhaltigerBelagAsphalt_Detailliert()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Erfassungsformular Oberflächenschäden bitumenhaltiger Belag (Asphalt) - detaillie" +
                    "rt", new string[] {
                        "Manuell"});
#line 120
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 121
testRunner.When("ich das Erfassungsformular für Oberflächenschäden für den Zustandsabschnitt mit d" +
                    "er Id \'1\' öffne", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Kategorie",
                        "Schaden"});
            table11.AddRow(new string[] {
                        "Oberflächenglätte",
                        "Polieren"});
            table11.AddRow(new string[] {
                        "Oberflächenglätte",
                        "Schwitzen"});
            table11.AddRow(new string[] {
                        "Belagschäden",
                        "Abrieb"});
            table11.AddRow(new string[] {
                        "Belagschäden",
                        "Ausmagerung, Absanden"});
            table11.AddRow(new string[] {
                        "Belagschäden",
                        "Kornausbrüche"});
            table11.AddRow(new string[] {
                        "Belagschäden",
                        "Ablösungen"});
            table11.AddRow(new string[] {
                        "Belagschäden",
                        "Schlaglöcher"});
            table11.AddRow(new string[] {
                        "Belagschäden",
                        "Offene Nähte"});
            table11.AddRow(new string[] {
                        "Belagschäden",
                        "Querrisse"});
            table11.AddRow(new string[] {
                        "Belagschäden",
                        "Wilde Risse"});
            table11.AddRow(new string[] {
                        "Belagsverformungen",
                        "Spurrinnen"});
            table11.AddRow(new string[] {
                        "Belagsverformungen",
                        "Aufwölbungen"});
            table11.AddRow(new string[] {
                        "Belagsverformungen",
                        "Wellblechverformungen"});
            table11.AddRow(new string[] {
                        "Belagsverformungen",
                        "Schubverformungen"});
            table11.AddRow(new string[] {
                        "Strukturelle Schäden",
                        "Anrisse von Setzungen"});
            table11.AddRow(new string[] {
                        "Strukturelle Schäden",
                        "Setzungen, Einsenkungen"});
            table11.AddRow(new string[] {
                        "Strukturelle Schäden",
                        "Abgedrückte Ränder"});
            table11.AddRow(new string[] {
                        "Strukturelle Schäden",
                        "Frosthebungen"});
            table11.AddRow(new string[] {
                        "Strukturelle Schäden",
                        "Längsrisse"});
            table11.AddRow(new string[] {
                        "Strukturelle Schäden",
                        "Netzrisse"});
            table11.AddRow(new string[] {
                        "Strukturelle Schäden",
                        "Belagsrandrisse"});
            table11.AddRow(new string[] {
                        "Flicke",
                        "Flicke"});
#line 122
testRunner.Then("sehe ich das Schadenerfassungsformular mit folgenden Möglichkeiten:", ((string)(null)), table11, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann die Schadenschwere erfassen")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannDieSchadenschwereErfassen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann die Schadenschwere erfassen", new string[] {
                        "Manuell"});
#line 150
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 151
testRunner.When("ich das Erfassungsformular für Oberflächenschäden für den Zustandsabschnitt mit d" +
                    "er Id \'1\' öffne", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Schwere"});
            table12.AddRow(new string[] {
                        "S0"});
            table12.AddRow(new string[] {
                        "S1"});
            table12.AddRow(new string[] {
                        "S2"});
            table12.AddRow(new string[] {
                        "S3"});
#line 152
testRunner.Then("sehe ich das Schadenerfassungsformular mit folgenden Möglichkeiten:", ((string)(null)), table12, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann das Schadenausmass erfassen")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannDasSchadenausmassErfassen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann das Schadenausmass erfassen", new string[] {
                        "Manuell"});
#line 162
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 163
testRunner.When("ich das Erfassungsformular für Oberflächenschäden für den Zustandsabschnitt mit d" +
                    "er Id \'1\' öffne", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Schadenausmass"});
            table13.AddRow(new string[] {
                        "A1"});
            table13.AddRow(new string[] {
                        "A2"});
            table13.AddRow(new string[] {
                        "A3"});
#line 164
testRunner.Then("sehe ich das Schadenerfassungsformular mit folgenden Möglichkeiten:", ((string)(null)), table13, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System errechnet die Matrixwerte")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemErrechnetDieMatrixwerte()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System errechnet die Matrixwerte", new string[] {
                        "Manuell"});
#line 173
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 174
testRunner.When("ich das Erfassungsformular für Oberflächenschäden für den Zustandsabschnitt mit d" +
                    "er Id \'5\' öffne", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Kategorie",
                        "Schaden",
                        "Schwere",
                        "Schadenausmass"});
            table14.AddRow(new string[] {
                        "Oberflächenglätte",
                        "Polieren",
                        "S0",
                        "A1"});
            table14.AddRow(new string[] {
                        "Materialverluste",
                        "Abrieb",
                        "S1",
                        "A1"});
            table14.AddRow(new string[] {
                        "Materialverluste",
                        "Abblätterung",
                        "S2",
                        "A1"});
            table14.AddRow(new string[] {
                        "Materialverluste",
                        "Abplatzungen",
                        "S3",
                        "A1"});
            table14.AddRow(new string[] {
                        "Fugen- und Kantenschäden",
                        "Kantenschäden, Absplitterung",
                        "S0",
                        "A2"});
            table14.AddRow(new string[] {
                        "Fugen- und Kantenschäden",
                        "Fehlender oder spröder Fugenverguss",
                        "S1",
                        "A2"});
            table14.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Setzungen, Frosthebungen",
                        "S2",
                        "A2"});
            table14.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Stufenbildung",
                        "S3",
                        "A2"});
            table14.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Pumpen",
                        "S0",
                        "A3"});
            table14.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Blow-up",
                        "S1",
                        "A3"});
            table14.AddRow(new string[] {
                        "Risse, Brüche",
                        "Risse",
                        "S2",
                        "A3"});
            table14.AddRow(new string[] {
                        "Risse, Brüche",
                        "Zerstörte Platten",
                        "S3",
                        "A3"});
            table14.AddRow(new string[] {
                        "Flicke",
                        "Flicke",
                        "S0",
                        "A1"});
#line 175
testRunner.And("ich folgende Schäden erfasse:", ((string)(null)), table14, "Und ");
#line 190
testRunner.And("ich die Schäden speichere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Kategorie",
                        "Schaden",
                        "Matrix"});
            table15.AddRow(new string[] {
                        "Oberflächenglätte",
                        "Polieren",
                        "0"});
            table15.AddRow(new string[] {
                        "Materialverluste",
                        "Abrieb",
                        "1"});
            table15.AddRow(new string[] {
                        "Materialverluste",
                        "Abblätterung",
                        "2"});
            table15.AddRow(new string[] {
                        "Materialverluste",
                        "Abplatzungen",
                        "3"});
            table15.AddRow(new string[] {
                        "Fugen- und Kantenschäden",
                        "Kantenschäden, Absplitterung",
                        "0"});
            table15.AddRow(new string[] {
                        "Fugen- und Kantenschäden",
                        "Fehlender oder spröder Fugenverguss",
                        "2"});
            table15.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Setzungen, Frosthebungen",
                        "4"});
            table15.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Stufenbildung",
                        "6"});
            table15.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Pumpen",
                        "0"});
            table15.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Blow-up",
                        "3"});
            table15.AddRow(new string[] {
                        "Risse, Brüche",
                        "Risse",
                        "6"});
            table15.AddRow(new string[] {
                        "Risse, Brüche",
                        "Zerstörte Platten",
                        "9"});
            table15.AddRow(new string[] {
                        "Flicke",
                        "Flicke",
                        "0"});
#line 191
testRunner.Then("sehe ich folgende Matrixwerte:", ((string)(null)), table15, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System berechnet die Schadenbewertung")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemBerechnetDieSchadenbewertung()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Schadenbewertung", new string[] {
                        "Manuell"});
#line 210
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 211
testRunner.When("ich das Erfassungsformular für Oberflächenschäden für den Zustandsabschnitt mit d" +
                    "er Id \'5\' öffne", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Kategorie",
                        "Schaden",
                        "Schwere",
                        "Schadenausmass"});
            table16.AddRow(new string[] {
                        "Oberflächenglätte",
                        "Polieren",
                        "S0",
                        "A1"});
            table16.AddRow(new string[] {
                        "Materialverluste",
                        "Abrieb",
                        "S1",
                        "A1"});
            table16.AddRow(new string[] {
                        "Materialverluste",
                        "Abblätterung",
                        "S2",
                        "A1"});
            table16.AddRow(new string[] {
                        "Materialverluste",
                        "Abplatzungen",
                        "S3",
                        "A1"});
            table16.AddRow(new string[] {
                        "Fugen- und Kantenschäden",
                        "Kantenschäden, Absplitterung",
                        "S0",
                        "A2"});
            table16.AddRow(new string[] {
                        "Fugen- und Kantenschäden",
                        "Fehlender oder spröder Fugenverguss",
                        "S1",
                        "A2"});
            table16.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Setzungen, Frosthebungen",
                        "S2",
                        "A2"});
            table16.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Stufenbildung",
                        "S3",
                        "A2"});
            table16.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Pumpen",
                        "S0",
                        "A3"});
            table16.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Blow-up",
                        "S1",
                        "A3"});
            table16.AddRow(new string[] {
                        "Risse, Brüche",
                        "Risse",
                        "S2",
                        "A3"});
            table16.AddRow(new string[] {
                        "Risse, Brüche",
                        "Zerstörte Platten",
                        "S3",
                        "A3"});
            table16.AddRow(new string[] {
                        "Flicke",
                        "Flicke",
                        "S0",
                        "A1"});
#line 212
testRunner.And("ich folgende Schäden erfasse:", ((string)(null)), table16, "Und ");
#line 227
testRunner.And("ich die Schäden speichere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Kategorie",
                        "Bewertung"});
            table17.AddRow(new string[] {
                        "Oberflächenglätte",
                        "0"});
            table17.AddRow(new string[] {
                        "Materialverluste",
                        "6"});
            table17.AddRow(new string[] {
                        "Fugen- und Kantenschäden",
                        "2"});
            table17.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "18"});
            table17.AddRow(new string[] {
                        "Risse, Brüche",
                        "18"});
            table17.AddRow(new string[] {
                        "Flicke",
                        "0"});
#line 228
testRunner.Then("sehe ich folgende Schadenbewertung:", ((string)(null)), table17, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System berechnet die Schadensumme bei Grober- und detaillierter Erfassung")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemBerechnetDieSchadensummeBeiGrober_UndDetaillierterErfassung()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Schadensumme bei Grober- und detaillierter Erfassung", new string[] {
                        "Manuell"});
#line 240
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 241
testRunner.When("ich das Erfassungsformular für Oberflächenschäden für den Zustandsabschnitt mit d" +
                    "er Id \'5\' öffne", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Kategorie",
                        "Schaden",
                        "Schwere",
                        "Schadenausmass"});
            table18.AddRow(new string[] {
                        "Oberflächenglätte",
                        "Polieren",
                        "S0",
                        "A1"});
            table18.AddRow(new string[] {
                        "Materialverluste",
                        "Abrieb",
                        "S1",
                        "A1"});
            table18.AddRow(new string[] {
                        "Materialverluste",
                        "Abblätterung",
                        "S2",
                        "A1"});
            table18.AddRow(new string[] {
                        "Materialverluste",
                        "Abplatzungen",
                        "S3",
                        "A1"});
            table18.AddRow(new string[] {
                        "Fugen- und Kantenschäden",
                        "Kantenschäden, Absplitterung",
                        "S0",
                        "A2"});
            table18.AddRow(new string[] {
                        "Fugen- und Kantenschäden",
                        "Fehlender oder spröder Fugenverguss",
                        "S1",
                        "A2"});
            table18.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Setzungen, Frosthebungen",
                        "S2",
                        "A2"});
            table18.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Stufenbildung",
                        "S3",
                        "A2"});
            table18.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Pumpen",
                        "S0",
                        "A3"});
            table18.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Blow-up",
                        "S1",
                        "A3"});
            table18.AddRow(new string[] {
                        "Risse, Brüche",
                        "Risse",
                        "S2",
                        "A3"});
            table18.AddRow(new string[] {
                        "Risse, Brüche",
                        "Zerstörte Platten",
                        "S3",
                        "A3"});
            table18.AddRow(new string[] {
                        "Flicke",
                        "Flicke",
                        "S0",
                        "A1"});
#line 242
testRunner.And("ich folgende Schäden erfasse:", ((string)(null)), table18, "Und ");
#line 257
testRunner.And("ich die Schäden speichere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 258
testRunner.Then("sehe ich die Schadenssumme \'44\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System berechnet den Zustandsindex (I1) bei grober und detaillierter Erfassun" +
            "g")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemBerechnetDenZustandsindexI1BeiGroberUndDetaillierterErfassung()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet den Zustandsindex (I1) bei grober und detaillierter Erfassun" +
                    "g", new string[] {
                        "Manuell"});
#line 263
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 264
testRunner.When("ich das Erfassungsformular für Oberflächenschäden für den Zustandsabschnitt mit d" +
                    "er Id \'5\' öffne", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Kategorie",
                        "Schaden",
                        "Schwere",
                        "Schadenausmass"});
            table19.AddRow(new string[] {
                        "Oberflächenglätte",
                        "Polieren",
                        "S0",
                        "A1"});
            table19.AddRow(new string[] {
                        "Materialverluste",
                        "Abrieb",
                        "S1",
                        "A1"});
            table19.AddRow(new string[] {
                        "Materialverluste",
                        "Abblätterung",
                        "S2",
                        "A1"});
            table19.AddRow(new string[] {
                        "Materialverluste",
                        "Abplatzungen",
                        "S3",
                        "A1"});
            table19.AddRow(new string[] {
                        "Fugen- und Kantenschäden",
                        "Kantenschäden, Absplitterung",
                        "S0",
                        "A2"});
            table19.AddRow(new string[] {
                        "Fugen- und Kantenschäden",
                        "Fehlender oder spröder Fugenverguss",
                        "S1",
                        "A2"});
            table19.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Setzungen, Frosthebungen",
                        "S2",
                        "A2"});
            table19.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Stufenbildung",
                        "S3",
                        "A2"});
            table19.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Pumpen",
                        "S0",
                        "A3"});
            table19.AddRow(new string[] {
                        "Vertikalverschiebung",
                        "Blow-up",
                        "S1",
                        "A3"});
            table19.AddRow(new string[] {
                        "Risse, Brüche",
                        "Risse",
                        "S2",
                        "A3"});
            table19.AddRow(new string[] {
                        "Risse, Brüche",
                        "Zerstörte Platten",
                        "S3",
                        "A3"});
            table19.AddRow(new string[] {
                        "Flicke",
                        "Flicke",
                        "S0",
                        "A1"});
#line 265
testRunner.And("ich folgende Schäden erfasse:", ((string)(null)), table19, "Und ");
#line 280
testRunner.And("ich die Schäden speichere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 281
testRunner.And("ich das Formular schliesse", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 282
testRunner.Then("sehe ich für den Zustandsabschnitt mit der Id \'5\' den Zustandsindex \'4.4\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann Zustandsabschnitte über die Karte löschen")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannZustandsabschnitteUberDieKarteLoschen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann Zustandsabschnitte über die Karte löschen", new string[] {
                        "Manuell"});
#line 287
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table20.AddRow(new string[] {
                        "Mandant_1",
                        "gis"});
#line 288
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table20, "Gegeben sei ");
#line 291
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 292
 testRunner.And("ich öffne die Seite \'Netzdefinition und Hauptabschnitt mit Strassennamen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 293
 testRunner.And("ich wähle den Modus \"Zustandabschnitt erfassen\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 295
 testRunner.When("ich den Zustandsabschnitt (ID 2) durch Auswahl in der Karte selektiere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 296
 testRunner.And("ich die Netzinformationen für diesen Zustandsabschnitt lösche", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVonStrasse",
                        "BezeichnungBisStrasse",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Länge",
                        "Aufnahmedatum",
                        "Aufnahmeteam",
                        "Wetter",
                        "ZustandsIndexFahrbahn",
                        "ZustandsindexTrottoirLinks",
                        "ZustandsindexTrottoirRechts",
                        "MassnahmenvorschlagFahrbahn",
                        "DringlichkeitMassnahmenvorschlagFahrbahn",
                        "TrottoirLinksErneuerung",
                        "DringlichkeitTrottoirLinksErneuerung",
                        "TrottoirRechtsErneuerung",
                        "DringlichkeitTrottoirRechtsErneuerung"});
            table21.AddRow(new string[] {
                        "1",
                        "Kantonsstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "0.2",
                        "1.2",
                        "1000",
                        "12.14.2009",
                        "Drei",
                        "Nass",
                        "2,3",
                        "",
                        "",
                        "Instandsetzung",
                        "dringlich",
                        "",
                        "",
                        "",
                        ""});
            table21.AddRow(new string[] {
                        "3",
                        "Kantonsstrasse",
                        "Abschnitt B Anfang",
                        "Abschnitt B Ende",
                        "2.0",
                        "7.0",
                        "5000",
                        "23.03.2009",
                        "A",
                        "Trocken",
                        "1,2",
                        "Gut",
                        "",
                        "Instandsetzung",
                        "mittelfristig",
                        "",
                        "",
                        "",
                        ""});
            table21.AddRow(new string[] {
                        "4",
                        "Landstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "0.0",
                        "2.1",
                        "2100",
                        "21.05.2009",
                        "B",
                        "Trocken",
                        "1,1",
                        "",
                        "Kritisch",
                        "Ersatz",
                        "langfristig",
                        "",
                        "",
                        "ja",
                        "dringend"});
            table21.AddRow(new string[] {
                        "5",
                        "Landstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "2.1",
                        "2.4",
                        "300",
                        "21.05.2009",
                        "B",
                        "Trocken",
                        "1,1",
                        "",
                        "Kritisch",
                        "Ersatz",
                        "langfristig",
                        "",
                        "",
                        "ja",
                        "dringend"});
            table21.AddRow(new string[] {
                        "6",
                        "Landstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "2.4",
                        "2.5",
                        "100",
                        "21.05.2009",
                        "B",
                        "Trocken",
                        "2,1",
                        "",
                        "Ausreichend",
                        "Ersatz",
                        "langfristig",
                        "",
                        "",
                        "ja",
                        "mittelfristig"});
            table21.AddRow(new string[] {
                        "7",
                        "Hauptstrasse",
                        "Abschnitt A Anfang",
                        "Abschnitt A Ende",
                        "1.2",
                        "2.5",
                        "1300",
                        "21.10.2009",
                        "Meyer",
                        "Trocken",
                        "3,4",
                        "Mittel",
                        "Gut",
                        "",
                        "",
                        "ja",
                        "langfristig",
                        "",
                        ""});
            table21.AddRow(new string[] {
                        "8",
                        "Hauptstrasse",
                        "Abschnitt B Anfang",
                        "Abschnitt B Ende",
                        "0.4",
                        "0.8",
                        "400",
                        "13.09.2009",
                        "A",
                        "Trocken",
                        "2,3",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table21.AddRow(new string[] {
                        "9",
                        "Hauptstrasse",
                        "Abschnitt B Anfang",
                        "Abschnitt B Ende",
                        "0.8",
                        "1.2",
                        "400",
                        "13.09.2009",
                        "A",
                        "Trocken",
                        "2,3",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table21.AddRow(new string[] {
                        "10",
                        "Hauptstrasse",
                        "Abschnitt C Anfang",
                        "Abschnitt C Ende",
                        "0.0",
                        "0.1",
                        "100",
                        "24.07.2009",
                        "B",
                        "Trocken",
                        "3,3",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table21.AddRow(new string[] {
                        "11",
                        "Hauptstrasse",
                        "Abschnitt C Anfang",
                        "Abschnitt C Ende",
                        "0.1",
                        "0.2",
                        "100",
                        "24.07.2009",
                        "B",
                        "Trocken",
                        "4,3",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
            table21.AddRow(new string[] {
                        "12",
                        "Hauptstrasse",
                        "Abschnitt C Anfang",
                        "Abschnitt C Ende",
                        "0.2",
                        "0.4",
                        "200",
                        "24.07.2009",
                        "B",
                        "Trocken",
                        "4,8",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 298
 testRunner.Then("sind folgende Netzinformationen im System:", ((string)(null)), table21, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System berechnet die Fläche Fahrbahn (m²) nachdem der Data-Manager den Zustan" +
            "dsabschnitt gespeichert hat")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemBerechnetDieFlacheFahrbahnMNachdemDerData_ManagerDenZustandsabschnittGespeichertHat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Fläche Fahrbahn (m²) nachdem der Data-Manager den Zustan" +
                    "dsabschnitt gespeichert hat", new string[] {
                        "Manuell"});
#line 315
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Länge"});
            table22.AddRow(new string[] {
                        "4",
                        "2000"});
            table22.AddRow(new string[] {
                        "6",
                        "200"});
#line 316
testRunner.When("ich die Zustandsabschnitte für die Strasse mit der Id \'3\' folgendermassen editier" +
                    "e:", ((string)(null)), table22, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "FlächeFahrbahn"});
            table23.AddRow(new string[] {
                        "4",
                        "11500"});
            table23.AddRow(new string[] {
                        "5",
                        "1725"});
            table23.AddRow(new string[] {
                        "6",
                        "1150"});
#line 320
testRunner.Then("werden folgende Zustandsinformationen für die Strasse mit der Id \'3\' angezeigt:", ((string)(null)), table23, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System berechnet die Fläche Trottoir links (m²) nachdem der Data-Manager den " +
            "Zustandsabschnitt gespeichert hat")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemBerechnetDieFlacheTrottoirLinksMNachdemDerData_ManagerDenZustandsabschnittGespeichertHat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Fläche Trottoir links (m²) nachdem der Data-Manager den " +
                    "Zustandsabschnitt gespeichert hat", new string[] {
                        "Manuell"});
#line 329
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Länge"});
            table24.AddRow(new string[] {
                        "4",
                        "2000"});
            table24.AddRow(new string[] {
                        "6",
                        "200"});
#line 330
testRunner.When("ich die Zustandsabschnitte für die Strasse mit der Id \'3\' folgendermassen editier" +
                    "e:", ((string)(null)), table24, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "FlächeTrottoirLinks"});
            table25.AddRow(new string[] {
                        "4",
                        "5000"});
            table25.AddRow(new string[] {
                        "5",
                        "750"});
            table25.AddRow(new string[] {
                        "6",
                        "500"});
#line 334
testRunner.Then("werden folgende Zustandsinformationen für die Strasse mit der Id \'3\' angezeigt:", ((string)(null)), table25, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System berechnet die Fläche Trottoir rechts (m²) nachdem der Data-Manager den" +
            " Zustandsabschnitt gespeichert hat")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemBerechnetDieFlacheTrottoirRechtsMNachdemDerData_ManagerDenZustandsabschnittGespeichertHat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Fläche Trottoir rechts (m²) nachdem der Data-Manager den" +
                    " Zustandsabschnitt gespeichert hat", new string[] {
                        "Manuell"});
#line 343
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Länge"});
            table26.AddRow(new string[] {
                        "4",
                        "2000"});
            table26.AddRow(new string[] {
                        "6",
                        "200"});
#line 344
testRunner.When("ich die Zustandsabschnitte für die Strasse mit der Id \'3\' folgendermassen editier" +
                    "e:", ((string)(null)), table26, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "FlächeTrottoirLinks"});
            table27.AddRow(new string[] {
                        "4",
                        "6000"});
            table27.AddRow(new string[] {
                        "5",
                        "900"});
            table27.AddRow(new string[] {
                        "6",
                        "600"});
#line 348
testRunner.Then("werden folgende Zustandsinformationen für die Strasse mit der Id \'3\' angezeigt:", ((string)(null)), table27, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann zu jedem Zustandsabschnitt einen Massnahmenvorschlag erfass" +
            "en")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannZuJedemZustandsabschnittEinenMassnahmenvorschlagErfassen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann zu jedem Zustandsabschnitt einen Massnahmenvorschlag erfass" +
                    "en", new string[] {
                        "Manuell"});
#line 357
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System berechnet die Kosten für den gewählten Massnahmenvorschlag")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        [NUnit.Framework.TestCaseAttribute("1", "Oberflächenverbesserung", "CHF 225000", new string[0])]
        [NUnit.Framework.TestCaseAttribute("2", "Deckbelagserneuerung", "CHF 360000", new string[0])]
        [NUnit.Framework.TestCaseAttribute("3", "Belagserneuerung mit teilweiser Verstärkung", "CHF 5500000", new string[0])]
        [NUnit.Framework.TestCaseAttribute("4", "Erneuerung Oberbau", "CHF 3622500", new string[0])]
        [NUnit.Framework.TestCaseAttribute("7", "Erneuerung Trottoir links", "CHF 162500", new string[0])]
        [NUnit.Framework.TestCaseAttribute("6", "Erneuerung Trottoir rechts", "CHF 15000", new string[0])]
        public virtual void DasSystemBerechnetDieKostenFurDenGewahltenMassnahmenvorschlag(string id, string massnahme, string kosten, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Manuell"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Kosten für den gewählten Massnahmenvorschlag", @__tags);
#line 362
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Massnahme",
                        "Kosten"});
            table28.AddRow(new string[] {
                        "Oberflächenverbesserung",
                        "50"});
            table28.AddRow(new string[] {
                        "Deckbelagserneuerung",
                        "100"});
            table28.AddRow(new string[] {
                        "Belagserneuerung mit teilweiser Verstärkung",
                        "200"});
            table28.AddRow(new string[] {
                        "Erneuerung Oberbau",
                        "300"});
            table28.AddRow(new string[] {
                        "Trottoir",
                        "50"});
#line 363
testRunner.When("folgende Kosten pro m² für \'Mandant_1\' gelten:", ((string)(null)), table28, "Wenn ");
#line 370
testRunner.And(string.Format("ich für den Zustandsabschnitt mit der Id \'{0}\' die Massnahme \'{1}\' vorschlage", id, massnahme), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 371
testRunner.And("ich die Schäden speichere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 372
testRunner.Then(string.Format("werden folgende \'{0}\' für den Massnahmenvorschlag angezeigt", kosten), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Archivierte Daten können nicht verändert werden")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void ArchivierteDatenKonnenNichtVerandertWerden()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Archivierte Daten können nicht verändert werden", new string[] {
                        "Manuell"});
#line 386
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Werden Zustandsabschnitte gelöscht, hat das keine Auswirkungen auf historische Da" +
            "ten")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void WerdenZustandsabschnitteGeloschtHatDasKeineAuswirkungenAufHistorischeDaten()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Werden Zustandsabschnitte gelöscht, hat das keine Auswirkungen auf historische Da" +
                    "ten", new string[] {
                        "Manuell"});
#line 391
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System listet alle Zustandsabschnitte in einer Übersichtstabelle")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemListetAlleZustandsabschnitteInEinerUbersichtstabelle()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System listet alle Zustandsabschnitte in einer Übersichtstabelle", new string[] {
                        "Manuell"});
#line 396
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 397
testRunner.When("ich die Übersichtstabelle für die Strasse mit der Id \'3\' aufrufe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "ZustandsIndexFahrbahn",
                        "FlächeFahrbahn",
                        "FlächeTrottoirLinks",
                        "FlächeTrottoirRechts"});
            table29.AddRow(new string[] {
                        "4",
                        "Landstrasse",
                        "0.0",
                        "2.1",
                        "1,1",
                        "12075",
                        "5250",
                        "6300"});
            table29.AddRow(new string[] {
                        "5",
                        "Landstrasse",
                        "2.1",
                        "2.4",
                        "1,1",
                        "1725",
                        "750",
                        "900"});
            table29.AddRow(new string[] {
                        "6",
                        "Landstrasse",
                        "2.4",
                        "2.5",
                        "2,1",
                        "575",
                        "250",
                        "300"});
#line 398
testRunner.Then("sehe ich folgende Informationen zu den Zustandsabschnitten:", ((string)(null)), table29, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann einen Zustandsabschnitt auf der Karte digitalisieren")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannEinenZustandsabschnittAufDerKarteDigitalisieren()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann einen Zustandsabschnitt auf der Karte digitalisieren", new string[] {
                        "Manuell"});
#line 409
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Benutzer wählt eine zu bearbeitende Inspektionsroute aus. Die dazugehörigen S" +
            "trassenabschnitte werden auf der Karte angezeigt.")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerBenutzerWahltEineZuBearbeitendeInspektionsrouteAus_DieDazugehorigenStrassenabschnitteWerdenAufDerKarteAngezeigt_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Benutzer wählt eine zu bearbeitende Inspektionsroute aus. Die dazugehörigen S" +
                    "trassenabschnitte werden auf der Karte angezeigt.", new string[] {
                        "Manuell",
                        "ignore"});
#line 413
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann Anfangs- und Endpunkt eines Zustandsabschnitts auf der Kart" +
            "e festlegen")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannAnfangs_UndEndpunktEinesZustandsabschnittsAufDerKarteFestlegen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann Anfangs- und Endpunkt eines Zustandsabschnitts auf der Kart" +
                    "e festlegen", new string[] {
                        "Manuell"});
#line 419
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 420
testRunner.Given("ich öffne die Seite \'Netzverwaltung\\Zustände und Massnahmenvorschläge\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 421
 testRunner.And("ich wähle einen beliebigen Zustandsabschnitt aus", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 422
 testRunner.And("ich aktiviere das Tool \'Zustandsabschnitts Geometrie bearbeiten\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 423
 testRunner.When("ich einen Anfangs oder Endpunkt  entlang des darunterliegendem Strassenabschnitt " +
                    "bewege", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 424
 testRunner.Then("wird der Zustandsabschnitt entsprechend verlängert oder verkürzt", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Anfangs und Endpunkt beziehen sich auf einen einzelnes Segment eines Strassenabsc" +
            "hnittes")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void AnfangsUndEndpunktBeziehenSichAufEinenEinzelnesSegmentEinesStrassenabschnittes()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Anfangs und Endpunkt beziehen sich auf einen einzelnes Segment eines Strassenabsc" +
                    "hnittes", new string[] {
                        "Manuell"});
#line 429
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 430
testRunner.When("ich versuche einen End- oder Anfangspunkt über das Segment des darunterliegenden " +
                    "Strassenabschnittes hinauszuziehen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 431
testRunner.Then("stoppt der Punkt am Ende des Segments des Strassenabschnitts", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Zustandsabschnitte dürfen sich nicht überlappen")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void ZustandsabschnitteDurfenSichNichtUberlappen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Zustandsabschnitte dürfen sich nicht überlappen", new string[] {
                        "Manuell"});
#line 436
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 437
testRunner.When("ich versuche eine den Endpunkt eines Zustandabschnittes über die räumliche Defini" +
                    "tion eines für den selben Strassenabschnitt vorliegenden Zustandabschnittes  auf" +
                    " der Karte zu ziehen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 438
testRunner.Then("stoppt der Punkt am Ende, bzw. Anfang des Zustandabschnittes", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Zustandsabschnitt muss immer einem Strassenabschnitt zugeordnet sein")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerZustandsabschnittMussImmerEinemStrassenabschnittZugeordnetSein()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Zustandsabschnitt muss immer einem Strassenabschnitt zugeordnet sein", new string[] {
                        "Manuell"});
#line 443
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Zustandsabschnitt erbt ‚Strassenname‘, ‚Belagsart‘, ‚Breite Fahrbahn‘, ‚Trott" +
            "oir‘, ‚Breite Trottoir links‘ und ‚Breite Trottoir rechts‘ vom Strassenabschnitt" +
            "")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerZustandsabschnittErbtStrassennameBelagsartBreiteFahrbahnTrottoirBreiteTrottoirLinksUndBreiteTrottoirRechtsVomStrassenabschnitt()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Zustandsabschnitt erbt ‚Strassenname‘, ‚Belagsart‘, ‚Breite Fahrbahn‘, ‚Trott" +
                    "oir‘, ‚Breite Trottoir links‘ und ‚Breite Trottoir rechts‘ vom Strassenabschnitt" +
                    "", new string[] {
                        "Manuell"});
#line 448
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Angaben zum Trottoir wie Zustandsindex, Erneuerung usw. können nur erfasst werden" +
            ", sofern der Strassenabschnitt auch einen entsprechenden Trottoir(typ) aufweist")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void AngabenZumTrottoirWieZustandsindexErneuerungUsw_KonnenNurErfasstWerdenSofernDerStrassenabschnittAuchEinenEntsprechendenTrottoirTypAufweist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Angaben zum Trottoir wie Zustandsindex, Erneuerung usw. können nur erfasst werden" +
                    ", sofern der Strassenabschnitt auch einen entsprechenden Trottoir(typ) aufweist", new string[] {
                        "Manuell"});
#line 453
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Ein Strassenabschnitt kann mehrere Zustandsabschnitte umfassen.")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void EinStrassenabschnittKannMehrereZustandsabschnitteUmfassen_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Ein Strassenabschnitt kann mehrere Zustandsabschnitte umfassen.", new string[] {
                        "Manuell"});
#line 458
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 459
testRunner.Given("ein Strassenabschnitt auf welchem ein Zustandsabschnitt vorliegt, welcher nicht d" +
                    "en gesamten Strassenabschnitt umfasst", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 460
testRunner.When("ich einen neuen Zustandabschnitt auf diesem Strassenabschnitt anlege", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 461
testRunner.Then("wird dieser auf der verbleibenden Länge des Strassenabschnittes erzeugt", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das  System schlägt Anfangs- und Endkilometer des Zustandsabschnitts vor")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemSchlagtAnfangs_UndEndkilometerDesZustandsabschnittsVor()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das  System schlägt Anfangs- und Endkilometer des Zustandsabschnitts vor", new string[] {
                        "Manuell"});
#line 466
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System verwendet die vom Data-Manager eingetragenen Kilometerwerte zur Defini" +
            "tion des genauen Anfangs bzw. des Ende des Abschnitts")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemVerwendetDieVomData_ManagerEingetragenenKilometerwerteZurDefinitionDesGenauenAnfangsBzw_DesEndeDesAbschnitts()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System verwendet die vom Data-Manager eingetragenen Kilometerwerte zur Defini" +
                    "tion des genauen Anfangs bzw. des Ende des Abschnitts", new string[] {
                        "Manuell"});
#line 472
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann Attribute von Zustandsabschnitten erfassen")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        [NUnit.Framework.TestCaseAttribute("1", "Kantonsstrasse", "Abschnitt A Anfang", "Abschnitt A Ende", "0.2", "1.2", "1000", "12.14.2009", "Drei", "Nass", "2,3", "", "", "Instandsetzung", "dringlich", "", "", "", "", new string[0])]
        [NUnit.Framework.TestCaseAttribute("2", "Kantonsstrasse", "Abschnitt A Anfang", "Abschnitt A Ende", "1.2", "2.0", "800", "12.14.2009", "Drei", "Nass", "2,3", "", "", "Instandsetzung", "dringlich", "", "", "", "", new string[0])]
        [NUnit.Framework.TestCaseAttribute("3", "Kantonsstrasse", "Abschnitt B Anfang", "Abschnitt B Ende", "2.0", "7.0", "5000", "23.03.2009", "A", "Trocken", "1,2", "Gut", "", "Instandsetzung", "mittelfristig", "", "", "", "", new string[0])]
        [NUnit.Framework.TestCaseAttribute("4", "Landstrasse", "Abschnitt A Anfang", "Abschnitt A Ende", "0.0", "2.1", "2100", "21.05.2009", "B", "Trocken", "1,1", "", "Kritisch", "Ersatz", "langfristig", "", "", "ja", "dringend", new string[0])]
        [NUnit.Framework.TestCaseAttribute("5", "Landstrasse", "Abschnitt A Anfang", "Abschnitt A Ende", "2.1", "2.4", "300", "21.05.2009", "B", "Trocken", "1,1", "", "Kritisch", "Ersatz", "langfristig", "", "", "ja", "dringend", new string[0])]
        [NUnit.Framework.TestCaseAttribute("6", "Landstrasse", "Abschnitt A Anfang", "Abschnitt A Ende", "2.4", "2.5", "100", "21.05.2009", "B", "Trocken", "2,1", "", "Ausreichend", "Ersatz", "langfristig", "", "", "ja", "mittelfristig", new string[0])]
        [NUnit.Framework.TestCaseAttribute("7", "Hauptstrasse", "Abschnitt A Anfang", "Abschnitt A Ende", "1.2", "2.5", "1300", "21.10.2009", "Meyer", "Trocken", "3,4", "Mittel", "Gut", "", "", "ja", "langfristig", "", "", new string[0])]
        [NUnit.Framework.TestCaseAttribute("8", "Hauptstrasse", "Abschnitt B Anfang", "Abschnitt B Ende", "0.4", "0.8", "400", "13.09.2009", "A", "Trocken", "2,3", "", "", "", "", "", "", "", "", new string[0])]
        [NUnit.Framework.TestCaseAttribute("9", "Hauptstrasse", "Abschnitt B Anfang", "Abschnitt B Ende", "0.8", "1.2", "400", "13.09.2009", "A", "Trocken", "2,3", "", "", "", "", "", "", "", "", new string[0])]
        [NUnit.Framework.TestCaseAttribute("10", "Hauptstrasse", "Abschnitt C Anfang", "Abschnitt C Ende", "0.0", "0.1", "100", "24.07.2009", "B", "Trocken", "3,3", "", "", "", "", "", "", "", "", new string[0])]
        [NUnit.Framework.TestCaseAttribute("11", "Hauptstrasse", "Abschnitt C Anfang", "Abschnitt C Ende", "0.1", "0.2", "100", "24.07.2009", "B", "Trocken", "4,3", "", "", "", "", "", "", "", "", new string[0])]
        [NUnit.Framework.TestCaseAttribute("12", "Hauptstrasse", "Abschnitt C Anfang", "Abschnitt C Ende", "0.2", "0.4", "200", "24.07.2009", "B", "Trocken", "4,8", "", "", "", "", "", "", "", "", new string[0])]
        public virtual void DerData_ManagerKannAttributeVonZustandsabschnittenErfassen(
                    string tF, 
                    string strassenname, 
                    string bezeichnungVonStrasse, 
                    string bezeichnungBisStrasse, 
                    string bezeichnungVon, 
                    string bezeichnungBis, 
                    string lange, 
                    string aufnahmedatum, 
                    string aufnahmeteam, 
                    string wetter, 
                    string zustandsIndexFahrbahn, 
                    string zustandsindexTrottoirLinks, 
                    string zustandsindexTrottoirRechts, 
                    string massnahmenvorschlagFahrbahn, 
                    string dringlichkeitMassnahmenvorschlagFahrbahn, 
                    string trottoirLinksErneuerung, 
                    string dringlichkeitTrottoirLinksErneuerung, 
                    string trottoirRechtsErneuerung, 
                    string dringlichkeitTrottoirRechtsErneuerung, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Manuell"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann Attribute von Zustandsabschnitten erfassen", @__tags);
#line 478
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVonStrasse",
                        "BezeichnungBisStrasse",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Länge",
                        "Aufnahmedatum",
                        "Aufnahmeteam",
                        "Wetter",
                        "ZustandsIndexFahrbahn",
                        "ZustandsindexTrottoirLinks",
                        "ZustandsindexTrottoirRechts",
                        "MassnahmenvorschlagFahrbahn",
                        "DringlichkeitMassnahmenvorschlagFahrbahn",
                        "TrottoirLinksErneuerung",
                        "DringlichkeitTrottoirLinksErneuerung",
                        "TrottoirRechtsErneuerung",
                        "DringlichkeitTrottoirRechtsErneuerung"});
            table30.AddRow(new string[] {
                        string.Format("{0}", strassenname),
                        string.Format("{0}", bezeichnungVonStrasse),
                        string.Format("{0}", bezeichnungBisStrasse),
                        string.Format("{0}", bezeichnungVon),
                        string.Format("{0}", bezeichnungBis),
                        string.Format("{0}", lange),
                        string.Format("{0}", aufnahmedatum),
                        string.Format("{0}", aufnahmeteam),
                        string.Format("{0}", wetter),
                        string.Format("{0}", zustandsIndexFahrbahn),
                        string.Format("{0}", zustandsindexTrottoirLinks),
                        string.Format("{0}", zustandsindexTrottoirRechts),
                        string.Format("{0}", massnahmenvorschlagFahrbahn),
                        string.Format("{0}", dringlichkeitMassnahmenvorschlagFahrbahn),
                        string.Format("{0}", trottoirLinksErneuerung),
                        string.Format("{0}", dringlichkeitTrottoirLinksErneuerung),
                        string.Format("{0}", trottoirRechtsErneuerung),
                        string.Format("{0}", dringlichkeitTrottoirRechtsErneuerung)});
#line 479
testRunner.When("ich folgende GIS-Netzinformationen eingebe:", ((string)(null)), table30, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVonStrasse",
                        "BezeichnungBisStrasse",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Länge",
                        "Aufnahmedatum",
                        "Aufnahmeteam",
                        "Wetter",
                        "ZustandsIndexFahrbahn",
                        "ZustandsindexTrottoirLinks",
                        "ZustandsindexTrottoirRechts",
                        "MassnahmenvorschlagFahrbahn",
                        "DringlichkeitMassnahmenvorschlagFahrbahn",
                        "TrottoirLinksErneuerung",
                        "DringlichkeitTrottoirLinksErneuerung",
                        "TrottoirRechtsErneuerung",
                        "DringlichkeitTrottoirRechtsErneuerung"});
            table31.AddRow(new string[] {
                        string.Format("{0}", strassenname),
                        string.Format("{0}", bezeichnungVonStrasse),
                        string.Format("{0}", bezeichnungBisStrasse),
                        string.Format("{0}", bezeichnungVon),
                        string.Format("{0}", bezeichnungBis),
                        string.Format("{0}", lange),
                        string.Format("{0}", aufnahmedatum),
                        string.Format("{0}", aufnahmeteam),
                        string.Format("{0}", wetter),
                        string.Format("{0}", zustandsIndexFahrbahn),
                        string.Format("{0}", zustandsindexTrottoirLinks),
                        string.Format("{0}", zustandsindexTrottoirRechts),
                        string.Format("{0}", massnahmenvorschlagFahrbahn),
                        string.Format("{0}", dringlichkeitMassnahmenvorschlagFahrbahn),
                        string.Format("{0}", trottoirLinksErneuerung),
                        string.Format("{0}", dringlichkeitTrottoirLinksErneuerung),
                        string.Format("{0}", trottoirRechtsErneuerung),
                        string.Format("{0}", dringlichkeitTrottoirRechtsErneuerung)});
#line 483
 testRunner.Then("sind folgende GIS-Netzinformationen im System:", ((string)(null)), table31, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
