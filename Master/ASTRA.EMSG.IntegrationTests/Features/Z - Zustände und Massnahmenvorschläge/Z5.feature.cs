// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ASTRA.EMSG.IntegrationTests.Features.Z_ZustandeUndMassnahmenvorschlage
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Z5 - Inspektionsroutendaten auf EMSG-Mobile exportieren", Description="\tAls Data-Manager,\r\n\twill ich Inspektionsroutendaten auf EMSG-Mobile exportieren\r" +
        "\n\tdamit ich mit EMSG-Mobile Schäden und Massnahmenvorschläge erfassen kann", SourceFile="Features\\Z - Zustände und Massnahmenvorschläge\\Z5.feature", SourceLine=0)]
    public partial class Z5_InspektionsroutendatenAufEMSG_MobileExportierenFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Z5.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "Z5 - Inspektionsroutendaten auf EMSG-Mobile exportieren", "\tAls Data-Manager,\r\n\twill ich Inspektionsroutendaten auf EMSG-Mobile exportieren\r" +
                    "\n\tdamit ich mit EMSG-Mobile Schäden und Massnahmenvorschläge erfassen kann", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager wählt beliebig viele Inspektionsrouten für den Export auf der Ka" +
            "rte aus", new string[] {
                "Manuell"}, SourceLine=8)]
        public virtual void DerData_ManagerWahltBeliebigVieleInspektionsroutenFurDenExportAufDerKarteAus()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager wählt beliebig viele Inspektionsrouten für den Export auf der Ka" +
                    "rte aus", new string[] {
                        "Manuell"});
#line 9
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System exportiert die selektierten Inspektionsrouten auf EMSG-Mobile", new string[] {
                "Manuell"}, SourceLine=13)]
        public virtual void DasSystemExportiertDieSelektiertenInspektionsroutenAufEMSG_Mobile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System exportiert die selektierten Inspektionsrouten auf EMSG-Mobile", new string[] {
                        "Manuell"});
#line 14
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table1.AddRow(new string[] {
                        "Mandant_1",
                        "gis"});
#line 15
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table1, "Gegeben sei ");
#line 18
testRunner.And("ich wähle \'Selektierte Inspektionsrouten exportieren\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 19
testRunner.And("ich wähle eine gültigen Pfad im Dateidialog aus", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 20
testRunner.Then("werden die für die im EMSG Mobile notwendigen Daten für die ausgewählten Inspekti" +
                    "onsrouten gepseichert.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann zusätzliche Attribute zur Beschreibung der Inspektionsroute" +
            " erfassen", new string[] {
                "Manuell"}, SourceLine=24)]
        public virtual void DerData_ManagerKannZusatzlicheAttributeZurBeschreibungDerInspektionsrouteErfassen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann zusätzliche Attribute zur Beschreibung der Inspektionsroute" +
                    " erfassen", new string[] {
                        "Manuell"});
#line 25
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann das Paket auch offline auf den Ziel Tablet-PC übertragen", new string[] {
                "Manuell"}, SourceLine=29)]
        public virtual void DerData_ManagerKannDasPaketAuchOfflineAufDenZielTablet_PCUbertragen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann das Paket auch offline auf den Ziel Tablet-PC übertragen", new string[] {
                        "Manuell"});
#line 30
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System verhindert, dass der Data-Manager Strassenabschnitte und Zustandsabsch" +
            "nitte in EMSG-Master editieren kann, die auf den EMSG-Mobile exportiert wurden", new string[] {
                "Manuell"}, SourceLine=34)]
        public virtual void DasSystemVerhindertDassDerData_ManagerStrassenabschnitteUndZustandsabschnitteInEMSG_MasterEditierenKannDieAufDenEMSG_MobileExportiertWurden()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System verhindert, dass der Data-Manager Strassenabschnitte und Zustandsabsch" +
                    "nitte in EMSG-Master editieren kann, die auf den EMSG-Mobile exportiert wurden", new string[] {
                        "Manuell"});
#line 35
this.ScenarioSetup(scenarioInfo);
#line 36
testRunner.Given("ein Zustandsabschnitt", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 37
testRunner.And("dieser Zustandabschnitt liegt auf einem Strassenabschnitt, welcher einer exportie" +
                    "rten Inspektionsroute zugeordnet ist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 38
testRunner.And("der Data-Manager bearbeitet nach Anwendungsfall Z3.2 den Zustandabschnitt", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 39
testRunner.Then("erhält der Data-Manager eine Fehlermeldung und es werden keine Änderungen des Zus" +
                    "tandsabschnittes gepseichert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System stellt Hintergrundkarten auf EMSG-Mobile zur Verfügung", new string[] {
                "Manuell"}, SourceLine=42)]
        public virtual void DasSystemStelltHintergrundkartenAufEMSG_MobileZurVerfugung()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System stellt Hintergrundkarten auf EMSG-Mobile zur Verfügung", new string[] {
                        "Manuell"});
#line 43
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table2.AddRow(new string[] {
                        "Mandant_1",
                        "gis"});
#line 44
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table2, "Gegeben sei ");
#line 48
testRunner.And("ich habe eine Inspektionsroute selektiert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 49
testRunner.And("ich wähle \'Selektierte Inspektionsrouten exportieren\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 50
testRunner.Then("werden Hintergrundkarten für den Berreich (Extent) der ausgewählten Inspektionsro" +
                    "ute heruntergeladen.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Benutzeradministrator kann den \"Check-Out\" in EMSG-Master rückgängig machen", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerBenutzeradministratorKannDenCheck_OutInEMSG_MasterRuckgangigMachen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Benutzeradministrator kann den \"Check-Out\" in EMSG-Master rückgängig machen", new string[] {
                        "Manuell"});
#line 55
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table3.AddRow(new string[] {
                        "Mandant_1",
                        "gis"});
#line 56
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table3, "Gegeben sei ");
#line 59
testRunner.And("ich bin Benutzeradministrator von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 60
testRunner.And("ich öffne die Seite \'Inspektionsroute planen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 61
testRunner.And("ich wähle in der Liste der Inspektionsroute \'Check-Out\' rückgängig machen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 62
testRunner.Then("werden die Inspektionsrouten und die dazugehörigen Zustandsabschnitte wieder als " +
                    "nicht ausgecheckt markiert und können im EMSG Master bearbeitet werden.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Z5 - Inspektionsroutendaten auf EMSG-Mobile exportieren")]
    public partial class Z5_InspektionsroutendatenAufEMSG_MobileExportierenFeature_NUnit
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Z5.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "Z5 - Inspektionsroutendaten auf EMSG-Mobile exportieren", "\tAls Data-Manager,\r\n\twill ich Inspektionsroutendaten auf EMSG-Mobile exportieren\r" +
                    "\n\tdamit ich mit EMSG-Mobile Schäden und Massnahmenvorschläge erfassen kann", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager wählt beliebig viele Inspektionsrouten für den Export auf der Ka" +
            "rte aus")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerWahltBeliebigVieleInspektionsroutenFurDenExportAufDerKarteAus()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager wählt beliebig viele Inspektionsrouten für den Export auf der Ka" +
                    "rte aus", new string[] {
                        "Manuell"});
#line 9
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System exportiert die selektierten Inspektionsrouten auf EMSG-Mobile")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemExportiertDieSelektiertenInspektionsroutenAufEMSG_Mobile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System exportiert die selektierten Inspektionsrouten auf EMSG-Mobile", new string[] {
                        "Manuell"});
#line 14
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table1.AddRow(new string[] {
                        "Mandant_1",
                        "gis"});
#line 15
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table1, "Gegeben sei ");
#line 18
testRunner.And("ich wähle \'Selektierte Inspektionsrouten exportieren\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 19
testRunner.And("ich wähle eine gültigen Pfad im Dateidialog aus", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 20
testRunner.Then("werden die für die im EMSG Mobile notwendigen Daten für die ausgewählten Inspekti" +
                    "onsrouten gepseichert.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann zusätzliche Attribute zur Beschreibung der Inspektionsroute" +
            " erfassen")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannZusatzlicheAttributeZurBeschreibungDerInspektionsrouteErfassen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann zusätzliche Attribute zur Beschreibung der Inspektionsroute" +
                    " erfassen", new string[] {
                        "Manuell"});
#line 25
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann das Paket auch offline auf den Ziel Tablet-PC übertragen")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannDasPaketAuchOfflineAufDenZielTablet_PCUbertragen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann das Paket auch offline auf den Ziel Tablet-PC übertragen", new string[] {
                        "Manuell"});
#line 30
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System verhindert, dass der Data-Manager Strassenabschnitte und Zustandsabsch" +
            "nitte in EMSG-Master editieren kann, die auf den EMSG-Mobile exportiert wurden")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemVerhindertDassDerData_ManagerStrassenabschnitteUndZustandsabschnitteInEMSG_MasterEditierenKannDieAufDenEMSG_MobileExportiertWurden()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System verhindert, dass der Data-Manager Strassenabschnitte und Zustandsabsch" +
                    "nitte in EMSG-Master editieren kann, die auf den EMSG-Mobile exportiert wurden", new string[] {
                        "Manuell"});
#line 35
this.ScenarioSetup(scenarioInfo);
#line 36
testRunner.Given("ein Zustandsabschnitt", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 37
testRunner.And("dieser Zustandabschnitt liegt auf einem Strassenabschnitt, welcher einer exportie" +
                    "rten Inspektionsroute zugeordnet ist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 38
testRunner.And("der Data-Manager bearbeitet nach Anwendungsfall Z3.2 den Zustandabschnitt", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 39
testRunner.Then("erhält der Data-Manager eine Fehlermeldung und es werden keine Änderungen des Zus" +
                    "tandsabschnittes gepseichert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System stellt Hintergrundkarten auf EMSG-Mobile zur Verfügung")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemStelltHintergrundkartenAufEMSG_MobileZurVerfugung()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System stellt Hintergrundkarten auf EMSG-Mobile zur Verfügung", new string[] {
                        "Manuell"});
#line 43
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table2.AddRow(new string[] {
                        "Mandant_1",
                        "gis"});
#line 44
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table2, "Gegeben sei ");
#line 48
testRunner.And("ich habe eine Inspektionsroute selektiert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 49
testRunner.And("ich wähle \'Selektierte Inspektionsrouten exportieren\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 50
testRunner.Then("werden Hintergrundkarten für den Berreich (Extent) der ausgewählten Inspektionsro" +
                    "ute heruntergeladen.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Benutzeradministrator kann den \"Check-Out\" in EMSG-Master rückgängig machen")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerBenutzeradministratorKannDenCheck_OutInEMSG_MasterRuckgangigMachen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Benutzeradministrator kann den \"Check-Out\" in EMSG-Master rückgängig machen", new string[] {
                        "Manuell"});
#line 55
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table3.AddRow(new string[] {
                        "Mandant_1",
                        "gis"});
#line 56
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table3, "Gegeben sei ");
#line 59
testRunner.And("ich bin Benutzeradministrator von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 60
testRunner.And("ich öffne die Seite \'Inspektionsroute planen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 61
testRunner.And("ich wähle in der Liste der Inspektionsroute \'Check-Out\' rückgängig machen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 62
testRunner.Then("werden die Inspektionsrouten und die dazugehörigen Zustandsabschnitte wieder als " +
                    "nicht ausgecheckt markiert und können im EMSG Master bearbeitet werden.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
