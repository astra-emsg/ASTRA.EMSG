// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ASTRA.EMSG.IntegrationTests.Features.K_KoordinierteMassnahmen
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("K2 - Koordinierte Massnahmen im GIS-Modus erfassen", Description="\tAls Data-Manager,\r\n\twill ich koordinierte Massnahmen im GIS-Modus erfassen\r\n\tdam" +
        "it ich zeitgleiche Baumassnahmen verschiedener Systeme an einem Ort koordinieren" +
        " kann ", SourceFile="Features\\K - koordinierte Massnahmen\\K2.feature", SourceLine=0)]
    public partial class K2_KoordinierteMassnahmenImGIS_ModusErfassenFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "K2.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "K2 - Koordinierte Massnahmen im GIS-Modus erfassen", "\tAls Data-Manager,\r\n\twill ich koordinierte Massnahmen im GIS-Modus erfassen\r\n\tdam" +
                    "it ich zeitgleiche Baumassnahmen verschiedener Systeme an einem Ort koordinieren" +
                    " kann ", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table1.AddRow(new string[] {
                        "Mandant_1",
                        "gis"});
#line 7
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table1, "Gegeben sei ");
#line 10
testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann eine koordinierte Massnahme auf der Karte definieren", new string[] {
                "Manuell"}, SourceLine=14)]
        public virtual void DerData_ManagerKannEineKoordinierteMassnahmeAufDerKarteDefinieren()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann eine koordinierte Massnahme auf der Karte definieren", new string[] {
                        "Manuell"});
#line 15
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 16
testRunner.When("ich  die Seite \'Koordinierte Massnahmen\' öffne", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 17
testRunner.And("ich wähle \'Neue Koordinierte Massnahme anlegen\' aus", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 18
testRunner.And("ich wähle ein beliebiges dem \'Mandant_1\' zugeordnetes Achssegement aus", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 19
testRunner.Then("wird dieses Achssegment der koordinierte Massnahme zugeordnet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Anfangs- und Endpunkt der koordinierten Massnahme auf der K" +
            "arte festlegen", new string[] {
                "Manuell"}, SourceLine=23)]
        public virtual void DerData_ManagerKannAnfangs_UndEndpunktDerKoordiniertenMassnahmeAufDerKarteFestlegen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann Anfangs- und Endpunkt der koordinierten Massnahme auf der K" +
                    "arte festlegen", new string[] {
                        "Manuell"});
#line 24
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 25
testRunner.When("ich die Seite \'Koordinierte Massnahmen\' öffne", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 26
testRunner.And("ich wähle ein beliebiges Achssegment aus", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 27
testRunner.And("ich aktiviere das Tool \'koordinierten Massnahmengeometrie bearbeiten\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 28
testRunner.When("ich einen Anfangs oder Endpunkt entlang dem darunter liegenden Achssegment bewege" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 29
testRunner.Then("wird der Strassenabschnitt entsprechend verlängert oder verkürzt", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann alle Attribute der koordinierten Massnahme erfassen", new string[] {
                "Manuell"}, SourceLine=33)]
        public virtual void DerData_ManagerKannAlleAttributeDerKoordiniertenMassnahmeErfassen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann alle Attribute der koordinierten Massnahme erfassen", new string[] {
                        "Manuell"});
#line 34
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System berechnet die Fläche Fahrbahn (m²) nachdem der Data-Manager die koordi" +
            "nierte Massnahme gespeichert hat", new string[] {
                "Manuell"}, SourceLine=38)]
        public virtual void DasSystemBerechnetDieFlacheFahrbahnMNachdemDerData_ManagerDieKoordinierteMassnahmeGespeichertHat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Fläche Fahrbahn (m²) nachdem der Data-Manager die koordi" +
                    "nierte Massnahme gespeichert hat", new string[] {
                        "Manuell"});
#line 39
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System berechnet die Fläche Trottoir links (m²) nachdem der Data-Manager die " +
            "koordinierte Massnahme gespeichert hat", new string[] {
                "Manuell"}, SourceLine=43)]
        public virtual void DasSystemBerechnetDieFlacheTrottoirLinksMNachdemDerData_ManagerDieKoordinierteMassnahmeGespeichertHat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Fläche Trottoir links (m²) nachdem der Data-Manager die " +
                    "koordinierte Massnahme gespeichert hat", new string[] {
                        "Manuell"});
#line 44
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System berechnet die Fläche Trottoir rechts (m²) nachdem der Data-Manager die" +
            " koordinierte Massnahme gespeichert hat", new string[] {
                "Manuell"}, SourceLine=48)]
        public virtual void DasSystemBerechnetDieFlacheTrottoirRechtsMNachdemDerData_ManagerDieKoordinierteMassnahmeGespeichertHat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Fläche Trottoir rechts (m²) nachdem der Data-Manager die" +
                    " koordinierte Massnahme gespeichert hat", new string[] {
                        "Manuell"});
#line 49
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann alle Attribute der koordinierten Massnahme bearbeiten", new string[] {
                "Manuell"}, SourceLine=53)]
        public virtual void DerData_ManagerKannAlleAttributeDerKoordiniertenMassnahmeBearbeiten()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann alle Attribute der koordinierten Massnahme bearbeiten", new string[] {
                        "Manuell"});
#line 54
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System visualisiert die erfassten Massnamen der Teilsysteme auf der Karte", new string[] {
                "Manuell"}, SourceLine=58)]
        public virtual void DasSystemVisualisiertDieErfasstenMassnamenDerTeilsystemeAufDerKarte()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System visualisiert die erfassten Massnamen der Teilsysteme auf der Karte", new string[] {
                        "Manuell"});
#line 59
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System stellt koordinierte Massnahmen in einer Übersichtsliste dar", new string[] {
                "Manuell"}, SourceLine=63)]
        public virtual void DasSystemStelltKoordinierteMassnahmenInEinerUbersichtslisteDar()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System stellt koordinierte Massnahmen in einer Übersichtsliste dar", new string[] {
                        "Manuell"});
#line 64
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann eine koordinierte Massnahme mittels Selektion auf der Karte" +
            " löschen", new string[] {
                "Manuell"}, SourceLine=68)]
        public virtual void DerData_ManagerKannEineKoordinierteMassnahmeMittelsSelektionAufDerKarteLoschen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann eine koordinierte Massnahme mittels Selektion auf der Karte" +
                    " löschen", new string[] {
                        "Manuell"});
#line 69
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 70
testRunner.When("ich die Seite \'Koordinierte Massnahmen\' öffne", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 71
testRunner.And("ich wähle eine korrdinierte Massnahme auf der Karte aus", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 72
testRunner.Then("öffnet sich das Formular für koordinierte Massnahmen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line 73
testRunner.And("ich dort \"Löschen der korrdinierten Massnahem\" auswähle", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 74
testRunner.Then("wird die koordinierte Massnahme gelöscht und nicht mehr auf der Karte oder in Aus" +
                    "wertungen (dieses Jahres) angezeigt", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann in einem Textfeld nach Projektname suchen", new string[] {
                "Manuell"}, SourceLine=78)]
        public virtual void DerData_ManagerKannInEinemTextfeldNachProjektnameSuchen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann in einem Textfeld nach Projektname suchen", new string[] {
                        "Manuell"});
#line 79
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("K2 - Koordinierte Massnahmen im GIS-Modus erfassen")]
    public partial class K2_KoordinierteMassnahmenImGIS_ModusErfassenFeature_NUnit
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "K2.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "K2 - Koordinierte Massnahmen im GIS-Modus erfassen", "\tAls Data-Manager,\r\n\twill ich koordinierte Massnahmen im GIS-Modus erfassen\r\n\tdam" +
                    "it ich zeitgleiche Baumassnahmen verschiedener Systeme an einem Ort koordinieren" +
                    " kann ", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table1.AddRow(new string[] {
                        "Mandant_1",
                        "gis"});
#line 7
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table1, "Gegeben sei ");
#line 10
testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann eine koordinierte Massnahme auf der Karte definieren")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannEineKoordinierteMassnahmeAufDerKarteDefinieren()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann eine koordinierte Massnahme auf der Karte definieren", new string[] {
                        "Manuell"});
#line 15
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 16
testRunner.When("ich  die Seite \'Koordinierte Massnahmen\' öffne", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 17
testRunner.And("ich wähle \'Neue Koordinierte Massnahme anlegen\' aus", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 18
testRunner.And("ich wähle ein beliebiges dem \'Mandant_1\' zugeordnetes Achssegement aus", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 19
testRunner.Then("wird dieses Achssegment der koordinierte Massnahme zugeordnet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann Anfangs- und Endpunkt der koordinierten Massnahme auf der K" +
            "arte festlegen")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannAnfangs_UndEndpunktDerKoordiniertenMassnahmeAufDerKarteFestlegen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann Anfangs- und Endpunkt der koordinierten Massnahme auf der K" +
                    "arte festlegen", new string[] {
                        "Manuell"});
#line 24
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 25
testRunner.When("ich die Seite \'Koordinierte Massnahmen\' öffne", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 26
testRunner.And("ich wähle ein beliebiges Achssegment aus", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 27
testRunner.And("ich aktiviere das Tool \'koordinierten Massnahmengeometrie bearbeiten\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 28
testRunner.When("ich einen Anfangs oder Endpunkt entlang dem darunter liegenden Achssegment bewege" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 29
testRunner.Then("wird der Strassenabschnitt entsprechend verlängert oder verkürzt", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann alle Attribute der koordinierten Massnahme erfassen")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannAlleAttributeDerKoordiniertenMassnahmeErfassen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann alle Attribute der koordinierten Massnahme erfassen", new string[] {
                        "Manuell"});
#line 34
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System berechnet die Fläche Fahrbahn (m²) nachdem der Data-Manager die koordi" +
            "nierte Massnahme gespeichert hat")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemBerechnetDieFlacheFahrbahnMNachdemDerData_ManagerDieKoordinierteMassnahmeGespeichertHat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Fläche Fahrbahn (m²) nachdem der Data-Manager die koordi" +
                    "nierte Massnahme gespeichert hat", new string[] {
                        "Manuell"});
#line 39
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System berechnet die Fläche Trottoir links (m²) nachdem der Data-Manager die " +
            "koordinierte Massnahme gespeichert hat")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemBerechnetDieFlacheTrottoirLinksMNachdemDerData_ManagerDieKoordinierteMassnahmeGespeichertHat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Fläche Trottoir links (m²) nachdem der Data-Manager die " +
                    "koordinierte Massnahme gespeichert hat", new string[] {
                        "Manuell"});
#line 44
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System berechnet die Fläche Trottoir rechts (m²) nachdem der Data-Manager die" +
            " koordinierte Massnahme gespeichert hat")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemBerechnetDieFlacheTrottoirRechtsMNachdemDerData_ManagerDieKoordinierteMassnahmeGespeichertHat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Fläche Trottoir rechts (m²) nachdem der Data-Manager die" +
                    " koordinierte Massnahme gespeichert hat", new string[] {
                        "Manuell"});
#line 49
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann alle Attribute der koordinierten Massnahme bearbeiten")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannAlleAttributeDerKoordiniertenMassnahmeBearbeiten()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann alle Attribute der koordinierten Massnahme bearbeiten", new string[] {
                        "Manuell"});
#line 54
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System visualisiert die erfassten Massnamen der Teilsysteme auf der Karte")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemVisualisiertDieErfasstenMassnamenDerTeilsystemeAufDerKarte()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System visualisiert die erfassten Massnamen der Teilsysteme auf der Karte", new string[] {
                        "Manuell"});
#line 59
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System stellt koordinierte Massnahmen in einer Übersichtsliste dar")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemStelltKoordinierteMassnahmenInEinerUbersichtslisteDar()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System stellt koordinierte Massnahmen in einer Übersichtsliste dar", new string[] {
                        "Manuell"});
#line 64
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann eine koordinierte Massnahme mittels Selektion auf der Karte" +
            " löschen")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannEineKoordinierteMassnahmeMittelsSelektionAufDerKarteLoschen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann eine koordinierte Massnahme mittels Selektion auf der Karte" +
                    " löschen", new string[] {
                        "Manuell"});
#line 69
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 70
testRunner.When("ich die Seite \'Koordinierte Massnahmen\' öffne", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 71
testRunner.And("ich wähle eine korrdinierte Massnahme auf der Karte aus", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 72
testRunner.Then("öffnet sich das Formular für koordinierte Massnahmen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line 73
testRunner.And("ich dort \"Löschen der korrdinierten Massnahem\" auswähle", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 74
testRunner.Then("wird die koordinierte Massnahme gelöscht und nicht mehr auf der Karte oder in Aus" +
                    "wertungen (dieses Jahres) angezeigt", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann in einem Textfeld nach Projektname suchen")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannInEinemTextfeldNachProjektnameSuchen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann in einem Textfeld nach Projektname suchen", new string[] {
                        "Manuell"});
#line 79
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
