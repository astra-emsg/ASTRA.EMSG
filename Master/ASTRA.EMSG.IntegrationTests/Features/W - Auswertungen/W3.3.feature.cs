// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ASTRA.EMSG.IntegrationTests.Features.W_Auswertungen
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("W3.3 - Ausgefüllte Erfassungsformulare für Oberflächenschäden zu jedem Strassenab" +
        "schnitt erhalten", Description="    Als Data-Reader,\r\n\twill ich ausgefüllte Erfassungsformulare für Oberflächensc" +
        "häden zu jedem Strassenabschnitt erhalten\r\n\tdamit ich diese als Basis für neue E" +
        "rfassungen verwenden kann", SourceFile="Features\\W - Auswertungen\\W3.3.feature", SourceLine=0)]
    public partial class W3_3_AusgefullteErfassungsformulareFurOberflachenschadenZuJedemStrassenabschnittErhaltenFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "W3.3.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "W3.3 - Ausgefüllte Erfassungsformulare für Oberflächenschäden zu jedem Strassenab" +
                    "schnitt erhalten", "    Als Data-Reader,\r\n\twill ich ausgefüllte Erfassungsformulare für Oberflächensc" +
                    "häden zu jedem Strassenabschnitt erhalten\r\n\tdamit ich diese als Basis für neue E" +
                    "rfassungen verwenden kann", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table1.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 7
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table1, "Gegeben sei ");
#line 10
testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belagsart"});
            table2.AddRow(new string[] {
                        "1",
                        "Jesuitenbachweg",
                        "Hackl",
                        "Schweighofer",
                        "Asphalt"});
            table2.AddRow(new string[] {
                        "2",
                        "Lagerstrasse",
                        "Nr. 13",
                        "Nr. 22",
                        "Beton"});
            table2.AddRow(new string[] {
                        "3",
                        "Föhrenweg",
                        "Unterer Ortsteil",
                        "Lager",
                        "Beton"});
            table2.AddRow(new string[] {
                        "4",
                        "Gartenstrasse",
                        "1",
                        "66",
                        "Asphalt"});
#line 11
testRunner.And("folgende Netzinformationen existieren:", ((string)(null)), table2, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVonStrasse",
                        "BezeichnungBisStrasse",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Aufnahmedatum",
                        "ZustandsIndexFahrbahn",
                        "Erfassungsmodus"});
            table3.AddRow(new string[] {
                        "5",
                        "Jesuitenbachweg",
                        "Hackl",
                        "Schweighofer",
                        "Nr. 1",
                        "Nr. 7",
                        "12.10.2009",
                        "2,3",
                        "Detailliert"});
            table3.AddRow(new string[] {
                        "6",
                        "Jesuitenbachweg",
                        "Hackl",
                        "Schweighofer",
                        "Nr. 8",
                        "Nr. 12",
                        "12.10.2009",
                        "2,3",
                        "Detailliert"});
            table3.AddRow(new string[] {
                        "7",
                        "Jesuitenbachweg",
                        "Hackl",
                        "Schweighofer",
                        "Nr. 13",
                        "Nr. 55",
                        "23.03.2009",
                        "1,2",
                        "Detailliert"});
            table3.AddRow(new string[] {
                        "8",
                        "Lagerstrasse",
                        "Nr. 13",
                        "Nr. 22",
                        "0.0",
                        "2.1",
                        "21.05.2009",
                        "1,1",
                        "Detailliert"});
            table3.AddRow(new string[] {
                        "9",
                        "Lagerstrasse",
                        "Nr. 13",
                        "Nr. 22",
                        "2.1",
                        "5.3",
                        "21.05.2009",
                        "1,1",
                        "Detailliert"});
            table3.AddRow(new string[] {
                        "10",
                        "Lagerstrasse",
                        "Nr. 13",
                        "Nr. 22",
                        "5.4",
                        "7.1",
                        "21.05.2009",
                        "2,1",
                        "Zustandsindex"});
            table3.AddRow(new string[] {
                        "11",
                        "Föhrenweg",
                        "Unterer Ortsteil",
                        "Lager",
                        "Brunner",
                        "Maier",
                        "21.10.2009",
                        "3,4",
                        "Grob"});
#line 17
testRunner.And("folgende Zustandsinformationen existieren:", ((string)(null)), table3, "Und ");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Reader kann ein Jahr auswählen, für das vom System die Auswertung generi" +
            "ert werden soll", new string[] {
                "Manuell"}, SourceLine=29)]
        public virtual void DerData_ReaderKannEinJahrAuswahlenFurDasVomSystemDieAuswertungGeneriertWerdenSoll()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Reader kann ein Jahr auswählen, für das vom System die Auswertung generi" +
                    "ert werden soll", new string[] {
                        "Manuell"});
#line 30
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Jahr"});
            table4.AddRow(new string[] {
                        "2008"});
            table4.AddRow(new string[] {
                        "2009"});
#line 31
testRunner.Given("es gibt Jahresabschlüsse für folgende Jahre:", ((string)(null)), table4, "Gegeben sei ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Jahr"});
            table5.AddRow(new string[] {
                        "Aktuelles Erfassungsjahr"});
            table5.AddRow(new string[] {
                        "2009"});
            table5.AddRow(new string[] {
                        "2008"});
#line 35
testRunner.Then("kann ich folgende Jahre für ausgefüllte Erfassungsformulare auswählen:", ((string)(null)), table5, "Dann ");
#line 40
testRunner.And("der Eintrag \'Aktuelles Erfassungsjahr\' ist vorausgewählt", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Aufbau des Erfassungsformulars entspricht Pflichtenheft, Abbildung 17", new string[] {
                "Manuell"}, SourceLine=44)]
        public virtual void DerAufbauDesErfassungsformularsEntsprichtPflichtenheftAbbildung17()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Aufbau des Erfassungsformulars entspricht Pflichtenheft, Abbildung 17", new string[] {
                        "Manuell"});
#line 45
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System liefert die ausgefüllten detaillierten Erfassungsformulare für den Str" +
            "assenabschnitt des Mandanten", new string[] {
                "Manuell"}, SourceLine=49)]
        public virtual void DasSystemLiefertDieAusgefulltenDetailliertenErfassungsformulareFurDenStrassenabschnittDesMandanten()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System liefert die ausgefüllten detaillierten Erfassungsformulare für den Str" +
                    "assenabschnitt des Mandanten", new string[] {
                        "Manuell"});
#line 50
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 51
testRunner.When("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Eigentümer",
                        "Strassenname",
                        "AufnahemdatumVon",
                        "AufnahmedatumBis",
                        "ZustandsindexVon",
                        "ZustandsindexBis"});
            table6.AddRow(new string[] {
                        "Alle",
                        "Jesuitenbachweg",
                        "",
                        "",
                        "0,0",
                        "5,0"});
#line 52
testRunner.And("ich die Vorschau der ausgefüllten Erfassungsformulare für Oberflächenschäden mit " +
                    "folgenden Filtern generiere:", ((string)(null)), table6, "Und ");
#line 55
testRunner.And("ich die ausgefüllten  Erfassungsformulare herunterlade", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVonStrasse",
                        "BezeichnungBisStrasse",
                        "BezeichnungVon",
                        "BezeichnungBis"});
            table7.AddRow(new string[] {
                        "5",
                        "Jesuitenbachweg",
                        "Hackl",
                        "Schweighofer",
                        "Nr. 1",
                        "Nr. 7"});
            table7.AddRow(new string[] {
                        "6",
                        "Jesuitenbachweg",
                        "Hackl",
                        "Schweighofer",
                        "Nr. 8",
                        "Nr. 12"});
            table7.AddRow(new string[] {
                        "7",
                        "Jesuitenbachweg",
                        "Hackl",
                        "Schweighofer",
                        "Nr. 13",
                        "Nr. 55"});
#line 56
testRunner.Then("erhalte ich folgende ausgefüllten Erfassungsformulare:", ((string)(null)), table7, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System fügt jedem Schadenserfassungsformular den Header „Strassennamen“, „Bez" +
            "eichnung von“ und „Bezeichnung bis“ des Zustandsabschnitts hinzu", new string[] {
                "Manuell"}, SourceLine=64)]
        public virtual void DasSystemFugtJedemSchadenserfassungsformularDenHeaderStrassennamenBezeichnungVonUndBezeichnungBisDesZustandsabschnittsHinzu()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System fügt jedem Schadenserfassungsformular den Header „Strassennamen“, „Bez" +
                    "eichnung von“ und „Bezeichnung bis“ des Zustandsabschnitts hinzu", new string[] {
                        "Manuell"});
#line 65
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System bietet eine Vorschau der Zustandsabschnitte in Form einer Übersichtsta" +
            "belle an", new string[] {
                "Manuell"}, SourceLine=69)]
        public virtual void DasSystemBietetEineVorschauDerZustandsabschnitteInFormEinerUbersichtstabelleAn()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System bietet eine Vorschau der Zustandsabschnitte in Form einer Übersichtsta" +
                    "belle an", new string[] {
                        "Manuell"});
#line 70
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 71
testRunner.When("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Eigentümer",
                        "Strassenname",
                        "AufnahemdatumVon",
                        "AufnahmedatumBis",
                        "ZustandsindexVon",
                        "ZustandsindexBis"});
            table8.AddRow(new string[] {
                        "Alle",
                        "",
                        "",
                        "",
                        "0,0",
                        "5,0"});
#line 72
testRunner.And("ich die Vorschau der ausgefüllten Erfassungsformulare für Oberflächenschäden mit " +
                    "folgenden Filtern generiere:", ((string)(null)), table8, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Aufnahmedatum",
                        "ZustandsIndexFahrbahn",
                        "DetailliertsSchadenserfassungsformular"});
            table9.AddRow(new string[] {
                        "5",
                        "Jesuitenbachweg",
                        "Nr. 1",
                        "Nr. 7",
                        "12.10.2009",
                        "2,3",
                        "Ja"});
            table9.AddRow(new string[] {
                        "6",
                        "Jesuitenbachweg",
                        "Nr. 8",
                        "Nr. 12",
                        "12.10.2009",
                        "2,3",
                        "Ja"});
            table9.AddRow(new string[] {
                        "7",
                        "Jesuitenbachweg",
                        "Nr. 13",
                        "Nr. 55",
                        "23.03.2009",
                        "1,2",
                        "Ja"});
            table9.AddRow(new string[] {
                        "8",
                        "Lagerstrasse",
                        "0.0",
                        "2.1",
                        "21.05.2009",
                        "1,1",
                        "Ja"});
            table9.AddRow(new string[] {
                        "9",
                        "Lagerstrasse",
                        "2.1",
                        "5.3",
                        "21.05.2009",
                        "1,1",
                        "Ja"});
            table9.AddRow(new string[] {
                        "10",
                        "Lagerstrasse",
                        "5.4",
                        "7.1",
                        "21.05.2009",
                        "2,1",
                        "Nein"});
            table9.AddRow(new string[] {
                        "11",
                        "Föhrenweg",
                        "Brunner",
                        "Maier",
                        "21.10.2009",
                        "3,4",
                        "Nein"});
#line 75
testRunner.Then("erhalte ich folgende Tabelle:", ((string)(null)), table9, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System generiert den Report ausschliesslich für Zustandsabschnitte deren Zust" +
            "and mittels des detaillierten Schadenserfassungsformulars für Oberflächenschäden" +
            " erfasst wurde", new string[] {
                "Manuell"}, SourceLine=87)]
        public virtual void DasSystemGeneriertDenReportAusschliesslichFurZustandsabschnitteDerenZustandMittelsDesDetailliertenSchadenserfassungsformularsFurOberflachenschadenErfasstWurde()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System generiert den Report ausschliesslich für Zustandsabschnitte deren Zust" +
                    "and mittels des detaillierten Schadenserfassungsformulars für Oberflächenschäden" +
                    " erfasst wurde", new string[] {
                        "Manuell"});
#line 88
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 89
testRunner.When("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Eigentümer",
                        "Strassenname",
                        "AufnahemdatumVon",
                        "AufnahmedatumBis",
                        "ZustandsindexVon",
                        "ZustandsindexBis"});
            table10.AddRow(new string[] {
                        "Alle",
                        "Lagerstrasse",
                        "",
                        "",
                        "0,0",
                        "5,0"});
#line 90
testRunner.And("ich die Vorschau der ausgefüllten Erfassungsformulare für Oberflächenschäden mit " +
                    "folgenden Filtern generiere:", ((string)(null)), table10, "Und ");
#line 93
testRunner.And("ich die ausgefüllten  Erfassungsformulare herunterlade", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVonStrasse",
                        "BezeichnungBisStrasse",
                        "BezeichnungVon",
                        "BezeichnungBis"});
            table11.AddRow(new string[] {
                        "8",
                        "Lagerstrasse",
                        "Nr. 13",
                        "Nr. 22",
                        "0.0",
                        "2.1"});
            table11.AddRow(new string[] {
                        "9",
                        "Lagerstrasse",
                        "Nr. 13",
                        "Nr. 22",
                        "2.1",
                        "5.3"});
#line 94
testRunner.Then("erhalte ich folgende ausgefüllten Erfassungsformulare:", ((string)(null)), table11, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System kennzeichnet die getroffene Auswahl im Schadenserfassungsformular im R" +
            "eport mittels „x“", new string[] {
                "Manuell"}, SourceLine=101)]
        public virtual void DasSystemKennzeichnetDieGetroffeneAuswahlImSchadenserfassungsformularImReportMittelsX()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System kennzeichnet die getroffene Auswahl im Schadenserfassungsformular im R" +
                    "eport mittels „x“", new string[] {
                        "Manuell"});
#line 102
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Reader kann die zu liefernden Erfassungsformulare filtern", new string[] {
                "Manuell"}, SourceLine=106)]
        public virtual void DerData_ReaderKannDieZuLieferndenErfassungsformulareFiltern()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Reader kann die zu liefernden Erfassungsformulare filtern", new string[] {
                        "Manuell"});
#line 107
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 108
testRunner.When("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Eigentümer",
                        "Strassenname",
                        "AufnahemdatumVon",
                        "AufnahmedatumBis",
                        "ZustandsindexVon",
                        "ZustandsindexBis"});
            table12.AddRow(new string[] {
                        "Alle",
                        "",
                        "23.03.2009",
                        "21.05.2009",
                        "1,1",
                        "1,2"});
#line 109
testRunner.And("ich die Vorschau der ausgefüllten Erfassungsformulare für Oberflächenschäden mit " +
                    "folgenden Filtern generiere:", ((string)(null)), table12, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Aufnahmedatum",
                        "ZustandsIndexFahrbahn",
                        "DetailliertsSchadenserfassungsformular"});
            table13.AddRow(new string[] {
                        "7",
                        "Jesuitenbachweg",
                        "Nr. 13",
                        "Nr. 55",
                        "23.03.2009",
                        "1,2",
                        "Ja"});
            table13.AddRow(new string[] {
                        "8",
                        "Lagerstrasse",
                        "0.0",
                        "2.1",
                        "21.05.2009",
                        "1,1",
                        "Ja"});
            table13.AddRow(new string[] {
                        "9",
                        "Lagerstrasse",
                        "2.1",
                        "5.3",
                        "21.05.2009",
                        "1,1",
                        "Ja"});
#line 112
testRunner.Then("erhalte ich folgende Tabelle:", ((string)(null)), table13, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Reader kann das Erfassungsformular als Excel exportieren", new string[] {
                "Manuell"}, SourceLine=120)]
        public virtual void DerData_ReaderKannDasErfassungsformularAlsExcelExportieren()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Reader kann das Erfassungsformular als Excel exportieren", new string[] {
                        "Manuell"});
#line 121
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("W3.3 - Ausgefüllte Erfassungsformulare für Oberflächenschäden zu jedem Strassenab" +
        "schnitt erhalten")]
    public partial class W3_3_AusgefullteErfassungsformulareFurOberflachenschadenZuJedemStrassenabschnittErhaltenFeature_NUnit
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "W3.3.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "W3.3 - Ausgefüllte Erfassungsformulare für Oberflächenschäden zu jedem Strassenab" +
                    "schnitt erhalten", "    Als Data-Reader,\r\n\twill ich ausgefüllte Erfassungsformulare für Oberflächensc" +
                    "häden zu jedem Strassenabschnitt erhalten\r\n\tdamit ich diese als Basis für neue E" +
                    "rfassungen verwenden kann", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table1.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 7
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table1, "Gegeben sei ");
#line 10
testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belagsart"});
            table2.AddRow(new string[] {
                        "1",
                        "Jesuitenbachweg",
                        "Hackl",
                        "Schweighofer",
                        "Asphalt"});
            table2.AddRow(new string[] {
                        "2",
                        "Lagerstrasse",
                        "Nr. 13",
                        "Nr. 22",
                        "Beton"});
            table2.AddRow(new string[] {
                        "3",
                        "Föhrenweg",
                        "Unterer Ortsteil",
                        "Lager",
                        "Beton"});
            table2.AddRow(new string[] {
                        "4",
                        "Gartenstrasse",
                        "1",
                        "66",
                        "Asphalt"});
#line 11
testRunner.And("folgende Netzinformationen existieren:", ((string)(null)), table2, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVonStrasse",
                        "BezeichnungBisStrasse",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Aufnahmedatum",
                        "ZustandsIndexFahrbahn",
                        "Erfassungsmodus"});
            table3.AddRow(new string[] {
                        "5",
                        "Jesuitenbachweg",
                        "Hackl",
                        "Schweighofer",
                        "Nr. 1",
                        "Nr. 7",
                        "12.10.2009",
                        "2,3",
                        "Detailliert"});
            table3.AddRow(new string[] {
                        "6",
                        "Jesuitenbachweg",
                        "Hackl",
                        "Schweighofer",
                        "Nr. 8",
                        "Nr. 12",
                        "12.10.2009",
                        "2,3",
                        "Detailliert"});
            table3.AddRow(new string[] {
                        "7",
                        "Jesuitenbachweg",
                        "Hackl",
                        "Schweighofer",
                        "Nr. 13",
                        "Nr. 55",
                        "23.03.2009",
                        "1,2",
                        "Detailliert"});
            table3.AddRow(new string[] {
                        "8",
                        "Lagerstrasse",
                        "Nr. 13",
                        "Nr. 22",
                        "0.0",
                        "2.1",
                        "21.05.2009",
                        "1,1",
                        "Detailliert"});
            table3.AddRow(new string[] {
                        "9",
                        "Lagerstrasse",
                        "Nr. 13",
                        "Nr. 22",
                        "2.1",
                        "5.3",
                        "21.05.2009",
                        "1,1",
                        "Detailliert"});
            table3.AddRow(new string[] {
                        "10",
                        "Lagerstrasse",
                        "Nr. 13",
                        "Nr. 22",
                        "5.4",
                        "7.1",
                        "21.05.2009",
                        "2,1",
                        "Zustandsindex"});
            table3.AddRow(new string[] {
                        "11",
                        "Föhrenweg",
                        "Unterer Ortsteil",
                        "Lager",
                        "Brunner",
                        "Maier",
                        "21.10.2009",
                        "3,4",
                        "Grob"});
#line 17
testRunner.And("folgende Zustandsinformationen existieren:", ((string)(null)), table3, "Und ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Reader kann ein Jahr auswählen, für das vom System die Auswertung generi" +
            "ert werden soll")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ReaderKannEinJahrAuswahlenFurDasVomSystemDieAuswertungGeneriertWerdenSoll()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Reader kann ein Jahr auswählen, für das vom System die Auswertung generi" +
                    "ert werden soll", new string[] {
                        "Manuell"});
#line 30
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Jahr"});
            table4.AddRow(new string[] {
                        "2008"});
            table4.AddRow(new string[] {
                        "2009"});
#line 31
testRunner.Given("es gibt Jahresabschlüsse für folgende Jahre:", ((string)(null)), table4, "Gegeben sei ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Jahr"});
            table5.AddRow(new string[] {
                        "Aktuelles Erfassungsjahr"});
            table5.AddRow(new string[] {
                        "2009"});
            table5.AddRow(new string[] {
                        "2008"});
#line 35
testRunner.Then("kann ich folgende Jahre für ausgefüllte Erfassungsformulare auswählen:", ((string)(null)), table5, "Dann ");
#line 40
testRunner.And("der Eintrag \'Aktuelles Erfassungsjahr\' ist vorausgewählt", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Aufbau des Erfassungsformulars entspricht Pflichtenheft, Abbildung 17")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerAufbauDesErfassungsformularsEntsprichtPflichtenheftAbbildung17()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Aufbau des Erfassungsformulars entspricht Pflichtenheft, Abbildung 17", new string[] {
                        "Manuell"});
#line 45
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System liefert die ausgefüllten detaillierten Erfassungsformulare für den Str" +
            "assenabschnitt des Mandanten")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemLiefertDieAusgefulltenDetailliertenErfassungsformulareFurDenStrassenabschnittDesMandanten()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System liefert die ausgefüllten detaillierten Erfassungsformulare für den Str" +
                    "assenabschnitt des Mandanten", new string[] {
                        "Manuell"});
#line 50
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 51
testRunner.When("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Eigentümer",
                        "Strassenname",
                        "AufnahemdatumVon",
                        "AufnahmedatumBis",
                        "ZustandsindexVon",
                        "ZustandsindexBis"});
            table6.AddRow(new string[] {
                        "Alle",
                        "Jesuitenbachweg",
                        "",
                        "",
                        "0,0",
                        "5,0"});
#line 52
testRunner.And("ich die Vorschau der ausgefüllten Erfassungsformulare für Oberflächenschäden mit " +
                    "folgenden Filtern generiere:", ((string)(null)), table6, "Und ");
#line 55
testRunner.And("ich die ausgefüllten  Erfassungsformulare herunterlade", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVonStrasse",
                        "BezeichnungBisStrasse",
                        "BezeichnungVon",
                        "BezeichnungBis"});
            table7.AddRow(new string[] {
                        "5",
                        "Jesuitenbachweg",
                        "Hackl",
                        "Schweighofer",
                        "Nr. 1",
                        "Nr. 7"});
            table7.AddRow(new string[] {
                        "6",
                        "Jesuitenbachweg",
                        "Hackl",
                        "Schweighofer",
                        "Nr. 8",
                        "Nr. 12"});
            table7.AddRow(new string[] {
                        "7",
                        "Jesuitenbachweg",
                        "Hackl",
                        "Schweighofer",
                        "Nr. 13",
                        "Nr. 55"});
#line 56
testRunner.Then("erhalte ich folgende ausgefüllten Erfassungsformulare:", ((string)(null)), table7, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System fügt jedem Schadenserfassungsformular den Header „Strassennamen“, „Bez" +
            "eichnung von“ und „Bezeichnung bis“ des Zustandsabschnitts hinzu")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemFugtJedemSchadenserfassungsformularDenHeaderStrassennamenBezeichnungVonUndBezeichnungBisDesZustandsabschnittsHinzu()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System fügt jedem Schadenserfassungsformular den Header „Strassennamen“, „Bez" +
                    "eichnung von“ und „Bezeichnung bis“ des Zustandsabschnitts hinzu", new string[] {
                        "Manuell"});
#line 65
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System bietet eine Vorschau der Zustandsabschnitte in Form einer Übersichtsta" +
            "belle an")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemBietetEineVorschauDerZustandsabschnitteInFormEinerUbersichtstabelleAn()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System bietet eine Vorschau der Zustandsabschnitte in Form einer Übersichtsta" +
                    "belle an", new string[] {
                        "Manuell"});
#line 70
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 71
testRunner.When("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Eigentümer",
                        "Strassenname",
                        "AufnahemdatumVon",
                        "AufnahmedatumBis",
                        "ZustandsindexVon",
                        "ZustandsindexBis"});
            table8.AddRow(new string[] {
                        "Alle",
                        "",
                        "",
                        "",
                        "0,0",
                        "5,0"});
#line 72
testRunner.And("ich die Vorschau der ausgefüllten Erfassungsformulare für Oberflächenschäden mit " +
                    "folgenden Filtern generiere:", ((string)(null)), table8, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Aufnahmedatum",
                        "ZustandsIndexFahrbahn",
                        "DetailliertsSchadenserfassungsformular"});
            table9.AddRow(new string[] {
                        "5",
                        "Jesuitenbachweg",
                        "Nr. 1",
                        "Nr. 7",
                        "12.10.2009",
                        "2,3",
                        "Ja"});
            table9.AddRow(new string[] {
                        "6",
                        "Jesuitenbachweg",
                        "Nr. 8",
                        "Nr. 12",
                        "12.10.2009",
                        "2,3",
                        "Ja"});
            table9.AddRow(new string[] {
                        "7",
                        "Jesuitenbachweg",
                        "Nr. 13",
                        "Nr. 55",
                        "23.03.2009",
                        "1,2",
                        "Ja"});
            table9.AddRow(new string[] {
                        "8",
                        "Lagerstrasse",
                        "0.0",
                        "2.1",
                        "21.05.2009",
                        "1,1",
                        "Ja"});
            table9.AddRow(new string[] {
                        "9",
                        "Lagerstrasse",
                        "2.1",
                        "5.3",
                        "21.05.2009",
                        "1,1",
                        "Ja"});
            table9.AddRow(new string[] {
                        "10",
                        "Lagerstrasse",
                        "5.4",
                        "7.1",
                        "21.05.2009",
                        "2,1",
                        "Nein"});
            table9.AddRow(new string[] {
                        "11",
                        "Föhrenweg",
                        "Brunner",
                        "Maier",
                        "21.10.2009",
                        "3,4",
                        "Nein"});
#line 75
testRunner.Then("erhalte ich folgende Tabelle:", ((string)(null)), table9, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System generiert den Report ausschliesslich für Zustandsabschnitte deren Zust" +
            "and mittels des detaillierten Schadenserfassungsformulars für Oberflächenschäden" +
            " erfasst wurde")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemGeneriertDenReportAusschliesslichFurZustandsabschnitteDerenZustandMittelsDesDetailliertenSchadenserfassungsformularsFurOberflachenschadenErfasstWurde()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System generiert den Report ausschliesslich für Zustandsabschnitte deren Zust" +
                    "and mittels des detaillierten Schadenserfassungsformulars für Oberflächenschäden" +
                    " erfasst wurde", new string[] {
                        "Manuell"});
#line 88
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 89
testRunner.When("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Eigentümer",
                        "Strassenname",
                        "AufnahemdatumVon",
                        "AufnahmedatumBis",
                        "ZustandsindexVon",
                        "ZustandsindexBis"});
            table10.AddRow(new string[] {
                        "Alle",
                        "Lagerstrasse",
                        "",
                        "",
                        "0,0",
                        "5,0"});
#line 90
testRunner.And("ich die Vorschau der ausgefüllten Erfassungsformulare für Oberflächenschäden mit " +
                    "folgenden Filtern generiere:", ((string)(null)), table10, "Und ");
#line 93
testRunner.And("ich die ausgefüllten  Erfassungsformulare herunterlade", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVonStrasse",
                        "BezeichnungBisStrasse",
                        "BezeichnungVon",
                        "BezeichnungBis"});
            table11.AddRow(new string[] {
                        "8",
                        "Lagerstrasse",
                        "Nr. 13",
                        "Nr. 22",
                        "0.0",
                        "2.1"});
            table11.AddRow(new string[] {
                        "9",
                        "Lagerstrasse",
                        "Nr. 13",
                        "Nr. 22",
                        "2.1",
                        "5.3"});
#line 94
testRunner.Then("erhalte ich folgende ausgefüllten Erfassungsformulare:", ((string)(null)), table11, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System kennzeichnet die getroffene Auswahl im Schadenserfassungsformular im R" +
            "eport mittels „x“")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemKennzeichnetDieGetroffeneAuswahlImSchadenserfassungsformularImReportMittelsX()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System kennzeichnet die getroffene Auswahl im Schadenserfassungsformular im R" +
                    "eport mittels „x“", new string[] {
                        "Manuell"});
#line 102
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Reader kann die zu liefernden Erfassungsformulare filtern")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ReaderKannDieZuLieferndenErfassungsformulareFiltern()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Reader kann die zu liefernden Erfassungsformulare filtern", new string[] {
                        "Manuell"});
#line 107
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 108
testRunner.When("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Eigentümer",
                        "Strassenname",
                        "AufnahemdatumVon",
                        "AufnahmedatumBis",
                        "ZustandsindexVon",
                        "ZustandsindexBis"});
            table12.AddRow(new string[] {
                        "Alle",
                        "",
                        "23.03.2009",
                        "21.05.2009",
                        "1,1",
                        "1,2"});
#line 109
testRunner.And("ich die Vorschau der ausgefüllten Erfassungsformulare für Oberflächenschäden mit " +
                    "folgenden Filtern generiere:", ((string)(null)), table12, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Aufnahmedatum",
                        "ZustandsIndexFahrbahn",
                        "DetailliertsSchadenserfassungsformular"});
            table13.AddRow(new string[] {
                        "7",
                        "Jesuitenbachweg",
                        "Nr. 13",
                        "Nr. 55",
                        "23.03.2009",
                        "1,2",
                        "Ja"});
            table13.AddRow(new string[] {
                        "8",
                        "Lagerstrasse",
                        "0.0",
                        "2.1",
                        "21.05.2009",
                        "1,1",
                        "Ja"});
            table13.AddRow(new string[] {
                        "9",
                        "Lagerstrasse",
                        "2.1",
                        "5.3",
                        "21.05.2009",
                        "1,1",
                        "Ja"});
#line 112
testRunner.Then("erhalte ich folgende Tabelle:", ((string)(null)), table13, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Reader kann das Erfassungsformular als Excel exportieren")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ReaderKannDasErfassungsformularAlsExcelExportieren()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Reader kann das Erfassungsformular als Excel exportieren", new string[] {
                        "Manuell"});
#line 121
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
