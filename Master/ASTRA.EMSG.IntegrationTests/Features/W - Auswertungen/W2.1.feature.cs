// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ASTRA.EMSG.IntegrationTests.Features.W_Auswertungen
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("W2.1 - Eine Tabelle mit Wiederbeschaffungswert und Wertverlust gegliedert nach Be" +
        "lastungskategorien erhalten", Description=@"    Als Data-Reader,
	will ich eine Tabelle mit Wiederbeschaffungswert und Wertverlust gegliedert nach Belastungskategorien erhalten
	damit ich für Entscheidungsträger meiner Gemeinde eine Informationsbasis habe und einen Überblick zu meinem Wiederbeschaffungswert und jährlichen Wertverlust erhalte", SourceFile="Features\\W - Auswertungen\\W2.1.feature", SourceLine=0)]
    public partial class W2_1_EineTabelleMitWiederbeschaffungswertUndWertverlustGegliedertNachBelastungskategorienErhaltenFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "W2.1.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "W2.1 - Eine Tabelle mit Wiederbeschaffungswert und Wertverlust gegliedert nach Be" +
                    "lastungskategorien erhalten", @"    Als Data-Reader,
	will ich eine Tabelle mit Wiederbeschaffungswert und Wertverlust gegliedert nach Belastungskategorien erhalten
	damit ich für Entscheidungsträger meiner Gemeinde eine Informationsbasis habe und einen Überblick zu meinem Wiederbeschaffungswert und jährlichen Wertverlust erhalte", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table1.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 7
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table1, "Gegeben sei ");
#line 10
testRunner.And("ich habe alle Rollen für \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Belag"});
            table2.AddRow(new string[] {
                        "1",
                        "AsphaltII",
                        "Bahnhof",
                        "Spital",
                        "IA",
                        "19,56",
                        "1800",
                        "KeinTrottoir",
                        "0",
                        "0",
                        "Asphalt"});
            table2.AddRow(new string[] {
                        "2",
                        "AsphaltIV",
                        "",
                        "",
                        "IV",
                        "19",
                        "5000",
                        "Links",
                        "2,32",
                        "0",
                        "Asphalt"});
            table2.AddRow(new string[] {
                        "3",
                        "AsphaltIII",
                        "",
                        "",
                        "III",
                        "20",
                        "2500",
                        "Rechts",
                        "0",
                        "2,90",
                        "Asphalt"});
            table2.AddRow(new string[] {
                        "4",
                        "BetonII",
                        "",
                        "",
                        "II",
                        "18",
                        "1300",
                        "BeideSeiten",
                        "1,40",
                        "3",
                        "Beton"});
            table2.AddRow(new string[] {
                        "5",
                        "BetonIC",
                        "",
                        "",
                        "IC",
                        "8,45",
                        "800",
                        "NochNichtErfasst",
                        "-",
                        "-",
                        "Beton"});
            table2.AddRow(new string[] {
                        "6",
                        "BetonIB",
                        "",
                        "",
                        "IB",
                        "12,87",
                        "400",
                        "KeinTrottoir",
                        "0",
                        "0",
                        "Beton"});
#line 11
testRunner.And("für Mandant \'Mandant_1\' existieren folgende Netzinformationen:", ((string)(null)), table2, "Und ");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Reader kann ein Jahr auswählen, für das vom System die Auswertung generi" +
            "ert werden soll", new string[] {
                "Manuell"}, SourceLine=22)]
        public virtual void DerData_ReaderKannEinJahrAuswahlenFurDasVomSystemDieAuswertungGeneriertWerdenSoll()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Reader kann ein Jahr auswählen, für das vom System die Auswertung generi" +
                    "ert werden soll", new string[] {
                        "Manuell"});
#line 23
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Jahr"});
            table3.AddRow(new string[] {
                        "2008"});
            table3.AddRow(new string[] {
                        "2009"});
#line 24
testRunner.Given("es gibt Jahresabschlüsse für folgende Jahre:", ((string)(null)), table3, "Gegeben sei ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Jahr"});
            table4.AddRow(new string[] {
                        "Aktuelles Erfassungsjahr"});
            table4.AddRow(new string[] {
                        "2009"});
            table4.AddRow(new string[] {
                        "2008"});
#line 28
testRunner.Then("kann ich folgende Jahre für Tabelle mit Wiederbeschaffungswert und Wertverlust ge" +
                    "gliedert nach Belastungskategorien auswählen:", ((string)(null)), table4, "Dann ");
#line 33
testRunner.And("der Eintrag \'Aktuelles Erfassungsjahr\' ist vorausgewählt", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System generiert eine Vorschau der Auswertung am UI", new string[] {
                "Manuell"}, SourceLine=37)]
        public virtual void DasSystemGeneriertEineVorschauDerAuswertungAmUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System generiert eine Vorschau der Auswertung am UI", new string[] {
                        "Manuell"});
#line 38
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System liefert eine Tabelle mit Wiederbeschaffungswert und Wertverlust des St" +
            "rassennetzes des Mandanten gegliedert nach Belastungskategorie", new string[] {
                "Automatisch"}, SourceLine=43)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void DasSystemLiefertEineTabelleMitWiederbeschaffungswertUndWertverlustDesStrassennetzesDesMandantenGegliedertNachBelastungskategorie()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System liefert eine Tabelle mit Wiederbeschaffungswert und Wertverlust des St" +
                    "rassennetzes des Mandanten gegliedert nach Belastungskategorie", new string[] {
                        "Automatisch",
                        "Ignore"});
#line 44
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 45
testRunner.Given("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Filter",
                        "Filter Wert"});
            table5.AddRow(new string[] {
                        "Erfassungsperiode",
                        "2010"});
#line 46
testRunner.When("ich die Tabelle mit Wiederbeschaffungswert und Wertverlust nach Belastungskategor" +
                    "ie generiere", ((string)(null)), table5, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "BelastungskategorieTyp",
                        "FlächeFahrbahn",
                        "FlächeErfasstesTrottoir"});
            table6.AddRow(new string[] {
                        "IA",
                        "35208",
                        "0"});
            table6.AddRow(new string[] {
                        "IB",
                        "5148",
                        "0"});
            table6.AddRow(new string[] {
                        "IC",
                        "6760",
                        "0"});
            table6.AddRow(new string[] {
                        "II",
                        "23400",
                        "5720"});
            table6.AddRow(new string[] {
                        "III",
                        "50000",
                        "7250"});
            table6.AddRow(new string[] {
                        "IV",
                        "95000",
                        "11600"});
#line 49
testRunner.Then(@"zeigt die Tabelle mit Wiederbeschaffungswert und Wertverlust des Strassennetzes des Mandanten gegliedert nach Belastungskategorie folgende Daten:  Tabelle mit Wiederbeschaffungswert und Wertverlust des Strassennetzes des Mandanten gegliedert nach Belastungskategorie", ((string)(null)), table6, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Im System gibt es für jede Belastungskategorie einen Alterungsbeiwert I", new string[] {
                "Automatisch"}, SourceLine=61)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void ImSystemGibtEsFurJedeBelastungskategorieEinenAlterungsbeiwertI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Im System gibt es für jede Belastungskategorie einen Alterungsbeiwert I", new string[] {
                        "Automatisch",
                        "Ignore"});
#line 62
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 63
testRunner.Given("es wurden vom Benutzeradministrator keine mandantenspezifische Alterungsbeiwerte " +
                    "definiert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 64
testRunner.And("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Filter",
                        "Filter Wert"});
            table7.AddRow(new string[] {
                        "Erfassungsperiode",
                        "2010"});
#line 65
testRunner.When("ich die Tabelle mit Wiederbeschaffungswert und Wertverlust nach Belastungskategor" +
                    "ie generiere", ((string)(null)), table7, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "BelastungskategorieTyp",
                        "AlterungsbeiwertI"});
            table8.AddRow(new string[] {
                        "IA",
                        "1,6"});
            table8.AddRow(new string[] {
                        "IB",
                        "1,6"});
            table8.AddRow(new string[] {
                        "IC",
                        "1,4"});
            table8.AddRow(new string[] {
                        "II",
                        "1,8"});
            table8.AddRow(new string[] {
                        "III",
                        "2,2"});
            table8.AddRow(new string[] {
                        "IV",
                        "2,6"});
#line 68
testRunner.Then(@"zeigt die Tabelle mit Wiederbeschaffungswert und Wertverlust des Strassennetzes des Mandanten gegliedert nach Belastungskategorie folgende Daten:  Tabelle mit Wiederbeschaffungswert und Wertverlust des Strassennetzes des Mandanten gegliedert nach Belastungskategorie", ((string)(null)), table8, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Im System gibt es für jede Belastungskategorie einen Alterungsbeiwert II", new string[] {
                "Automatisch"}, SourceLine=80)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void ImSystemGibtEsFurJedeBelastungskategorieEinenAlterungsbeiwertII()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Im System gibt es für jede Belastungskategorie einen Alterungsbeiwert II", new string[] {
                        "Automatisch",
                        "Ignore"});
#line 81
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 82
testRunner.Given("es wurden vom Benutzeradministrator keine mandantenspezifische Alterungsbeiwerte " +
                    "definiert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 83
testRunner.And("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Filter",
                        "Filter Wert"});
            table9.AddRow(new string[] {
                        "Erfassungsperiode",
                        "2010"});
#line 84
testRunner.When("ich die Tabelle mit Wiederbeschaffungswert und Wertverlust nach Belastungskategor" +
                    "ie generiere", ((string)(null)), table9, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "BelastungskategorieTyp",
                        "AlterungsbeiwertII"});
            table10.AddRow(new string[] {
                        "IA",
                        "1,3"});
            table10.AddRow(new string[] {
                        "IB",
                        "1,3"});
            table10.AddRow(new string[] {
                        "IC",
                        "0,9"});
            table10.AddRow(new string[] {
                        "II",
                        "1,4"});
            table10.AddRow(new string[] {
                        "III",
                        "1,9"});
            table10.AddRow(new string[] {
                        "IV",
                        "2,1"});
#line 87
testRunner.Then(@"zeigt die Tabelle mit Wiederbeschaffungswert und Wertverlust des Strassennetzes des Mandanten gegliedert nach Belastungskategorie folgende Daten:  Tabelle mit Wiederbeschaffungswert und Wertverlust des Strassennetzes des Mandanten gegliedert nach Belastungskategorie", ((string)(null)), table10, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System berechnet den Wiederbeschaffungswert", new string[] {
                "Automatisch"}, SourceLine=98)]
        public virtual void DasSystemBerechnetDenWiederbeschaffungswert()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet den Wiederbeschaffungswert", new string[] {
                        "Automatisch"});
#line 99
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 100
testRunner.Given("es wurden vom Benutzeradministrator keine mandantenspezifische Wiederbeschaffungs" +
                    "werte definiert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 101
testRunner.And("es wurden vom Benutzeradministrator keine mandantenspezifische Alterungsbeiwerte " +
                    "definiert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 102
testRunner.And("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Filter",
                        "Filter Wert"});
            table11.AddRow(new string[] {
                        "Erfassungsperiode",
                        "2010"});
#line 103
testRunner.When("ich die Tabelle mit Wiederbeschaffungswert und Wertverlust nach Belastungskategor" +
                    "ie generiere", ((string)(null)), table11, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "BelastungskategorieTyp",
                        "Wiederbeschaffungswert"});
            table12.AddRow(new string[] {
                        "IA",
                        "13379040"});
            table12.AddRow(new string[] {
                        "IB",
                        "1647360"});
            table12.AddRow(new string[] {
                        "IC",
                        "946400"});
            table12.AddRow(new string[] {
                        "II",
                        "7969000"});
            table12.AddRow(new string[] {
                        "III",
                        "17906250"});
            table12.AddRow(new string[] {
                        "IV",
                        "29834000"});
#line 106
testRunner.Then(@"zeigt die Tabelle mit Wiederbeschaffungswert und Wertverlust des Strassennetzes des Mandanten gegliedert nach Belastungskategorie folgende Daten:  Tabelle mit Wiederbeschaffungswert und Wertverlust des Strassennetzes des Mandanten gegliedert nach Belastungskategorie", ((string)(null)), table12, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System berechnet den Wertverlust", new string[] {
                "Automatisch"}, SourceLine=117)]
        public virtual void DasSystemBerechnetDenWertverlust()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet den Wertverlust", new string[] {
                        "Automatisch"});
#line 118
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 119
testRunner.Given("es wurden vom Benutzeradministrator keine mandantenspezifische Wiederbeschaffungs" +
                    "werte definiert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 120
testRunner.And("es wurden vom Benutzeradministrator keine mandantenspezifische Alterungsbeiwerte " +
                    "definiert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 121
testRunner.And("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Filter",
                        "Filter Wert"});
            table13.AddRow(new string[] {
                        "Erfassungsperiode",
                        "2010"});
#line 122
testRunner.When("ich die Tabelle mit Wiederbeschaffungswert und Wertverlust nach Belastungskategor" +
                    "ie generiere", ((string)(null)), table13, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "BelastungskategorieTyp",
                        "WertlustI",
                        "WertlustII"});
            table14.AddRow(new string[] {
                        "IA",
                        "214064,64",
                        "173927,52"});
            table14.AddRow(new string[] {
                        "IB",
                        "26357,76",
                        "21415,68"});
            table14.AddRow(new string[] {
                        "IC",
                        "13249,6",
                        "8517,6"});
            table14.AddRow(new string[] {
                        "II",
                        "143442",
                        "111566"});
            table14.AddRow(new string[] {
                        "III",
                        "393937,5",
                        "340218,75"});
            table14.AddRow(new string[] {
                        "IV",
                        "775684",
                        "626514"});
#line 125
testRunner.Then(@"zeigt die Tabelle mit Wiederbeschaffungswert und Wertverlust des Strassennetzes des Mandanten gegliedert nach Belastungskategorie folgende Daten:  Tabelle mit Wiederbeschaffungswert und Wertverlust des Strassennetzes des Mandanten gegliedert nach Belastungskategorie", ((string)(null)), table14, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Reader kann die Tabelle auf den Strasseneigentümer filtern", new string[] {
                "Manuell"}, SourceLine=136)]
        public virtual void DerData_ReaderKannDieTabelleAufDenStrasseneigentumerFiltern()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Reader kann die Tabelle auf den Strasseneigentümer filtern", new string[] {
                        "Manuell"});
#line 137
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Reader kann die Vorschau als Excel-File exportieren", new string[] {
                "Manuell"}, SourceLine=141)]
        public virtual void DerData_ReaderKannDieVorschauAlsExcel_FileExportieren()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Reader kann die Vorschau als Excel-File exportieren", new string[] {
                        "Manuell"});
#line 142
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("W2.1 - Eine Tabelle mit Wiederbeschaffungswert und Wertverlust gegliedert nach Be" +
        "lastungskategorien erhalten")]
    public partial class W2_1_EineTabelleMitWiederbeschaffungswertUndWertverlustGegliedertNachBelastungskategorienErhaltenFeature_NUnit
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "W2.1.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "W2.1 - Eine Tabelle mit Wiederbeschaffungswert und Wertverlust gegliedert nach Be" +
                    "lastungskategorien erhalten", @"    Als Data-Reader,
	will ich eine Tabelle mit Wiederbeschaffungswert und Wertverlust gegliedert nach Belastungskategorien erhalten
	damit ich für Entscheidungsträger meiner Gemeinde eine Informationsbasis habe und einen Überblick zu meinem Wiederbeschaffungswert und jährlichen Wertverlust erhalte", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table1.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 7
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table1, "Gegeben sei ");
#line 10
testRunner.And("ich habe alle Rollen für \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Belag"});
            table2.AddRow(new string[] {
                        "1",
                        "AsphaltII",
                        "Bahnhof",
                        "Spital",
                        "IA",
                        "19,56",
                        "1800",
                        "KeinTrottoir",
                        "0",
                        "0",
                        "Asphalt"});
            table2.AddRow(new string[] {
                        "2",
                        "AsphaltIV",
                        "",
                        "",
                        "IV",
                        "19",
                        "5000",
                        "Links",
                        "2,32",
                        "0",
                        "Asphalt"});
            table2.AddRow(new string[] {
                        "3",
                        "AsphaltIII",
                        "",
                        "",
                        "III",
                        "20",
                        "2500",
                        "Rechts",
                        "0",
                        "2,90",
                        "Asphalt"});
            table2.AddRow(new string[] {
                        "4",
                        "BetonII",
                        "",
                        "",
                        "II",
                        "18",
                        "1300",
                        "BeideSeiten",
                        "1,40",
                        "3",
                        "Beton"});
            table2.AddRow(new string[] {
                        "5",
                        "BetonIC",
                        "",
                        "",
                        "IC",
                        "8,45",
                        "800",
                        "NochNichtErfasst",
                        "-",
                        "-",
                        "Beton"});
            table2.AddRow(new string[] {
                        "6",
                        "BetonIB",
                        "",
                        "",
                        "IB",
                        "12,87",
                        "400",
                        "KeinTrottoir",
                        "0",
                        "0",
                        "Beton"});
#line 11
testRunner.And("für Mandant \'Mandant_1\' existieren folgende Netzinformationen:", ((string)(null)), table2, "Und ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Reader kann ein Jahr auswählen, für das vom System die Auswertung generi" +
            "ert werden soll")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ReaderKannEinJahrAuswahlenFurDasVomSystemDieAuswertungGeneriertWerdenSoll()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Reader kann ein Jahr auswählen, für das vom System die Auswertung generi" +
                    "ert werden soll", new string[] {
                        "Manuell"});
#line 23
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Jahr"});
            table3.AddRow(new string[] {
                        "2008"});
            table3.AddRow(new string[] {
                        "2009"});
#line 24
testRunner.Given("es gibt Jahresabschlüsse für folgende Jahre:", ((string)(null)), table3, "Gegeben sei ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Jahr"});
            table4.AddRow(new string[] {
                        "Aktuelles Erfassungsjahr"});
            table4.AddRow(new string[] {
                        "2009"});
            table4.AddRow(new string[] {
                        "2008"});
#line 28
testRunner.Then("kann ich folgende Jahre für Tabelle mit Wiederbeschaffungswert und Wertverlust ge" +
                    "gliedert nach Belastungskategorien auswählen:", ((string)(null)), table4, "Dann ");
#line 33
testRunner.And("der Eintrag \'Aktuelles Erfassungsjahr\' ist vorausgewählt", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System generiert eine Vorschau der Auswertung am UI")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemGeneriertEineVorschauDerAuswertungAmUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System generiert eine Vorschau der Auswertung am UI", new string[] {
                        "Manuell"});
#line 38
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System liefert eine Tabelle mit Wiederbeschaffungswert und Wertverlust des St" +
            "rassennetzes des Mandanten gegliedert nach Belastungskategorie")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("Automatisch")]
        public virtual void DasSystemLiefertEineTabelleMitWiederbeschaffungswertUndWertverlustDesStrassennetzesDesMandantenGegliedertNachBelastungskategorie()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System liefert eine Tabelle mit Wiederbeschaffungswert und Wertverlust des St" +
                    "rassennetzes des Mandanten gegliedert nach Belastungskategorie", new string[] {
                        "Automatisch",
                        "Ignore"});
#line 44
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 45
testRunner.Given("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Filter",
                        "Filter Wert"});
            table5.AddRow(new string[] {
                        "Erfassungsperiode",
                        "2010"});
#line 46
testRunner.When("ich die Tabelle mit Wiederbeschaffungswert und Wertverlust nach Belastungskategor" +
                    "ie generiere", ((string)(null)), table5, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "BelastungskategorieTyp",
                        "FlächeFahrbahn",
                        "FlächeErfasstesTrottoir"});
            table6.AddRow(new string[] {
                        "IA",
                        "35208",
                        "0"});
            table6.AddRow(new string[] {
                        "IB",
                        "5148",
                        "0"});
            table6.AddRow(new string[] {
                        "IC",
                        "6760",
                        "0"});
            table6.AddRow(new string[] {
                        "II",
                        "23400",
                        "5720"});
            table6.AddRow(new string[] {
                        "III",
                        "50000",
                        "7250"});
            table6.AddRow(new string[] {
                        "IV",
                        "95000",
                        "11600"});
#line 49
testRunner.Then(@"zeigt die Tabelle mit Wiederbeschaffungswert und Wertverlust des Strassennetzes des Mandanten gegliedert nach Belastungskategorie folgende Daten:  Tabelle mit Wiederbeschaffungswert und Wertverlust des Strassennetzes des Mandanten gegliedert nach Belastungskategorie", ((string)(null)), table6, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Im System gibt es für jede Belastungskategorie einen Alterungsbeiwert I")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("Automatisch")]
        public virtual void ImSystemGibtEsFurJedeBelastungskategorieEinenAlterungsbeiwertI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Im System gibt es für jede Belastungskategorie einen Alterungsbeiwert I", new string[] {
                        "Automatisch",
                        "Ignore"});
#line 62
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 63
testRunner.Given("es wurden vom Benutzeradministrator keine mandantenspezifische Alterungsbeiwerte " +
                    "definiert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 64
testRunner.And("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Filter",
                        "Filter Wert"});
            table7.AddRow(new string[] {
                        "Erfassungsperiode",
                        "2010"});
#line 65
testRunner.When("ich die Tabelle mit Wiederbeschaffungswert und Wertverlust nach Belastungskategor" +
                    "ie generiere", ((string)(null)), table7, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "BelastungskategorieTyp",
                        "AlterungsbeiwertI"});
            table8.AddRow(new string[] {
                        "IA",
                        "1,6"});
            table8.AddRow(new string[] {
                        "IB",
                        "1,6"});
            table8.AddRow(new string[] {
                        "IC",
                        "1,4"});
            table8.AddRow(new string[] {
                        "II",
                        "1,8"});
            table8.AddRow(new string[] {
                        "III",
                        "2,2"});
            table8.AddRow(new string[] {
                        "IV",
                        "2,6"});
#line 68
testRunner.Then(@"zeigt die Tabelle mit Wiederbeschaffungswert und Wertverlust des Strassennetzes des Mandanten gegliedert nach Belastungskategorie folgende Daten:  Tabelle mit Wiederbeschaffungswert und Wertverlust des Strassennetzes des Mandanten gegliedert nach Belastungskategorie", ((string)(null)), table8, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Im System gibt es für jede Belastungskategorie einen Alterungsbeiwert II")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("Automatisch")]
        public virtual void ImSystemGibtEsFurJedeBelastungskategorieEinenAlterungsbeiwertII()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Im System gibt es für jede Belastungskategorie einen Alterungsbeiwert II", new string[] {
                        "Automatisch",
                        "Ignore"});
#line 81
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 82
testRunner.Given("es wurden vom Benutzeradministrator keine mandantenspezifische Alterungsbeiwerte " +
                    "definiert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 83
testRunner.And("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Filter",
                        "Filter Wert"});
            table9.AddRow(new string[] {
                        "Erfassungsperiode",
                        "2010"});
#line 84
testRunner.When("ich die Tabelle mit Wiederbeschaffungswert und Wertverlust nach Belastungskategor" +
                    "ie generiere", ((string)(null)), table9, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "BelastungskategorieTyp",
                        "AlterungsbeiwertII"});
            table10.AddRow(new string[] {
                        "IA",
                        "1,3"});
            table10.AddRow(new string[] {
                        "IB",
                        "1,3"});
            table10.AddRow(new string[] {
                        "IC",
                        "0,9"});
            table10.AddRow(new string[] {
                        "II",
                        "1,4"});
            table10.AddRow(new string[] {
                        "III",
                        "1,9"});
            table10.AddRow(new string[] {
                        "IV",
                        "2,1"});
#line 87
testRunner.Then(@"zeigt die Tabelle mit Wiederbeschaffungswert und Wertverlust des Strassennetzes des Mandanten gegliedert nach Belastungskategorie folgende Daten:  Tabelle mit Wiederbeschaffungswert und Wertverlust des Strassennetzes des Mandanten gegliedert nach Belastungskategorie", ((string)(null)), table10, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System berechnet den Wiederbeschaffungswert")]
        [NUnit.Framework.CategoryAttribute("Automatisch")]
        public virtual void DasSystemBerechnetDenWiederbeschaffungswert()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet den Wiederbeschaffungswert", new string[] {
                        "Automatisch"});
#line 99
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 100
testRunner.Given("es wurden vom Benutzeradministrator keine mandantenspezifische Wiederbeschaffungs" +
                    "werte definiert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 101
testRunner.And("es wurden vom Benutzeradministrator keine mandantenspezifische Alterungsbeiwerte " +
                    "definiert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 102
testRunner.And("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Filter",
                        "Filter Wert"});
            table11.AddRow(new string[] {
                        "Erfassungsperiode",
                        "2010"});
#line 103
testRunner.When("ich die Tabelle mit Wiederbeschaffungswert und Wertverlust nach Belastungskategor" +
                    "ie generiere", ((string)(null)), table11, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "BelastungskategorieTyp",
                        "Wiederbeschaffungswert"});
            table12.AddRow(new string[] {
                        "IA",
                        "13379040"});
            table12.AddRow(new string[] {
                        "IB",
                        "1647360"});
            table12.AddRow(new string[] {
                        "IC",
                        "946400"});
            table12.AddRow(new string[] {
                        "II",
                        "7969000"});
            table12.AddRow(new string[] {
                        "III",
                        "17906250"});
            table12.AddRow(new string[] {
                        "IV",
                        "29834000"});
#line 106
testRunner.Then(@"zeigt die Tabelle mit Wiederbeschaffungswert und Wertverlust des Strassennetzes des Mandanten gegliedert nach Belastungskategorie folgende Daten:  Tabelle mit Wiederbeschaffungswert und Wertverlust des Strassennetzes des Mandanten gegliedert nach Belastungskategorie", ((string)(null)), table12, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System berechnet den Wertverlust")]
        [NUnit.Framework.CategoryAttribute("Automatisch")]
        public virtual void DasSystemBerechnetDenWertverlust()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet den Wertverlust", new string[] {
                        "Automatisch"});
#line 118
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 119
testRunner.Given("es wurden vom Benutzeradministrator keine mandantenspezifische Wiederbeschaffungs" +
                    "werte definiert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 120
testRunner.And("es wurden vom Benutzeradministrator keine mandantenspezifische Alterungsbeiwerte " +
                    "definiert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 121
testRunner.And("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Filter",
                        "Filter Wert"});
            table13.AddRow(new string[] {
                        "Erfassungsperiode",
                        "2010"});
#line 122
testRunner.When("ich die Tabelle mit Wiederbeschaffungswert und Wertverlust nach Belastungskategor" +
                    "ie generiere", ((string)(null)), table13, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "BelastungskategorieTyp",
                        "WertlustI",
                        "WertlustII"});
            table14.AddRow(new string[] {
                        "IA",
                        "214064,64",
                        "173927,52"});
            table14.AddRow(new string[] {
                        "IB",
                        "26357,76",
                        "21415,68"});
            table14.AddRow(new string[] {
                        "IC",
                        "13249,6",
                        "8517,6"});
            table14.AddRow(new string[] {
                        "II",
                        "143442",
                        "111566"});
            table14.AddRow(new string[] {
                        "III",
                        "393937,5",
                        "340218,75"});
            table14.AddRow(new string[] {
                        "IV",
                        "775684",
                        "626514"});
#line 125
testRunner.Then(@"zeigt die Tabelle mit Wiederbeschaffungswert und Wertverlust des Strassennetzes des Mandanten gegliedert nach Belastungskategorie folgende Daten:  Tabelle mit Wiederbeschaffungswert und Wertverlust des Strassennetzes des Mandanten gegliedert nach Belastungskategorie", ((string)(null)), table14, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Reader kann die Tabelle auf den Strasseneigentümer filtern")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ReaderKannDieTabelleAufDenStrasseneigentumerFiltern()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Reader kann die Tabelle auf den Strasseneigentümer filtern", new string[] {
                        "Manuell"});
#line 137
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Reader kann die Vorschau als Excel-File exportieren")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ReaderKannDieVorschauAlsExcel_FileExportieren()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Reader kann die Vorschau als Excel-File exportieren", new string[] {
                        "Manuell"});
#line 142
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
