// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ASTRA.EMSG.IntegrationTests.Features.W_Auswertungen
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("W2.2 - Eine Tabelle mit Wiederbeschaffungswert und Wertverlust pro Strassenabschn" +
        "itt erhalten", Description=@"    Als Data-Reader,
	will ich eine Tabelle mit Wiederbeschaffungswert und Wertverlust pro Strassenabschnitt erhalten
	damit ich für Entscheidungsträger meiner Gemeinde eine Informationsbasis habe und einen Überblick zu meinem Wiederbeschaffungswert und jährlichen Wertverlust erhalte", SourceFile="Features\\W - Auswertungen\\W2.2.feature", SourceLine=0)]
    public partial class W2_2_EineTabelleMitWiederbeschaffungswertUndWertverlustProStrassenabschnittErhaltenFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "W2.2.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "W2.2 - Eine Tabelle mit Wiederbeschaffungswert und Wertverlust pro Strassenabschn" +
                    "itt erhalten", @"    Als Data-Reader,
	will ich eine Tabelle mit Wiederbeschaffungswert und Wertverlust pro Strassenabschnitt erhalten
	damit ich für Entscheidungsträger meiner Gemeinde eine Informationsbasis habe und einen Überblick zu meinem Wiederbeschaffungswert und jährlichen Wertverlust erhalte", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table1.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 7
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table1, "Gegeben sei ");
#line 10
testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Belag"});
            table2.AddRow(new string[] {
                        "1",
                        "AsphaltII",
                        "Bahnhof",
                        "Spital",
                        "II",
                        "19,56",
                        "1800",
                        "KeinTrottoir",
                        "0",
                        "0",
                        "Asphalt"});
            table2.AddRow(new string[] {
                        "2",
                        "AsphaltIV",
                        "",
                        "",
                        "IV",
                        "19",
                        "5000",
                        "Links",
                        "2,32",
                        "0",
                        "Asphalt"});
            table2.AddRow(new string[] {
                        "3",
                        "AsphaltIII",
                        "",
                        "",
                        "III",
                        "20",
                        "2500",
                        "Rechts",
                        "0",
                        "2,90",
                        "Asphalt"});
            table2.AddRow(new string[] {
                        "4",
                        "BetonII",
                        "",
                        "",
                        "II",
                        "18",
                        "1300",
                        "BeideSeiten",
                        "1,40",
                        "3",
                        "Beton"});
            table2.AddRow(new string[] {
                        "5",
                        "BetonIC",
                        "",
                        "",
                        "IC",
                        "8,45",
                        "800",
                        "NochNichtErfasst",
                        "-",
                        "-",
                        "Beton"});
            table2.AddRow(new string[] {
                        "6",
                        "BetonIB",
                        "",
                        "",
                        "IB",
                        "12,87",
                        "400",
                        "KeinTrottoir",
                        "0",
                        "0",
                        "Beton"});
#line 11
testRunner.And("für Mandant \'Mandant_1\' existieren folgende Netzinformationen:", ((string)(null)), table2, "Und ");
#line 19
testRunner.And("ich habe alle Rollen für \'<Mandant>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Reader kann ein Jahr auswählen, für das vom System die Auswertung generi" +
            "ert werden soll", new string[] {
                "Manuell"}, SourceLine=23)]
        public virtual void DerData_ReaderKannEinJahrAuswahlenFurDasVomSystemDieAuswertungGeneriertWerdenSoll()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Reader kann ein Jahr auswählen, für das vom System die Auswertung generi" +
                    "ert werden soll", new string[] {
                        "Manuell"});
#line 24
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Jahr"});
            table3.AddRow(new string[] {
                        "2008"});
            table3.AddRow(new string[] {
                        "2009"});
#line 25
testRunner.Given("es gibt Jahresabschlüsse für folgende Jahre:", ((string)(null)), table3, "Gegeben sei ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Jahr"});
            table4.AddRow(new string[] {
                        "Aktuelles Erfassungsjahr"});
            table4.AddRow(new string[] {
                        "2009"});
            table4.AddRow(new string[] {
                        "2008"});
#line 29
testRunner.Then("kann ich folgende Jahre für ausgefüllte Erfassungsformulare auswählen:", ((string)(null)), table4, "Dann ");
#line 34
testRunner.And("der Eintrag \'Aktuelles Erfassungsjahr\' ist vorausgewählt", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System generiert eine Vorschau der Auswertung am UI", new string[] {
                "Manuell"}, SourceLine=38)]
        public virtual void DasSystemGeneriertEineVorschauDerAuswertungAmUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System generiert eine Vorschau der Auswertung am UI", new string[] {
                        "Manuell"});
#line 39
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System liefert eine Tabelle mit Wiederbeschaffungswert und Wertverlust der St" +
            "rassenabschnitte des Mandanten", new string[] {
                "Manuell"}, SourceLine=44)]
        public virtual void DasSystemLiefertEineTabelleMitWiederbeschaffungswertUndWertverlustDerStrassenabschnitteDesMandanten()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System liefert eine Tabelle mit Wiederbeschaffungswert und Wertverlust der St" +
                    "rassenabschnitte des Mandanten", new string[] {
                        "Manuell"});
#line 45
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 46
testRunner.When("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Filter",
                        "Filter Wert"});
            table5.AddRow(new string[] {
                        "Erfassungsperiode",
                        "2010"});
#line 47
testRunner.And("ich die Tabelle mit Wiederbeschaffungswert und Wertverlust der Strassenabschnitte" +
                    " generiere", ((string)(null)), table5, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "FlächeFahrbahn",
                        "FlächeTrottoirLinks",
                        "FlächeTrottoirRechts",
                        "Trottoir"});
            table6.AddRow(new string[] {
                        "1",
                        "AsphaltII",
                        "Bahnhof",
                        "Spital",
                        "II",
                        "35208",
                        "0",
                        "0",
                        "KeinTrottoir"});
            table6.AddRow(new string[] {
                        "2",
                        "AsphaltIV",
                        "",
                        "",
                        "IV",
                        "95000",
                        "11600",
                        "-",
                        "Links"});
            table6.AddRow(new string[] {
                        "3",
                        "AsphaltIII",
                        "",
                        "",
                        "III",
                        "50000",
                        "-",
                        "7250",
                        "Rechts"});
            table6.AddRow(new string[] {
                        "4",
                        "BetonII",
                        "",
                        "",
                        "II",
                        "23400",
                        "1820",
                        "3900",
                        "BeideSeiten"});
            table6.AddRow(new string[] {
                        "5",
                        "BetonIC",
                        "",
                        "",
                        "IC",
                        "6760",
                        "-",
                        "-",
                        "NochNichtErfasst"});
            table6.AddRow(new string[] {
                        "6",
                        "BetonIB",
                        "",
                        "",
                        "IB",
                        "5148",
                        "0",
                        "0",
                        "KeinTrottoir"});
#line 50
testRunner.Then("zeigt die Liste folgende Daten:", ((string)(null)), table6, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Im System gibt es für jede Belastungskategorie einen durchschnittlichen Wiederbes" +
            "chaffungswert", new string[] {
                "Manuell"}, SourceLine=62)]
        public virtual void ImSystemGibtEsFurJedeBelastungskategorieEinenDurchschnittlichenWiederbeschaffungswert()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Im System gibt es für jede Belastungskategorie einen durchschnittlichen Wiederbes" +
                    "chaffungswert", new string[] {
                        "Manuell"});
#line 63
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 64
testRunner.Given("es wurden vom Benutzeradministrator keine mandantenspezifische Wiederbeschaffungs" +
                    "werte definiert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 65
testRunner.When("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Filter",
                        "Filter Wert"});
            table7.AddRow(new string[] {
                        "Erfassungsperiode",
                        "2010"});
#line 66
testRunner.And("ich die Tabelle mit Wiederbeschaffungswert und Wertverlust der Strassenabschnitte" +
                    " generiere", ((string)(null)), table7, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "DurchschnittlicherWiederbeschaffungswert"});
            table8.AddRow(new string[] {
                        "1",
                        "AsphaltII",
                        "FB: 310 TR: 125"});
            table8.AddRow(new string[] {
                        "2",
                        "AsphaltIV",
                        "FB: 300 TR: 115"});
            table8.AddRow(new string[] {
                        "3",
                        "AsphaltIII",
                        "FB: 340 TR: 125"});
            table8.AddRow(new string[] {
                        "4",
                        "BetonII",
                        "FB: 310 TR: 125"});
            table8.AddRow(new string[] {
                        "5",
                        "BetonIC",
                        "FB: 140"});
            table8.AddRow(new string[] {
                        "6",
                        "BetonIB",
                        "FB: 320 TR: 150"});
#line 69
testRunner.Then("zeigt die Liste folgende Daten:", ((string)(null)), table8, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Wurden vom Benutzeradministrator mandantenspezifische Wiederbeschaffungswerte def" +
            "iniert, werden diese für die Auswertungen herangezogen", new string[] {
                "Manuell"}, SourceLine=81)]
        public virtual void WurdenVomBenutzeradministratorMandantenspezifischeWiederbeschaffungswerteDefiniertWerdenDieseFurDieAuswertungenHerangezogen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Wurden vom Benutzeradministrator mandantenspezifische Wiederbeschaffungswerte def" +
                    "iniert, werden diese für die Auswertungen herangezogen", new string[] {
                        "Manuell"});
#line 82
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Belastungskategorie",
                        "WiederbeschaffungswertFlächeFahrbahn",
                        "WiederbeschaffungswertFlächeTrottoir",
                        "WiederbeschaffungswertGesamtflächeFahrbahn"});
            table9.AddRow(new string[] {
                        "IB",
                        "120",
                        "130",
                        "140"});
            table9.AddRow(new string[] {
                        "IC",
                        "130",
                        "140",
                        "150"});
            table9.AddRow(new string[] {
                        "II",
                        "200",
                        "210",
                        "220"});
            table9.AddRow(new string[] {
                        "III",
                        "300",
                        "310",
                        "320"});
            table9.AddRow(new string[] {
                        "IV",
                        "400",
                        "410",
                        "420"});
#line 83
testRunner.Given("es wurden vom Benutzeradministrator folgende mandantenspezifische Wiederbeschaffu" +
                    "ngswerte definiert:", ((string)(null)), table9, "Gegeben sei ");
#line 90
testRunner.When("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Filter",
                        "Filter Wert"});
            table10.AddRow(new string[] {
                        "Erfassungsperiode",
                        "2010"});
#line 91
testRunner.And("ich die Tabelle mit Wiederbeschaffungswert und Wertverlust der Strassenabschnitte" +
                    " generiere", ((string)(null)), table10, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "DurchschnittlicherWiederbeschaffungswert"});
            table11.AddRow(new string[] {
                        "1",
                        "AsphaltII",
                        "FB: 200 TR: 210"});
            table11.AddRow(new string[] {
                        "2",
                        "AsphaltIV",
                        "FB: 400 TR: 410"});
            table11.AddRow(new string[] {
                        "3",
                        "AsphaltIII",
                        "FB: 300 TR: 310"});
            table11.AddRow(new string[] {
                        "4",
                        "BetonII",
                        "FB: 200 TR: 210"});
            table11.AddRow(new string[] {
                        "5",
                        "BetonIC",
                        "FB: 150"});
            table11.AddRow(new string[] {
                        "6",
                        "BetonIB",
                        "FB: 120 TR: 130"});
#line 94
testRunner.Then("zeigt die Liste folgende Daten:", ((string)(null)), table11, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Im System gibt es für jede Belastungskategorie einen Alterungsbeiwert I", new string[] {
                "Manuell"}, SourceLine=105)]
        public virtual void ImSystemGibtEsFurJedeBelastungskategorieEinenAlterungsbeiwertI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Im System gibt es für jede Belastungskategorie einen Alterungsbeiwert I", new string[] {
                        "Manuell"});
#line 106
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 107
testRunner.Given("es wurden vom Benutzeradministrator keine mandantenspezifische Alterungsbeiwerte " +
                    "definiert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 108
testRunner.When("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Filter",
                        "Filter Wert"});
            table12.AddRow(new string[] {
                        "Erfassungsperiode",
                        "2010"});
#line 109
testRunner.And("ich die Tabelle mit Wiederbeschaffungswert und Wertverlust der Strassenabschnitte" +
                    " generiere", ((string)(null)), table12, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "AlterungsbeiwertI"});
            table13.AddRow(new string[] {
                        "1",
                        "AsphaltII",
                        "1,8"});
            table13.AddRow(new string[] {
                        "2",
                        "AsphaltIV",
                        "2,6"});
            table13.AddRow(new string[] {
                        "3",
                        "AsphaltIII",
                        "2,2"});
            table13.AddRow(new string[] {
                        "4",
                        "BetonII",
                        "1,8"});
            table13.AddRow(new string[] {
                        "5",
                        "BetonIC",
                        "1,4"});
            table13.AddRow(new string[] {
                        "6",
                        "BetonIB",
                        "1,6"});
#line 112
testRunner.Then("zeigt die Liste folgende Daten:", ((string)(null)), table13, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Im System gibt es für jede Belastungskategorie einen Alterungsbeiwert II", new string[] {
                "Manuell"}, SourceLine=124)]
        public virtual void ImSystemGibtEsFurJedeBelastungskategorieEinenAlterungsbeiwertII()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Im System gibt es für jede Belastungskategorie einen Alterungsbeiwert II", new string[] {
                        "Manuell"});
#line 125
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 126
testRunner.Given("es wurden vom Benutzeradministrator keine mandantenspezifische Alterungsbeiwerte " +
                    "definiert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 127
testRunner.When("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Filter",
                        "Filter Wert"});
            table14.AddRow(new string[] {
                        "Erfassungsperiode",
                        "2010"});
#line 128
testRunner.And("ich die Tabelle mit Wiederbeschaffungswert und Wertverlust der Strassenabschnitte" +
                    " generiere", ((string)(null)), table14, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "AlterungsbeiwertII"});
            table15.AddRow(new string[] {
                        "1",
                        "AsphaltII",
                        "1,4"});
            table15.AddRow(new string[] {
                        "2",
                        "AsphaltIV",
                        "2,1"});
            table15.AddRow(new string[] {
                        "3",
                        "AsphaltIII",
                        "1,9"});
            table15.AddRow(new string[] {
                        "4",
                        "BetonII",
                        "1,4"});
            table15.AddRow(new string[] {
                        "5",
                        "BetonIC",
                        "0,9"});
            table15.AddRow(new string[] {
                        "6",
                        "BetonIB",
                        "1,3"});
#line 131
testRunner.Then("zeigt die Liste folgende Daten:", ((string)(null)), table15, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System berechnet den Wiederbeschaffungswert für den Strassenabschnitt", new string[] {
                "Manuell"}, SourceLine=143)]
        public virtual void DasSystemBerechnetDenWiederbeschaffungswertFurDenStrassenabschnitt()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet den Wiederbeschaffungswert für den Strassenabschnitt", new string[] {
                        "Manuell"});
#line 144
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 145
testRunner.Given("es wurden vom Benutzeradministrator keine mandantenspezifische Wiederbeschaffungs" +
                    "werte definiert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 146
testRunner.And("es wurden vom Benutzeradministrator keine mandantenspezifische Alterungsbeiwerte " +
                    "definiert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 147
testRunner.When("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Filter",
                        "Filter Wert"});
            table16.AddRow(new string[] {
                        "Erfassungsperiode",
                        "2010"});
#line 148
testRunner.And("ich die Tabelle mit Wiederbeschaffungswert und Wertverlust der Strassenabschnitte" +
                    " generiere", ((string)(null)), table16, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "Wiederbeschaffungswert"});
            table17.AddRow(new string[] {
                        "1",
                        "AsphaltII",
                        "10914480"});
            table17.AddRow(new string[] {
                        "2",
                        "AsphaltIV",
                        "29834000"});
            table17.AddRow(new string[] {
                        "3",
                        "AsphaltIII",
                        "17906250"});
            table17.AddRow(new string[] {
                        "4",
                        "BetonII",
                        "7969000"});
            table17.AddRow(new string[] {
                        "5",
                        "BetonIC",
                        "946400"});
            table17.AddRow(new string[] {
                        "6",
                        "BetonIB",
                        "1647360"});
#line 151
testRunner.Then("zeigt die Liste folgende Daten:", ((string)(null)), table17, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System berechnet den Wertverlust für den definierten Mengentyp des Mandanten", new string[] {
                "Manuell"}, SourceLine=163)]
        public virtual void DasSystemBerechnetDenWertverlustFurDenDefiniertenMengentypDesMandanten()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet den Wertverlust für den definierten Mengentyp des Mandanten", new string[] {
                        "Manuell"});
#line 164
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 165
testRunner.Given("es wurden vom Benutzeradministrator keine mandantenspezifische Wiederbeschaffungs" +
                    "werte definiert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 166
testRunner.And("es wurden vom Benutzeradministrator keine mandantenspezifische Alterungsbeiwerte " +
                    "definiert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 167
testRunner.When("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Filter",
                        "Filter Wert"});
            table18.AddRow(new string[] {
                        "Erfassungsperiode",
                        "2010"});
#line 168
testRunner.And("ich die Tabelle mit Wiederbeschaffungswert und Wertverlust der Strassenabschnitte" +
                    " generiere", ((string)(null)), table18, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "WertverlustI",
                        "WertverlustII"});
            table19.AddRow(new string[] {
                        "1",
                        "AsphaltII",
                        "196460,64",
                        "207375,12"});
            table19.AddRow(new string[] {
                        "2",
                        "AsphaltIV",
                        "775684",
                        "626514"});
            table19.AddRow(new string[] {
                        "3",
                        "AsphaltIII",
                        "393937,5",
                        "340218,75"});
            table19.AddRow(new string[] {
                        "4",
                        "BetonII",
                        "143442",
                        "111566"});
            table19.AddRow(new string[] {
                        "5",
                        "BetonIC",
                        "13249,6",
                        "8517,6"});
            table19.AddRow(new string[] {
                        "6",
                        "BetonIB",
                        "26357,76",
                        "21415,68"});
#line 171
testRunner.Then("zeigt die Liste folgende Daten:", ((string)(null)), table19, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Reader kann die Tabelle filtern", new string[] {
                "Manuell"}, SourceLine=182)]
        public virtual void DerData_ReaderKannDieTabelleFiltern()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Reader kann die Tabelle filtern", new string[] {
                        "Manuell"});
#line 183
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Reader kann die Vorschau als Excel-File exportieren", new string[] {
                "Manuell"}, SourceLine=187)]
        public virtual void DerData_ReaderKannDieVorschauAlsExcel_FileExportieren()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Reader kann die Vorschau als Excel-File exportieren", new string[] {
                        "Manuell"});
#line 188
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("W2.2 - Eine Tabelle mit Wiederbeschaffungswert und Wertverlust pro Strassenabschn" +
        "itt erhalten")]
    public partial class W2_2_EineTabelleMitWiederbeschaffungswertUndWertverlustProStrassenabschnittErhaltenFeature_NUnit
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "W2.2.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "W2.2 - Eine Tabelle mit Wiederbeschaffungswert und Wertverlust pro Strassenabschn" +
                    "itt erhalten", @"    Als Data-Reader,
	will ich eine Tabelle mit Wiederbeschaffungswert und Wertverlust pro Strassenabschnitt erhalten
	damit ich für Entscheidungsträger meiner Gemeinde eine Informationsbasis habe und einen Überblick zu meinem Wiederbeschaffungswert und jährlichen Wertverlust erhalte", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table1.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 7
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table1, "Gegeben sei ");
#line 10
testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Belag"});
            table2.AddRow(new string[] {
                        "1",
                        "AsphaltII",
                        "Bahnhof",
                        "Spital",
                        "II",
                        "19,56",
                        "1800",
                        "KeinTrottoir",
                        "0",
                        "0",
                        "Asphalt"});
            table2.AddRow(new string[] {
                        "2",
                        "AsphaltIV",
                        "",
                        "",
                        "IV",
                        "19",
                        "5000",
                        "Links",
                        "2,32",
                        "0",
                        "Asphalt"});
            table2.AddRow(new string[] {
                        "3",
                        "AsphaltIII",
                        "",
                        "",
                        "III",
                        "20",
                        "2500",
                        "Rechts",
                        "0",
                        "2,90",
                        "Asphalt"});
            table2.AddRow(new string[] {
                        "4",
                        "BetonII",
                        "",
                        "",
                        "II",
                        "18",
                        "1300",
                        "BeideSeiten",
                        "1,40",
                        "3",
                        "Beton"});
            table2.AddRow(new string[] {
                        "5",
                        "BetonIC",
                        "",
                        "",
                        "IC",
                        "8,45",
                        "800",
                        "NochNichtErfasst",
                        "-",
                        "-",
                        "Beton"});
            table2.AddRow(new string[] {
                        "6",
                        "BetonIB",
                        "",
                        "",
                        "IB",
                        "12,87",
                        "400",
                        "KeinTrottoir",
                        "0",
                        "0",
                        "Beton"});
#line 11
testRunner.And("für Mandant \'Mandant_1\' existieren folgende Netzinformationen:", ((string)(null)), table2, "Und ");
#line 19
testRunner.And("ich habe alle Rollen für \'<Mandant>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Reader kann ein Jahr auswählen, für das vom System die Auswertung generi" +
            "ert werden soll")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ReaderKannEinJahrAuswahlenFurDasVomSystemDieAuswertungGeneriertWerdenSoll()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Reader kann ein Jahr auswählen, für das vom System die Auswertung generi" +
                    "ert werden soll", new string[] {
                        "Manuell"});
#line 24
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Jahr"});
            table3.AddRow(new string[] {
                        "2008"});
            table3.AddRow(new string[] {
                        "2009"});
#line 25
testRunner.Given("es gibt Jahresabschlüsse für folgende Jahre:", ((string)(null)), table3, "Gegeben sei ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Jahr"});
            table4.AddRow(new string[] {
                        "Aktuelles Erfassungsjahr"});
            table4.AddRow(new string[] {
                        "2009"});
            table4.AddRow(new string[] {
                        "2008"});
#line 29
testRunner.Then("kann ich folgende Jahre für ausgefüllte Erfassungsformulare auswählen:", ((string)(null)), table4, "Dann ");
#line 34
testRunner.And("der Eintrag \'Aktuelles Erfassungsjahr\' ist vorausgewählt", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System generiert eine Vorschau der Auswertung am UI")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemGeneriertEineVorschauDerAuswertungAmUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System generiert eine Vorschau der Auswertung am UI", new string[] {
                        "Manuell"});
#line 39
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System liefert eine Tabelle mit Wiederbeschaffungswert und Wertverlust der St" +
            "rassenabschnitte des Mandanten")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemLiefertEineTabelleMitWiederbeschaffungswertUndWertverlustDerStrassenabschnitteDesMandanten()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System liefert eine Tabelle mit Wiederbeschaffungswert und Wertverlust der St" +
                    "rassenabschnitte des Mandanten", new string[] {
                        "Manuell"});
#line 45
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 46
testRunner.When("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Filter",
                        "Filter Wert"});
            table5.AddRow(new string[] {
                        "Erfassungsperiode",
                        "2010"});
#line 47
testRunner.And("ich die Tabelle mit Wiederbeschaffungswert und Wertverlust der Strassenabschnitte" +
                    " generiere", ((string)(null)), table5, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "FlächeFahrbahn",
                        "FlächeTrottoirLinks",
                        "FlächeTrottoirRechts",
                        "Trottoir"});
            table6.AddRow(new string[] {
                        "1",
                        "AsphaltII",
                        "Bahnhof",
                        "Spital",
                        "II",
                        "35208",
                        "0",
                        "0",
                        "KeinTrottoir"});
            table6.AddRow(new string[] {
                        "2",
                        "AsphaltIV",
                        "",
                        "",
                        "IV",
                        "95000",
                        "11600",
                        "-",
                        "Links"});
            table6.AddRow(new string[] {
                        "3",
                        "AsphaltIII",
                        "",
                        "",
                        "III",
                        "50000",
                        "-",
                        "7250",
                        "Rechts"});
            table6.AddRow(new string[] {
                        "4",
                        "BetonII",
                        "",
                        "",
                        "II",
                        "23400",
                        "1820",
                        "3900",
                        "BeideSeiten"});
            table6.AddRow(new string[] {
                        "5",
                        "BetonIC",
                        "",
                        "",
                        "IC",
                        "6760",
                        "-",
                        "-",
                        "NochNichtErfasst"});
            table6.AddRow(new string[] {
                        "6",
                        "BetonIB",
                        "",
                        "",
                        "IB",
                        "5148",
                        "0",
                        "0",
                        "KeinTrottoir"});
#line 50
testRunner.Then("zeigt die Liste folgende Daten:", ((string)(null)), table6, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Im System gibt es für jede Belastungskategorie einen durchschnittlichen Wiederbes" +
            "chaffungswert")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void ImSystemGibtEsFurJedeBelastungskategorieEinenDurchschnittlichenWiederbeschaffungswert()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Im System gibt es für jede Belastungskategorie einen durchschnittlichen Wiederbes" +
                    "chaffungswert", new string[] {
                        "Manuell"});
#line 63
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 64
testRunner.Given("es wurden vom Benutzeradministrator keine mandantenspezifische Wiederbeschaffungs" +
                    "werte definiert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 65
testRunner.When("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Filter",
                        "Filter Wert"});
            table7.AddRow(new string[] {
                        "Erfassungsperiode",
                        "2010"});
#line 66
testRunner.And("ich die Tabelle mit Wiederbeschaffungswert und Wertverlust der Strassenabschnitte" +
                    " generiere", ((string)(null)), table7, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "DurchschnittlicherWiederbeschaffungswert"});
            table8.AddRow(new string[] {
                        "1",
                        "AsphaltII",
                        "FB: 310 TR: 125"});
            table8.AddRow(new string[] {
                        "2",
                        "AsphaltIV",
                        "FB: 300 TR: 115"});
            table8.AddRow(new string[] {
                        "3",
                        "AsphaltIII",
                        "FB: 340 TR: 125"});
            table8.AddRow(new string[] {
                        "4",
                        "BetonII",
                        "FB: 310 TR: 125"});
            table8.AddRow(new string[] {
                        "5",
                        "BetonIC",
                        "FB: 140"});
            table8.AddRow(new string[] {
                        "6",
                        "BetonIB",
                        "FB: 320 TR: 150"});
#line 69
testRunner.Then("zeigt die Liste folgende Daten:", ((string)(null)), table8, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Wurden vom Benutzeradministrator mandantenspezifische Wiederbeschaffungswerte def" +
            "iniert, werden diese für die Auswertungen herangezogen")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void WurdenVomBenutzeradministratorMandantenspezifischeWiederbeschaffungswerteDefiniertWerdenDieseFurDieAuswertungenHerangezogen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Wurden vom Benutzeradministrator mandantenspezifische Wiederbeschaffungswerte def" +
                    "iniert, werden diese für die Auswertungen herangezogen", new string[] {
                        "Manuell"});
#line 82
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Belastungskategorie",
                        "WiederbeschaffungswertFlächeFahrbahn",
                        "WiederbeschaffungswertFlächeTrottoir",
                        "WiederbeschaffungswertGesamtflächeFahrbahn"});
            table9.AddRow(new string[] {
                        "IB",
                        "120",
                        "130",
                        "140"});
            table9.AddRow(new string[] {
                        "IC",
                        "130",
                        "140",
                        "150"});
            table9.AddRow(new string[] {
                        "II",
                        "200",
                        "210",
                        "220"});
            table9.AddRow(new string[] {
                        "III",
                        "300",
                        "310",
                        "320"});
            table9.AddRow(new string[] {
                        "IV",
                        "400",
                        "410",
                        "420"});
#line 83
testRunner.Given("es wurden vom Benutzeradministrator folgende mandantenspezifische Wiederbeschaffu" +
                    "ngswerte definiert:", ((string)(null)), table9, "Gegeben sei ");
#line 90
testRunner.When("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Filter",
                        "Filter Wert"});
            table10.AddRow(new string[] {
                        "Erfassungsperiode",
                        "2010"});
#line 91
testRunner.And("ich die Tabelle mit Wiederbeschaffungswert und Wertverlust der Strassenabschnitte" +
                    " generiere", ((string)(null)), table10, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "DurchschnittlicherWiederbeschaffungswert"});
            table11.AddRow(new string[] {
                        "1",
                        "AsphaltII",
                        "FB: 200 TR: 210"});
            table11.AddRow(new string[] {
                        "2",
                        "AsphaltIV",
                        "FB: 400 TR: 410"});
            table11.AddRow(new string[] {
                        "3",
                        "AsphaltIII",
                        "FB: 300 TR: 310"});
            table11.AddRow(new string[] {
                        "4",
                        "BetonII",
                        "FB: 200 TR: 210"});
            table11.AddRow(new string[] {
                        "5",
                        "BetonIC",
                        "FB: 150"});
            table11.AddRow(new string[] {
                        "6",
                        "BetonIB",
                        "FB: 120 TR: 130"});
#line 94
testRunner.Then("zeigt die Liste folgende Daten:", ((string)(null)), table11, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Im System gibt es für jede Belastungskategorie einen Alterungsbeiwert I")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void ImSystemGibtEsFurJedeBelastungskategorieEinenAlterungsbeiwertI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Im System gibt es für jede Belastungskategorie einen Alterungsbeiwert I", new string[] {
                        "Manuell"});
#line 106
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 107
testRunner.Given("es wurden vom Benutzeradministrator keine mandantenspezifische Alterungsbeiwerte " +
                    "definiert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 108
testRunner.When("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Filter",
                        "Filter Wert"});
            table12.AddRow(new string[] {
                        "Erfassungsperiode",
                        "2010"});
#line 109
testRunner.And("ich die Tabelle mit Wiederbeschaffungswert und Wertverlust der Strassenabschnitte" +
                    " generiere", ((string)(null)), table12, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "AlterungsbeiwertI"});
            table13.AddRow(new string[] {
                        "1",
                        "AsphaltII",
                        "1,8"});
            table13.AddRow(new string[] {
                        "2",
                        "AsphaltIV",
                        "2,6"});
            table13.AddRow(new string[] {
                        "3",
                        "AsphaltIII",
                        "2,2"});
            table13.AddRow(new string[] {
                        "4",
                        "BetonII",
                        "1,8"});
            table13.AddRow(new string[] {
                        "5",
                        "BetonIC",
                        "1,4"});
            table13.AddRow(new string[] {
                        "6",
                        "BetonIB",
                        "1,6"});
#line 112
testRunner.Then("zeigt die Liste folgende Daten:", ((string)(null)), table13, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Im System gibt es für jede Belastungskategorie einen Alterungsbeiwert II")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void ImSystemGibtEsFurJedeBelastungskategorieEinenAlterungsbeiwertII()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Im System gibt es für jede Belastungskategorie einen Alterungsbeiwert II", new string[] {
                        "Manuell"});
#line 125
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 126
testRunner.Given("es wurden vom Benutzeradministrator keine mandantenspezifische Alterungsbeiwerte " +
                    "definiert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 127
testRunner.When("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Filter",
                        "Filter Wert"});
            table14.AddRow(new string[] {
                        "Erfassungsperiode",
                        "2010"});
#line 128
testRunner.And("ich die Tabelle mit Wiederbeschaffungswert und Wertverlust der Strassenabschnitte" +
                    " generiere", ((string)(null)), table14, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "AlterungsbeiwertII"});
            table15.AddRow(new string[] {
                        "1",
                        "AsphaltII",
                        "1,4"});
            table15.AddRow(new string[] {
                        "2",
                        "AsphaltIV",
                        "2,1"});
            table15.AddRow(new string[] {
                        "3",
                        "AsphaltIII",
                        "1,9"});
            table15.AddRow(new string[] {
                        "4",
                        "BetonII",
                        "1,4"});
            table15.AddRow(new string[] {
                        "5",
                        "BetonIC",
                        "0,9"});
            table15.AddRow(new string[] {
                        "6",
                        "BetonIB",
                        "1,3"});
#line 131
testRunner.Then("zeigt die Liste folgende Daten:", ((string)(null)), table15, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System berechnet den Wiederbeschaffungswert für den Strassenabschnitt")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemBerechnetDenWiederbeschaffungswertFurDenStrassenabschnitt()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet den Wiederbeschaffungswert für den Strassenabschnitt", new string[] {
                        "Manuell"});
#line 144
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 145
testRunner.Given("es wurden vom Benutzeradministrator keine mandantenspezifische Wiederbeschaffungs" +
                    "werte definiert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 146
testRunner.And("es wurden vom Benutzeradministrator keine mandantenspezifische Alterungsbeiwerte " +
                    "definiert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 147
testRunner.When("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Filter",
                        "Filter Wert"});
            table16.AddRow(new string[] {
                        "Erfassungsperiode",
                        "2010"});
#line 148
testRunner.And("ich die Tabelle mit Wiederbeschaffungswert und Wertverlust der Strassenabschnitte" +
                    " generiere", ((string)(null)), table16, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "Wiederbeschaffungswert"});
            table17.AddRow(new string[] {
                        "1",
                        "AsphaltII",
                        "10914480"});
            table17.AddRow(new string[] {
                        "2",
                        "AsphaltIV",
                        "29834000"});
            table17.AddRow(new string[] {
                        "3",
                        "AsphaltIII",
                        "17906250"});
            table17.AddRow(new string[] {
                        "4",
                        "BetonII",
                        "7969000"});
            table17.AddRow(new string[] {
                        "5",
                        "BetonIC",
                        "946400"});
            table17.AddRow(new string[] {
                        "6",
                        "BetonIB",
                        "1647360"});
#line 151
testRunner.Then("zeigt die Liste folgende Daten:", ((string)(null)), table17, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System berechnet den Wertverlust für den definierten Mengentyp des Mandanten")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemBerechnetDenWertverlustFurDenDefiniertenMengentypDesMandanten()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet den Wertverlust für den definierten Mengentyp des Mandanten", new string[] {
                        "Manuell"});
#line 164
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 165
testRunner.Given("es wurden vom Benutzeradministrator keine mandantenspezifische Wiederbeschaffungs" +
                    "werte definiert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 166
testRunner.And("es wurden vom Benutzeradministrator keine mandantenspezifische Alterungsbeiwerte " +
                    "definiert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 167
testRunner.When("ich einen Jahresabschluss für das Jahr \'2010\' durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Filter",
                        "Filter Wert"});
            table18.AddRow(new string[] {
                        "Erfassungsperiode",
                        "2010"});
#line 168
testRunner.And("ich die Tabelle mit Wiederbeschaffungswert und Wertverlust der Strassenabschnitte" +
                    " generiere", ((string)(null)), table18, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "WertverlustI",
                        "WertverlustII"});
            table19.AddRow(new string[] {
                        "1",
                        "AsphaltII",
                        "196460,64",
                        "207375,12"});
            table19.AddRow(new string[] {
                        "2",
                        "AsphaltIV",
                        "775684",
                        "626514"});
            table19.AddRow(new string[] {
                        "3",
                        "AsphaltIII",
                        "393937,5",
                        "340218,75"});
            table19.AddRow(new string[] {
                        "4",
                        "BetonII",
                        "143442",
                        "111566"});
            table19.AddRow(new string[] {
                        "5",
                        "BetonIC",
                        "13249,6",
                        "8517,6"});
            table19.AddRow(new string[] {
                        "6",
                        "BetonIB",
                        "26357,76",
                        "21415,68"});
#line 171
testRunner.Then("zeigt die Liste folgende Daten:", ((string)(null)), table19, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Reader kann die Tabelle filtern")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ReaderKannDieTabelleFiltern()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Reader kann die Tabelle filtern", new string[] {
                        "Manuell"});
#line 183
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Reader kann die Vorschau als Excel-File exportieren")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ReaderKannDieVorschauAlsExcel_FileExportieren()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Reader kann die Vorschau als Excel-File exportieren", new string[] {
                        "Manuell"});
#line 188
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
