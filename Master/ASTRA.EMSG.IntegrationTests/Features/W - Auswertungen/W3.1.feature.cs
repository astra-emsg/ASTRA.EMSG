// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ASTRA.EMSG.IntegrationTests.Features.W_Auswertungen
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("W3.1 - Eine leere Vorlage des Erfassungsformulars für Oberflächenschäden erhalten" +
        "", Description="    Als Data-Reader,\r\n\twill ich eine Leere Vorlage des Erfassungsformulars für Ob" +
        "erflächenschäden erhalten\r\n\tdamit ich die Zustandsaufnahme am Papier durchführen" +
        " kann", SourceFile="Features\\W - Auswertungen\\W3.1.feature", SourceLine=0)]
    public partial class W3_1_EineLeereVorlageDesErfassungsformularsFurOberflachenschadenErhaltenFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "W3.1.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "W3.1 - Eine leere Vorlage des Erfassungsformulars für Oberflächenschäden erhalten" +
                    "", "    Als Data-Reader,\r\n\twill ich eine Leere Vorlage des Erfassungsformulars für Ob" +
                    "erflächenschäden erhalten\r\n\tdamit ich die Zustandsaufnahme am Papier durchführen" +
                    " kann", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table1.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 7
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table1, "Gegeben sei ");
#line 10
testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann wählen, ob er eine leere Vorlage des Erfassungsformulars fü" +
            "r Oberflächenschäden für bitumenhaltigen Belag (Asphalt) oder für Betonbelag erh" +
            "alten möchte", new string[] {
                "Manuell"}, SourceLine=14)]
        public virtual void DerData_ManagerKannWahlenObErEineLeereVorlageDesErfassungsformularsFurOberflachenschadenFurBitumenhaltigenBelagAsphaltOderFurBetonbelagErhaltenMochte()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann wählen, ob er eine leere Vorlage des Erfassungsformulars fü" +
                    "r Oberflächenschäden für bitumenhaltigen Belag (Asphalt) oder für Betonbelag erh" +
                    "alten möchte", new string[] {
                        "Manuell"});
#line 15
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System liefert ein detailliertes Erfassungsformular für Oberflächenschäden en" +
            "tsprechend der Auswahl des Data-Managers", new string[] {
                "Manuell"}, SourceLine=19)]
        public virtual void DasSystemLiefertEinDetailliertesErfassungsformularFurOberflachenschadenEntsprechendDerAuswahlDesData_Managers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System liefert ein detailliertes Erfassungsformular für Oberflächenschäden en" +
                    "tsprechend der Auswahl des Data-Managers", new string[] {
                        "Manuell"});
#line 20
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das Erfassungsformular für bitumenhaltigen Belag umfasst die in Z2.1 definierten " +
            "Felder für Oberflächenschäden", new string[] {
                "Manuell"}, SourceLine=25)]
        public virtual void DasErfassungsformularFurBitumenhaltigenBelagUmfasstDieInZ2_1DefiniertenFelderFurOberflachenschaden()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das Erfassungsformular für bitumenhaltigen Belag umfasst die in Z2.1 definierten " +
                    "Felder für Oberflächenschäden", new string[] {
                        "Manuell"});
#line 26
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 27
testRunner.When("ich das leere Erfassungsformular für Asphalt (als XLS) herunterlade", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 28
testRunner.Then("ist das Ergebnis das gleiche wie in der Referenz Auswertung \'W3.1_Asphalt\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das Erfassungsformular für Betonbelag umfasst die in Z2.1 definierten Felder für " +
            "Oberflächenschäden", new string[] {
                "Manuell"}, SourceLine=33)]
        public virtual void DasErfassungsformularFurBetonbelagUmfasstDieInZ2_1DefiniertenFelderFurOberflachenschaden()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das Erfassungsformular für Betonbelag umfasst die in Z2.1 definierten Felder für " +
                    "Oberflächenschäden", new string[] {
                        "Manuell"});
#line 34
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 35
testRunner.When("ich das leere Erfassungsformular für Asphalt (als XLS) herunterlade", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 36
testRunner.Then("ist das Ergebnis das gleiche wie in der Referenz Auswertung \'W3.1_Beton\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Aufbau des Erfassungsformulars entspricht Pflichtenheft, Abbildung 17", new string[] {
                "Manuell"}, SourceLine=40)]
        public virtual void DerAufbauDesErfassungsformularsEntsprichtPflichtenheftAbbildung17()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Aufbau des Erfassungsformulars entspricht Pflichtenheft, Abbildung 17", new string[] {
                        "Manuell"});
#line 41
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Reader kann das leere Erfassungsformular als Excel exportieren", new string[] {
                "Manuell"}, SourceLine=45)]
        public virtual void DerData_ReaderKannDasLeereErfassungsformularAlsExcelExportieren()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Reader kann das leere Erfassungsformular als Excel exportieren", new string[] {
                        "Manuell"});
#line 46
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("W3.1 - Eine leere Vorlage des Erfassungsformulars für Oberflächenschäden erhalten" +
        "")]
    public partial class W3_1_EineLeereVorlageDesErfassungsformularsFurOberflachenschadenErhaltenFeature_NUnit
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "W3.1.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "W3.1 - Eine leere Vorlage des Erfassungsformulars für Oberflächenschäden erhalten" +
                    "", "    Als Data-Reader,\r\n\twill ich eine Leere Vorlage des Erfassungsformulars für Ob" +
                    "erflächenschäden erhalten\r\n\tdamit ich die Zustandsaufnahme am Papier durchführen" +
                    " kann", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table1.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 7
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table1, "Gegeben sei ");
#line 10
testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann wählen, ob er eine leere Vorlage des Erfassungsformulars fü" +
            "r Oberflächenschäden für bitumenhaltigen Belag (Asphalt) oder für Betonbelag erh" +
            "alten möchte")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannWahlenObErEineLeereVorlageDesErfassungsformularsFurOberflachenschadenFurBitumenhaltigenBelagAsphaltOderFurBetonbelagErhaltenMochte()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann wählen, ob er eine leere Vorlage des Erfassungsformulars fü" +
                    "r Oberflächenschäden für bitumenhaltigen Belag (Asphalt) oder für Betonbelag erh" +
                    "alten möchte", new string[] {
                        "Manuell"});
#line 15
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System liefert ein detailliertes Erfassungsformular für Oberflächenschäden en" +
            "tsprechend der Auswahl des Data-Managers")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemLiefertEinDetailliertesErfassungsformularFurOberflachenschadenEntsprechendDerAuswahlDesData_Managers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System liefert ein detailliertes Erfassungsformular für Oberflächenschäden en" +
                    "tsprechend der Auswahl des Data-Managers", new string[] {
                        "Manuell"});
#line 20
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das Erfassungsformular für bitumenhaltigen Belag umfasst die in Z2.1 definierten " +
            "Felder für Oberflächenschäden")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasErfassungsformularFurBitumenhaltigenBelagUmfasstDieInZ2_1DefiniertenFelderFurOberflachenschaden()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das Erfassungsformular für bitumenhaltigen Belag umfasst die in Z2.1 definierten " +
                    "Felder für Oberflächenschäden", new string[] {
                        "Manuell"});
#line 26
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 27
testRunner.When("ich das leere Erfassungsformular für Asphalt (als XLS) herunterlade", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 28
testRunner.Then("ist das Ergebnis das gleiche wie in der Referenz Auswertung \'W3.1_Asphalt\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das Erfassungsformular für Betonbelag umfasst die in Z2.1 definierten Felder für " +
            "Oberflächenschäden")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasErfassungsformularFurBetonbelagUmfasstDieInZ2_1DefiniertenFelderFurOberflachenschaden()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das Erfassungsformular für Betonbelag umfasst die in Z2.1 definierten Felder für " +
                    "Oberflächenschäden", new string[] {
                        "Manuell"});
#line 34
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 35
testRunner.When("ich das leere Erfassungsformular für Asphalt (als XLS) herunterlade", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 36
testRunner.Then("ist das Ergebnis das gleiche wie in der Referenz Auswertung \'W3.1_Beton\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Aufbau des Erfassungsformulars entspricht Pflichtenheft, Abbildung 17")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerAufbauDesErfassungsformularsEntsprichtPflichtenheftAbbildung17()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Aufbau des Erfassungsformulars entspricht Pflichtenheft, Abbildung 17", new string[] {
                        "Manuell"});
#line 41
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Reader kann das leere Erfassungsformular als Excel exportieren")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ReaderKannDasLeereErfassungsformularAlsExcelExportieren()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Reader kann das leere Erfassungsformular als Excel exportieren", new string[] {
                        "Manuell"});
#line 46
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
