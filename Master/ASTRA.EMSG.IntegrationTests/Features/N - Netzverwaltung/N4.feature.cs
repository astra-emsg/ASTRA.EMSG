// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ASTRA.EMSG.IntegrationTests.Features.N_Netzverwaltung
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("N4 - Strassenabschnitte im GIS-Modus verwalten", Description="\tAls Data-Manager\r\n\twill ich Strassenabschnitte im GIS-Modus verwalten\r\n\tdamit ic" +
        "h einen Überblick über mein Strassennetz bekomme und ich die erfassten Informati" +
        "onen als Grundlage für die Zustandserfassung verwenden kann", SourceFile="Features\\N - Netzverwaltung\\N4.feature", SourceLine=0)]
    public partial class N4_StrassenabschnitteImGIS_ModusVerwaltenFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "N4.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "N4 - Strassenabschnitte im GIS-Modus verwalten", "\tAls Data-Manager\r\n\twill ich Strassenabschnitte im GIS-Modus verwalten\r\n\tdamit ic" +
                    "h einen Überblick über mein Strassennetz bekomme und ich die erfassten Informati" +
                    "onen als Grundlage für die Zustandserfassung verwenden kann", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table1.AddRow(new string[] {
                        "Mandant_1",
                        "gis"});
#line 7
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table1, "Gegeben sei ");
#line 11
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann einen Strassenabschnitt auf der Karte digitalisieren", new string[] {
                "Manuell"}, SourceLine=14)]
        public virtual void DerData_ManagerKannEinenStrassenabschnittAufDerKarteDigitalisieren()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann einen Strassenabschnitt auf der Karte digitalisieren", new string[] {
                        "Manuell"});
#line 15
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Anfangs- und Endpunkt auf der Karte festlegen", new string[] {
                "Manuell"}, SourceLine=19)]
        public virtual void DerData_ManagerKannAnfangs_UndEndpunktAufDerKarteFestlegen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann Anfangs- und Endpunkt auf der Karte festlegen", new string[] {
                        "Manuell"});
#line 20
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 21
testRunner.Given("ich öffne die Seite \'Netzverwaltung\\Netzdefinition\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 22
 testRunner.And("ich wähle einen beliebigen Strassenabschnitt aus", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 23
 testRunner.And("ich aktiviere das Tool \'Strassenabschnitt Geometrie bearbeiten\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 24
 testRunner.When("ich einen Anfangs oder Endpunkt entlang dem darunter liegenden Achssegment bewege" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 25
 testRunner.Then("wird der Strassenabschnitt entsprechend verlängert oder verkürzt", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Strassenabschnitte dürfen sich nicht überlappen", new string[] {
                "Manuell"}, SourceLine=28)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void StrassenabschnitteDurfenSichNichtUberlappen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Strassenabschnitte dürfen sich nicht überlappen", new string[] {
                        "Manuell",
                        "ignore"});
#line 29
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann pro Achssegment Anfangs- und Endpunkt eines Strassenabschni" +
            "tts auf der Karte festlegen", new string[] {
                "Manuell"}, SourceLine=33)]
        public virtual void DerData_ManagerKannProAchssegmentAnfangs_UndEndpunktEinesStrassenabschnittsAufDerKarteFestlegen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann pro Achssegment Anfangs- und Endpunkt eines Strassenabschni" +
                    "tts auf der Karte festlegen", new string[] {
                        "Manuell"});
#line 34
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen(
                    string tF, 
                    string strassenname, 
                    string laengenkorrekturAnfang, 
                    string laengenkorrekturEnde, 
                    string belastungskategorie, 
                    string belag, 
                    string breiteFahrbahn, 
                    string trottoir, 
                    string breiteTrottoirLinks, 
                    string breiteTrottoirRechts, 
                    string strasseneigentumer, 
                    string ortsbezeichnung, 
                    string validationsfehler, 
                    string feldbezeichnung, 
                    string kommentar, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Manuell"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen", @__tags);
#line 39
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 41
testRunner.Given("ich öffne die Seite \'Netzdefinition\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "LaengenkorrekturAnfang",
                        "LaengenkorrekturEnde",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung"});
            table2.AddRow(new string[] {
                        string.Format("{0}", strassenname),
                        string.Format("{0}", laengenkorrekturAnfang),
                        string.Format("{0}", laengenkorrekturEnde),
                        string.Format("{0}", belastungskategorie),
                        string.Format("{0}", belag),
                        string.Format("{0}", breiteFahrbahn),
                        string.Format("{0}", trottoir),
                        string.Format("{0}", breiteTrottoirLinks),
                        string.Format("{0}", breiteTrottoirRechts),
                        string.Format("{0}", strasseneigentumer),
                        string.Format("{0}", ortsbezeichnung)});
#line 43
 testRunner.When("ich folgende GIS-Netzinformationen eingebe:", ((string)(null)), table2, "Wenn ");
#line 47
 testRunner.Then(string.Format("liefert Feldbezeichnung \'{0}\' einen Validationsfehler \'{1}\'", feldbezeichnung, validationsfehler), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "LaengenkorrekturAnfang",
                        "LaengenkorrekturEnde",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung"});
            table3.AddRow(new string[] {
                        string.Format("{0}", strassenname),
                        string.Format("{0}", laengenkorrekturAnfang),
                        string.Format("{0}", laengenkorrekturEnde),
                        string.Format("{0}", belastungskategorie),
                        string.Format("{0}", belag),
                        string.Format("{0}", breiteFahrbahn),
                        string.Format("{0}", trottoir),
                        string.Format("{0}", breiteTrottoirLinks),
                        string.Format("{0}", breiteTrottoirRechts),
                        string.Format("{0}", strasseneigentumer),
                        string.Format("{0}", ortsbezeichnung)});
#line 49
 testRunner.Then("sind folgende GIS-Netzinformationen im System:", ((string)(null)), table3, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen, 1", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen_1()
        {
            this.DerData_ManagerKannAttributeZuStrassenabschnittenErfassen("1", "Bahnstrasse", "-", "-", "IC", "Beton", "5,75", "KeinTrottoir", "-", "-", "Private", "Mitterndorf", "Nein", "-", "Gutfall", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen, 2", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen_2()
        {
            this.DerData_ManagerKannAttributeZuStrassenabschnittenErfassen("2", "Moosgasse", "0", "2", "IB", "Asphalt", "5,50", "BeideSeiten", "1,5", "2", "Gemeinde", "Ortsteil Mossbrunn", "Nein", "-", "Gutfall", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen, 3", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen_3()
        {
            this.DerData_ManagerKannAttributeZuStrassenabschnittenErfassen("3", "Hauptstrasse", "2,25", "1,5", "II", "Beton", "7", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "Nein", "-", "Gutfall", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen, 4", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen_4()
        {
            this.DerData_ManagerKannAttributeZuStrassenabschnittenErfassen("4", "Hauptstrasse", "2", "-", "II", "Beton", "7", "Links", "2,1", "-", "Gemeinde", "Ortsteil Gramatneusiedl", "Nein", "-", "Gutfall", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen, 5", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen_5()
        {
            this.DerData_ManagerKannAttributeZuStrassenabschnittenErfassen("5", "-", "2,25", "2", "IB", "Asphalt", "5,50", "BeideSeiten", "1,5", "2", "Gemeinde", "Ortsteil Mossbrunn", "Ja", "Strassenname", "Strassenname ist Pflichtfeld", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen, 6", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen_6()
        {
            this.DerData_ManagerKannAttributeZuStrassenabschnittenErfassen("6", "Hauptstrasse", "2,257", "2", "II", "Beton", "7", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "Nein", "LaengenkorrekturAnfang", "LängenkorrekturAnfang wird auf 2 Nachkommastellen gerundet", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen, 7", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen_7()
        {
            this.DerData_ManagerKannAttributeZuStrassenabschnittenErfassen("7", "Hauptstrasse", "2,25", "1,125", "II", "Beton", "7", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "Nein", "LaengenkorrekturEnde", "LängenkorrekturEnde wird auf 2 Nachkommastellen gerundet", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen, 8", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen_8()
        {
            this.DerData_ManagerKannAttributeZuStrassenabschnittenErfassen("8", "Hauptstrasse", "2,25", "2", "II", "Beton", "7,525", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "Nein", "BreiteFahrbahn", "BreiteFahrbahn wird auf 2 Nachkommastellen gerundet", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen, 9", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen_9()
        {
            this.DerData_ManagerKannAttributeZuStrassenabschnittenErfassen("9", "Hauptstrasse", "-2", "2", "II", "Beton", "7", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "LaengenkorrekturAnfang", "Ungültige LängenkorrekturAnfang < 0", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen, 10", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen_10()
        {
            this.DerData_ManagerKannAttributeZuStrassenabschnittenErfassen("10", "Hauptstrasse", "2,25", "-0,25", "II", "Beton", "7", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "LängekorrekturEnde", "Ungültige LängenkorrekturEnde < 0", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen, 11", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen_11()
        {
            this.DerData_ManagerKannAttributeZuStrassenabschnittenErfassen("11", "Hauptstrasse", "2,25", "2", "II", "Beton", "-1", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "BreiteFahrbahn", "Ungültige BreiteFahrbahn < 0", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen, 12", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen_12()
        {
            this.DerData_ManagerKannAttributeZuStrassenabschnittenErfassen("12", "Hauptstrasse", "2,25", "2", "II", "Beton", "-0,1", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "BreiteFahrbahn", "Ungültige BreiteFahrbahn < 0", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen, 13", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen_13()
        {
            this.DerData_ManagerKannAttributeZuStrassenabschnittenErfassen("13", "Hauptstrasse", "2,25", "2", "II", "Beton", "0", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "BreiteFahrbahn", "Ungültige BreiteFahrbahn darf nicht 0 sein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen, 14", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen_14()
        {
            this.DerData_ManagerKannAttributeZuStrassenabschnittenErfassen("14", "Hauptstrasse", "2,25", "2", "II", "Beton", "7", "Rechts", "-", "-2", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "BreiteTrottoirRechts", "Ungültige BreiteTrottoirRechts < 0", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen, 15", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen_15()
        {
            this.DerData_ManagerKannAttributeZuStrassenabschnittenErfassen("15", "Hauptstrasse", "2,25", "2", "II", "Beton", "7", "Links", "-2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "BreiteTrottoirLinks", "Ungültige BreiteTrottoirLinks < 0", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen, 16", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen_16()
        {
            this.DerData_ManagerKannAttributeZuStrassenabschnittenErfassen("16", "Moosgasse", "2,25", "2", "-", "Asphalt", "5,50", "BeideSeiten", "1,5", "2", "Gemeinde", "Ortsteil Mossbrunn", "Ja", "Belastungskategorie", "Belastungskategorie ist Pflichtfeld", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen, 17", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen_17()
        {
            this.DerData_ManagerKannAttributeZuStrassenabschnittenErfassen("17", "Moosgasse", "2,25", "2", "IB", "-", "5,50", "BeideSeiten", "1,5", "2", "Gemeinde", "Ortsteil Mossbrunn", "Ja", "Belagsart", "Belagsart ist Pflichtfeld", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen, 18", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen_18()
        {
            this.DerData_ManagerKannAttributeZuStrassenabschnittenErfassen("18", "Moosgasse", "2,25", "2", "IB", "Asphalt", "5,50", "BeideSeiten", "1,5", "2", "Gemeinde", "Ortsteil Mossbrunn", "Ja", "BreiteFahrbahn", "BreiteFahrbahn ist Pflichtfeld", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen, 19", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen_19()
        {
            this.DerData_ManagerKannAttributeZuStrassenabschnittenErfassen("19", "Moosgasse", "adc", "2", "IB", "Asphalt", "5,50", "BeideSeiten", "1,5", "2", "-", "Ortsteil Mossbrunn", "Ja", "Strasseneigentümer", "Strasseneigentümer ist Pflichtfeld", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen, 20", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen_20()
        {
            this.DerData_ManagerKannAttributeZuStrassenabschnittenErfassen("20", "Hauptstrasse", "15da", "2", "II", "Beton", "7", "Links", "2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "LaengenkorrekturAnfang", "Ungültige LängenkorrekturAnfang string", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen, 21", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen_21()
        {
            this.DerData_ManagerKannAttributeZuStrassenabschnittenErfassen("21", "Hauptstrasse", "3,§", "2", "II", "Beton", "7", "Links", "2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "LaengenkorrekturAnfang", "Ungültige LängenkorrekturAnfang string", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen, 22", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen_22()
        {
            this.DerData_ManagerKannAttributeZuStrassenabschnittenErfassen("22", "Hauptstrasse", "2,25", "pav", "II", "Beton", "7", "Links", "2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "LaengenkorrekturAnfang", "Ungültige LängenkorrekturAnfang string", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen, 23", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen_23()
        {
            this.DerData_ManagerKannAttributeZuStrassenabschnittenErfassen("23", "Hauptstrasse", "2,25", "fa34", "II", "Beton", "7", "Links", "2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "LaengenkorrekturEnde", "Ungültige LängenkorrekturEnde string", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen, 24", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen_24()
        {
            this.DerData_ManagerKannAttributeZuStrassenabschnittenErfassen("24", "Hauptstrasse", "2,25", "!§;\"", "II", "Beton", "7", "Links", "2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "LaengenkorrekturEnde", "Ungültige LängenkorrekturEnde string", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen, 25", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen_25()
        {
            this.DerData_ManagerKannAttributeZuStrassenabschnittenErfassen("25", "Hauptstrasse", "2,25", "2", "II", "Beton", "7", "Links", "2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "LaengenkorrekturEnde", "Ungültige LängenkorrekturEnde string", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen, 26", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen_26()
        {
            this.DerData_ManagerKannAttributeZuStrassenabschnittenErfassen("26", "Hauptstrasse", "2,25", "2", "II", "Beton", "ab", "Links", "2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "BreiteFahrbahn", "Ungültige BreiteFahrbahn string", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen, 27", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen_27()
        {
            this.DerData_ManagerKannAttributeZuStrassenabschnittenErfassen("27", "Hauptstrasse", "2,25", "2", "II", "Beton", "1s", "Links", "2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "BreiteFahrbahn", "Ungültige BreiteFahrbahn string", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen, 28", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen_28()
        {
            this.DerData_ManagerKannAttributeZuStrassenabschnittenErfassen("28", "Hauptstrasse", "2,25", "2", "II", "Beton", "?`F", "Links", "2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "BreiteFahrbahn", "Ungültige BreiteFahrbahn string", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen, 29", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen_29()
        {
            this.DerData_ManagerKannAttributeZuStrassenabschnittenErfassen("29", "Hauptstrasse", "2,25", "2", "II", "Beton", "7", "Links", "asb", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "BreiteTrottoirLinks", "Ungültige BreiteTrottoirLinks string", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen, 30", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen_30()
        {
            this.DerData_ManagerKannAttributeZuStrassenabschnittenErfassen("30", "Hauptstrasse", "2,25", "2", "II", "Beton", "7", "Links", "2da", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "BreiteTrottoirLinks", "Ungültige BreiteTrottoirLinks string", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen, 31", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen_31()
        {
            this.DerData_ManagerKannAttributeZuStrassenabschnittenErfassen("31", "Hauptstrasse", "2,25", "2", "II", "Beton", "7", "Links", "\"&1", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "BreiteTrottoirLinks", "Ungültige BreiteTrottoirLinks string", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen, 32", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen_32()
        {
            this.DerData_ManagerKannAttributeZuStrassenabschnittenErfassen("32", "Hauptstrasse", "2,25", "2", "II", "Beton", "7", "Rechts", "-", "asb", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "BreiteTrottoirRechts", "Ungültige BreiteTrottoirRechts string", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen, 33", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen_33()
        {
            this.DerData_ManagerKannAttributeZuStrassenabschnittenErfassen("33", "Hauptstrasse", "2,25", "2", "II", "Beton", "7", "Rechts", "-", "2da", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "BreiteTrottoirRechts", "Ungültige BreiteTrottoirRechts string", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen, 34", new string[] {
                "Manuell"}, SourceLine=54)]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen_34()
        {
            this.DerData_ManagerKannAttributeZuStrassenabschnittenErfassen("34", "Hauptstrasse", "2,25", "2", "II", "Beton", "7", "Rechts", "-", "\"&1", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "BreiteTrottoirRechts", "Ungültige BreiteTrottoirRechts string", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann einen Strassenabschnitt durch Auswahl auf der Karte löschen" +
            "", new string[] {
                "Manuell"}, SourceLine=92)]
        public virtual void DerData_ManagerKannEinenStrassenabschnittDurchAuswahlAufDerKarteLoschen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann einen Strassenabschnitt durch Auswahl auf der Karte löschen" +
                    "", new string[] {
                        "Manuell"});
#line 93
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Abschnittsnummer"});
            table4.AddRow(new string[] {
                        "1",
                        "Bahnstrasse",
                        "Nr 11.",
                        "Nr. 22",
                        "IC",
                        "Beton",
                        "5,75",
                        "150",
                        "KeinTrottoir",
                        "-",
                        "-",
                        "Gemeinde",
                        "Mitterndorf",
                        "1"});
            table4.AddRow(new string[] {
                        "2",
                        "Moosgasse",
                        "-",
                        "-",
                        "IB",
                        "Asphalt",
                        "5,50",
                        "200,2",
                        "BeideSeiten",
                        "1,5",
                        "2",
                        "Gemeinde",
                        "Ortsteil Mossbrunn",
                        "1"});
#line 94
 testRunner.Given("für Mandant \'Mandant_1\' existieren folgende Netzinformationen:", ((string)(null)), table4, "Gegeben sei ");
#line 100
 testRunner.And("ich öffne die Seite \'Netzdefinition und Hauptabschnitt mit Strassennamen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 102
 testRunner.When("ich den Strassenabschnitt (ID 2) durch Auswahl in der Karte selektiere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 103
 testRunner.And("ich die Netzinformationen für diesen Strassenabschnitt lösche", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Abschnittsnummer"});
            table5.AddRow(new string[] {
                        "1",
                        "Bahnstrasse",
                        "Nr 11.",
                        "Nr. 22",
                        "IC",
                        "Beton",
                        "5,75",
                        "150",
                        "KeinTrottoir",
                        "-",
                        "-",
                        "Gemeinde",
                        "Mitterndorf",
                        "1"});
#line 105
 testRunner.Then("sind folgende Netzinformationen im System:", ((string)(null)), table5, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System stellt sicher, dass Strassenabschnitte lückenlos aufeinander folgen", new string[] {
                "Manuell"}, SourceLine=111)]
        public virtual void DasSystemStelltSicherDassStrassenabschnitteLuckenlosAufeinanderFolgen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System stellt sicher, dass Strassenabschnitte lückenlos aufeinander folgen", new string[] {
                        "Manuell"});
#line 112
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Anfang und Ende des Strassenabschnitts werden visualisiert", new string[] {
                "Manuell"}, SourceLine=116)]
        public virtual void AnfangUndEndeDesStrassenabschnittsWerdenVisualisiert()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Anfang und Ende des Strassenabschnitts werden visualisiert", new string[] {
                        "Manuell"});
#line 117
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System stellt beim Löschen von Strassenabschnitten sicher, dass diese keiner " +
            "Inspektionsroute zugeordnet sind", new string[] {
                "Manuell"}, SourceLine=121)]
        public virtual void DasSystemStelltBeimLoschenVonStrassenabschnittenSicherDassDieseKeinerInspektionsrouteZugeordnetSind()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System stellt beim Löschen von Strassenabschnitten sicher, dass diese keiner " +
                    "Inspektionsroute zugeordnet sind", new string[] {
                        "Manuell"});
#line 122
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Archivierte Daten können nicht verändert werden", new string[] {
                "Manuell"}, SourceLine=126)]
        public virtual void ArchivierteDatenKonnenNichtVerandertWerden()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Archivierte Daten können nicht verändert werden", new string[] {
                        "Manuell"});
#line 127
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Werden Strassenabschnitte gelöscht, hat das keine Auswirkungen auf historische Da" +
            "ten", new string[] {
                "Manuell"}, SourceLine=131)]
        public virtual void WerdenStrassenabschnitteGeloschtHatDasKeineAuswirkungenAufHistorischeDaten()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Werden Strassenabschnitte gelöscht, hat das keine Auswirkungen auf historische Da" +
                    "ten", new string[] {
                        "Manuell"});
#line 132
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte über mehrere Achssegmente anlegen", new string[] {
                "Manuell"}, SourceLine=136)]
        public virtual void DerData_ManagerKannStrassenabschnitteUberMehrereAchssegmenteAnlegen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann Strassenabschnitte über mehrere Achssegmente anlegen", new string[] {
                        "Manuell"});
#line 137
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 138
testRunner.Given("ich öffne die Seite \'Netzdefinition\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 139
testRunner.And("ich wähle das Tool \'Strassenabschnitte erstellen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 140
testRunner.When("ich auf ein beliebiges Achssegment klicke", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 141
testRunner.And("ich auf ein weiteres beliebiges Achssegment klicke", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 142
testRunner.Then("wird auf beiden ausgewählten Segmenten jeweils ein Strassenabschnittsegment über " +
                    "die gesamte Länge erstellt", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann die räumliche Definition nur pro Achssegment bearbeiten", new string[] {
                "Manuell"}, SourceLine=146)]
        public virtual void DerData_ManagerKannDieRaumlicheDefinitionNurProAchssegmentBearbeiten()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann die räumliche Definition nur pro Achssegment bearbeiten", new string[] {
                        "Manuell"});
#line 147
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 148
testRunner.Given("ich öffne die Seite \'Netzdefinition\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 149
testRunner.And("ich wähle einen beliebigen Strassenabschnitt aus", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 150
testRunner.And("ich wähle das Tool \'Strassenabschnitt bearbeiten\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 151
testRunner.When("ich versuche einen der Endpunkte des Strassenabschnittsegments über das aktuelle " +
                    "Achsegment hinaus auf ein anderes Achsegment zu ziehen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 152
testRunner.Then("stoppt der Endpunkt am Ende des aktuellen Achssegments", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann in einem Textfeld nach Strassennamen suchen", new string[] {
                "Manuell"}, SourceLine=156)]
        public virtual void DerData_ManagerKannInEinemTextfeldNachStrassennamenSuchen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann in einem Textfeld nach Strassennamen suchen", new string[] {
                        "Manuell"});
#line 157
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System berechnet die Fläche Fahrbahn (m²) nachdem der Data-Manager den Strass" +
            "enabschnitt gespeichert hat", new string[] {
                "Manuell"}, SourceLine=161)]
        public virtual void DasSystemBerechnetDieFlacheFahrbahnMNachdemDerData_ManagerDenStrassenabschnittGespeichertHat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Fläche Fahrbahn (m²) nachdem der Data-Manager den Strass" +
                    "enabschnitt gespeichert hat", new string[] {
                        "Manuell"});
#line 162
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System berechnet die Fläche Trottoir links (m²) nachdem der Data-Manager den " +
            "Strassenabschnitt gespeichert hat", new string[] {
                "Manuell"}, SourceLine=166)]
        public virtual void DasSystemBerechnetDieFlacheTrottoirLinksMNachdemDerData_ManagerDenStrassenabschnittGespeichertHat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Fläche Trottoir links (m²) nachdem der Data-Manager den " +
                    "Strassenabschnitt gespeichert hat", new string[] {
                        "Manuell"});
#line 167
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System berechnet die Fläche Trottoir rechts (m²) nachdem der Data-Manager den" +
            " Strassenabschnitt gespeichert hat", new string[] {
                "Manuell"}, SourceLine=171)]
        public virtual void DasSystemBerechnetDieFlacheTrottoirRechtsMNachdemDerData_ManagerDenStrassenabschnittGespeichertHat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Fläche Trottoir rechts (m²) nachdem der Data-Manager den" +
                    " Strassenabschnitt gespeichert hat", new string[] {
                        "Manuell"});
#line 172
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System berechnet die Fläche Trottoir (m²) nachdem der Data-Manager den Strass" +
            "enabschnitt gespei-chert hat", new string[] {
                "Manuell"}, SourceLine=176)]
        public virtual void DasSystemBerechnetDieFlacheTrottoirMNachdemDerData_ManagerDenStrassenabschnittGespei_ChertHat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Fläche Trottoir (m²) nachdem der Data-Manager den Strass" +
                    "enabschnitt gespei-chert hat", new string[] {
                        "Manuell"});
#line 177
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("N4 - Strassenabschnitte im GIS-Modus verwalten")]
    public partial class N4_StrassenabschnitteImGIS_ModusVerwaltenFeature_NUnit
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "N4.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "N4 - Strassenabschnitte im GIS-Modus verwalten", "\tAls Data-Manager\r\n\twill ich Strassenabschnitte im GIS-Modus verwalten\r\n\tdamit ic" +
                    "h einen Überblick über mein Strassennetz bekomme und ich die erfassten Informati" +
                    "onen als Grundlage für die Zustandserfassung verwenden kann", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table1.AddRow(new string[] {
                        "Mandant_1",
                        "gis"});
#line 7
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table1, "Gegeben sei ");
#line 11
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann einen Strassenabschnitt auf der Karte digitalisieren")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannEinenStrassenabschnittAufDerKarteDigitalisieren()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann einen Strassenabschnitt auf der Karte digitalisieren", new string[] {
                        "Manuell"});
#line 15
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann Anfangs- und Endpunkt auf der Karte festlegen")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannAnfangs_UndEndpunktAufDerKarteFestlegen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann Anfangs- und Endpunkt auf der Karte festlegen", new string[] {
                        "Manuell"});
#line 20
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 21
testRunner.Given("ich öffne die Seite \'Netzverwaltung\\Netzdefinition\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 22
 testRunner.And("ich wähle einen beliebigen Strassenabschnitt aus", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 23
 testRunner.And("ich aktiviere das Tool \'Strassenabschnitt Geometrie bearbeiten\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 24
 testRunner.When("ich einen Anfangs oder Endpunkt entlang dem darunter liegenden Achssegment bewege" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 25
 testRunner.Then("wird der Strassenabschnitt entsprechend verlängert oder verkürzt", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Strassenabschnitte dürfen sich nicht überlappen")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void StrassenabschnitteDurfenSichNichtUberlappen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Strassenabschnitte dürfen sich nicht überlappen", new string[] {
                        "Manuell",
                        "ignore"});
#line 29
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann pro Achssegment Anfangs- und Endpunkt eines Strassenabschni" +
            "tts auf der Karte festlegen")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannProAchssegmentAnfangs_UndEndpunktEinesStrassenabschnittsAufDerKarteFestlegen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann pro Achssegment Anfangs- und Endpunkt eines Strassenabschni" +
                    "tts auf der Karte festlegen", new string[] {
                        "Manuell"});
#line 34
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        [NUnit.Framework.TestCaseAttribute("1", "Bahnstrasse", "-", "-", "IC", "Beton", "5,75", "KeinTrottoir", "-", "-", "Private", "Mitterndorf", "Nein", "-", "Gutfall", new string[0])]
        [NUnit.Framework.TestCaseAttribute("2", "Moosgasse", "0", "2", "IB", "Asphalt", "5,50", "BeideSeiten", "1,5", "2", "Gemeinde", "Ortsteil Mossbrunn", "Nein", "-", "Gutfall", new string[0])]
        [NUnit.Framework.TestCaseAttribute("3", "Hauptstrasse", "2,25", "1,5", "II", "Beton", "7", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "Nein", "-", "Gutfall", new string[0])]
        [NUnit.Framework.TestCaseAttribute("4", "Hauptstrasse", "2", "-", "II", "Beton", "7", "Links", "2,1", "-", "Gemeinde", "Ortsteil Gramatneusiedl", "Nein", "-", "Gutfall", new string[0])]
        [NUnit.Framework.TestCaseAttribute("5", "-", "2,25", "2", "IB", "Asphalt", "5,50", "BeideSeiten", "1,5", "2", "Gemeinde", "Ortsteil Mossbrunn", "Ja", "Strassenname", "Strassenname ist Pflichtfeld", new string[0])]
        [NUnit.Framework.TestCaseAttribute("6", "Hauptstrasse", "2,257", "2", "II", "Beton", "7", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "Nein", "LaengenkorrekturAnfang", "LängenkorrekturAnfang wird auf 2 Nachkommastellen gerundet", new string[0])]
        [NUnit.Framework.TestCaseAttribute("7", "Hauptstrasse", "2,25", "1,125", "II", "Beton", "7", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "Nein", "LaengenkorrekturEnde", "LängenkorrekturEnde wird auf 2 Nachkommastellen gerundet", new string[0])]
        [NUnit.Framework.TestCaseAttribute("8", "Hauptstrasse", "2,25", "2", "II", "Beton", "7,525", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "Nein", "BreiteFahrbahn", "BreiteFahrbahn wird auf 2 Nachkommastellen gerundet", new string[0])]
        [NUnit.Framework.TestCaseAttribute("9", "Hauptstrasse", "-2", "2", "II", "Beton", "7", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "LaengenkorrekturAnfang", "Ungültige LängenkorrekturAnfang < 0", new string[0])]
        [NUnit.Framework.TestCaseAttribute("10", "Hauptstrasse", "2,25", "-0,25", "II", "Beton", "7", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "LängekorrekturEnde", "Ungültige LängenkorrekturEnde < 0", new string[0])]
        [NUnit.Framework.TestCaseAttribute("11", "Hauptstrasse", "2,25", "2", "II", "Beton", "-1", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "BreiteFahrbahn", "Ungültige BreiteFahrbahn < 0", new string[0])]
        [NUnit.Framework.TestCaseAttribute("12", "Hauptstrasse", "2,25", "2", "II", "Beton", "-0,1", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "BreiteFahrbahn", "Ungültige BreiteFahrbahn < 0", new string[0])]
        [NUnit.Framework.TestCaseAttribute("13", "Hauptstrasse", "2,25", "2", "II", "Beton", "0", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "BreiteFahrbahn", "Ungültige BreiteFahrbahn darf nicht 0 sein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("14", "Hauptstrasse", "2,25", "2", "II", "Beton", "7", "Rechts", "-", "-2", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "BreiteTrottoirRechts", "Ungültige BreiteTrottoirRechts < 0", new string[0])]
        [NUnit.Framework.TestCaseAttribute("15", "Hauptstrasse", "2,25", "2", "II", "Beton", "7", "Links", "-2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "BreiteTrottoirLinks", "Ungültige BreiteTrottoirLinks < 0", new string[0])]
        [NUnit.Framework.TestCaseAttribute("16", "Moosgasse", "2,25", "2", "-", "Asphalt", "5,50", "BeideSeiten", "1,5", "2", "Gemeinde", "Ortsteil Mossbrunn", "Ja", "Belastungskategorie", "Belastungskategorie ist Pflichtfeld", new string[0])]
        [NUnit.Framework.TestCaseAttribute("17", "Moosgasse", "2,25", "2", "IB", "-", "5,50", "BeideSeiten", "1,5", "2", "Gemeinde", "Ortsteil Mossbrunn", "Ja", "Belagsart", "Belagsart ist Pflichtfeld", new string[0])]
        [NUnit.Framework.TestCaseAttribute("18", "Moosgasse", "2,25", "2", "IB", "Asphalt", "5,50", "BeideSeiten", "1,5", "2", "Gemeinde", "Ortsteil Mossbrunn", "Ja", "BreiteFahrbahn", "BreiteFahrbahn ist Pflichtfeld", new string[0])]
        [NUnit.Framework.TestCaseAttribute("19", "Moosgasse", "adc", "2", "IB", "Asphalt", "5,50", "BeideSeiten", "1,5", "2", "-", "Ortsteil Mossbrunn", "Ja", "Strasseneigentümer", "Strasseneigentümer ist Pflichtfeld", new string[0])]
        [NUnit.Framework.TestCaseAttribute("20", "Hauptstrasse", "15da", "2", "II", "Beton", "7", "Links", "2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "LaengenkorrekturAnfang", "Ungültige LängenkorrekturAnfang string", new string[0])]
        [NUnit.Framework.TestCaseAttribute("21", "Hauptstrasse", "3,§", "2", "II", "Beton", "7", "Links", "2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "LaengenkorrekturAnfang", "Ungültige LängenkorrekturAnfang string", new string[0])]
        [NUnit.Framework.TestCaseAttribute("22", "Hauptstrasse", "2,25", "pav", "II", "Beton", "7", "Links", "2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "LaengenkorrekturAnfang", "Ungültige LängenkorrekturAnfang string", new string[0])]
        [NUnit.Framework.TestCaseAttribute("23", "Hauptstrasse", "2,25", "fa34", "II", "Beton", "7", "Links", "2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "LaengenkorrekturEnde", "Ungültige LängenkorrekturEnde string", new string[0])]
        [NUnit.Framework.TestCaseAttribute("24", "Hauptstrasse", "2,25", "!§;\"", "II", "Beton", "7", "Links", "2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "LaengenkorrekturEnde", "Ungültige LängenkorrekturEnde string", new string[0])]
        [NUnit.Framework.TestCaseAttribute("25", "Hauptstrasse", "2,25", "2", "II", "Beton", "7", "Links", "2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "LaengenkorrekturEnde", "Ungültige LängenkorrekturEnde string", new string[0])]
        [NUnit.Framework.TestCaseAttribute("26", "Hauptstrasse", "2,25", "2", "II", "Beton", "ab", "Links", "2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "BreiteFahrbahn", "Ungültige BreiteFahrbahn string", new string[0])]
        [NUnit.Framework.TestCaseAttribute("27", "Hauptstrasse", "2,25", "2", "II", "Beton", "1s", "Links", "2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "BreiteFahrbahn", "Ungültige BreiteFahrbahn string", new string[0])]
        [NUnit.Framework.TestCaseAttribute("28", "Hauptstrasse", "2,25", "2", "II", "Beton", "?`F", "Links", "2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "BreiteFahrbahn", "Ungültige BreiteFahrbahn string", new string[0])]
        [NUnit.Framework.TestCaseAttribute("29", "Hauptstrasse", "2,25", "2", "II", "Beton", "7", "Links", "asb", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "BreiteTrottoirLinks", "Ungültige BreiteTrottoirLinks string", new string[0])]
        [NUnit.Framework.TestCaseAttribute("30", "Hauptstrasse", "2,25", "2", "II", "Beton", "7", "Links", "2da", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "BreiteTrottoirLinks", "Ungültige BreiteTrottoirLinks string", new string[0])]
        [NUnit.Framework.TestCaseAttribute("31", "Hauptstrasse", "2,25", "2", "II", "Beton", "7", "Links", "\"&1", "-", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "BreiteTrottoirLinks", "Ungültige BreiteTrottoirLinks string", new string[0])]
        [NUnit.Framework.TestCaseAttribute("32", "Hauptstrasse", "2,25", "2", "II", "Beton", "7", "Rechts", "-", "asb", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "BreiteTrottoirRechts", "Ungültige BreiteTrottoirRechts string", new string[0])]
        [NUnit.Framework.TestCaseAttribute("33", "Hauptstrasse", "2,25", "2", "II", "Beton", "7", "Rechts", "-", "2da", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "BreiteTrottoirRechts", "Ungültige BreiteTrottoirRechts string", new string[0])]
        [NUnit.Framework.TestCaseAttribute("34", "Hauptstrasse", "2,25", "2", "II", "Beton", "7", "Rechts", "-", "\"&1", "Korporation", "Ortsteil Gramatneusiedl", "Ja", "BreiteTrottoirRechts", "Ungültige BreiteTrottoirRechts string", new string[0])]
        public virtual void DerData_ManagerKannAttributeZuStrassenabschnittenErfassen(
                    string tF, 
                    string strassenname, 
                    string laengenkorrekturAnfang, 
                    string laengenkorrekturEnde, 
                    string belastungskategorie, 
                    string belag, 
                    string breiteFahrbahn, 
                    string trottoir, 
                    string breiteTrottoirLinks, 
                    string breiteTrottoirRechts, 
                    string strasseneigentumer, 
                    string ortsbezeichnung, 
                    string validationsfehler, 
                    string feldbezeichnung, 
                    string kommentar, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Manuell"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann Attribute zu Strassenabschnitten erfassen", @__tags);
#line 39
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 41
testRunner.Given("ich öffne die Seite \'Netzdefinition\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "LaengenkorrekturAnfang",
                        "LaengenkorrekturEnde",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung"});
            table2.AddRow(new string[] {
                        string.Format("{0}", strassenname),
                        string.Format("{0}", laengenkorrekturAnfang),
                        string.Format("{0}", laengenkorrekturEnde),
                        string.Format("{0}", belastungskategorie),
                        string.Format("{0}", belag),
                        string.Format("{0}", breiteFahrbahn),
                        string.Format("{0}", trottoir),
                        string.Format("{0}", breiteTrottoirLinks),
                        string.Format("{0}", breiteTrottoirRechts),
                        string.Format("{0}", strasseneigentumer),
                        string.Format("{0}", ortsbezeichnung)});
#line 43
 testRunner.When("ich folgende GIS-Netzinformationen eingebe:", ((string)(null)), table2, "Wenn ");
#line 47
 testRunner.Then(string.Format("liefert Feldbezeichnung \'{0}\' einen Validationsfehler \'{1}\'", feldbezeichnung, validationsfehler), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "LaengenkorrekturAnfang",
                        "LaengenkorrekturEnde",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung"});
            table3.AddRow(new string[] {
                        string.Format("{0}", strassenname),
                        string.Format("{0}", laengenkorrekturAnfang),
                        string.Format("{0}", laengenkorrekturEnde),
                        string.Format("{0}", belastungskategorie),
                        string.Format("{0}", belag),
                        string.Format("{0}", breiteFahrbahn),
                        string.Format("{0}", trottoir),
                        string.Format("{0}", breiteTrottoirLinks),
                        string.Format("{0}", breiteTrottoirRechts),
                        string.Format("{0}", strasseneigentumer),
                        string.Format("{0}", ortsbezeichnung)});
#line 49
 testRunner.Then("sind folgende GIS-Netzinformationen im System:", ((string)(null)), table3, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann einen Strassenabschnitt durch Auswahl auf der Karte löschen" +
            "")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannEinenStrassenabschnittDurchAuswahlAufDerKarteLoschen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann einen Strassenabschnitt durch Auswahl auf der Karte löschen" +
                    "", new string[] {
                        "Manuell"});
#line 93
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Abschnittsnummer"});
            table4.AddRow(new string[] {
                        "1",
                        "Bahnstrasse",
                        "Nr 11.",
                        "Nr. 22",
                        "IC",
                        "Beton",
                        "5,75",
                        "150",
                        "KeinTrottoir",
                        "-",
                        "-",
                        "Gemeinde",
                        "Mitterndorf",
                        "1"});
            table4.AddRow(new string[] {
                        "2",
                        "Moosgasse",
                        "-",
                        "-",
                        "IB",
                        "Asphalt",
                        "5,50",
                        "200,2",
                        "BeideSeiten",
                        "1,5",
                        "2",
                        "Gemeinde",
                        "Ortsteil Mossbrunn",
                        "1"});
#line 94
 testRunner.Given("für Mandant \'Mandant_1\' existieren folgende Netzinformationen:", ((string)(null)), table4, "Gegeben sei ");
#line 100
 testRunner.And("ich öffne die Seite \'Netzdefinition und Hauptabschnitt mit Strassennamen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 102
 testRunner.When("ich den Strassenabschnitt (ID 2) durch Auswahl in der Karte selektiere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 103
 testRunner.And("ich die Netzinformationen für diesen Strassenabschnitt lösche", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Abschnittsnummer"});
            table5.AddRow(new string[] {
                        "1",
                        "Bahnstrasse",
                        "Nr 11.",
                        "Nr. 22",
                        "IC",
                        "Beton",
                        "5,75",
                        "150",
                        "KeinTrottoir",
                        "-",
                        "-",
                        "Gemeinde",
                        "Mitterndorf",
                        "1"});
#line 105
 testRunner.Then("sind folgende Netzinformationen im System:", ((string)(null)), table5, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System stellt sicher, dass Strassenabschnitte lückenlos aufeinander folgen")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemStelltSicherDassStrassenabschnitteLuckenlosAufeinanderFolgen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System stellt sicher, dass Strassenabschnitte lückenlos aufeinander folgen", new string[] {
                        "Manuell"});
#line 112
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Anfang und Ende des Strassenabschnitts werden visualisiert")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void AnfangUndEndeDesStrassenabschnittsWerdenVisualisiert()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Anfang und Ende des Strassenabschnitts werden visualisiert", new string[] {
                        "Manuell"});
#line 117
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System stellt beim Löschen von Strassenabschnitten sicher, dass diese keiner " +
            "Inspektionsroute zugeordnet sind")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemStelltBeimLoschenVonStrassenabschnittenSicherDassDieseKeinerInspektionsrouteZugeordnetSind()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System stellt beim Löschen von Strassenabschnitten sicher, dass diese keiner " +
                    "Inspektionsroute zugeordnet sind", new string[] {
                        "Manuell"});
#line 122
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Archivierte Daten können nicht verändert werden")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void ArchivierteDatenKonnenNichtVerandertWerden()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Archivierte Daten können nicht verändert werden", new string[] {
                        "Manuell"});
#line 127
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Werden Strassenabschnitte gelöscht, hat das keine Auswirkungen auf historische Da" +
            "ten")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void WerdenStrassenabschnitteGeloschtHatDasKeineAuswirkungenAufHistorischeDaten()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Werden Strassenabschnitte gelöscht, hat das keine Auswirkungen auf historische Da" +
                    "ten", new string[] {
                        "Manuell"});
#line 132
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann Strassenabschnitte über mehrere Achssegmente anlegen")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannStrassenabschnitteUberMehrereAchssegmenteAnlegen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann Strassenabschnitte über mehrere Achssegmente anlegen", new string[] {
                        "Manuell"});
#line 137
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 138
testRunner.Given("ich öffne die Seite \'Netzdefinition\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 139
testRunner.And("ich wähle das Tool \'Strassenabschnitte erstellen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 140
testRunner.When("ich auf ein beliebiges Achssegment klicke", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 141
testRunner.And("ich auf ein weiteres beliebiges Achssegment klicke", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 142
testRunner.Then("wird auf beiden ausgewählten Segmenten jeweils ein Strassenabschnittsegment über " +
                    "die gesamte Länge erstellt", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann die räumliche Definition nur pro Achssegment bearbeiten")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannDieRaumlicheDefinitionNurProAchssegmentBearbeiten()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann die räumliche Definition nur pro Achssegment bearbeiten", new string[] {
                        "Manuell"});
#line 147
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 148
testRunner.Given("ich öffne die Seite \'Netzdefinition\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line 149
testRunner.And("ich wähle einen beliebigen Strassenabschnitt aus", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 150
testRunner.And("ich wähle das Tool \'Strassenabschnitt bearbeiten\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 151
testRunner.When("ich versuche einen der Endpunkte des Strassenabschnittsegments über das aktuelle " +
                    "Achsegment hinaus auf ein anderes Achsegment zu ziehen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 152
testRunner.Then("stoppt der Endpunkt am Ende des aktuellen Achssegments", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann in einem Textfeld nach Strassennamen suchen")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannInEinemTextfeldNachStrassennamenSuchen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann in einem Textfeld nach Strassennamen suchen", new string[] {
                        "Manuell"});
#line 157
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System berechnet die Fläche Fahrbahn (m²) nachdem der Data-Manager den Strass" +
            "enabschnitt gespeichert hat")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemBerechnetDieFlacheFahrbahnMNachdemDerData_ManagerDenStrassenabschnittGespeichertHat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Fläche Fahrbahn (m²) nachdem der Data-Manager den Strass" +
                    "enabschnitt gespeichert hat", new string[] {
                        "Manuell"});
#line 162
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System berechnet die Fläche Trottoir links (m²) nachdem der Data-Manager den " +
            "Strassenabschnitt gespeichert hat")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemBerechnetDieFlacheTrottoirLinksMNachdemDerData_ManagerDenStrassenabschnittGespeichertHat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Fläche Trottoir links (m²) nachdem der Data-Manager den " +
                    "Strassenabschnitt gespeichert hat", new string[] {
                        "Manuell"});
#line 167
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System berechnet die Fläche Trottoir rechts (m²) nachdem der Data-Manager den" +
            " Strassenabschnitt gespeichert hat")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemBerechnetDieFlacheTrottoirRechtsMNachdemDerData_ManagerDenStrassenabschnittGespeichertHat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Fläche Trottoir rechts (m²) nachdem der Data-Manager den" +
                    " Strassenabschnitt gespeichert hat", new string[] {
                        "Manuell"});
#line 172
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System berechnet die Fläche Trottoir (m²) nachdem der Data-Manager den Strass" +
            "enabschnitt gespei-chert hat")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemBerechnetDieFlacheTrottoirMNachdemDerData_ManagerDenStrassenabschnittGespei_ChertHat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Fläche Trottoir (m²) nachdem der Data-Manager den Strass" +
                    "enabschnitt gespei-chert hat", new string[] {
                        "Manuell"});
#line 177
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
