// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ASTRA.EMSG.IntegrationTests.Features.N_Netzverwaltung
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("N2 - Strassenabschnitte mit Strassennamen verwalten", Description="\tAls Data-Manager\r\n\twill ich Strassenabschnitte mit Strassennamen verwalten\r\n\tdam" +
        "it ich einen Überblick über mein Strassennetz bekomme und ich die erfassten Info" +
        "rmationen als Grundlage für die Zustandserfassung verwenden kann", SourceFile="Features\\N - Netzverwaltung\\N2.feature", SourceLine=0)]
    public partial class N2_StrassenabschnitteMitStrassennamenVerwaltenFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "N2.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "N2 - Strassenabschnitte mit Strassennamen verwalten", "\tAls Data-Manager\r\n\twill ich Strassenabschnitte mit Strassennamen verwalten\r\n\tdam" +
                    "it ich einen Überblick über mein Strassennetz bekomme und ich die erfassten Info" +
                    "rmationen als Grundlage für die Zustandserfassung verwenden kann", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen(
                    string tF, 
                    string strassenname, 
                    string bezeichnungVon, 
                    string bezeichnungBis, 
                    string belastungskategorie, 
                    string belag, 
                    string breiteFahrbahn, 
                    string lange, 
                    string trottoir, 
                    string breiteTrottoirLinks, 
                    string breiteTrottoirRechts, 
                    string strasseneigentumer, 
                    string ortsbezeichnung, 
                    string abschnittsnummer, 
                    string validationsfehler, 
                    string feldbezeichnung, 
                    string kommentar, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automatisch"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann Strassenabschnitte erfassen", @__tags);
#line 9
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table1.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 10
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table1, "Gegeben sei ");
#line 14
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 16
    testRunner.And("ich öffne die Seite \'Netzdefinition und Hauptabschnitt mit Strassennamen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Abschnittsnummer"});
            table2.AddRow(new string[] {
                        string.Format("{0}", strassenname),
                        string.Format("{0}", bezeichnungVon),
                        string.Format("{0}", bezeichnungBis),
                        string.Format("{0}", belastungskategorie),
                        string.Format("{0}", belag),
                        string.Format("{0}", breiteFahrbahn),
                        string.Format("{0}", lange),
                        string.Format("{0}", trottoir),
                        string.Format("{0}", breiteTrottoirLinks),
                        string.Format("{0}", breiteTrottoirRechts),
                        string.Format("{0}", strasseneigentumer),
                        string.Format("{0}", ortsbezeichnung),
                        string.Format("{0}", abschnittsnummer)});
#line 18
 testRunner.When("ich folgende Netzinformationen eingebe:", ((string)(null)), table2, "Wenn ");
#line 22
 testRunner.Then(string.Format("liefert Feldbezeichnung \'{0}\' einen Validationsfehler \'{1}\'", feldbezeichnung, validationsfehler), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Abschnittsnummer"});
            table3.AddRow(new string[] {
                        string.Format("{0}", strassenname),
                        string.Format("{0}", bezeichnungVon),
                        string.Format("{0}", bezeichnungBis),
                        string.Format("{0}", belastungskategorie),
                        string.Format("{0}", belag),
                        string.Format("{0}", breiteFahrbahn),
                        string.Format("{0}", lange),
                        string.Format("{0}", trottoir),
                        string.Format("{0}", breiteTrottoirLinks),
                        string.Format("{0}", breiteTrottoirRechts),
                        string.Format("{0}", strasseneigentumer),
                        string.Format("{0}", ortsbezeichnung),
                        string.Format("{0}", abschnittsnummer)});
#line 24
 testRunner.Then("sind folgende Netzinformationen im System:", ((string)(null)), table3, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 1", new string[] {
                "Automatisch"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet0_1()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("1", "Bahnstrasse", "Nr 11.", "Nr. 22", "IC", "Beton", "5,75", "150", "KeinTrottoir", "-", "-", "Privat", "Mitterndorf", "1", "Nein", "-", "Gutfall", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 2", new string[] {
                "Automatisch"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet0_2()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("2", "Moosgasse", "-", "-", "IB", "Asphalt", "5,50", "200,2", "BeideSeiten", "1,5", "2", "Gemeinde", "Ortsteil Mossbrunn", "1", "Nein", "-", "Gutfall", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 3", new string[] {
                "Automatisch"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet0_3()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("3", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "702,5", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Nein", "-", "Gutfall", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 4", new string[] {
                "Automatisch"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet0_4()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("4", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "702,5", "Links", "2,1", "-", "Gemeinde", "Ortsteil Gramatneusiedl", "0", "Nein", "-", "Gutfall", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 5", new string[] {
                "Automatisch"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet0_5()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("5", "-", "Anfang", "Ende", "IB", "Asphalt", "5,50", "200,2", "BeideSeiten", "1,5", "2", "Gemeinde", "Ortsteil Mossbrunn", "1", "Ja", "Strassenname", "Strassenname ist Pflichtfeld", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 6", new string[] {
                "Automatisch"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet0_6()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("6", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "702,25", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "Länge", "Ungültige Länge max. 1 Nachkommastellen", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 7", new string[] {
                "Automatisch"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet0_7()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("7", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7,525", "702,5", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteFahrbahn", "Ungültige BreiteFahrbahn max. 2 Nachkommastellen", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 8", new string[] {
                "Automatisch"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet0_8()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("8", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "-25", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "Länge", "Ungültige Länge < 0", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 9", new string[] {
                "Automatisch"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet0_9()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("9", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "-25,1", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "Länge", "Ungültige Länge < 0", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 10", new string[] {
                "Automatisch"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet0_10()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("10", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "-1", "702,5", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteFahrbahn", "Ungültige BreiteFahrbahn < 0", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 11", new string[] {
                "Automatisch"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet0_11()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("11", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "-0,1", "702,5", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteFahrbahn", "Ungültige BreiteFahrbahn < 0", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 12", new string[] {
                "Automatisch"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet0_12()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("12", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "0", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "Länge", "Ungültige Länge darf nicht 0 sein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 13", new string[] {
                "Automatisch"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet0_13()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("13", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "0", "702,5", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteFahrbahn", "Ungültige BreiteFahrbahn darf nicht 0 sein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 14", new string[] {
                "Automatisch"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet0_14()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("14", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "702,5", "Rechts", "-", "-2", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteTrottoirRechts", "Ungültige BreiteTrottoirRechts < 0", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 15", new string[] {
                "Automatisch"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet0_15()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("15", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "702,5", "Links", "-2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteTrottoirLinks", "Ungültige BreiteTrottoirLinks < 0", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 16", new string[] {
                "Automatisch"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet0_16()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("16", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "702,5", "Rechts", "-", "2", "Korporation", "Ortsteil Gramatneusiedl", "-1", "Ja", "Abschnittsnummer", "Ungültige Abschnittsnummer < 0", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 17", new string[] {
                "Automatisch",
                "Manuell"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet1_17()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("17", "Moosgasse", "Anfang", "Ende", "-", "Asphalt", "5,50", "200,2", "BeideSeiten", "1,5", "2", "Gemeinde", "Ortsteil Mossbrunn", "1", "Ja", "Belastungskategorie", "Belastungskategorie ist Pflichtfeld", new string[] {
                        "Manuell"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 18", new string[] {
                "Automatisch",
                "Manuell"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet1_18()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("18", "Moosgasse", "Anfang", "Ende", "IB", "-", "5,50", "200,2", "BeideSeiten", "1,5", "2", "Gemeinde", "Ortsteil Mossbrunn", "1", "Ja", "Belagsart", "Belagsart ist Pflichtfeld", new string[] {
                        "Manuell"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 19", new string[] {
                "Automatisch",
                "Manuell"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet1_19()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("19", "Moosgasse", "Anfang", "Ende", "IB", "Asphalt", "5,50", "-", "BeideSeiten", "1,5", "2", "Gemeinde", "Ortsteil Mossbrunn", "1", "Ja", "BreiteFahrbahn", "BreiteFahrbahn ist Pflichtfeld", new string[] {
                        "Manuell"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 20", new string[] {
                "Automatisch",
                "Manuell"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet1_20()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("20", "Moosgasse", "Anfang", "Ende", "IB", "Asphalt", "-", "200,2", "BeideSeiten", "1,5", "2", "Gemeinde", "Ortsteil Moosbrunn", "1", "Ja", "Länge", "Länge ist Pflichtfeld", new string[] {
                        "Manuell"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 21", new string[] {
                "Automatisch",
                "Manuell"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet1_21()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("21", "Moosgasse", "Anfang", "Ende", "IB", "Asphalt", "5,50", "200,2", "BeideSeiten", "1,5", "2", "-", "Ortsteil Mossbrunn", "1", "Ja", "Strasseneigentümer", "Strasseneigentümer ist Pflichtfeld", new string[] {
                        "Manuell"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 22", new string[] {
                "Automatisch",
                "Manuell"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet1_22()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("22", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "702,5", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "1,5", "Ja", "Abschnittsnummer", "Ungültige Abschnittsnummer keine Nachkommastellen", new string[] {
                        "Manuell"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 23", new string[] {
                "Automatisch",
                "Manuell"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet1_23()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("23", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "702,5", "Links", "2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "-1,2", "Ja", "Abschnittsnummer", "Ungültige Abschnittsnummer < 0", new string[] {
                        "Manuell"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 24", new string[] {
                "Automatisch",
                "Manuell"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet1_24()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("24", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "ABC", "Links", "2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "Länge", "Ungültige Länge string", new string[] {
                        "Manuell"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 25", new string[] {
                "Automatisch",
                "Manuell"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet1_25()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("25", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "!*-12", "Links", "2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "Länge", "Ungültige Länge string", new string[] {
                        "Manuell"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 26", new string[] {
                "Automatisch",
                "Manuell"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet1_26()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("26", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "12s1", "Links", "2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "Länge", "Ungültige Länge string", new string[] {
                        "Manuell"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 27", new string[] {
                "Automatisch",
                "Manuell"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet1_27()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("27", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "ab", "120", "Links", "2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteFahrbahn", "Ungültige BreiteFahrbahn string", new string[] {
                        "Manuell"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 28", new string[] {
                "Automatisch",
                "Manuell"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet1_28()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("28", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "1s", "120", "Links", "2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteFahrbahn", "Ungültige BreiteFahrbahn string", new string[] {
                        "Manuell"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 29", new string[] {
                "Automatisch",
                "Manuell"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet1_29()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("29", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "?`F", "120", "Links", "2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteFahrbahn", "Ungültige BreiteFahrbahn string", new string[] {
                        "Manuell"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 30", new string[] {
                "Automatisch",
                "Manuell"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet1_30()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("30", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "120", "Links", "asb", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteTrottoirLinks", "Ungültige BreiteTrottoirLinks string", new string[] {
                        "Manuell"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 31", new string[] {
                "Automatisch",
                "Manuell"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet1_31()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("31", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "120", "Links", "2da", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteTrottoirLinks", "Ungültige BreiteTrottoirLinks string", new string[] {
                        "Manuell"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 32", new string[] {
                "Automatisch",
                "Manuell"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet1_32()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("32", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "120", "Links", "\"&1", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteTrottoirLinks", "Ungültige BreiteTrottoirLinks string", new string[] {
                        "Manuell"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 33", new string[] {
                "Automatisch",
                "Manuell"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet1_33()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("33", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "120", "Rechts", "-", "asb", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteTrottoirRechts", "Ungültige BreiteTrottoirRechts string", new string[] {
                        "Manuell"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 34", new string[] {
                "Automatisch",
                "Manuell"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet1_34()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("34", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "120", "Rechts", "-", "2da", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteTrottoirRechts", "Ungültige BreiteTrottoirRechts string", new string[] {
                        "Manuell"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 35", new string[] {
                "Automatisch",
                "Manuell"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet1_35()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("35", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "120", "Rechts", "-", "\"&1", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteTrottoirRechts", "Ungültige BreiteTrottoirRechts string", new string[] {
                        "Manuell"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 36", new string[] {
                "Automatisch",
                "Manuell"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet1_36()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("36", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "120", "Rechts", "-", "2", "Korporation", "Ortsteil Gramatneusiedl", "de", "Ja", "Abschnittsnummer", "Ungültige Abschnittsnummer string", new string[] {
                        "Manuell"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 37", new string[] {
                "Automatisch",
                "Manuell"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet1_37()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("37", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "120", "Rechts", "-", "2", "Korporation", "Ortsteil Gramatneusiedl", "1c", "Ja", "Abschnittsnummer", "Ungültige Abschnittsnummer string", new string[] {
                        "Manuell"});
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte erfassen, Examples 1, 38", new string[] {
                "Automatisch",
                "Manuell"}, SourceLine=29)]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen_ExampleSet1_38()
        {
            this.DerData_ManagerKannStrassenabschnitteErfassen("38", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "120", "Rechts", "-", "2", "Korporation", "Ortsteil Gramatneusiedl", "7;", "Ja", "Abschnittsnummer", "Ungültige Abschnittsnummer string", new string[] {
                        "Manuell"});
#line hidden
        }
        
        public virtual void DerData_ManagerKannAlleAttributeDesStrassenabschnittsBearbeiten(
                    string tF, 
                    string id, 
                    string strassenname, 
                    string bezeichnungVon, 
                    string bezeichnungBis, 
                    string belastungskategorie, 
                    string belag, 
                    string breiteFahrbahn, 
                    string lange, 
                    string trottoir, 
                    string breiteTrottoirLinks, 
                    string breiteTrottoirRechts, 
                    string strasseneigentumer, 
                    string ortsbezeichnung, 
                    string abschnittsnummer, 
                    string validationsfehler, 
                    string feldbezeichnung, 
                    string kommentar, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automatisch"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann alle Attribute des Strassenabschnitts bearbeiten", @__tags);
#line 78
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table4.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 79
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table4, "Gegeben sei ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Abschnittsnummer"});
            table5.AddRow(new string[] {
                        "1",
                        "Bahnstrasse",
                        "Nr 11.",
                        "Nr. 22",
                        "IC",
                        "Beton",
                        "5,75",
                        "150",
                        "KeinTrottoir",
                        "-",
                        "-",
                        "Privat",
                        "Mitterndorf",
                        "1"});
#line 83
 testRunner.And("für Mandant \'Mandant_1\' existieren folgende Netzinformationen:", ((string)(null)), table5, "Und ");
#line 87
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 89
    testRunner.And("ich öffne die Seite \'Netzdefinition und Hauptabschnitt mit Strassennamen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Abschnittsnummer"});
            table6.AddRow(new string[] {
                        string.Format("{0}", strassenname),
                        string.Format("{0}", bezeichnungVon),
                        string.Format("{0}", bezeichnungBis),
                        string.Format("{0}", belastungskategorie),
                        string.Format("{0}", belag),
                        string.Format("{0}", breiteFahrbahn),
                        string.Format("{0}", lange),
                        string.Format("{0}", trottoir),
                        string.Format("{0}", breiteTrottoirLinks),
                        string.Format("{0}", breiteTrottoirRechts),
                        string.Format("{0}", strasseneigentumer),
                        string.Format("{0}", ortsbezeichnung),
                        string.Format("{0}", abschnittsnummer)});
#line 91
 testRunner.When("ich folgende Netzinformationen für ID \'1\' eingebe:", ((string)(null)), table6, "Wenn ");
#line 95
 testRunner.Then(string.Format("liefert Feldbezeichnung \'{0}\' einen Validationsfehler \'{1}\'", feldbezeichnung, validationsfehler), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Abschnittsnummer"});
            table7.AddRow(new string[] {
                        "1",
                        string.Format("{0}", strassenname),
                        string.Format("{0}", bezeichnungVon),
                        string.Format("{0}", bezeichnungBis),
                        string.Format("{0}", belastungskategorie),
                        string.Format("{0}", belag),
                        string.Format("{0}", breiteFahrbahn),
                        string.Format("{0}", lange),
                        string.Format("{0}", trottoir),
                        string.Format("{0}", breiteTrottoirLinks),
                        string.Format("{0}", breiteTrottoirRechts),
                        string.Format("{0}", strasseneigentumer),
                        string.Format("{0}", ortsbezeichnung),
                        string.Format("{0}", abschnittsnummer)});
#line 97
 testRunner.Then("sind folgende Netzinformationen im System:", ((string)(null)), table7, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann alle Attribute des Strassenabschnitts bearbeiten, 1", new string[] {
                "Automatisch"}, SourceLine=102)]
        public virtual void DerData_ManagerKannAlleAttributeDesStrassenabschnittsBearbeiten_1()
        {
            this.DerData_ManagerKannAlleAttributeDesStrassenabschnittsBearbeiten("1", "1", "Bahnstrasse", "Nr 11.", "Nr. 22", "IC", "Beton", "5,75", "150", "KeinTrottoir", "-", "-", "Privat", "Mitterndorf", "1", "Nein", "-", "Gutfall", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann alle Attribute des Strassenabschnitts bearbeiten, 2", new string[] {
                "Automatisch"}, SourceLine=102)]
        public virtual void DerData_ManagerKannAlleAttributeDesStrassenabschnittsBearbeiten_2()
        {
            this.DerData_ManagerKannAlleAttributeDesStrassenabschnittsBearbeiten("2", "1", "Moosgasse", "-", "-", "IB", "Asphalt", "5,50", "200,2", "BeideSeiten", "1,5", "2", "Gemeinde", "Ortsteil Mossbrunn", "1", "Nein", "-", "Gutfall", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann alle Attribute des Strassenabschnitts bearbeiten, 3", new string[] {
                "Automatisch"}, SourceLine=102)]
        public virtual void DerData_ManagerKannAlleAttributeDesStrassenabschnittsBearbeiten_3()
        {
            this.DerData_ManagerKannAlleAttributeDesStrassenabschnittsBearbeiten("3", "1", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "702,5", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Nein", "-", "Gutfall", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann alle Attribute des Strassenabschnitts bearbeiten, 4", new string[] {
                "Automatisch"}, SourceLine=102)]
        public virtual void DerData_ManagerKannAlleAttributeDesStrassenabschnittsBearbeiten_4()
        {
            this.DerData_ManagerKannAlleAttributeDesStrassenabschnittsBearbeiten("4", "1", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "702,5", "Links", "2,1", "-", "Gemeinde", "Ortsteil Gramatneusiedl", "0", "Nein", "-", "Gutfall", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann alle Attribute des Strassenabschnitts bearbeiten, 5", new string[] {
                "Automatisch"}, SourceLine=102)]
        public virtual void DerData_ManagerKannAlleAttributeDesStrassenabschnittsBearbeiten_5()
        {
            this.DerData_ManagerKannAlleAttributeDesStrassenabschnittsBearbeiten("5", "1", "-", "Anfang", "Ende", "IB", "Asphalt", "5,50", "200,2", "BeideSeiten", "1,5", "2", "Gemeinde", "Ortsteil Mossbrunn", "1", "Ja", "Strassenname", "Strassenname ist Pflichtfeld", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann alle Attribute des Strassenabschnitts bearbeiten, 10", new string[] {
                "Automatisch"}, SourceLine=102)]
        public virtual void DerData_ManagerKannAlleAttributeDesStrassenabschnittsBearbeiten_10()
        {
            this.DerData_ManagerKannAlleAttributeDesStrassenabschnittsBearbeiten("10", "1", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "702,25", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "Länge", "Ungültige Länge max. 1 Nachkommastellen", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann alle Attribute des Strassenabschnitts bearbeiten, 11", new string[] {
                "Automatisch"}, SourceLine=102)]
        public virtual void DerData_ManagerKannAlleAttributeDesStrassenabschnittsBearbeiten_11()
        {
            this.DerData_ManagerKannAlleAttributeDesStrassenabschnittsBearbeiten("11", "1", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7,525", "702,5", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteFahrbahn", "Ungültige BreiteFahrbahn max. 2 Nachkommastellen", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann alle Attribute des Strassenabschnitts bearbeiten, 12", new string[] {
                "Automatisch"}, SourceLine=102)]
        public virtual void DerData_ManagerKannAlleAttributeDesStrassenabschnittsBearbeiten_12()
        {
            this.DerData_ManagerKannAlleAttributeDesStrassenabschnittsBearbeiten("12", "1", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "-25", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "Länge", "Ungültige Länge < 0", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann alle Attribute des Strassenabschnitts bearbeiten, 13", new string[] {
                "Automatisch"}, SourceLine=102)]
        public virtual void DerData_ManagerKannAlleAttributeDesStrassenabschnittsBearbeiten_13()
        {
            this.DerData_ManagerKannAlleAttributeDesStrassenabschnittsBearbeiten("13", "1", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "-25,1", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "Länge", "Ungültige Länge < 0", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann alle Attribute des Strassenabschnitts bearbeiten, 14", new string[] {
                "Automatisch"}, SourceLine=102)]
        public virtual void DerData_ManagerKannAlleAttributeDesStrassenabschnittsBearbeiten_14()
        {
            this.DerData_ManagerKannAlleAttributeDesStrassenabschnittsBearbeiten("14", "1", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "-1", "702,5", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteFahrbahn", "Ungültige BreiteFahrbahn < 0", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann alle Attribute des Strassenabschnitts bearbeiten, 15", new string[] {
                "Automatisch"}, SourceLine=102)]
        public virtual void DerData_ManagerKannAlleAttributeDesStrassenabschnittsBearbeiten_15()
        {
            this.DerData_ManagerKannAlleAttributeDesStrassenabschnittsBearbeiten("15", "1", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "-0,1", "702,5", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteFahrbahn", "Ungültige BreiteFahrbahn < 0", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann alle Attribute des Strassenabschnitts bearbeiten, 16", new string[] {
                "Automatisch"}, SourceLine=102)]
        public virtual void DerData_ManagerKannAlleAttributeDesStrassenabschnittsBearbeiten_16()
        {
            this.DerData_ManagerKannAlleAttributeDesStrassenabschnittsBearbeiten("16", "1", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "0", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "Länge", "Ungültige Länge darf nicht 0 sein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann alle Attribute des Strassenabschnitts bearbeiten, 17", new string[] {
                "Automatisch"}, SourceLine=102)]
        public virtual void DerData_ManagerKannAlleAttributeDesStrassenabschnittsBearbeiten_17()
        {
            this.DerData_ManagerKannAlleAttributeDesStrassenabschnittsBearbeiten("17", "1", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "0", "702,5", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteFahrbahn", "Ungültige BreiteFahrbahn darf nicht 0 sein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann alle Attribute des Strassenabschnitts bearbeiten, 18", new string[] {
                "Automatisch"}, SourceLine=102)]
        public virtual void DerData_ManagerKannAlleAttributeDesStrassenabschnittsBearbeiten_18()
        {
            this.DerData_ManagerKannAlleAttributeDesStrassenabschnittsBearbeiten("18", "1", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "702,5", "Rechts", "-", "-2", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteTrottoirRechts", "Ungültige BreiteTrottoirRechts < 0", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann alle Attribute des Strassenabschnitts bearbeiten, 19", new string[] {
                "Automatisch"}, SourceLine=102)]
        public virtual void DerData_ManagerKannAlleAttributeDesStrassenabschnittsBearbeiten_19()
        {
            this.DerData_ManagerKannAlleAttributeDesStrassenabschnittsBearbeiten("19", "1", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "702,5", "Links", "-2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteTrottoirLinks", "Ungültige BreiteTrottoirLinks < 0", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann alle Attribute des Strassenabschnitts bearbeiten, 21", new string[] {
                "Automatisch"}, SourceLine=102)]
        public virtual void DerData_ManagerKannAlleAttributeDesStrassenabschnittsBearbeiten_21()
        {
            this.DerData_ManagerKannAlleAttributeDesStrassenabschnittsBearbeiten("21", "1", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "702,5", "Rechts", "-", "2", "Korporation", "Ortsteil Gramatneusiedl", "-1", "Ja", "Abschnittsnummer", "Ungültige Abschnittsnummer < 0", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System berechnet die Fläche Fahrbahn (m²) nachdem der Data-Manager den Strass" +
            "enabschnitt gespeichert hat", new string[] {
                "Automatisch"}, SourceLine=122)]
        public virtual void DasSystemBerechnetDieFlacheFahrbahnMNachdemDerData_ManagerDenStrassenabschnittGespeichertHat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Fläche Fahrbahn (m²) nachdem der Data-Manager den Strass" +
                    "enabschnitt gespeichert hat", new string[] {
                        "Automatisch"});
#line 123
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table8.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 124
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table8, "Gegeben sei ");
#line 128
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 130
    testRunner.And("ich öffne die Seite \'Netzdefinition und Hauptabschnitt mit Strassennamen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "BreiteFahrbahn",
                        "Länge",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts"});
            table9.AddRow(new string[] {
                        "1",
                        "5,75",
                        "150",
                        "-",
                        "-"});
            table9.AddRow(new string[] {
                        "2",
                        "5,50",
                        "200,2",
                        "1,5",
                        "2"});
#line 132
 testRunner.When("ich folgende Netzinformationen speichere", ((string)(null)), table9, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "FlächeFahrbahn"});
            table10.AddRow(new string[] {
                        "1",
                        "862,5"});
            table10.AddRow(new string[] {
                        "2",
                        "1101,1"});
#line 137
 testRunner.Then("ist folgende FlächeFahrbahn im System:", ((string)(null)), table10, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System berechnet die Fläche Trottoir links (m²) nachdem der Data-Manager den " +
            "Strassenabschnitt gespeichert hat", new string[] {
                "Automatisch"}, SourceLine=144)]
        public virtual void DasSystemBerechnetDieFlacheTrottoirLinksMNachdemDerData_ManagerDenStrassenabschnittGespeichertHat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Fläche Trottoir links (m²) nachdem der Data-Manager den " +
                    "Strassenabschnitt gespeichert hat", new string[] {
                        "Automatisch"});
#line 145
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table11.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 146
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table11, "Gegeben sei ");
#line 150
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 152
    testRunner.And("ich öffne die Seite \'Netzdefinition und Hauptabschnitt mit Strassennamen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "BreiteFahrbahn",
                        "Länge",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts"});
            table12.AddRow(new string[] {
                        "1",
                        "5,75",
                        "150",
                        "-",
                        "-"});
            table12.AddRow(new string[] {
                        "2",
                        "5,50",
                        "200,2",
                        "1,5",
                        "2"});
#line 154
 testRunner.When("ich folgende Netzinformationen speichere", ((string)(null)), table12, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "FlächeTrottoirLinks"});
            table13.AddRow(new string[] {
                        "1",
                        "0"});
            table13.AddRow(new string[] {
                        "2",
                        "300,3"});
#line 159
 testRunner.Then("ist folgende FlächeTrottoirLinks im System:", ((string)(null)), table13, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System berechnet die Fläche Trottoir rechts (m²) nachdem der Data-Manager den" +
            " Strassenabschnitt gespeichert hat", new string[] {
                "Automatisch"}, SourceLine=166)]
        public virtual void DasSystemBerechnetDieFlacheTrottoirRechtsMNachdemDerData_ManagerDenStrassenabschnittGespeichertHat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Fläche Trottoir rechts (m²) nachdem der Data-Manager den" +
                    " Strassenabschnitt gespeichert hat", new string[] {
                        "Automatisch"});
#line 167
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table14.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 168
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table14, "Gegeben sei ");
#line 172
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 174
    testRunner.And("ich öffne die Seite \'Netzdefinition und Hauptabschnitt mit Strassennamen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "BreiteFahrbahn",
                        "Länge",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts"});
            table15.AddRow(new string[] {
                        "1",
                        "5,75",
                        "150",
                        "-",
                        "-"});
            table15.AddRow(new string[] {
                        "2",
                        "5,50",
                        "200,2",
                        "1,5",
                        "2"});
#line 176
 testRunner.When("ich folgende Netzinformationen speichere", ((string)(null)), table15, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "FlächeTrottoirRechts"});
            table16.AddRow(new string[] {
                        "1",
                        "0"});
            table16.AddRow(new string[] {
                        "2",
                        "400,4"});
#line 181
 testRunner.Then("ist folgende FlächeTrottoirRechts im System:", ((string)(null)), table16, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System berechnet die Fläche Trottoir (m²) nachdem der Data-Manager den Strass" +
            "enabschnitt gespeichert hat", new string[] {
                "Automatisch"}, SourceLine=188)]
        public virtual void DasSystemBerechnetDieFlacheTrottoirMNachdemDerData_ManagerDenStrassenabschnittGespeichertHat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Fläche Trottoir (m²) nachdem der Data-Manager den Strass" +
                    "enabschnitt gespeichert hat", new string[] {
                        "Automatisch"});
#line 189
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table17.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 190
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table17, "Gegeben sei ");
#line 194
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 196
    testRunner.And("ich öffne die Seite \'Netzdefinition und Hauptabschnitt mit Strassennamen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "BreiteFahrbahn",
                        "Länge",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts"});
            table18.AddRow(new string[] {
                        "1",
                        "5,75",
                        "150",
                        "-",
                        "-"});
            table18.AddRow(new string[] {
                        "2",
                        "5,50",
                        "200,2",
                        "1,5",
                        "2"});
            table18.AddRow(new string[] {
                        "3",
                        "5",
                        "120",
                        "3",
                        "-"});
            table18.AddRow(new string[] {
                        "4",
                        "5",
                        "350",
                        "-",
                        "1,5"});
#line 198
 testRunner.When("ich folgende Netzinformationen speichere", ((string)(null)), table18, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "FlächeTrottoir"});
            table19.AddRow(new string[] {
                        "1",
                        "0"});
            table19.AddRow(new string[] {
                        "2",
                        "700,7"});
            table19.AddRow(new string[] {
                        "3",
                        "360"});
            table19.AddRow(new string[] {
                        "4",
                        "525"});
#line 205
 testRunner.Then("ist folgende FlächeTrottoir im System:", ((string)(null)), table19, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Strassenabschnitte über die Übersichtstabelle löschen", new string[] {
                "Automatisch"}, SourceLine=214)]
        public virtual void DerData_ManagerKannStrassenabschnitteUberDieUbersichtstabelleLoschen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann Strassenabschnitte über die Übersichtstabelle löschen", new string[] {
                        "Automatisch"});
#line 215
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table20.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 216
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table20, "Gegeben sei ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Abschnittsnummer"});
            table21.AddRow(new string[] {
                        "1",
                        "Bahnstrasse",
                        "Nr 11.",
                        "Nr. 22",
                        "IC",
                        "Beton",
                        "5,75",
                        "150",
                        "KeinTrottoir",
                        "-",
                        "-",
                        "Gemeinde",
                        "Mitterndorf",
                        "1"});
            table21.AddRow(new string[] {
                        "2",
                        "Moosgasse",
                        "-",
                        "-",
                        "IB",
                        "Asphalt",
                        "5,50",
                        "200,2",
                        "BeideSeiten",
                        "1,5",
                        "2",
                        "Gemeinde",
                        "Ortsteil Mossbrunn",
                        "1"});
#line 220
 testRunner.And("für Mandant \'Mandant_1\' existieren folgende Netzinformationen:", ((string)(null)), table21, "Und ");
#line 225
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 227
    testRunner.And("ich öffne die Seite \'Netzdefinition und Hauptabschnitt mit Strassennamen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 229
 testRunner.When("ich Netzinformationen für ID \'2\' lösche", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Abschnittsnummer"});
            table22.AddRow(new string[] {
                        "1",
                        "Bahnstrasse",
                        "Nr 11.",
                        "Nr. 22",
                        "IC",
                        "Beton",
                        "5,75",
                        "150",
                        "KeinTrottoir",
                        "-",
                        "-",
                        "Gemeinde",
                        "Mitterndorf",
                        "1"});
#line 231
 testRunner.Then("sind folgende Netzinformationen im System:", ((string)(null)), table22, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void DasSystemSchlagtAufgrundDerSelektiertenBelastungskategorieEineStandardbreiteBreiteFahrbahnBreiteTrottoirLinksUndBreiteTrottoirRechtsVor(string tF, string belastungskategorieTyp, string defaultBreiteFahrbahn, string defaultBreiteTrottoirLinks, string defaultBreiteTrottoirRechts, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Manuell"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System schlägt aufgrund der selektierten Belastungskategorie eine Standardbre" +
                    "ite (Breite Fahrbahn, Breite Trottoir links und Breite Trottoir rechts) vor", @__tags);
#line 238
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table23.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 240
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table23, "Gegeben sei ");
#line 244
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 246
    testRunner.And("ich öffne die Seite \'Netzdefinition und Hauptabschnitt mit Strassennamen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 248
 testRunner.When(string.Format("ich Belastungskategorie \'{0}\' selektiere", belastungskategorieTyp), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 250
 testRunner.Then(string.Format("ist folgende DefaultBreiteFahrbahn \'{0}\', DefaultBreiteTrottoirLinks \'{1}\' und De" +
                        "faultBreiteTrottoirRechts \'{2}\' vorgeschlagen", defaultBreiteFahrbahn, defaultBreiteTrottoirLinks, defaultBreiteTrottoirRechts), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System schlägt aufgrund der selektierten Belastungskategorie eine Standardbre" +
            "ite (Breite Fahrbahn, Breite Trottoir links und Breite Trottoir rechts) vor, 1", new string[] {
                "Manuell"}, SourceLine=253)]
        public virtual void DasSystemSchlagtAufgrundDerSelektiertenBelastungskategorieEineStandardbreiteBreiteFahrbahnBreiteTrottoirLinksUndBreiteTrottoirRechtsVor_1()
        {
            this.DasSystemSchlagtAufgrundDerSelektiertenBelastungskategorieEineStandardbreiteBreiteFahrbahnBreiteTrottoirLinksUndBreiteTrottoirRechtsVor("1", "IA", "4,50", "-", "1,5", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System schlägt aufgrund der selektierten Belastungskategorie eine Standardbre" +
            "ite (Breite Fahrbahn, Breite Trottoir links und Breite Trottoir rechts) vor, 2", new string[] {
                "Manuell"}, SourceLine=253)]
        public virtual void DasSystemSchlagtAufgrundDerSelektiertenBelastungskategorieEineStandardbreiteBreiteFahrbahnBreiteTrottoirLinksUndBreiteTrottoirRechtsVor_2()
        {
            this.DasSystemSchlagtAufgrundDerSelektiertenBelastungskategorieEineStandardbreiteBreiteFahrbahnBreiteTrottoirLinksUndBreiteTrottoirRechtsVor("2", "IB", "5,50", "1,5", "1,5", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System schlägt aufgrund der selektierten Belastungskategorie eine Standardbre" +
            "ite (Breite Fahrbahn, Breite Trottoir links und Breite Trottoir rechts) vor, 3", new string[] {
                "Manuell"}, SourceLine=253)]
        public virtual void DasSystemSchlagtAufgrundDerSelektiertenBelastungskategorieEineStandardbreiteBreiteFahrbahnBreiteTrottoirLinksUndBreiteTrottoirRechtsVor_3()
        {
            this.DasSystemSchlagtAufgrundDerSelektiertenBelastungskategorieEineStandardbreiteBreiteFahrbahnBreiteTrottoirLinksUndBreiteTrottoirRechtsVor("3", "IC", "5,75", "-", "-", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System schlägt aufgrund der selektierten Belastungskategorie eine Standardbre" +
            "ite (Breite Fahrbahn, Breite Trottoir links und Breite Trottoir rechts) vor, 4", new string[] {
                "Manuell"}, SourceLine=253)]
        public virtual void DasSystemSchlagtAufgrundDerSelektiertenBelastungskategorieEineStandardbreiteBreiteFahrbahnBreiteTrottoirLinksUndBreiteTrottoirRechtsVor_4()
        {
            this.DasSystemSchlagtAufgrundDerSelektiertenBelastungskategorieEineStandardbreiteBreiteFahrbahnBreiteTrottoirLinksUndBreiteTrottoirRechtsVor("4", "II", "7,00", "2", "2", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System schlägt aufgrund der selektierten Belastungskategorie eine Standardbre" +
            "ite (Breite Fahrbahn, Breite Trottoir links und Breite Trottoir rechts) vor, 5", new string[] {
                "Manuell"}, SourceLine=253)]
        public virtual void DasSystemSchlagtAufgrundDerSelektiertenBelastungskategorieEineStandardbreiteBreiteFahrbahnBreiteTrottoirLinksUndBreiteTrottoirRechtsVor_5()
        {
            this.DasSystemSchlagtAufgrundDerSelektiertenBelastungskategorieEineStandardbreiteBreiteFahrbahnBreiteTrottoirLinksUndBreiteTrottoirRechtsVor("5", "III", "7,00", "2,5", "2,5", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System schlägt aufgrund der selektierten Belastungskategorie eine Standardbre" +
            "ite (Breite Fahrbahn, Breite Trottoir links und Breite Trottoir rechts) vor, 6", new string[] {
                "Manuell"}, SourceLine=253)]
        public virtual void DasSystemSchlagtAufgrundDerSelektiertenBelastungskategorieEineStandardbreiteBreiteFahrbahnBreiteTrottoirLinksUndBreiteTrottoirRechtsVor_6()
        {
            this.DasSystemSchlagtAufgrundDerSelektiertenBelastungskategorieEineStandardbreiteBreiteFahrbahnBreiteTrottoirLinksUndBreiteTrottoirRechtsVor("6", "IV", "14,00", "2,5", "2,5", ((string[])(null)));
#line hidden
        }
        
        public virtual void DieDefaultWerteWerdenBeiAnderungDerBelastungskategorieVomSystemNurDannNeuGesetztWennDerData_MangerDenUrsprunglichenDefaultWertNochNichtVerandertHat(string tF, string id, string belastungskategorieTyp, string defaultBreiteFahrbahn, string defaultBreiteTrottoirLinks, string defaultBreiteTrottoirRechts, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Manuell"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Die Default Werte werden bei Änderung der Belastungskategorie vom System nur dann" +
                    " neu gesetzt, wenn der Data-Manger den ursprünglichen Default Wert noch nicht ve" +
                    "rändert hat", @__tags);
#line 264
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table24.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 266
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table24, "Gegeben sei ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Belastungskategorie",
                        "BreiteFahrbahn",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts"});
            table25.AddRow(new string[] {
                        "1",
                        "IA",
                        "4,5",
                        "-",
                        "1,5"});
            table25.AddRow(new string[] {
                        "2",
                        "IB",
                        "5,50",
                        "1,5",
                        "1,5"});
            table25.AddRow(new string[] {
                        "3",
                        "IC",
                        "5,75",
                        "-",
                        "-"});
            table25.AddRow(new string[] {
                        "4",
                        "II",
                        "7,00",
                        "2",
                        "2"});
            table25.AddRow(new string[] {
                        "5",
                        "III",
                        "7,00",
                        "2,5",
                        "2,5"});
            table25.AddRow(new string[] {
                        "6",
                        "IV",
                        "14,00",
                        "2,5",
                        "2,5"});
            table25.AddRow(new string[] {
                        "7",
                        "IA",
                        "4",
                        "-",
                        "1,5"});
            table25.AddRow(new string[] {
                        "8",
                        "IB",
                        "5,50",
                        "2",
                        "1,5"});
            table25.AddRow(new string[] {
                        "9",
                        "IC",
                        "5,75",
                        "-",
                        "1"});
            table25.AddRow(new string[] {
                        "10",
                        "II",
                        "5",
                        "1",
                        "1"});
            table25.AddRow(new string[] {
                        "11",
                        "III",
                        "7,5",
                        "2,5",
                        "2,5"});
            table25.AddRow(new string[] {
                        "12",
                        "IV",
                        "14,00",
                        "2",
                        "2"});
#line 270
 testRunner.And("für Mandant \'Mandant_1\' existieren folgende Netzinformationen:", ((string)(null)), table25, "Und ");
#line 285
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 287
    testRunner.And("ich öffne die Seite \'Netzdefinition und Hauptabschnitt mit Strassennamen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 290
 testRunner.When(string.Format("ich Belastungskategorie \'{0}\' ändere", belastungskategorieTyp), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 292
 testRunner.Then(string.Format("ist folgende DefaultBreiteFahrbahn \'{0}\', DefaultBreiteTrottoirLinks \'{1}\' und De" +
                        "faultBreiteTrottoirRechts \'{2}\' vorgeschlagen", defaultBreiteFahrbahn, defaultBreiteTrottoirLinks, defaultBreiteTrottoirRechts), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Die Default Werte werden bei Änderung der Belastungskategorie vom System nur dann" +
            " neu gesetzt, wenn der Data-Manger den ursprünglichen Default Wert noch nicht ve" +
            "rändert hat, 1", new string[] {
                "Manuell"}, SourceLine=295)]
        public virtual void DieDefaultWerteWerdenBeiAnderungDerBelastungskategorieVomSystemNurDannNeuGesetztWennDerData_MangerDenUrsprunglichenDefaultWertNochNichtVerandertHat_1()
        {
            this.DieDefaultWerteWerdenBeiAnderungDerBelastungskategorieVomSystemNurDannNeuGesetztWennDerData_MangerDenUrsprunglichenDefaultWertNochNichtVerandertHat("1", "1", "IB", "5,50", "1,5", "1,5", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Die Default Werte werden bei Änderung der Belastungskategorie vom System nur dann" +
            " neu gesetzt, wenn der Data-Manger den ursprünglichen Default Wert noch nicht ve" +
            "rändert hat, 2", new string[] {
                "Manuell"}, SourceLine=295)]
        public virtual void DieDefaultWerteWerdenBeiAnderungDerBelastungskategorieVomSystemNurDannNeuGesetztWennDerData_MangerDenUrsprunglichenDefaultWertNochNichtVerandertHat_2()
        {
            this.DieDefaultWerteWerdenBeiAnderungDerBelastungskategorieVomSystemNurDannNeuGesetztWennDerData_MangerDenUrsprunglichenDefaultWertNochNichtVerandertHat("2", "2", "IC", "5,75", "-", "-", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Die Default Werte werden bei Änderung der Belastungskategorie vom System nur dann" +
            " neu gesetzt, wenn der Data-Manger den ursprünglichen Default Wert noch nicht ve" +
            "rändert hat, 3", new string[] {
                "Manuell"}, SourceLine=295)]
        public virtual void DieDefaultWerteWerdenBeiAnderungDerBelastungskategorieVomSystemNurDannNeuGesetztWennDerData_MangerDenUrsprunglichenDefaultWertNochNichtVerandertHat_3()
        {
            this.DieDefaultWerteWerdenBeiAnderungDerBelastungskategorieVomSystemNurDannNeuGesetztWennDerData_MangerDenUrsprunglichenDefaultWertNochNichtVerandertHat("3", "3", "II", "7,00", "2", "2", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Die Default Werte werden bei Änderung der Belastungskategorie vom System nur dann" +
            " neu gesetzt, wenn der Data-Manger den ursprünglichen Default Wert noch nicht ve" +
            "rändert hat, 4", new string[] {
                "Manuell"}, SourceLine=295)]
        public virtual void DieDefaultWerteWerdenBeiAnderungDerBelastungskategorieVomSystemNurDannNeuGesetztWennDerData_MangerDenUrsprunglichenDefaultWertNochNichtVerandertHat_4()
        {
            this.DieDefaultWerteWerdenBeiAnderungDerBelastungskategorieVomSystemNurDannNeuGesetztWennDerData_MangerDenUrsprunglichenDefaultWertNochNichtVerandertHat("4", "4", "III", "7,00", "2,5", "2,5", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Die Default Werte werden bei Änderung der Belastungskategorie vom System nur dann" +
            " neu gesetzt, wenn der Data-Manger den ursprünglichen Default Wert noch nicht ve" +
            "rändert hat, 5", new string[] {
                "Manuell"}, SourceLine=295)]
        public virtual void DieDefaultWerteWerdenBeiAnderungDerBelastungskategorieVomSystemNurDannNeuGesetztWennDerData_MangerDenUrsprunglichenDefaultWertNochNichtVerandertHat_5()
        {
            this.DieDefaultWerteWerdenBeiAnderungDerBelastungskategorieVomSystemNurDannNeuGesetztWennDerData_MangerDenUrsprunglichenDefaultWertNochNichtVerandertHat("5", "5", "IV", "14,00", "2,5", "2,5", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Die Default Werte werden bei Änderung der Belastungskategorie vom System nur dann" +
            " neu gesetzt, wenn der Data-Manger den ursprünglichen Default Wert noch nicht ve" +
            "rändert hat, 6", new string[] {
                "Manuell"}, SourceLine=295)]
        public virtual void DieDefaultWerteWerdenBeiAnderungDerBelastungskategorieVomSystemNurDannNeuGesetztWennDerData_MangerDenUrsprunglichenDefaultWertNochNichtVerandertHat_6()
        {
            this.DieDefaultWerteWerdenBeiAnderungDerBelastungskategorieVomSystemNurDannNeuGesetztWennDerData_MangerDenUrsprunglichenDefaultWertNochNichtVerandertHat("6", "6", "IA", "4,50", "-", "1,5", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Die Default Werte werden bei Änderung der Belastungskategorie vom System nur dann" +
            " neu gesetzt, wenn der Data-Manger den ursprünglichen Default Wert noch nicht ve" +
            "rändert hat, 7", new string[] {
                "Manuell"}, SourceLine=295)]
        public virtual void DieDefaultWerteWerdenBeiAnderungDerBelastungskategorieVomSystemNurDannNeuGesetztWennDerData_MangerDenUrsprunglichenDefaultWertNochNichtVerandertHat_7()
        {
            this.DieDefaultWerteWerdenBeiAnderungDerBelastungskategorieVomSystemNurDannNeuGesetztWennDerData_MangerDenUrsprunglichenDefaultWertNochNichtVerandertHat("7", "7", "IB", "4", "-", "1,5", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Die Default Werte werden bei Änderung der Belastungskategorie vom System nur dann" +
            " neu gesetzt, wenn der Data-Manger den ursprünglichen Default Wert noch nicht ve" +
            "rändert hat, 8", new string[] {
                "Manuell"}, SourceLine=295)]
        public virtual void DieDefaultWerteWerdenBeiAnderungDerBelastungskategorieVomSystemNurDannNeuGesetztWennDerData_MangerDenUrsprunglichenDefaultWertNochNichtVerandertHat_8()
        {
            this.DieDefaultWerteWerdenBeiAnderungDerBelastungskategorieVomSystemNurDannNeuGesetztWennDerData_MangerDenUrsprunglichenDefaultWertNochNichtVerandertHat("8", "8", "IC", "5,50", "2", "1,5", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Die Default Werte werden bei Änderung der Belastungskategorie vom System nur dann" +
            " neu gesetzt, wenn der Data-Manger den ursprünglichen Default Wert noch nicht ve" +
            "rändert hat, 9", new string[] {
                "Manuell"}, SourceLine=295)]
        public virtual void DieDefaultWerteWerdenBeiAnderungDerBelastungskategorieVomSystemNurDannNeuGesetztWennDerData_MangerDenUrsprunglichenDefaultWertNochNichtVerandertHat_9()
        {
            this.DieDefaultWerteWerdenBeiAnderungDerBelastungskategorieVomSystemNurDannNeuGesetztWennDerData_MangerDenUrsprunglichenDefaultWertNochNichtVerandertHat("9", "9", "II", "5,75", "-", "1", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Die Default Werte werden bei Änderung der Belastungskategorie vom System nur dann" +
            " neu gesetzt, wenn der Data-Manger den ursprünglichen Default Wert noch nicht ve" +
            "rändert hat, 10", new string[] {
                "Manuell"}, SourceLine=295)]
        public virtual void DieDefaultWerteWerdenBeiAnderungDerBelastungskategorieVomSystemNurDannNeuGesetztWennDerData_MangerDenUrsprunglichenDefaultWertNochNichtVerandertHat_10()
        {
            this.DieDefaultWerteWerdenBeiAnderungDerBelastungskategorieVomSystemNurDannNeuGesetztWennDerData_MangerDenUrsprunglichenDefaultWertNochNichtVerandertHat("10", "10", "III", "5", "1", "1", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Die Default Werte werden bei Änderung der Belastungskategorie vom System nur dann" +
            " neu gesetzt, wenn der Data-Manger den ursprünglichen Default Wert noch nicht ve" +
            "rändert hat, 11", new string[] {
                "Manuell"}, SourceLine=295)]
        public virtual void DieDefaultWerteWerdenBeiAnderungDerBelastungskategorieVomSystemNurDannNeuGesetztWennDerData_MangerDenUrsprunglichenDefaultWertNochNichtVerandertHat_11()
        {
            this.DieDefaultWerteWerdenBeiAnderungDerBelastungskategorieVomSystemNurDannNeuGesetztWennDerData_MangerDenUrsprunglichenDefaultWertNochNichtVerandertHat("11", "11", "IV", "7,5", "2,5", "2,5", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Die Default Werte werden bei Änderung der Belastungskategorie vom System nur dann" +
            " neu gesetzt, wenn der Data-Manger den ursprünglichen Default Wert noch nicht ve" +
            "rändert hat, 12", new string[] {
                "Manuell"}, SourceLine=295)]
        public virtual void DieDefaultWerteWerdenBeiAnderungDerBelastungskategorieVomSystemNurDannNeuGesetztWennDerData_MangerDenUrsprunglichenDefaultWertNochNichtVerandertHat_12()
        {
            this.DieDefaultWerteWerdenBeiAnderungDerBelastungskategorieVomSystemNurDannNeuGesetztWennDerData_MangerDenUrsprunglichenDefaultWertNochNichtVerandertHat("12", "12", "IA", "14,00", "2", "2", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Die Übersichtstabelle ist nach Strassennamen und Abschnittsnummer sortiert", new string[] {
                "Manuell"}, SourceLine=311)]
        public virtual void DieUbersichtstabelleIstNachStrassennamenUndAbschnittsnummerSortiert()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Die Übersichtstabelle ist nach Strassennamen und Abschnittsnummer sortiert", new string[] {
                        "Manuell"});
#line 312
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void DerData_ManagerKannInEinemTextfeldNachStrassennamenSuchen(string tF, string filterkriterium, string idList, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automatisch"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann in einem Textfeld nach Strassennamen suchen", @__tags);
#line 317
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table26.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 318
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table26, "Gegeben sei ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname"});
            table27.AddRow(new string[] {
                        "1",
                        "Bahnstrasse"});
            table27.AddRow(new string[] {
                        "2",
                        "Hauptstrasse"});
            table27.AddRow(new string[] {
                        "3",
                        "Lagerstrasse"});
            table27.AddRow(new string[] {
                        "4",
                        "Moosgasse"});
            table27.AddRow(new string[] {
                        "5",
                        "Jägerstrasse"});
            table27.AddRow(new string[] {
                        "6",
                        "Hauptstrasse"});
            table27.AddRow(new string[] {
                        "7",
                        "Moosfeld"});
#line 322
 testRunner.And("für Mandant \'Mandant_1\' existieren folgende Netzinformationen:", ((string)(null)), table27, "Und ");
#line 332
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 334
    testRunner.And("ich öffne die Seite \'Netzdefinition und Hauptabschnitt mit Strassennamen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 336
 testRunner.When(string.Format("ich nach Filterkriterium \'{0}\' suche", filterkriterium), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 338
 testRunner.Then(string.Format("existieren folgende Netzinformationen in der Übersichtstabelle: \'{0}\'", idList), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann in einem Textfeld nach Strassennamen suchen, 1", new string[] {
                "Automatisch"}, SourceLine=341)]
        public virtual void DerData_ManagerKannInEinemTextfeldNachStrassennamenSuchen_1()
        {
            this.DerData_ManagerKannInEinemTextfeldNachStrassennamenSuchen("1", "Bahn", "1", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann in einem Textfeld nach Strassennamen suchen, 2", new string[] {
                "Automatisch"}, SourceLine=341)]
        public virtual void DerData_ManagerKannInEinemTextfeldNachStrassennamenSuchen_2()
        {
            this.DerData_ManagerKannInEinemTextfeldNachStrassennamenSuchen("2", "Moos", "4, 7", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann in einem Textfeld nach Strassennamen suchen, 3", new string[] {
                "Automatisch"}, SourceLine=341)]
        public virtual void DerData_ManagerKannInEinemTextfeldNachStrassennamenSuchen_3()
        {
            this.DerData_ManagerKannInEinemTextfeldNachStrassennamenSuchen("3", "Feld", "7", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann in einem Textfeld nach Strassennamen suchen, 4", new string[] {
                "Automatisch"}, SourceLine=341)]
        public virtual void DerData_ManagerKannInEinemTextfeldNachStrassennamenSuchen_4()
        {
            this.DerData_ManagerKannInEinemTextfeldNachStrassennamenSuchen("4", "Strasse", "1, 2, 3, 5, 6", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann in einem Textfeld nach Strassennamen suchen, 5", new string[] {
                "Automatisch"}, SourceLine=341)]
        public virtual void DerData_ManagerKannInEinemTextfeldNachStrassennamenSuchen_5()
        {
            this.DerData_ManagerKannInEinemTextfeldNachStrassennamenSuchen("5", "Jägerstrasse", "5", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann in einem Textfeld nach Strassennamen suchen, 6", new string[] {
                "Automatisch"}, SourceLine=341)]
        public virtual void DerData_ManagerKannInEinemTextfeldNachStrassennamenSuchen_6()
        {
            this.DerData_ManagerKannInEinemTextfeldNachStrassennamenSuchen("6", "Jaegerstrasse", "-", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann in einem Textfeld nach Strassennamen suchen, 7", new string[] {
                "Automatisch"}, SourceLine=341)]
        public virtual void DerData_ManagerKannInEinemTextfeldNachStrassennamenSuchen_7()
        {
            this.DerData_ManagerKannInEinemTextfeldNachStrassennamenSuchen("7", "Lagergasse", "-", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Archivierte Daten können nicht verändert werden", new string[] {
                "Manuell"}, SourceLine=352)]
        public virtual void ArchivierteDatenKonnenNichtVerandertWerden()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Archivierte Daten können nicht verändert werden", new string[] {
                        "Manuell"});
#line 353
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Werden Strassenabschnitte gelöscht, hat das keine Auswirkungen auf historische Da" +
            "ten", new string[] {
                "Manuell"}, SourceLine=357)]
        public virtual void WerdenStrassenabschnitteGeloschtHatDasKeineAuswirkungenAufHistorischeDaten()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Werden Strassenabschnitte gelöscht, hat das keine Auswirkungen auf historische Da" +
                    "ten", new string[] {
                        "Manuell"});
#line 358
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("N2 - Strassenabschnitte mit Strassennamen verwalten")]
    public partial class N2_StrassenabschnitteMitStrassennamenVerwaltenFeature_NUnit
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "N2.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "N2 - Strassenabschnitte mit Strassennamen verwalten", "\tAls Data-Manager\r\n\twill ich Strassenabschnitte mit Strassennamen verwalten\r\n\tdam" +
                    "it ich einen Überblick über mein Strassennetz bekomme und ich die erfassten Info" +
                    "rmationen als Grundlage für die Zustandserfassung verwenden kann", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann Strassenabschnitte erfassen")]
        [NUnit.Framework.CategoryAttribute("Automatisch")]
        [NUnit.Framework.TestCaseAttribute("1", "Bahnstrasse", "Nr 11.", "Nr. 22", "IC", "Beton", "5,75", "150", "KeinTrottoir", "-", "-", "Privat", "Mitterndorf", "1", "Nein", "-", "Gutfall", new string[0])]
        [NUnit.Framework.TestCaseAttribute("2", "Moosgasse", "-", "-", "IB", "Asphalt", "5,50", "200,2", "BeideSeiten", "1,5", "2", "Gemeinde", "Ortsteil Mossbrunn", "1", "Nein", "-", "Gutfall", new string[0])]
        [NUnit.Framework.TestCaseAttribute("3", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "702,5", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Nein", "-", "Gutfall", new string[0])]
        [NUnit.Framework.TestCaseAttribute("4", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "702,5", "Links", "2,1", "-", "Gemeinde", "Ortsteil Gramatneusiedl", "0", "Nein", "-", "Gutfall", new string[0])]
        [NUnit.Framework.TestCaseAttribute("5", "-", "Anfang", "Ende", "IB", "Asphalt", "5,50", "200,2", "BeideSeiten", "1,5", "2", "Gemeinde", "Ortsteil Mossbrunn", "1", "Ja", "Strassenname", "Strassenname ist Pflichtfeld", new string[0])]
        [NUnit.Framework.TestCaseAttribute("6", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "702,25", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "Länge", "Ungültige Länge max. 1 Nachkommastellen", new string[0])]
        [NUnit.Framework.TestCaseAttribute("7", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7,525", "702,5", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteFahrbahn", "Ungültige BreiteFahrbahn max. 2 Nachkommastellen", new string[0])]
        [NUnit.Framework.TestCaseAttribute("8", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "-25", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "Länge", "Ungültige Länge < 0", new string[0])]
        [NUnit.Framework.TestCaseAttribute("9", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "-25,1", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "Länge", "Ungültige Länge < 0", new string[0])]
        [NUnit.Framework.TestCaseAttribute("10", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "-1", "702,5", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteFahrbahn", "Ungültige BreiteFahrbahn < 0", new string[0])]
        [NUnit.Framework.TestCaseAttribute("11", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "-0,1", "702,5", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteFahrbahn", "Ungültige BreiteFahrbahn < 0", new string[0])]
        [NUnit.Framework.TestCaseAttribute("12", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "0", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "Länge", "Ungültige Länge darf nicht 0 sein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("13", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "0", "702,5", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteFahrbahn", "Ungültige BreiteFahrbahn darf nicht 0 sein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("14", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "702,5", "Rechts", "-", "-2", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteTrottoirRechts", "Ungültige BreiteTrottoirRechts < 0", new string[0])]
        [NUnit.Framework.TestCaseAttribute("15", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "702,5", "Links", "-2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteTrottoirLinks", "Ungültige BreiteTrottoirLinks < 0", new string[0])]
        [NUnit.Framework.TestCaseAttribute("16", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "702,5", "Rechts", "-", "2", "Korporation", "Ortsteil Gramatneusiedl", "-1", "Ja", "Abschnittsnummer", "Ungültige Abschnittsnummer < 0", new string[0])]
        [NUnit.Framework.TestCaseAttribute("17", "Moosgasse", "Anfang", "Ende", "-", "Asphalt", "5,50", "200,2", "BeideSeiten", "1,5", "2", "Gemeinde", "Ortsteil Mossbrunn", "1", "Ja", "Belastungskategorie", "Belastungskategorie ist Pflichtfeld", null, Category="Manuell")]
        [NUnit.Framework.TestCaseAttribute("18", "Moosgasse", "Anfang", "Ende", "IB", "-", "5,50", "200,2", "BeideSeiten", "1,5", "2", "Gemeinde", "Ortsteil Mossbrunn", "1", "Ja", "Belagsart", "Belagsart ist Pflichtfeld", null, Category="Manuell")]
        [NUnit.Framework.TestCaseAttribute("19", "Moosgasse", "Anfang", "Ende", "IB", "Asphalt", "5,50", "-", "BeideSeiten", "1,5", "2", "Gemeinde", "Ortsteil Mossbrunn", "1", "Ja", "BreiteFahrbahn", "BreiteFahrbahn ist Pflichtfeld", null, Category="Manuell")]
        [NUnit.Framework.TestCaseAttribute("20", "Moosgasse", "Anfang", "Ende", "IB", "Asphalt", "-", "200,2", "BeideSeiten", "1,5", "2", "Gemeinde", "Ortsteil Moosbrunn", "1", "Ja", "Länge", "Länge ist Pflichtfeld", null, Category="Manuell")]
        [NUnit.Framework.TestCaseAttribute("21", "Moosgasse", "Anfang", "Ende", "IB", "Asphalt", "5,50", "200,2", "BeideSeiten", "1,5", "2", "-", "Ortsteil Mossbrunn", "1", "Ja", "Strasseneigentümer", "Strasseneigentümer ist Pflichtfeld", null, Category="Manuell")]
        [NUnit.Framework.TestCaseAttribute("22", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "702,5", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "1,5", "Ja", "Abschnittsnummer", "Ungültige Abschnittsnummer keine Nachkommastellen", null, Category="Manuell")]
        [NUnit.Framework.TestCaseAttribute("23", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "702,5", "Links", "2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "-1,2", "Ja", "Abschnittsnummer", "Ungültige Abschnittsnummer < 0", null, Category="Manuell")]
        [NUnit.Framework.TestCaseAttribute("24", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "ABC", "Links", "2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "Länge", "Ungültige Länge string", null, Category="Manuell")]
        [NUnit.Framework.TestCaseAttribute("25", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "!*-12", "Links", "2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "Länge", "Ungültige Länge string", null, Category="Manuell")]
        [NUnit.Framework.TestCaseAttribute("26", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "12s1", "Links", "2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "Länge", "Ungültige Länge string", null, Category="Manuell")]
        [NUnit.Framework.TestCaseAttribute("27", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "ab", "120", "Links", "2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteFahrbahn", "Ungültige BreiteFahrbahn string", null, Category="Manuell")]
        [NUnit.Framework.TestCaseAttribute("28", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "1s", "120", "Links", "2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteFahrbahn", "Ungültige BreiteFahrbahn string", null, Category="Manuell")]
        [NUnit.Framework.TestCaseAttribute("29", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "?`F", "120", "Links", "2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteFahrbahn", "Ungültige BreiteFahrbahn string", null, Category="Manuell")]
        [NUnit.Framework.TestCaseAttribute("30", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "120", "Links", "asb", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteTrottoirLinks", "Ungültige BreiteTrottoirLinks string", null, Category="Manuell")]
        [NUnit.Framework.TestCaseAttribute("31", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "120", "Links", "2da", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteTrottoirLinks", "Ungültige BreiteTrottoirLinks string", null, Category="Manuell")]
        [NUnit.Framework.TestCaseAttribute("32", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "120", "Links", "\"&1", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteTrottoirLinks", "Ungültige BreiteTrottoirLinks string", null, Category="Manuell")]
        [NUnit.Framework.TestCaseAttribute("33", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "120", "Rechts", "-", "asb", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteTrottoirRechts", "Ungültige BreiteTrottoirRechts string", null, Category="Manuell")]
        [NUnit.Framework.TestCaseAttribute("34", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "120", "Rechts", "-", "2da", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteTrottoirRechts", "Ungültige BreiteTrottoirRechts string", null, Category="Manuell")]
        [NUnit.Framework.TestCaseAttribute("35", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "120", "Rechts", "-", "\"&1", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteTrottoirRechts", "Ungültige BreiteTrottoirRechts string", null, Category="Manuell")]
        [NUnit.Framework.TestCaseAttribute("36", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "120", "Rechts", "-", "2", "Korporation", "Ortsteil Gramatneusiedl", "de", "Ja", "Abschnittsnummer", "Ungültige Abschnittsnummer string", null, Category="Manuell")]
        [NUnit.Framework.TestCaseAttribute("37", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "120", "Rechts", "-", "2", "Korporation", "Ortsteil Gramatneusiedl", "1c", "Ja", "Abschnittsnummer", "Ungültige Abschnittsnummer string", null, Category="Manuell")]
        [NUnit.Framework.TestCaseAttribute("38", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "120", "Rechts", "-", "2", "Korporation", "Ortsteil Gramatneusiedl", "7;", "Ja", "Abschnittsnummer", "Ungültige Abschnittsnummer string", null, Category="Manuell")]
        public virtual void DerData_ManagerKannStrassenabschnitteErfassen(
                    string tF, 
                    string strassenname, 
                    string bezeichnungVon, 
                    string bezeichnungBis, 
                    string belastungskategorie, 
                    string belag, 
                    string breiteFahrbahn, 
                    string lange, 
                    string trottoir, 
                    string breiteTrottoirLinks, 
                    string breiteTrottoirRechts, 
                    string strasseneigentumer, 
                    string ortsbezeichnung, 
                    string abschnittsnummer, 
                    string validationsfehler, 
                    string feldbezeichnung, 
                    string kommentar, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automatisch"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann Strassenabschnitte erfassen", @__tags);
#line 9
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table1.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 10
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table1, "Gegeben sei ");
#line 14
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 16
    testRunner.And("ich öffne die Seite \'Netzdefinition und Hauptabschnitt mit Strassennamen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Abschnittsnummer"});
            table2.AddRow(new string[] {
                        string.Format("{0}", strassenname),
                        string.Format("{0}", bezeichnungVon),
                        string.Format("{0}", bezeichnungBis),
                        string.Format("{0}", belastungskategorie),
                        string.Format("{0}", belag),
                        string.Format("{0}", breiteFahrbahn),
                        string.Format("{0}", lange),
                        string.Format("{0}", trottoir),
                        string.Format("{0}", breiteTrottoirLinks),
                        string.Format("{0}", breiteTrottoirRechts),
                        string.Format("{0}", strasseneigentumer),
                        string.Format("{0}", ortsbezeichnung),
                        string.Format("{0}", abschnittsnummer)});
#line 18
 testRunner.When("ich folgende Netzinformationen eingebe:", ((string)(null)), table2, "Wenn ");
#line 22
 testRunner.Then(string.Format("liefert Feldbezeichnung \'{0}\' einen Validationsfehler \'{1}\'", feldbezeichnung, validationsfehler), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Abschnittsnummer"});
            table3.AddRow(new string[] {
                        string.Format("{0}", strassenname),
                        string.Format("{0}", bezeichnungVon),
                        string.Format("{0}", bezeichnungBis),
                        string.Format("{0}", belastungskategorie),
                        string.Format("{0}", belag),
                        string.Format("{0}", breiteFahrbahn),
                        string.Format("{0}", lange),
                        string.Format("{0}", trottoir),
                        string.Format("{0}", breiteTrottoirLinks),
                        string.Format("{0}", breiteTrottoirRechts),
                        string.Format("{0}", strasseneigentumer),
                        string.Format("{0}", ortsbezeichnung),
                        string.Format("{0}", abschnittsnummer)});
#line 24
 testRunner.Then("sind folgende Netzinformationen im System:", ((string)(null)), table3, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann alle Attribute des Strassenabschnitts bearbeiten")]
        [NUnit.Framework.CategoryAttribute("Automatisch")]
        [NUnit.Framework.TestCaseAttribute("1", "1", "Bahnstrasse", "Nr 11.", "Nr. 22", "IC", "Beton", "5,75", "150", "KeinTrottoir", "-", "-", "Privat", "Mitterndorf", "1", "Nein", "-", "Gutfall", new string[0])]
        [NUnit.Framework.TestCaseAttribute("2", "1", "Moosgasse", "-", "-", "IB", "Asphalt", "5,50", "200,2", "BeideSeiten", "1,5", "2", "Gemeinde", "Ortsteil Mossbrunn", "1", "Nein", "-", "Gutfall", new string[0])]
        [NUnit.Framework.TestCaseAttribute("3", "1", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "702,5", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Nein", "-", "Gutfall", new string[0])]
        [NUnit.Framework.TestCaseAttribute("4", "1", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "702,5", "Links", "2,1", "-", "Gemeinde", "Ortsteil Gramatneusiedl", "0", "Nein", "-", "Gutfall", new string[0])]
        [NUnit.Framework.TestCaseAttribute("5", "1", "-", "Anfang", "Ende", "IB", "Asphalt", "5,50", "200,2", "BeideSeiten", "1,5", "2", "Gemeinde", "Ortsteil Mossbrunn", "1", "Ja", "Strassenname", "Strassenname ist Pflichtfeld", new string[0])]
        [NUnit.Framework.TestCaseAttribute("10", "1", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "702,25", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "Länge", "Ungültige Länge max. 1 Nachkommastellen", new string[0])]
        [NUnit.Framework.TestCaseAttribute("11", "1", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7,525", "702,5", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteFahrbahn", "Ungültige BreiteFahrbahn max. 2 Nachkommastellen", new string[0])]
        [NUnit.Framework.TestCaseAttribute("12", "1", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "-25", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "Länge", "Ungültige Länge < 0", new string[0])]
        [NUnit.Framework.TestCaseAttribute("13", "1", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "-25,1", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "Länge", "Ungültige Länge < 0", new string[0])]
        [NUnit.Framework.TestCaseAttribute("14", "1", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "-1", "702,5", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteFahrbahn", "Ungültige BreiteFahrbahn < 0", new string[0])]
        [NUnit.Framework.TestCaseAttribute("15", "1", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "-0,1", "702,5", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteFahrbahn", "Ungültige BreiteFahrbahn < 0", new string[0])]
        [NUnit.Framework.TestCaseAttribute("16", "1", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "0", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "Länge", "Ungültige Länge darf nicht 0 sein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("17", "1", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "0", "702,5", "NochNichtErfasst", "-", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteFahrbahn", "Ungültige BreiteFahrbahn darf nicht 0 sein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("18", "1", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "702,5", "Rechts", "-", "-2", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteTrottoirRechts", "Ungültige BreiteTrottoirRechts < 0", new string[0])]
        [NUnit.Framework.TestCaseAttribute("19", "1", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "702,5", "Links", "-2,1", "-", "Korporation", "Ortsteil Gramatneusiedl", "-", "Ja", "BreiteTrottoirLinks", "Ungültige BreiteTrottoirLinks < 0", new string[0])]
        [NUnit.Framework.TestCaseAttribute("21", "1", "Hauptstrasse", "Kirche", "Post", "II", "Beton", "7", "702,5", "Rechts", "-", "2", "Korporation", "Ortsteil Gramatneusiedl", "-1", "Ja", "Abschnittsnummer", "Ungültige Abschnittsnummer < 0", new string[0])]
        public virtual void DerData_ManagerKannAlleAttributeDesStrassenabschnittsBearbeiten(
                    string tF, 
                    string id, 
                    string strassenname, 
                    string bezeichnungVon, 
                    string bezeichnungBis, 
                    string belastungskategorie, 
                    string belag, 
                    string breiteFahrbahn, 
                    string lange, 
                    string trottoir, 
                    string breiteTrottoirLinks, 
                    string breiteTrottoirRechts, 
                    string strasseneigentumer, 
                    string ortsbezeichnung, 
                    string abschnittsnummer, 
                    string validationsfehler, 
                    string feldbezeichnung, 
                    string kommentar, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automatisch"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann alle Attribute des Strassenabschnitts bearbeiten", @__tags);
#line 78
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table4.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 79
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table4, "Gegeben sei ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Abschnittsnummer"});
            table5.AddRow(new string[] {
                        "1",
                        "Bahnstrasse",
                        "Nr 11.",
                        "Nr. 22",
                        "IC",
                        "Beton",
                        "5,75",
                        "150",
                        "KeinTrottoir",
                        "-",
                        "-",
                        "Privat",
                        "Mitterndorf",
                        "1"});
#line 83
 testRunner.And("für Mandant \'Mandant_1\' existieren folgende Netzinformationen:", ((string)(null)), table5, "Und ");
#line 87
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 89
    testRunner.And("ich öffne die Seite \'Netzdefinition und Hauptabschnitt mit Strassennamen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Abschnittsnummer"});
            table6.AddRow(new string[] {
                        string.Format("{0}", strassenname),
                        string.Format("{0}", bezeichnungVon),
                        string.Format("{0}", bezeichnungBis),
                        string.Format("{0}", belastungskategorie),
                        string.Format("{0}", belag),
                        string.Format("{0}", breiteFahrbahn),
                        string.Format("{0}", lange),
                        string.Format("{0}", trottoir),
                        string.Format("{0}", breiteTrottoirLinks),
                        string.Format("{0}", breiteTrottoirRechts),
                        string.Format("{0}", strasseneigentumer),
                        string.Format("{0}", ortsbezeichnung),
                        string.Format("{0}", abschnittsnummer)});
#line 91
 testRunner.When("ich folgende Netzinformationen für ID \'1\' eingebe:", ((string)(null)), table6, "Wenn ");
#line 95
 testRunner.Then(string.Format("liefert Feldbezeichnung \'{0}\' einen Validationsfehler \'{1}\'", feldbezeichnung, validationsfehler), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Abschnittsnummer"});
            table7.AddRow(new string[] {
                        "1",
                        string.Format("{0}", strassenname),
                        string.Format("{0}", bezeichnungVon),
                        string.Format("{0}", bezeichnungBis),
                        string.Format("{0}", belastungskategorie),
                        string.Format("{0}", belag),
                        string.Format("{0}", breiteFahrbahn),
                        string.Format("{0}", lange),
                        string.Format("{0}", trottoir),
                        string.Format("{0}", breiteTrottoirLinks),
                        string.Format("{0}", breiteTrottoirRechts),
                        string.Format("{0}", strasseneigentumer),
                        string.Format("{0}", ortsbezeichnung),
                        string.Format("{0}", abschnittsnummer)});
#line 97
 testRunner.Then("sind folgende Netzinformationen im System:", ((string)(null)), table7, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System berechnet die Fläche Fahrbahn (m²) nachdem der Data-Manager den Strass" +
            "enabschnitt gespeichert hat")]
        [NUnit.Framework.CategoryAttribute("Automatisch")]
        public virtual void DasSystemBerechnetDieFlacheFahrbahnMNachdemDerData_ManagerDenStrassenabschnittGespeichertHat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Fläche Fahrbahn (m²) nachdem der Data-Manager den Strass" +
                    "enabschnitt gespeichert hat", new string[] {
                        "Automatisch"});
#line 123
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table8.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 124
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table8, "Gegeben sei ");
#line 128
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 130
    testRunner.And("ich öffne die Seite \'Netzdefinition und Hauptabschnitt mit Strassennamen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "BreiteFahrbahn",
                        "Länge",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts"});
            table9.AddRow(new string[] {
                        "1",
                        "5,75",
                        "150",
                        "-",
                        "-"});
            table9.AddRow(new string[] {
                        "2",
                        "5,50",
                        "200,2",
                        "1,5",
                        "2"});
#line 132
 testRunner.When("ich folgende Netzinformationen speichere", ((string)(null)), table9, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "FlächeFahrbahn"});
            table10.AddRow(new string[] {
                        "1",
                        "862,5"});
            table10.AddRow(new string[] {
                        "2",
                        "1101,1"});
#line 137
 testRunner.Then("ist folgende FlächeFahrbahn im System:", ((string)(null)), table10, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System berechnet die Fläche Trottoir links (m²) nachdem der Data-Manager den " +
            "Strassenabschnitt gespeichert hat")]
        [NUnit.Framework.CategoryAttribute("Automatisch")]
        public virtual void DasSystemBerechnetDieFlacheTrottoirLinksMNachdemDerData_ManagerDenStrassenabschnittGespeichertHat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Fläche Trottoir links (m²) nachdem der Data-Manager den " +
                    "Strassenabschnitt gespeichert hat", new string[] {
                        "Automatisch"});
#line 145
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table11.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 146
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table11, "Gegeben sei ");
#line 150
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 152
    testRunner.And("ich öffne die Seite \'Netzdefinition und Hauptabschnitt mit Strassennamen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "BreiteFahrbahn",
                        "Länge",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts"});
            table12.AddRow(new string[] {
                        "1",
                        "5,75",
                        "150",
                        "-",
                        "-"});
            table12.AddRow(new string[] {
                        "2",
                        "5,50",
                        "200,2",
                        "1,5",
                        "2"});
#line 154
 testRunner.When("ich folgende Netzinformationen speichere", ((string)(null)), table12, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "FlächeTrottoirLinks"});
            table13.AddRow(new string[] {
                        "1",
                        "0"});
            table13.AddRow(new string[] {
                        "2",
                        "300,3"});
#line 159
 testRunner.Then("ist folgende FlächeTrottoirLinks im System:", ((string)(null)), table13, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System berechnet die Fläche Trottoir rechts (m²) nachdem der Data-Manager den" +
            " Strassenabschnitt gespeichert hat")]
        [NUnit.Framework.CategoryAttribute("Automatisch")]
        public virtual void DasSystemBerechnetDieFlacheTrottoirRechtsMNachdemDerData_ManagerDenStrassenabschnittGespeichertHat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Fläche Trottoir rechts (m²) nachdem der Data-Manager den" +
                    " Strassenabschnitt gespeichert hat", new string[] {
                        "Automatisch"});
#line 167
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table14.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 168
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table14, "Gegeben sei ");
#line 172
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 174
    testRunner.And("ich öffne die Seite \'Netzdefinition und Hauptabschnitt mit Strassennamen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "BreiteFahrbahn",
                        "Länge",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts"});
            table15.AddRow(new string[] {
                        "1",
                        "5,75",
                        "150",
                        "-",
                        "-"});
            table15.AddRow(new string[] {
                        "2",
                        "5,50",
                        "200,2",
                        "1,5",
                        "2"});
#line 176
 testRunner.When("ich folgende Netzinformationen speichere", ((string)(null)), table15, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "FlächeTrottoirRechts"});
            table16.AddRow(new string[] {
                        "1",
                        "0"});
            table16.AddRow(new string[] {
                        "2",
                        "400,4"});
#line 181
 testRunner.Then("ist folgende FlächeTrottoirRechts im System:", ((string)(null)), table16, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System berechnet die Fläche Trottoir (m²) nachdem der Data-Manager den Strass" +
            "enabschnitt gespeichert hat")]
        [NUnit.Framework.CategoryAttribute("Automatisch")]
        public virtual void DasSystemBerechnetDieFlacheTrottoirMNachdemDerData_ManagerDenStrassenabschnittGespeichertHat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Fläche Trottoir (m²) nachdem der Data-Manager den Strass" +
                    "enabschnitt gespeichert hat", new string[] {
                        "Automatisch"});
#line 189
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table17.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 190
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table17, "Gegeben sei ");
#line 194
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 196
    testRunner.And("ich öffne die Seite \'Netzdefinition und Hauptabschnitt mit Strassennamen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "BreiteFahrbahn",
                        "Länge",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts"});
            table18.AddRow(new string[] {
                        "1",
                        "5,75",
                        "150",
                        "-",
                        "-"});
            table18.AddRow(new string[] {
                        "2",
                        "5,50",
                        "200,2",
                        "1,5",
                        "2"});
            table18.AddRow(new string[] {
                        "3",
                        "5",
                        "120",
                        "3",
                        "-"});
            table18.AddRow(new string[] {
                        "4",
                        "5",
                        "350",
                        "-",
                        "1,5"});
#line 198
 testRunner.When("ich folgende Netzinformationen speichere", ((string)(null)), table18, "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "FlächeTrottoir"});
            table19.AddRow(new string[] {
                        "1",
                        "0"});
            table19.AddRow(new string[] {
                        "2",
                        "700,7"});
            table19.AddRow(new string[] {
                        "3",
                        "360"});
            table19.AddRow(new string[] {
                        "4",
                        "525"});
#line 205
 testRunner.Then("ist folgende FlächeTrottoir im System:", ((string)(null)), table19, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann Strassenabschnitte über die Übersichtstabelle löschen")]
        [NUnit.Framework.CategoryAttribute("Automatisch")]
        public virtual void DerData_ManagerKannStrassenabschnitteUberDieUbersichtstabelleLoschen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann Strassenabschnitte über die Übersichtstabelle löschen", new string[] {
                        "Automatisch"});
#line 215
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table20.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 216
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table20, "Gegeben sei ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Abschnittsnummer"});
            table21.AddRow(new string[] {
                        "1",
                        "Bahnstrasse",
                        "Nr 11.",
                        "Nr. 22",
                        "IC",
                        "Beton",
                        "5,75",
                        "150",
                        "KeinTrottoir",
                        "-",
                        "-",
                        "Gemeinde",
                        "Mitterndorf",
                        "1"});
            table21.AddRow(new string[] {
                        "2",
                        "Moosgasse",
                        "-",
                        "-",
                        "IB",
                        "Asphalt",
                        "5,50",
                        "200,2",
                        "BeideSeiten",
                        "1,5",
                        "2",
                        "Gemeinde",
                        "Ortsteil Mossbrunn",
                        "1"});
#line 220
 testRunner.And("für Mandant \'Mandant_1\' existieren folgende Netzinformationen:", ((string)(null)), table21, "Und ");
#line 225
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 227
    testRunner.And("ich öffne die Seite \'Netzdefinition und Hauptabschnitt mit Strassennamen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 229
 testRunner.When("ich Netzinformationen für ID \'2\' lösche", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Abschnittsnummer"});
            table22.AddRow(new string[] {
                        "1",
                        "Bahnstrasse",
                        "Nr 11.",
                        "Nr. 22",
                        "IC",
                        "Beton",
                        "5,75",
                        "150",
                        "KeinTrottoir",
                        "-",
                        "-",
                        "Gemeinde",
                        "Mitterndorf",
                        "1"});
#line 231
 testRunner.Then("sind folgende Netzinformationen im System:", ((string)(null)), table22, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System schlägt aufgrund der selektierten Belastungskategorie eine Standardbre" +
            "ite (Breite Fahrbahn, Breite Trottoir links und Breite Trottoir rechts) vor")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        [NUnit.Framework.TestCaseAttribute("1", "IA", "4,50", "-", "1,5", new string[0])]
        [NUnit.Framework.TestCaseAttribute("2", "IB", "5,50", "1,5", "1,5", new string[0])]
        [NUnit.Framework.TestCaseAttribute("3", "IC", "5,75", "-", "-", new string[0])]
        [NUnit.Framework.TestCaseAttribute("4", "II", "7,00", "2", "2", new string[0])]
        [NUnit.Framework.TestCaseAttribute("5", "III", "7,00", "2,5", "2,5", new string[0])]
        [NUnit.Framework.TestCaseAttribute("6", "IV", "14,00", "2,5", "2,5", new string[0])]
        public virtual void DasSystemSchlagtAufgrundDerSelektiertenBelastungskategorieEineStandardbreiteBreiteFahrbahnBreiteTrottoirLinksUndBreiteTrottoirRechtsVor(string tF, string belastungskategorieTyp, string defaultBreiteFahrbahn, string defaultBreiteTrottoirLinks, string defaultBreiteTrottoirRechts, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Manuell"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System schlägt aufgrund der selektierten Belastungskategorie eine Standardbre" +
                    "ite (Breite Fahrbahn, Breite Trottoir links und Breite Trottoir rechts) vor", @__tags);
#line 238
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table23.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 240
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table23, "Gegeben sei ");
#line 244
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 246
    testRunner.And("ich öffne die Seite \'Netzdefinition und Hauptabschnitt mit Strassennamen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 248
 testRunner.When(string.Format("ich Belastungskategorie \'{0}\' selektiere", belastungskategorieTyp), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 250
 testRunner.Then(string.Format("ist folgende DefaultBreiteFahrbahn \'{0}\', DefaultBreiteTrottoirLinks \'{1}\' und De" +
                        "faultBreiteTrottoirRechts \'{2}\' vorgeschlagen", defaultBreiteFahrbahn, defaultBreiteTrottoirLinks, defaultBreiteTrottoirRechts), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Die Default Werte werden bei Änderung der Belastungskategorie vom System nur dann" +
            " neu gesetzt, wenn der Data-Manger den ursprünglichen Default Wert noch nicht ve" +
            "rändert hat")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        [NUnit.Framework.TestCaseAttribute("1", "1", "IB", "5,50", "1,5", "1,5", new string[0])]
        [NUnit.Framework.TestCaseAttribute("2", "2", "IC", "5,75", "-", "-", new string[0])]
        [NUnit.Framework.TestCaseAttribute("3", "3", "II", "7,00", "2", "2", new string[0])]
        [NUnit.Framework.TestCaseAttribute("4", "4", "III", "7,00", "2,5", "2,5", new string[0])]
        [NUnit.Framework.TestCaseAttribute("5", "5", "IV", "14,00", "2,5", "2,5", new string[0])]
        [NUnit.Framework.TestCaseAttribute("6", "6", "IA", "4,50", "-", "1,5", new string[0])]
        [NUnit.Framework.TestCaseAttribute("7", "7", "IB", "4", "-", "1,5", new string[0])]
        [NUnit.Framework.TestCaseAttribute("8", "8", "IC", "5,50", "2", "1,5", new string[0])]
        [NUnit.Framework.TestCaseAttribute("9", "9", "II", "5,75", "-", "1", new string[0])]
        [NUnit.Framework.TestCaseAttribute("10", "10", "III", "5", "1", "1", new string[0])]
        [NUnit.Framework.TestCaseAttribute("11", "11", "IV", "7,5", "2,5", "2,5", new string[0])]
        [NUnit.Framework.TestCaseAttribute("12", "12", "IA", "14,00", "2", "2", new string[0])]
        public virtual void DieDefaultWerteWerdenBeiAnderungDerBelastungskategorieVomSystemNurDannNeuGesetztWennDerData_MangerDenUrsprunglichenDefaultWertNochNichtVerandertHat(string tF, string id, string belastungskategorieTyp, string defaultBreiteFahrbahn, string defaultBreiteTrottoirLinks, string defaultBreiteTrottoirRechts, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Manuell"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Die Default Werte werden bei Änderung der Belastungskategorie vom System nur dann" +
                    " neu gesetzt, wenn der Data-Manger den ursprünglichen Default Wert noch nicht ve" +
                    "rändert hat", @__tags);
#line 264
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table24.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 266
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table24, "Gegeben sei ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Belastungskategorie",
                        "BreiteFahrbahn",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts"});
            table25.AddRow(new string[] {
                        "1",
                        "IA",
                        "4,5",
                        "-",
                        "1,5"});
            table25.AddRow(new string[] {
                        "2",
                        "IB",
                        "5,50",
                        "1,5",
                        "1,5"});
            table25.AddRow(new string[] {
                        "3",
                        "IC",
                        "5,75",
                        "-",
                        "-"});
            table25.AddRow(new string[] {
                        "4",
                        "II",
                        "7,00",
                        "2",
                        "2"});
            table25.AddRow(new string[] {
                        "5",
                        "III",
                        "7,00",
                        "2,5",
                        "2,5"});
            table25.AddRow(new string[] {
                        "6",
                        "IV",
                        "14,00",
                        "2,5",
                        "2,5"});
            table25.AddRow(new string[] {
                        "7",
                        "IA",
                        "4",
                        "-",
                        "1,5"});
            table25.AddRow(new string[] {
                        "8",
                        "IB",
                        "5,50",
                        "2",
                        "1,5"});
            table25.AddRow(new string[] {
                        "9",
                        "IC",
                        "5,75",
                        "-",
                        "1"});
            table25.AddRow(new string[] {
                        "10",
                        "II",
                        "5",
                        "1",
                        "1"});
            table25.AddRow(new string[] {
                        "11",
                        "III",
                        "7,5",
                        "2,5",
                        "2,5"});
            table25.AddRow(new string[] {
                        "12",
                        "IV",
                        "14,00",
                        "2",
                        "2"});
#line 270
 testRunner.And("für Mandant \'Mandant_1\' existieren folgende Netzinformationen:", ((string)(null)), table25, "Und ");
#line 285
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 287
    testRunner.And("ich öffne die Seite \'Netzdefinition und Hauptabschnitt mit Strassennamen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 290
 testRunner.When(string.Format("ich Belastungskategorie \'{0}\' ändere", belastungskategorieTyp), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 292
 testRunner.Then(string.Format("ist folgende DefaultBreiteFahrbahn \'{0}\', DefaultBreiteTrottoirLinks \'{1}\' und De" +
                        "faultBreiteTrottoirRechts \'{2}\' vorgeschlagen", defaultBreiteFahrbahn, defaultBreiteTrottoirLinks, defaultBreiteTrottoirRechts), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Die Übersichtstabelle ist nach Strassennamen und Abschnittsnummer sortiert")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DieUbersichtstabelleIstNachStrassennamenUndAbschnittsnummerSortiert()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Die Übersichtstabelle ist nach Strassennamen und Abschnittsnummer sortiert", new string[] {
                        "Manuell"});
#line 312
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann in einem Textfeld nach Strassennamen suchen")]
        [NUnit.Framework.CategoryAttribute("Automatisch")]
        [NUnit.Framework.TestCaseAttribute("1", "Bahn", "1", new string[0])]
        [NUnit.Framework.TestCaseAttribute("2", "Moos", "4, 7", new string[0])]
        [NUnit.Framework.TestCaseAttribute("3", "Feld", "7", new string[0])]
        [NUnit.Framework.TestCaseAttribute("4", "Strasse", "1, 2, 3, 5, 6", new string[0])]
        [NUnit.Framework.TestCaseAttribute("5", "Jägerstrasse", "5", new string[0])]
        [NUnit.Framework.TestCaseAttribute("6", "Jaegerstrasse", "-", new string[0])]
        [NUnit.Framework.TestCaseAttribute("7", "Lagergasse", "-", new string[0])]
        public virtual void DerData_ManagerKannInEinemTextfeldNachStrassennamenSuchen(string tF, string filterkriterium, string idList, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Automatisch"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann in einem Textfeld nach Strassennamen suchen", @__tags);
#line 317
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table26.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 318
 testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table26, "Gegeben sei ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname"});
            table27.AddRow(new string[] {
                        "1",
                        "Bahnstrasse"});
            table27.AddRow(new string[] {
                        "2",
                        "Hauptstrasse"});
            table27.AddRow(new string[] {
                        "3",
                        "Lagerstrasse"});
            table27.AddRow(new string[] {
                        "4",
                        "Moosgasse"});
            table27.AddRow(new string[] {
                        "5",
                        "Jägerstrasse"});
            table27.AddRow(new string[] {
                        "6",
                        "Hauptstrasse"});
            table27.AddRow(new string[] {
                        "7",
                        "Moosfeld"});
#line 322
 testRunner.And("für Mandant \'Mandant_1\' existieren folgende Netzinformationen:", ((string)(null)), table27, "Und ");
#line 332
 testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 334
    testRunner.And("ich öffne die Seite \'Netzdefinition und Hauptabschnitt mit Strassennamen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 336
 testRunner.When(string.Format("ich nach Filterkriterium \'{0}\' suche", filterkriterium), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 338
 testRunner.Then(string.Format("existieren folgende Netzinformationen in der Übersichtstabelle: \'{0}\'", idList), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Archivierte Daten können nicht verändert werden")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void ArchivierteDatenKonnenNichtVerandertWerden()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Archivierte Daten können nicht verändert werden", new string[] {
                        "Manuell"});
#line 353
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Werden Strassenabschnitte gelöscht, hat das keine Auswirkungen auf historische Da" +
            "ten")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void WerdenStrassenabschnitteGeloschtHatDasKeineAuswirkungenAufHistorischeDaten()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Werden Strassenabschnitte gelöscht, hat das keine Auswirkungen auf historische Da" +
                    "ten", new string[] {
                        "Manuell"});
#line 358
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
