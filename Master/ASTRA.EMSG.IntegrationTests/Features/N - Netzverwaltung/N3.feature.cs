// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ASTRA.EMSG.IntegrationTests.Features.N_Netzverwaltung
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("N3 - Das Strassennetz aus Excel-Files importieren", Description="\tAls Data-Manager\r\n\twill ich das Strassennetz aus Excel-Files importieren\r\n\tdamit" +
        " ich Daten aus anderen Systemen übernehmen kann", SourceFile="Features\\N - Netzverwaltung\\N3.feature", SourceLine=0)]
    public partial class N3_DasStrassennetzAusExcel_FilesImportierenFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "N3.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "N3 - Das Strassennetz aus Excel-Files importieren", "\tAls Data-Manager\r\n\twill ich das Strassennetz aus Excel-Files importieren\r\n\tdamit" +
                    " ich Daten aus anderen Systemen übernehmen kann", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann neue Strassenabschnitte über ein Excel-File importieren", new string[] {
                "Automatisch"}, SourceLine=8)]
        public virtual void DerData_ManagerKannNeueStrassenabschnitteUberEinExcel_FileImportieren()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann neue Strassenabschnitte über ein Excel-File importieren", new string[] {
                        "Automatisch"});
#line 9
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table1.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 10
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table1, "Gegeben sei ");
#line 14
testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "ExternalId",
                        "Abschnittsnummer",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts"});
            table2.AddRow(new string[] {
                        "Kantonsstrasse",
                        "a",
                        "b",
                        "",
                        "",
                        "Gemeinde",
                        "Oberdorf",
                        "II",
                        "Beton",
                        "19,56",
                        "1800,0",
                        "KeinTrottoir",
                        "",
                        ""});
            table2.AddRow(new string[] {
                        "Kantonsstrasse",
                        "c",
                        "d",
                        "",
                        "",
                        "Gemeinde",
                        "Unterdorf",
                        "IV",
                        "Asphalt",
                        "19,00",
                        "5000,0",
                        "Links",
                        "2,32",
                        ""});
#line 16
testRunner.And("eine XLSX-Datei mit folgenden Zeilen (im ersten Tab):", ((string)(null)), table2, "Und ");
#line 20
testRunner.When("ich die XLSX-Datei importiere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "ExternalId",
                        "Abschnittsnummer",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts"});
            table3.AddRow(new string[] {
                        "Kantonsstrasse",
                        "a",
                        "b",
                        "-",
                        "-",
                        "Gemeinde",
                        "Oberdorf",
                        "II",
                        "Beton",
                        "19,56",
                        "1800,0",
                        "KeinTrottoir",
                        "-",
                        "-"});
            table3.AddRow(new string[] {
                        "Kantonsstrasse",
                        "c",
                        "d",
                        "-",
                        "-",
                        "Gemeinde",
                        "Unterdorf",
                        "IV",
                        "Asphalt",
                        "19,00",
                        "5000,0",
                        "Links",
                        "2,32",
                        "-"});
#line 21
testRunner.Then("sind folgende Netzinformationen im System:", ((string)(null)), table3, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann Attribute von Strassenabschnitten über ein Excel-File bearb" +
            "eiten", new string[] {
                "Automatisch"}, SourceLine=27)]
        public virtual void DerData_ManagerKannAttributeVonStrassenabschnittenUberEinExcel_FileBearbeiten()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann Attribute von Strassenabschnitten über ein Excel-File bearb" +
                    "eiten", new string[] {
                        "Automatisch"});
#line 28
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table4.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 29
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table4, "Gegeben sei ");
#line 33
testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "ExternalId",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts"});
            table5.AddRow(new string[] {
                        "Kantonsstrasse",
                        "a",
                        "b",
                        "-",
                        "KeinTrottoir",
                        "-",
                        "-"});
            table5.AddRow(new string[] {
                        "Landstrasse",
                        "c",
                        "d",
                        "-",
                        "Rechts",
                        "-",
                        "2,90"});
            table5.AddRow(new string[] {
                        "Hauptstrasse",
                        "e",
                        "f",
                        "-",
                        "NochNichtErfasst",
                        "-",
                        "-"});
#line 35
testRunner.And("für Mandant \'Mandant_1\' existieren folgende Netzinformationen:", ((string)(null)), table5, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "ExternalId",
                        "Abschnittsnummer",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts"});
            table6.AddRow(new string[] {
                        "Kantonsstrasse",
                        "a",
                        "b",
                        "",
                        "",
                        "Gemeinde",
                        "Oberdorf",
                        "II",
                        "Beton",
                        "19,56",
                        "1800,0",
                        "Links",
                        "2,50",
                        ""});
            table6.AddRow(new string[] {
                        "Kantonsstrasse",
                        "x",
                        "x",
                        "",
                        "",
                        "Gemeinde",
                        "Unterdorf",
                        "IV",
                        "Asphalt",
                        "19,00",
                        "5000,0",
                        "Links",
                        "2,32",
                        ""});
            table6.AddRow(new string[] {
                        "Landstrasse",
                        "c",
                        "d",
                        "",
                        "",
                        "Privat",
                        "Unterdorf",
                        "III",
                        "Asphalt",
                        "20,00",
                        "2500,0",
                        "KeinTrottoir",
                        "",
                        ""});
            table6.AddRow(new string[] {
                        "Hauptstrasse",
                        "j",
                        "j",
                        "",
                        "",
                        "Gemeinde",
                        "Unterdorf",
                        "II",
                        "Beton",
                        "18,00",
                        "1300,0",
                        "BeideSeiten",
                        "1,40",
                        "3,00"});
            table6.AddRow(new string[] {
                        "Hauptstrasse",
                        "e",
                        "f",
                        "",
                        "",
                        "Gemeinde",
                        "Oberdorf",
                        "IC",
                        "Beton",
                        "8,45",
                        "800,0",
                        "Rechts",
                        "",
                        "3"});
            table6.AddRow(new string[] {
                        "Hauptallee",
                        "k",
                        "k",
                        "",
                        "",
                        "Korporation",
                        "Flussnähe",
                        "IB",
                        "Asphalt",
                        "12,87",
                        "400,0",
                        "KeinTrottoir",
                        "",
                        ""});
#line 40
testRunner.And("eine XLSX-Datei mit folgenden Zeilen (im ersten Tab):", ((string)(null)), table6, "Und ");
#line 48
testRunner.When("ich die XLSX-Datei importiere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "ExternalId",
                        "Abschnittsnummer",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts"});
            table7.AddRow(new string[] {
                        "Kantonsstrasse",
                        "a",
                        "b",
                        "-",
                        "-",
                        "Gemeinde",
                        "Oberdorf",
                        "II",
                        "Beton",
                        "19,56",
                        "1800",
                        "Links",
                        "2,50",
                        "-"});
            table7.AddRow(new string[] {
                        "Kantonsstrasse",
                        "x",
                        "x",
                        "-",
                        "-",
                        "Gemeinde",
                        "Unterdorf",
                        "IV",
                        "Asphalt",
                        "19",
                        "5000",
                        "Links",
                        "2,32",
                        "-"});
            table7.AddRow(new string[] {
                        "Landstrasse",
                        "c",
                        "d",
                        "-",
                        "-",
                        "Privat",
                        "Unterdorf",
                        "III",
                        "Asphalt",
                        "20",
                        "2500",
                        "KeinTrottoir",
                        "-",
                        "-"});
            table7.AddRow(new string[] {
                        "Hauptstrasse",
                        "j",
                        "j",
                        "-",
                        "-",
                        "Gemeinde",
                        "Unterdorf",
                        "II",
                        "Beton",
                        "18",
                        "1300",
                        "BeideSeiten",
                        "1,40",
                        "3"});
            table7.AddRow(new string[] {
                        "Hauptstrasse",
                        "e",
                        "f",
                        "-",
                        "-",
                        "Gemeinde",
                        "Oberdorf",
                        "IC",
                        "Beton",
                        "8,45",
                        "800",
                        "Rechts",
                        "-",
                        "3"});
            table7.AddRow(new string[] {
                        "Hauptallee",
                        "k",
                        "k",
                        "-",
                        "-",
                        "Korporation",
                        "Flussnähe",
                        "IB",
                        "Asphalt",
                        "12,87",
                        "400",
                        "KeinTrottoir",
                        "-",
                        "-"});
#line 49
testRunner.Then("sind folgende Netzinformationen im System:", ((string)(null)), table7, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Die Struktur des Excel-Files ist flach", new string[] {
                "Manuell"}, SourceLine=60)]
        public virtual void DieStrukturDesExcel_FilesIstFlach()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Die Struktur des Excel-Files ist flach", new string[] {
                        "Manuell"});
#line 61
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table8.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 62
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table8, "Gegeben sei ");
#line 66
testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Tab",
                        "Strassenname",
                        "Bezeichnung von",
                        "Bezeichnung bis",
                        "Abschnittsnummer",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Belastungskategorie",
                        "Belag",
                        "Breite Fahrbahn (m)",
                        "Gesamtlänge (m)",
                        "Trottoir",
                        "Breite Trottoir links (m)",
                        "Breite Trottoir rechts (m)"});
            table9.AddRow(new string[] {
                        "1",
                        "Kantonsstrasse",
                        "0.2",
                        "2.0",
                        "",
                        "Gemeinde",
                        "Oberdorf",
                        "II",
                        "Beton",
                        "19.56",
                        "1800.0",
                        "kein Trottoir",
                        "0",
                        "0"});
            table9.AddRow(new string[] {
                        "1",
                        "Kantonsstrasse",
                        "2.0",
                        "7.0",
                        "",
                        "Gemeinde",
                        "Unterdorf",
                        "IV",
                        "Asphalt",
                        "19.00",
                        "5000.0",
                        "links",
                        "2.32",
                        "0"});
            table9.AddRow(new string[] {
                        "2",
                        "Landstrasse",
                        "0.0",
                        "2.5",
                        "",
                        "Privat",
                        "Unterdorf",
                        "III",
                        "Asphalt",
                        "20.00",
                        "2500.0",
                        "rechts",
                        "0.00",
                        "2.90"});
            table9.AddRow(new string[] {
                        "2",
                        "Hauptstrasse",
                        "1.2",
                        "2.5",
                        "",
                        "Gemeinde",
                        "Unterdorf",
                        "II",
                        "Beton",
                        "18.00",
                        "1300.0",
                        "beide",
                        "1.40",
                        "3.00"});
#line 68
testRunner.And("eine XLSX-Datei mit folgenden Zeilen:", ((string)(null)), table9, "Und ");
#line 74
testRunner.When("ich die XLSX-Datei importiere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Abschnittsnummer"});
            table10.AddRow(new string[] {
                        "Kantonsstrasse",
                        "0.2",
                        "2.0",
                        "II",
                        "Beton",
                        "19,56",
                        "1800",
                        "kein Trottoir",
                        "0",
                        "0",
                        "Gemeinde",
                        "Oberdorf",
                        ""});
            table10.AddRow(new string[] {
                        "Kantonsstrasse",
                        "2.0",
                        "7.0",
                        "IV",
                        "Asphalt",
                        "19",
                        "5000",
                        "links",
                        "2,32",
                        "0",
                        "Gemeinde",
                        "Unterdorf",
                        ""});
#line 75
testRunner.Then("sind folgende Netzinformationen im System:", ((string)(null)), table10, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System führt vor dem Import Validierungen durch (Kolonnenanzahl - zusätzliche" +
            " Kolonne)", new string[] {
                "Manuell"}, SourceLine=82)]
        public virtual void DasSystemFuhrtVorDemImportValidierungenDurchKolonnenanzahl_ZusatzlicheKolonne()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System führt vor dem Import Validierungen durch (Kolonnenanzahl - zusätzliche" +
                    " Kolonne)", new string[] {
                        "Manuell"});
#line 83
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table11.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 84
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table11, "Gegeben sei ");
#line 88
testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "Bezeichnung von",
                        "Bezeichnung bis",
                        "Abschnittsnummer",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Belastungskategorie",
                        "Belag",
                        "Breite Fahrbahn (m)",
                        "Gesamtlänge (m)",
                        "Trottoir",
                        "Breite Trottoir links (m)",
                        "Breite Trottoir rechts (m)",
                        "Winterdienst auszuführen"});
            table12.AddRow(new string[] {
                        "Kantonsstrasse",
                        "0.2",
                        "2.0",
                        "1",
                        "Gemeinde",
                        "Oberdorf",
                        "II",
                        "Beton",
                        "19.56",
                        "1800.0",
                        "kein Trottoir",
                        "0",
                        "0",
                        "Ja"});
            table12.AddRow(new string[] {
                        "Kantonsstrasse",
                        "2.0",
                        "7.0",
                        "2",
                        "Gemeinde",
                        "Unterdorf",
                        "IV",
                        "Asphalt",
                        "19.00",
                        "5000.0",
                        "links",
                        "2.32",
                        "0",
                        "Ja"});
            table12.AddRow(new string[] {
                        "Landstrasse",
                        "0.0",
                        "2.5",
                        "1",
                        "Privat",
                        "Unterdorf",
                        "III",
                        "Asphalt",
                        "20.00",
                        "2500.0",
                        "rechts",
                        "0.00",
                        "2.90",
                        "Teilw."});
            table12.AddRow(new string[] {
                        "Hauptstrasse",
                        "1.2",
                        "2.5",
                        "1",
                        "Gemeinde",
                        "Unterdorf",
                        "II",
                        "Beton",
                        "18.00",
                        "1300.0",
                        "beide",
                        "1.40",
                        "3.00",
                        "Teilw."});
            table12.AddRow(new string[] {
                        "Hauptstrasse",
                        "0.4",
                        "1.2",
                        "2",
                        "Gemeinde",
                        "Oberdorf",
                        "IC",
                        "Beton",
                        "8.45",
                        "800.0",
                        "Noch nicht erfasst",
                        "",
                        "",
                        "Nein"});
            table12.AddRow(new string[] {
                        "Hauptstrasse",
                        "0.0",
                        "0.4",
                        "3",
                        "Korporation",
                        "Flussnähe",
                        "IB",
                        "Asphalt",
                        "12.87",
                        "400.0",
                        "kein Trottoir",
                        "0",
                        "0",
                        "Ja"});
#line 90
testRunner.And("eine XLSX-Datei mit folgenden Zeilen (im ersten Tab):", ((string)(null)), table12, "Und ");
#line 98
testRunner.When("ich die XLSX-Datei importiere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 99
testRunner.Then("liefert der Import einen Validationsfehler", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System führt vor dem Import Validierungen durch (Kolonnenanzahl - fehlende Ko" +
            "lonne)", new string[] {
                "Manuell"}, SourceLine=101)]
        public virtual void DasSystemFuhrtVorDemImportValidierungenDurchKolonnenanzahl_FehlendeKolonne()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System führt vor dem Import Validierungen durch (Kolonnenanzahl - fehlende Ko" +
                    "lonne)", new string[] {
                        "Manuell"});
#line 102
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table13.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 103
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table13, "Gegeben sei ");
#line 107
testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "Bezeichnung von",
                        "Bezeichnung bis",
                        "Abschnittsnummer",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Belastungskategorie",
                        "Belag",
                        "Breite Fahrbahn (m)",
                        "Gesamtlänge (m)",
                        "Trottoir",
                        "Breite Trottoir links (m)"});
            table14.AddRow(new string[] {
                        "Kantonsstrasse",
                        "0.2",
                        "2.0",
                        "1",
                        "Gemeinde",
                        "Oberdorf",
                        "II",
                        "Beton",
                        "19.56",
                        "1800.0",
                        "kein Trottoir",
                        "0"});
            table14.AddRow(new string[] {
                        "Kantonsstrasse",
                        "2.0",
                        "7.0",
                        "2",
                        "Gemeinde",
                        "Unterdorf",
                        "IV",
                        "Asphalt",
                        "19.00",
                        "5000.0",
                        "links",
                        "2.32"});
            table14.AddRow(new string[] {
                        "Landstrasse",
                        "0.0",
                        "2.5",
                        "1",
                        "Privat",
                        "Unterdorf",
                        "III",
                        "Asphalt",
                        "20.00",
                        "2500.0",
                        "rechts",
                        "0.00"});
            table14.AddRow(new string[] {
                        "Hauptstrasse",
                        "1.2",
                        "2.5",
                        "1",
                        "Gemeinde",
                        "Unterdorf",
                        "II",
                        "Beton",
                        "18.00",
                        "1300.0",
                        "beide",
                        "1.40"});
            table14.AddRow(new string[] {
                        "Hauptstrasse",
                        "0.4",
                        "1.2",
                        "2",
                        "Gemeinde",
                        "Oberdorf",
                        "IC",
                        "Beton",
                        "8.45",
                        "800.0",
                        "Noch nicht erfasst",
                        ""});
            table14.AddRow(new string[] {
                        "Hauptstrasse",
                        "0.0",
                        "0.4",
                        "3",
                        "Korporation",
                        "Flussnähe",
                        "IB",
                        "Asphalt",
                        "12.87",
                        "400.0",
                        "kein Trottoir",
                        "0"});
#line 109
testRunner.And("eine XLSX-Datei mit folgenden Zeilen (im ersten Tab):", ((string)(null)), table14, "Und ");
#line 117
testRunner.When("ich die XLSX-Datei importiere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 118
testRunner.Then("liefert der Import einen Validationsfehler", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System führt vor dem Import Validierungen durch (Verletzung Business Logik)", new string[] {
                "Automatisch"}, SourceLine=122)]
        public virtual void DasSystemFuhrtVorDemImportValidierungenDurchVerletzungBusinessLogik()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System führt vor dem Import Validierungen durch (Verletzung Business Logik)", new string[] {
                        "Automatisch"});
#line 123
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table15.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 124
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table15, "Gegeben sei ");
#line 128
testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "ExternalId",
                        "Abschnittsnummer",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts"});
            table16.AddRow(new string[] {
                        "Kantonsstrasse",
                        "a",
                        "a",
                        "",
                        "1",
                        "Gemeinde",
                        "Oberdorf",
                        "II",
                        "Beton",
                        "19,56",
                        "1800,0",
                        "KeinTrottoir",
                        "0",
                        "0"});
            table16.AddRow(new string[] {
                        "Kantonsstrasse",
                        "s",
                        "s",
                        "",
                        "2",
                        "Gemeinde",
                        "Unterdorf",
                        "IV",
                        "Asphalt",
                        "19,00",
                        "5000,0",
                        "Links",
                        "2,32",
                        "0"});
            table16.AddRow(new string[] {
                        "Landstrasse",
                        "d",
                        "d",
                        "",
                        "1",
                        "Privat",
                        "Unterdorf",
                        "",
                        "Asphalt",
                        "20,00",
                        "2500,0",
                        "Rechts",
                        "0,00",
                        "2,90"});
            table16.AddRow(new string[] {
                        "Hauptstrasse",
                        "f",
                        "f",
                        "",
                        "1",
                        "Gemeinde",
                        "Unterdorf",
                        "II",
                        "Beton",
                        "18,00",
                        "1300,0",
                        "BeideSeiten",
                        "1,40",
                        "3,00"});
            table16.AddRow(new string[] {
                        "Hauptstrasse",
                        "g",
                        "g",
                        "",
                        "2",
                        "Gemeinde",
                        "Oberdorf",
                        "",
                        "Beton",
                        "8,45",
                        "800,0",
                        "NochNichtErfasst",
                        "",
                        ""});
            table16.AddRow(new string[] {
                        "Hauptstrasse",
                        "h",
                        "h",
                        "",
                        "3",
                        "Korporation",
                        "Flussnähe",
                        "IB",
                        "Asphalt",
                        "12,87",
                        "400,0",
                        "KeinTrottoir",
                        "0",
                        "0"});
            table16.AddRow(new string[] {
                        "Hauptstrasse",
                        "j",
                        "j",
                        "",
                        "4",
                        "Gemeind",
                        "Flussnähe",
                        "III",
                        "Asphalt",
                        "20,00",
                        "300,0",
                        "Rechts",
                        "0",
                        "3"});
#line 131
testRunner.And("eine XLSX-Datei mit folgenden Zeilen (im ersten Tab):", ((string)(null)), table16, "Und ");
#line 140
testRunner.When("ich die XLSX-Datei importiere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 141
testRunner.Then("liefert der Import drei Validationsfehler", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Wird eine Validierung verletzt, führt das System den Import nicht durch", new string[] {
                "Automatisch"}, SourceLine=145)]
        public virtual void WirdEineValidierungVerletztFuhrtDasSystemDenImportNichtDurch()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Wird eine Validierung verletzt, führt das System den Import nicht durch", new string[] {
                        "Automatisch"});
#line 146
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table17.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 147
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table17, "Gegeben sei ");
#line 151
testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts"});
            table18.AddRow(new string[] {
                        "Kantonsstrasse",
                        "a",
                        "b",
                        "KeinTrottoir",
                        "0",
                        "0"});
            table18.AddRow(new string[] {
                        "Landstrasse",
                        "c",
                        "d",
                        "Rechts",
                        "0",
                        "2,90"});
            table18.AddRow(new string[] {
                        "Hauptstrasse",
                        "e",
                        "f",
                        "NochNichtErfasst",
                        "-",
                        "-"});
#line 153
testRunner.And("für Mandant \'Mandant_1\' existieren folgende Netzinformationen:", ((string)(null)), table18, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Abschnittsnummer",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts"});
            table19.AddRow(new string[] {
                        "Kantonsstrasse",
                        "a",
                        "b",
                        "",
                        "Gemeinde",
                        "Oberdorf",
                        "",
                        "Beton",
                        "19,56",
                        "1800,0",
                        "Links",
                        "2,50",
                        "0"});
            table19.AddRow(new string[] {
                        "Kantonsstrasse",
                        "x",
                        "x",
                        "",
                        "Gemeinde",
                        "Unterdorf",
                        "",
                        "Asphalt",
                        "19,00",
                        "5000,0",
                        "Links",
                        "2,32",
                        "0"});
            table19.AddRow(new string[] {
                        "Landstrasse",
                        "c",
                        "d",
                        "",
                        "Privat",
                        "Unterdorf",
                        "",
                        "Asphalt",
                        "20,00",
                        "2500,0",
                        "KeinTrottoir",
                        "0",
                        "0"});
            table19.AddRow(new string[] {
                        "Hauptstrasse",
                        "j",
                        "j",
                        "",
                        "Gemeinde",
                        "Unterdorf",
                        "",
                        "Beton",
                        "18,00",
                        "1300,0",
                        "BeideSeiten",
                        "1,40",
                        "3,00"});
            table19.AddRow(new string[] {
                        "Hauptstrasse",
                        "e",
                        "f",
                        "",
                        "Gemeinde",
                        "Oberdorf",
                        "",
                        "Beton",
                        "8,45",
                        "800,0",
                        "Rechts",
                        "0",
                        "3"});
            table19.AddRow(new string[] {
                        "Hauptallee",
                        "k",
                        "k",
                        "",
                        "Korporation",
                        "Flussnähe",
                        "",
                        "Asphalt",
                        "12,87",
                        "400,0",
                        "KeinTrottoir",
                        "0",
                        "0"});
#line 160
testRunner.And("eine XLSX-Datei mit folgenden Zeilen (im ersten Tab):", ((string)(null)), table19, "Und ");
#line 168
testRunner.When("ich die XLSX-Datei importiere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts"});
            table20.AddRow(new string[] {
                        "Kantonsstrasse",
                        "a",
                        "b",
                        "KeinTrottoir",
                        "0",
                        "0"});
            table20.AddRow(new string[] {
                        "Landstrasse",
                        "c",
                        "d",
                        "Rechts",
                        "0",
                        "2,90"});
            table20.AddRow(new string[] {
                        "Hauptstrasse",
                        "e",
                        "f",
                        "NochNichtErfasst",
                        "-",
                        "-"});
#line 169
testRunner.Then("sind folgende Netzinformationen im System:", ((string)(null)), table20, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager muss sehen, ob ein Import erfolgreich war oder nicht", new string[] {
                "Manuell"}, SourceLine=177)]
        public virtual void DerData_ManagerMussSehenObEinImportErfolgreichWarOderNicht()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager muss sehen, ob ein Import erfolgreich war oder nicht", new string[] {
                        "Manuell"});
#line 178
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table21.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 179
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table21, "Gegeben sei ");
#line 183
testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "Bezeichnung von",
                        "Bezeichnung bis",
                        "Abschnittsnummer",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Belastungskategorie",
                        "Belag",
                        "Breite Fahrbahn (m)",
                        "Gesamtlänge (m)",
                        "Trottoir",
                        "Breite Trottoir links (m)",
                        "Breite Trottoir rechts (m)"});
            table22.AddRow(new string[] {
                        "Kantonsstrasse",
                        "0.2",
                        "2.0",
                        "1",
                        "Gemeinde",
                        "Oberdorf",
                        "II",
                        "Beton",
                        "19.56",
                        "Tausend",
                        "kein Trottoir",
                        "0",
                        "0"});
#line 185
testRunner.And("eine XLSX-Datei mit folgenden Zeilen (im ersten Tab):", ((string)(null)), table22, "Und ");
#line 188
testRunner.When("ich die XLSX-Datei importiere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 189
testRunner.Then("liefert der Import einen Validationsfehler in Zelle J2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager muss warten bis der Import abgeschlossen ist, erst dann kann er " +
            "mit EMSG weiterarbeiten", new string[] {
                "Manuell"}, SourceLine=193)]
        public virtual void DerData_ManagerMussWartenBisDerImportAbgeschlossenIstErstDannKannErMitEMSGWeiterarbeiten()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager muss warten bis der Import abgeschlossen ist, erst dann kann er " +
                    "mit EMSG weiterarbeiten", new string[] {
                        "Manuell"});
#line 194
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Bereits erfasste Strassenabschnitte bleiben bestehen", new string[] {
                "Automatisch"}, SourceLine=198)]
        public virtual void BereitsErfassteStrassenabschnitteBleibenBestehen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Bereits erfasste Strassenabschnitte bleiben bestehen", new string[] {
                        "Automatisch"});
#line 199
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table23.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 200
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table23, "Gegeben sei ");
#line 204
testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "ExternalId",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts"});
            table24.AddRow(new string[] {
                        "Kantonsstrasse",
                        "a",
                        "a",
                        "-",
                        "KeinTrottoir",
                        "-",
                        "-"});
            table24.AddRow(new string[] {
                        "Landstrasse",
                        "b",
                        "b",
                        "-",
                        "Rechts",
                        "-",
                        "2,90"});
            table24.AddRow(new string[] {
                        "Hauptstrasse",
                        "c",
                        "c",
                        "-",
                        "NochNichtErfasst",
                        "-",
                        "-"});
#line 206
testRunner.And("für Mandant \'Mandant_1\' existieren folgende Netzinformationen:", ((string)(null)), table24, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "ExternalId",
                        "Abschnittsnummer",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts"});
            table25.AddRow(new string[] {
                        "Hauptstrasse",
                        "j",
                        "j",
                        "",
                        "",
                        "Gemeinde",
                        "Unterdorf",
                        "II",
                        "Beton",
                        "18,00",
                        "1300,0",
                        "BeideSeiten",
                        "1,40",
                        "3,00"});
            table25.AddRow(new string[] {
                        "Hauptstrasse",
                        "e",
                        "f",
                        "",
                        "",
                        "Gemeinde",
                        "Oberdorf",
                        "IC",
                        "Beton",
                        "8,45",
                        "800,0",
                        "Rechts",
                        "",
                        "3,00"});
            table25.AddRow(new string[] {
                        "Hauptallee",
                        "k",
                        "k",
                        "",
                        "",
                        "Korporation",
                        "Flussnähe",
                        "IB",
                        "Asphalt",
                        "12,87",
                        "400,0",
                        "KeinTrottoir",
                        "",
                        ""});
#line 211
testRunner.And("eine XLSX-Datei mit folgenden Zeilen (im ersten Tab):", ((string)(null)), table25, "Und ");
#line 216
testRunner.When("ich die XLSX-Datei importiere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "ExternalId"});
            table26.AddRow(new string[] {
                        "Kantonsstrasse",
                        "a",
                        "a",
                        "-"});
            table26.AddRow(new string[] {
                        "Landstrasse",
                        "b",
                        "b",
                        "-"});
            table26.AddRow(new string[] {
                        "Hauptstrasse",
                        "c",
                        "c",
                        "-"});
            table26.AddRow(new string[] {
                        "Hauptstrasse",
                        "j",
                        "j",
                        "-"});
            table26.AddRow(new string[] {
                        "Hauptstrasse",
                        "e",
                        "f",
                        "-"});
            table26.AddRow(new string[] {
                        "Hauptallee",
                        "k",
                        "k",
                        "-"});
#line 217
testRunner.Then("sind folgende Netzinformationen im System:", ((string)(null)), table26, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System berechnet die Flächen (‚Fläche Fahrbahn‘, ‚Fläche Trottoir links‘, ‚Fl" +
            "äche Trottoir rechts‘, ‚Fläche Trottoir‘) analog zur Erfassung von Strassenabsch" +
            "nitten über das UI", new string[] {
                "Manuell"}, SourceLine=228)]
        public virtual void DasSystemBerechnetDieFlachenFlacheFahrbahnFlacheTrottoirLinksFlacheTrottoirRechtsFlacheTrottoirAnalogZurErfassungVonStrassenabschnittenUberDasUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Flächen (‚Fläche Fahrbahn‘, ‚Fläche Trottoir links‘, ‚Fl" +
                    "äche Trottoir rechts‘, ‚Fläche Trottoir‘) analog zur Erfassung von Strassenabsch" +
                    "nitten über das UI", new string[] {
                        "Manuell"});
#line 229
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table27.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 230
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table27, "Gegeben sei ");
#line 234
testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "Bezeichnung von",
                        "Bezeichnung bis",
                        "Abschnittsnummer",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Belastungskategorie",
                        "Belag",
                        "Breite Fahrbahn (m)",
                        "Gesamtlänge (m)",
                        "Trottoir",
                        "Breite Trottoir links (m)",
                        "Breite Trottoir rechts (m)"});
            table28.AddRow(new string[] {
                        "Kantonsstrasse",
                        "0.2",
                        "2.0",
                        "",
                        "Gemeinde",
                        "Oberdorf",
                        "II",
                        "Beton",
                        "19.56",
                        "1800.0",
                        "kein Trottoir",
                        "0",
                        "0"});
            table28.AddRow(new string[] {
                        "Kantonsstrasse",
                        "2.0",
                        "7.0",
                        "",
                        "Gemeinde",
                        "Unterdorf",
                        "IV",
                        "Asphalt",
                        "19.00",
                        "5000.0",
                        "links",
                        "2.32",
                        "0"});
            table28.AddRow(new string[] {
                        "Landstrasse",
                        "0.0",
                        "2.5",
                        "",
                        "Privat",
                        "Unterdorf",
                        "III",
                        "Asphalt",
                        "20.00",
                        "2500.0",
                        "rechts",
                        "0.00",
                        "2.90"});
            table28.AddRow(new string[] {
                        "Hauptstrasse",
                        "1.2",
                        "2.5",
                        "",
                        "Gemeinde",
                        "Unterdorf",
                        "II",
                        "Beton",
                        "18.00",
                        "1300.0",
                        "beide",
                        "1.40",
                        "3.00"});
            table28.AddRow(new string[] {
                        "Hauptstrasse",
                        "0.4",
                        "1.2",
                        "",
                        "Gemeinde",
                        "Oberdorf",
                        "IC",
                        "Beton",
                        "8.45",
                        "800.0",
                        "Noch nicht erfasst",
                        "",
                        ""});
            table28.AddRow(new string[] {
                        "Hauptstrasse",
                        "0.0",
                        "0.4",
                        "",
                        "Korporation",
                        "Flussnähe",
                        "IB",
                        "Asphalt",
                        "12.87",
                        "400.0",
                        "kein Trottoir",
                        "0",
                        "0"});
#line 236
testRunner.And("eine XLSX-Datei mit folgenden Zeilen (im ersten Tab):", ((string)(null)), table28, "Und ");
#line 244
testRunner.When("ich die XLSX-Datei importiere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Fläche Fahrbahn",
                        "Fläche Trottoir links",
                        "Fläche Trottoir rechts",
                        "Fläche Trottoir"});
            table29.AddRow(new string[] {
                        "Kantonsstrasse",
                        "0.2",
                        "2.0",
                        "35208",
                        "0",
                        "0",
                        "0"});
            table29.AddRow(new string[] {
                        "Kantonsstrasse",
                        "2.0",
                        "7.0",
                        "95000",
                        "11600",
                        "0",
                        "11600"});
            table29.AddRow(new string[] {
                        "Landstrasse",
                        "0.0",
                        "2.5",
                        "50000",
                        "0",
                        "7250",
                        "7250"});
            table29.AddRow(new string[] {
                        "Hauptstrasse",
                        "1.2",
                        "2.5",
                        "23400",
                        "1820",
                        "3900",
                        "5720"});
            table29.AddRow(new string[] {
                        "Hauptstrasse",
                        "0.4",
                        "1.2",
                        "6760",
                        "",
                        "",
                        ""});
            table29.AddRow(new string[] {
                        "Hauptstrasse",
                        "0.0",
                        "0.4",
                        "5148",
                        "0",
                        "0",
                        "0"});
#line 245
testRunner.Then("werden folgende Flächen berechnet:", ((string)(null)), table29, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann ein Beispiel-Excel herunterladen", new string[] {
                "Manuell"}, SourceLine=256)]
        public virtual void DerData_ManagerKannEinBeispiel_ExcelHerunterladen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann ein Beispiel-Excel herunterladen", new string[] {
                        "Manuell"});
#line 257
this.ScenarioSetup(scenarioInfo);
#line 258
testRunner.When("ich das Excel-Template herunterlade", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "Bezeichnung von",
                        "Bezeichnung bis",
                        "Abschnittsnummer",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Belastungskategorie",
                        "Belag",
                        "Breite Fahrbahn (m)",
                        "Gesamtlänge (m)",
                        "Trottoir",
                        "Breite Trottoir links (m)",
                        "Breite Trottoir rechts (m)"});
#line 259
testRunner.Then("bekomme ich eine XLSX-Datei mit folgenden Zeilen (im ersten Tab):", ((string)(null)), table30, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("N3 - Das Strassennetz aus Excel-Files importieren")]
    public partial class N3_DasStrassennetzAusExcel_FilesImportierenFeature_NUnit
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "N3.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "N3 - Das Strassennetz aus Excel-Files importieren", "\tAls Data-Manager\r\n\twill ich das Strassennetz aus Excel-Files importieren\r\n\tdamit" +
                    " ich Daten aus anderen Systemen übernehmen kann", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann neue Strassenabschnitte über ein Excel-File importieren")]
        [NUnit.Framework.CategoryAttribute("Automatisch")]
        public virtual void DerData_ManagerKannNeueStrassenabschnitteUberEinExcel_FileImportieren()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann neue Strassenabschnitte über ein Excel-File importieren", new string[] {
                        "Automatisch"});
#line 9
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table1.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 10
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table1, "Gegeben sei ");
#line 14
testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "ExternalId",
                        "Abschnittsnummer",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts"});
            table2.AddRow(new string[] {
                        "Kantonsstrasse",
                        "a",
                        "b",
                        "",
                        "",
                        "Gemeinde",
                        "Oberdorf",
                        "II",
                        "Beton",
                        "19,56",
                        "1800,0",
                        "KeinTrottoir",
                        "",
                        ""});
            table2.AddRow(new string[] {
                        "Kantonsstrasse",
                        "c",
                        "d",
                        "",
                        "",
                        "Gemeinde",
                        "Unterdorf",
                        "IV",
                        "Asphalt",
                        "19,00",
                        "5000,0",
                        "Links",
                        "2,32",
                        ""});
#line 16
testRunner.And("eine XLSX-Datei mit folgenden Zeilen (im ersten Tab):", ((string)(null)), table2, "Und ");
#line 20
testRunner.When("ich die XLSX-Datei importiere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "ExternalId",
                        "Abschnittsnummer",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts"});
            table3.AddRow(new string[] {
                        "Kantonsstrasse",
                        "a",
                        "b",
                        "-",
                        "-",
                        "Gemeinde",
                        "Oberdorf",
                        "II",
                        "Beton",
                        "19,56",
                        "1800,0",
                        "KeinTrottoir",
                        "-",
                        "-"});
            table3.AddRow(new string[] {
                        "Kantonsstrasse",
                        "c",
                        "d",
                        "-",
                        "-",
                        "Gemeinde",
                        "Unterdorf",
                        "IV",
                        "Asphalt",
                        "19,00",
                        "5000,0",
                        "Links",
                        "2,32",
                        "-"});
#line 21
testRunner.Then("sind folgende Netzinformationen im System:", ((string)(null)), table3, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann Attribute von Strassenabschnitten über ein Excel-File bearb" +
            "eiten")]
        [NUnit.Framework.CategoryAttribute("Automatisch")]
        public virtual void DerData_ManagerKannAttributeVonStrassenabschnittenUberEinExcel_FileBearbeiten()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann Attribute von Strassenabschnitten über ein Excel-File bearb" +
                    "eiten", new string[] {
                        "Automatisch"});
#line 28
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table4.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 29
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table4, "Gegeben sei ");
#line 33
testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "ExternalId",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts"});
            table5.AddRow(new string[] {
                        "Kantonsstrasse",
                        "a",
                        "b",
                        "-",
                        "KeinTrottoir",
                        "-",
                        "-"});
            table5.AddRow(new string[] {
                        "Landstrasse",
                        "c",
                        "d",
                        "-",
                        "Rechts",
                        "-",
                        "2,90"});
            table5.AddRow(new string[] {
                        "Hauptstrasse",
                        "e",
                        "f",
                        "-",
                        "NochNichtErfasst",
                        "-",
                        "-"});
#line 35
testRunner.And("für Mandant \'Mandant_1\' existieren folgende Netzinformationen:", ((string)(null)), table5, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "ExternalId",
                        "Abschnittsnummer",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts"});
            table6.AddRow(new string[] {
                        "Kantonsstrasse",
                        "a",
                        "b",
                        "",
                        "",
                        "Gemeinde",
                        "Oberdorf",
                        "II",
                        "Beton",
                        "19,56",
                        "1800,0",
                        "Links",
                        "2,50",
                        ""});
            table6.AddRow(new string[] {
                        "Kantonsstrasse",
                        "x",
                        "x",
                        "",
                        "",
                        "Gemeinde",
                        "Unterdorf",
                        "IV",
                        "Asphalt",
                        "19,00",
                        "5000,0",
                        "Links",
                        "2,32",
                        ""});
            table6.AddRow(new string[] {
                        "Landstrasse",
                        "c",
                        "d",
                        "",
                        "",
                        "Privat",
                        "Unterdorf",
                        "III",
                        "Asphalt",
                        "20,00",
                        "2500,0",
                        "KeinTrottoir",
                        "",
                        ""});
            table6.AddRow(new string[] {
                        "Hauptstrasse",
                        "j",
                        "j",
                        "",
                        "",
                        "Gemeinde",
                        "Unterdorf",
                        "II",
                        "Beton",
                        "18,00",
                        "1300,0",
                        "BeideSeiten",
                        "1,40",
                        "3,00"});
            table6.AddRow(new string[] {
                        "Hauptstrasse",
                        "e",
                        "f",
                        "",
                        "",
                        "Gemeinde",
                        "Oberdorf",
                        "IC",
                        "Beton",
                        "8,45",
                        "800,0",
                        "Rechts",
                        "",
                        "3"});
            table6.AddRow(new string[] {
                        "Hauptallee",
                        "k",
                        "k",
                        "",
                        "",
                        "Korporation",
                        "Flussnähe",
                        "IB",
                        "Asphalt",
                        "12,87",
                        "400,0",
                        "KeinTrottoir",
                        "",
                        ""});
#line 40
testRunner.And("eine XLSX-Datei mit folgenden Zeilen (im ersten Tab):", ((string)(null)), table6, "Und ");
#line 48
testRunner.When("ich die XLSX-Datei importiere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "ExternalId",
                        "Abschnittsnummer",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts"});
            table7.AddRow(new string[] {
                        "Kantonsstrasse",
                        "a",
                        "b",
                        "-",
                        "-",
                        "Gemeinde",
                        "Oberdorf",
                        "II",
                        "Beton",
                        "19,56",
                        "1800",
                        "Links",
                        "2,50",
                        "-"});
            table7.AddRow(new string[] {
                        "Kantonsstrasse",
                        "x",
                        "x",
                        "-",
                        "-",
                        "Gemeinde",
                        "Unterdorf",
                        "IV",
                        "Asphalt",
                        "19",
                        "5000",
                        "Links",
                        "2,32",
                        "-"});
            table7.AddRow(new string[] {
                        "Landstrasse",
                        "c",
                        "d",
                        "-",
                        "-",
                        "Privat",
                        "Unterdorf",
                        "III",
                        "Asphalt",
                        "20",
                        "2500",
                        "KeinTrottoir",
                        "-",
                        "-"});
            table7.AddRow(new string[] {
                        "Hauptstrasse",
                        "j",
                        "j",
                        "-",
                        "-",
                        "Gemeinde",
                        "Unterdorf",
                        "II",
                        "Beton",
                        "18",
                        "1300",
                        "BeideSeiten",
                        "1,40",
                        "3"});
            table7.AddRow(new string[] {
                        "Hauptstrasse",
                        "e",
                        "f",
                        "-",
                        "-",
                        "Gemeinde",
                        "Oberdorf",
                        "IC",
                        "Beton",
                        "8,45",
                        "800",
                        "Rechts",
                        "-",
                        "3"});
            table7.AddRow(new string[] {
                        "Hauptallee",
                        "k",
                        "k",
                        "-",
                        "-",
                        "Korporation",
                        "Flussnähe",
                        "IB",
                        "Asphalt",
                        "12,87",
                        "400",
                        "KeinTrottoir",
                        "-",
                        "-"});
#line 49
testRunner.Then("sind folgende Netzinformationen im System:", ((string)(null)), table7, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Die Struktur des Excel-Files ist flach")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DieStrukturDesExcel_FilesIstFlach()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Die Struktur des Excel-Files ist flach", new string[] {
                        "Manuell"});
#line 61
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table8.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 62
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table8, "Gegeben sei ");
#line 66
testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Tab",
                        "Strassenname",
                        "Bezeichnung von",
                        "Bezeichnung bis",
                        "Abschnittsnummer",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Belastungskategorie",
                        "Belag",
                        "Breite Fahrbahn (m)",
                        "Gesamtlänge (m)",
                        "Trottoir",
                        "Breite Trottoir links (m)",
                        "Breite Trottoir rechts (m)"});
            table9.AddRow(new string[] {
                        "1",
                        "Kantonsstrasse",
                        "0.2",
                        "2.0",
                        "",
                        "Gemeinde",
                        "Oberdorf",
                        "II",
                        "Beton",
                        "19.56",
                        "1800.0",
                        "kein Trottoir",
                        "0",
                        "0"});
            table9.AddRow(new string[] {
                        "1",
                        "Kantonsstrasse",
                        "2.0",
                        "7.0",
                        "",
                        "Gemeinde",
                        "Unterdorf",
                        "IV",
                        "Asphalt",
                        "19.00",
                        "5000.0",
                        "links",
                        "2.32",
                        "0"});
            table9.AddRow(new string[] {
                        "2",
                        "Landstrasse",
                        "0.0",
                        "2.5",
                        "",
                        "Privat",
                        "Unterdorf",
                        "III",
                        "Asphalt",
                        "20.00",
                        "2500.0",
                        "rechts",
                        "0.00",
                        "2.90"});
            table9.AddRow(new string[] {
                        "2",
                        "Hauptstrasse",
                        "1.2",
                        "2.5",
                        "",
                        "Gemeinde",
                        "Unterdorf",
                        "II",
                        "Beton",
                        "18.00",
                        "1300.0",
                        "beide",
                        "1.40",
                        "3.00"});
#line 68
testRunner.And("eine XLSX-Datei mit folgenden Zeilen:", ((string)(null)), table9, "Und ");
#line 74
testRunner.When("ich die XLSX-Datei importiere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Abschnittsnummer"});
            table10.AddRow(new string[] {
                        "Kantonsstrasse",
                        "0.2",
                        "2.0",
                        "II",
                        "Beton",
                        "19,56",
                        "1800",
                        "kein Trottoir",
                        "0",
                        "0",
                        "Gemeinde",
                        "Oberdorf",
                        ""});
            table10.AddRow(new string[] {
                        "Kantonsstrasse",
                        "2.0",
                        "7.0",
                        "IV",
                        "Asphalt",
                        "19",
                        "5000",
                        "links",
                        "2,32",
                        "0",
                        "Gemeinde",
                        "Unterdorf",
                        ""});
#line 75
testRunner.Then("sind folgende Netzinformationen im System:", ((string)(null)), table10, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System führt vor dem Import Validierungen durch (Kolonnenanzahl - zusätzliche" +
            " Kolonne)")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemFuhrtVorDemImportValidierungenDurchKolonnenanzahl_ZusatzlicheKolonne()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System führt vor dem Import Validierungen durch (Kolonnenanzahl - zusätzliche" +
                    " Kolonne)", new string[] {
                        "Manuell"});
#line 83
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table11.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 84
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table11, "Gegeben sei ");
#line 88
testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "Bezeichnung von",
                        "Bezeichnung bis",
                        "Abschnittsnummer",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Belastungskategorie",
                        "Belag",
                        "Breite Fahrbahn (m)",
                        "Gesamtlänge (m)",
                        "Trottoir",
                        "Breite Trottoir links (m)",
                        "Breite Trottoir rechts (m)",
                        "Winterdienst auszuführen"});
            table12.AddRow(new string[] {
                        "Kantonsstrasse",
                        "0.2",
                        "2.0",
                        "1",
                        "Gemeinde",
                        "Oberdorf",
                        "II",
                        "Beton",
                        "19.56",
                        "1800.0",
                        "kein Trottoir",
                        "0",
                        "0",
                        "Ja"});
            table12.AddRow(new string[] {
                        "Kantonsstrasse",
                        "2.0",
                        "7.0",
                        "2",
                        "Gemeinde",
                        "Unterdorf",
                        "IV",
                        "Asphalt",
                        "19.00",
                        "5000.0",
                        "links",
                        "2.32",
                        "0",
                        "Ja"});
            table12.AddRow(new string[] {
                        "Landstrasse",
                        "0.0",
                        "2.5",
                        "1",
                        "Privat",
                        "Unterdorf",
                        "III",
                        "Asphalt",
                        "20.00",
                        "2500.0",
                        "rechts",
                        "0.00",
                        "2.90",
                        "Teilw."});
            table12.AddRow(new string[] {
                        "Hauptstrasse",
                        "1.2",
                        "2.5",
                        "1",
                        "Gemeinde",
                        "Unterdorf",
                        "II",
                        "Beton",
                        "18.00",
                        "1300.0",
                        "beide",
                        "1.40",
                        "3.00",
                        "Teilw."});
            table12.AddRow(new string[] {
                        "Hauptstrasse",
                        "0.4",
                        "1.2",
                        "2",
                        "Gemeinde",
                        "Oberdorf",
                        "IC",
                        "Beton",
                        "8.45",
                        "800.0",
                        "Noch nicht erfasst",
                        "",
                        "",
                        "Nein"});
            table12.AddRow(new string[] {
                        "Hauptstrasse",
                        "0.0",
                        "0.4",
                        "3",
                        "Korporation",
                        "Flussnähe",
                        "IB",
                        "Asphalt",
                        "12.87",
                        "400.0",
                        "kein Trottoir",
                        "0",
                        "0",
                        "Ja"});
#line 90
testRunner.And("eine XLSX-Datei mit folgenden Zeilen (im ersten Tab):", ((string)(null)), table12, "Und ");
#line 98
testRunner.When("ich die XLSX-Datei importiere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 99
testRunner.Then("liefert der Import einen Validationsfehler", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System führt vor dem Import Validierungen durch (Kolonnenanzahl - fehlende Ko" +
            "lonne)")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemFuhrtVorDemImportValidierungenDurchKolonnenanzahl_FehlendeKolonne()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System führt vor dem Import Validierungen durch (Kolonnenanzahl - fehlende Ko" +
                    "lonne)", new string[] {
                        "Manuell"});
#line 102
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table13.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 103
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table13, "Gegeben sei ");
#line 107
testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "Bezeichnung von",
                        "Bezeichnung bis",
                        "Abschnittsnummer",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Belastungskategorie",
                        "Belag",
                        "Breite Fahrbahn (m)",
                        "Gesamtlänge (m)",
                        "Trottoir",
                        "Breite Trottoir links (m)"});
            table14.AddRow(new string[] {
                        "Kantonsstrasse",
                        "0.2",
                        "2.0",
                        "1",
                        "Gemeinde",
                        "Oberdorf",
                        "II",
                        "Beton",
                        "19.56",
                        "1800.0",
                        "kein Trottoir",
                        "0"});
            table14.AddRow(new string[] {
                        "Kantonsstrasse",
                        "2.0",
                        "7.0",
                        "2",
                        "Gemeinde",
                        "Unterdorf",
                        "IV",
                        "Asphalt",
                        "19.00",
                        "5000.0",
                        "links",
                        "2.32"});
            table14.AddRow(new string[] {
                        "Landstrasse",
                        "0.0",
                        "2.5",
                        "1",
                        "Privat",
                        "Unterdorf",
                        "III",
                        "Asphalt",
                        "20.00",
                        "2500.0",
                        "rechts",
                        "0.00"});
            table14.AddRow(new string[] {
                        "Hauptstrasse",
                        "1.2",
                        "2.5",
                        "1",
                        "Gemeinde",
                        "Unterdorf",
                        "II",
                        "Beton",
                        "18.00",
                        "1300.0",
                        "beide",
                        "1.40"});
            table14.AddRow(new string[] {
                        "Hauptstrasse",
                        "0.4",
                        "1.2",
                        "2",
                        "Gemeinde",
                        "Oberdorf",
                        "IC",
                        "Beton",
                        "8.45",
                        "800.0",
                        "Noch nicht erfasst",
                        ""});
            table14.AddRow(new string[] {
                        "Hauptstrasse",
                        "0.0",
                        "0.4",
                        "3",
                        "Korporation",
                        "Flussnähe",
                        "IB",
                        "Asphalt",
                        "12.87",
                        "400.0",
                        "kein Trottoir",
                        "0"});
#line 109
testRunner.And("eine XLSX-Datei mit folgenden Zeilen (im ersten Tab):", ((string)(null)), table14, "Und ");
#line 117
testRunner.When("ich die XLSX-Datei importiere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 118
testRunner.Then("liefert der Import einen Validationsfehler", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System führt vor dem Import Validierungen durch (Verletzung Business Logik)")]
        [NUnit.Framework.CategoryAttribute("Automatisch")]
        public virtual void DasSystemFuhrtVorDemImportValidierungenDurchVerletzungBusinessLogik()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System führt vor dem Import Validierungen durch (Verletzung Business Logik)", new string[] {
                        "Automatisch"});
#line 123
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table15.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 124
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table15, "Gegeben sei ");
#line 128
testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "ExternalId",
                        "Abschnittsnummer",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts"});
            table16.AddRow(new string[] {
                        "Kantonsstrasse",
                        "a",
                        "a",
                        "",
                        "1",
                        "Gemeinde",
                        "Oberdorf",
                        "II",
                        "Beton",
                        "19,56",
                        "1800,0",
                        "KeinTrottoir",
                        "0",
                        "0"});
            table16.AddRow(new string[] {
                        "Kantonsstrasse",
                        "s",
                        "s",
                        "",
                        "2",
                        "Gemeinde",
                        "Unterdorf",
                        "IV",
                        "Asphalt",
                        "19,00",
                        "5000,0",
                        "Links",
                        "2,32",
                        "0"});
            table16.AddRow(new string[] {
                        "Landstrasse",
                        "d",
                        "d",
                        "",
                        "1",
                        "Privat",
                        "Unterdorf",
                        "",
                        "Asphalt",
                        "20,00",
                        "2500,0",
                        "Rechts",
                        "0,00",
                        "2,90"});
            table16.AddRow(new string[] {
                        "Hauptstrasse",
                        "f",
                        "f",
                        "",
                        "1",
                        "Gemeinde",
                        "Unterdorf",
                        "II",
                        "Beton",
                        "18,00",
                        "1300,0",
                        "BeideSeiten",
                        "1,40",
                        "3,00"});
            table16.AddRow(new string[] {
                        "Hauptstrasse",
                        "g",
                        "g",
                        "",
                        "2",
                        "Gemeinde",
                        "Oberdorf",
                        "",
                        "Beton",
                        "8,45",
                        "800,0",
                        "NochNichtErfasst",
                        "",
                        ""});
            table16.AddRow(new string[] {
                        "Hauptstrasse",
                        "h",
                        "h",
                        "",
                        "3",
                        "Korporation",
                        "Flussnähe",
                        "IB",
                        "Asphalt",
                        "12,87",
                        "400,0",
                        "KeinTrottoir",
                        "0",
                        "0"});
            table16.AddRow(new string[] {
                        "Hauptstrasse",
                        "j",
                        "j",
                        "",
                        "4",
                        "Gemeind",
                        "Flussnähe",
                        "III",
                        "Asphalt",
                        "20,00",
                        "300,0",
                        "Rechts",
                        "0",
                        "3"});
#line 131
testRunner.And("eine XLSX-Datei mit folgenden Zeilen (im ersten Tab):", ((string)(null)), table16, "Und ");
#line 140
testRunner.When("ich die XLSX-Datei importiere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 141
testRunner.Then("liefert der Import drei Validationsfehler", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Wird eine Validierung verletzt, führt das System den Import nicht durch")]
        [NUnit.Framework.CategoryAttribute("Automatisch")]
        public virtual void WirdEineValidierungVerletztFuhrtDasSystemDenImportNichtDurch()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Wird eine Validierung verletzt, führt das System den Import nicht durch", new string[] {
                        "Automatisch"});
#line 146
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table17.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 147
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table17, "Gegeben sei ");
#line 151
testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts"});
            table18.AddRow(new string[] {
                        "Kantonsstrasse",
                        "a",
                        "b",
                        "KeinTrottoir",
                        "0",
                        "0"});
            table18.AddRow(new string[] {
                        "Landstrasse",
                        "c",
                        "d",
                        "Rechts",
                        "0",
                        "2,90"});
            table18.AddRow(new string[] {
                        "Hauptstrasse",
                        "e",
                        "f",
                        "NochNichtErfasst",
                        "-",
                        "-"});
#line 153
testRunner.And("für Mandant \'Mandant_1\' existieren folgende Netzinformationen:", ((string)(null)), table18, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Abschnittsnummer",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts"});
            table19.AddRow(new string[] {
                        "Kantonsstrasse",
                        "a",
                        "b",
                        "",
                        "Gemeinde",
                        "Oberdorf",
                        "",
                        "Beton",
                        "19,56",
                        "1800,0",
                        "Links",
                        "2,50",
                        "0"});
            table19.AddRow(new string[] {
                        "Kantonsstrasse",
                        "x",
                        "x",
                        "",
                        "Gemeinde",
                        "Unterdorf",
                        "",
                        "Asphalt",
                        "19,00",
                        "5000,0",
                        "Links",
                        "2,32",
                        "0"});
            table19.AddRow(new string[] {
                        "Landstrasse",
                        "c",
                        "d",
                        "",
                        "Privat",
                        "Unterdorf",
                        "",
                        "Asphalt",
                        "20,00",
                        "2500,0",
                        "KeinTrottoir",
                        "0",
                        "0"});
            table19.AddRow(new string[] {
                        "Hauptstrasse",
                        "j",
                        "j",
                        "",
                        "Gemeinde",
                        "Unterdorf",
                        "",
                        "Beton",
                        "18,00",
                        "1300,0",
                        "BeideSeiten",
                        "1,40",
                        "3,00"});
            table19.AddRow(new string[] {
                        "Hauptstrasse",
                        "e",
                        "f",
                        "",
                        "Gemeinde",
                        "Oberdorf",
                        "",
                        "Beton",
                        "8,45",
                        "800,0",
                        "Rechts",
                        "0",
                        "3"});
            table19.AddRow(new string[] {
                        "Hauptallee",
                        "k",
                        "k",
                        "",
                        "Korporation",
                        "Flussnähe",
                        "",
                        "Asphalt",
                        "12,87",
                        "400,0",
                        "KeinTrottoir",
                        "0",
                        "0"});
#line 160
testRunner.And("eine XLSX-Datei mit folgenden Zeilen (im ersten Tab):", ((string)(null)), table19, "Und ");
#line 168
testRunner.When("ich die XLSX-Datei importiere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts"});
            table20.AddRow(new string[] {
                        "Kantonsstrasse",
                        "a",
                        "b",
                        "KeinTrottoir",
                        "0",
                        "0"});
            table20.AddRow(new string[] {
                        "Landstrasse",
                        "c",
                        "d",
                        "Rechts",
                        "0",
                        "2,90"});
            table20.AddRow(new string[] {
                        "Hauptstrasse",
                        "e",
                        "f",
                        "NochNichtErfasst",
                        "-",
                        "-"});
#line 169
testRunner.Then("sind folgende Netzinformationen im System:", ((string)(null)), table20, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager muss sehen, ob ein Import erfolgreich war oder nicht")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerMussSehenObEinImportErfolgreichWarOderNicht()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager muss sehen, ob ein Import erfolgreich war oder nicht", new string[] {
                        "Manuell"});
#line 178
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table21.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 179
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table21, "Gegeben sei ");
#line 183
testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "Bezeichnung von",
                        "Bezeichnung bis",
                        "Abschnittsnummer",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Belastungskategorie",
                        "Belag",
                        "Breite Fahrbahn (m)",
                        "Gesamtlänge (m)",
                        "Trottoir",
                        "Breite Trottoir links (m)",
                        "Breite Trottoir rechts (m)"});
            table22.AddRow(new string[] {
                        "Kantonsstrasse",
                        "0.2",
                        "2.0",
                        "1",
                        "Gemeinde",
                        "Oberdorf",
                        "II",
                        "Beton",
                        "19.56",
                        "Tausend",
                        "kein Trottoir",
                        "0",
                        "0"});
#line 185
testRunner.And("eine XLSX-Datei mit folgenden Zeilen (im ersten Tab):", ((string)(null)), table22, "Und ");
#line 188
testRunner.When("ich die XLSX-Datei importiere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 189
testRunner.Then("liefert der Import einen Validationsfehler in Zelle J2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager muss warten bis der Import abgeschlossen ist, erst dann kann er " +
            "mit EMSG weiterarbeiten")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerMussWartenBisDerImportAbgeschlossenIstErstDannKannErMitEMSGWeiterarbeiten()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager muss warten bis der Import abgeschlossen ist, erst dann kann er " +
                    "mit EMSG weiterarbeiten", new string[] {
                        "Manuell"});
#line 194
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Bereits erfasste Strassenabschnitte bleiben bestehen")]
        [NUnit.Framework.CategoryAttribute("Automatisch")]
        public virtual void BereitsErfassteStrassenabschnitteBleibenBestehen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Bereits erfasste Strassenabschnitte bleiben bestehen", new string[] {
                        "Automatisch"});
#line 199
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table23.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 200
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table23, "Gegeben sei ");
#line 204
testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "ExternalId",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts"});
            table24.AddRow(new string[] {
                        "Kantonsstrasse",
                        "a",
                        "a",
                        "-",
                        "KeinTrottoir",
                        "-",
                        "-"});
            table24.AddRow(new string[] {
                        "Landstrasse",
                        "b",
                        "b",
                        "-",
                        "Rechts",
                        "-",
                        "2,90"});
            table24.AddRow(new string[] {
                        "Hauptstrasse",
                        "c",
                        "c",
                        "-",
                        "NochNichtErfasst",
                        "-",
                        "-"});
#line 206
testRunner.And("für Mandant \'Mandant_1\' existieren folgende Netzinformationen:", ((string)(null)), table24, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "ExternalId",
                        "Abschnittsnummer",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Belastungskategorie",
                        "Belag",
                        "BreiteFahrbahn",
                        "Länge",
                        "Trottoir",
                        "BreiteTrottoirLinks",
                        "BreiteTrottoirRechts"});
            table25.AddRow(new string[] {
                        "Hauptstrasse",
                        "j",
                        "j",
                        "",
                        "",
                        "Gemeinde",
                        "Unterdorf",
                        "II",
                        "Beton",
                        "18,00",
                        "1300,0",
                        "BeideSeiten",
                        "1,40",
                        "3,00"});
            table25.AddRow(new string[] {
                        "Hauptstrasse",
                        "e",
                        "f",
                        "",
                        "",
                        "Gemeinde",
                        "Oberdorf",
                        "IC",
                        "Beton",
                        "8,45",
                        "800,0",
                        "Rechts",
                        "",
                        "3,00"});
            table25.AddRow(new string[] {
                        "Hauptallee",
                        "k",
                        "k",
                        "",
                        "",
                        "Korporation",
                        "Flussnähe",
                        "IB",
                        "Asphalt",
                        "12,87",
                        "400,0",
                        "KeinTrottoir",
                        "",
                        ""});
#line 211
testRunner.And("eine XLSX-Datei mit folgenden Zeilen (im ersten Tab):", ((string)(null)), table25, "Und ");
#line 216
testRunner.When("ich die XLSX-Datei importiere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "ExternalId"});
            table26.AddRow(new string[] {
                        "Kantonsstrasse",
                        "a",
                        "a",
                        "-"});
            table26.AddRow(new string[] {
                        "Landstrasse",
                        "b",
                        "b",
                        "-"});
            table26.AddRow(new string[] {
                        "Hauptstrasse",
                        "c",
                        "c",
                        "-"});
            table26.AddRow(new string[] {
                        "Hauptstrasse",
                        "j",
                        "j",
                        "-"});
            table26.AddRow(new string[] {
                        "Hauptstrasse",
                        "e",
                        "f",
                        "-"});
            table26.AddRow(new string[] {
                        "Hauptallee",
                        "k",
                        "k",
                        "-"});
#line 217
testRunner.Then("sind folgende Netzinformationen im System:", ((string)(null)), table26, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System berechnet die Flächen (‚Fläche Fahrbahn‘, ‚Fläche Trottoir links‘, ‚Fl" +
            "äche Trottoir rechts‘, ‚Fläche Trottoir‘) analog zur Erfassung von Strassenabsch" +
            "nitten über das UI")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemBerechnetDieFlachenFlacheFahrbahnFlacheTrottoirLinksFlacheTrottoirRechtsFlacheTrottoirAnalogZurErfassungVonStrassenabschnittenUberDasUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System berechnet die Flächen (‚Fläche Fahrbahn‘, ‚Fläche Trottoir links‘, ‚Fl" +
                    "äche Trottoir rechts‘, ‚Fläche Trottoir‘) analog zur Erfassung von Strassenabsch" +
                    "nitten über das UI", new string[] {
                        "Manuell"});
#line 229
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table27.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 230
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table27, "Gegeben sei ");
#line 234
testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "Bezeichnung von",
                        "Bezeichnung bis",
                        "Abschnittsnummer",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Belastungskategorie",
                        "Belag",
                        "Breite Fahrbahn (m)",
                        "Gesamtlänge (m)",
                        "Trottoir",
                        "Breite Trottoir links (m)",
                        "Breite Trottoir rechts (m)"});
            table28.AddRow(new string[] {
                        "Kantonsstrasse",
                        "0.2",
                        "2.0",
                        "",
                        "Gemeinde",
                        "Oberdorf",
                        "II",
                        "Beton",
                        "19.56",
                        "1800.0",
                        "kein Trottoir",
                        "0",
                        "0"});
            table28.AddRow(new string[] {
                        "Kantonsstrasse",
                        "2.0",
                        "7.0",
                        "",
                        "Gemeinde",
                        "Unterdorf",
                        "IV",
                        "Asphalt",
                        "19.00",
                        "5000.0",
                        "links",
                        "2.32",
                        "0"});
            table28.AddRow(new string[] {
                        "Landstrasse",
                        "0.0",
                        "2.5",
                        "",
                        "Privat",
                        "Unterdorf",
                        "III",
                        "Asphalt",
                        "20.00",
                        "2500.0",
                        "rechts",
                        "0.00",
                        "2.90"});
            table28.AddRow(new string[] {
                        "Hauptstrasse",
                        "1.2",
                        "2.5",
                        "",
                        "Gemeinde",
                        "Unterdorf",
                        "II",
                        "Beton",
                        "18.00",
                        "1300.0",
                        "beide",
                        "1.40",
                        "3.00"});
            table28.AddRow(new string[] {
                        "Hauptstrasse",
                        "0.4",
                        "1.2",
                        "",
                        "Gemeinde",
                        "Oberdorf",
                        "IC",
                        "Beton",
                        "8.45",
                        "800.0",
                        "Noch nicht erfasst",
                        "",
                        ""});
            table28.AddRow(new string[] {
                        "Hauptstrasse",
                        "0.0",
                        "0.4",
                        "",
                        "Korporation",
                        "Flussnähe",
                        "IB",
                        "Asphalt",
                        "12.87",
                        "400.0",
                        "kein Trottoir",
                        "0",
                        "0"});
#line 236
testRunner.And("eine XLSX-Datei mit folgenden Zeilen (im ersten Tab):", ((string)(null)), table28, "Und ");
#line 244
testRunner.When("ich die XLSX-Datei importiere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis",
                        "Fläche Fahrbahn",
                        "Fläche Trottoir links",
                        "Fläche Trottoir rechts",
                        "Fläche Trottoir"});
            table29.AddRow(new string[] {
                        "Kantonsstrasse",
                        "0.2",
                        "2.0",
                        "35208",
                        "0",
                        "0",
                        "0"});
            table29.AddRow(new string[] {
                        "Kantonsstrasse",
                        "2.0",
                        "7.0",
                        "95000",
                        "11600",
                        "0",
                        "11600"});
            table29.AddRow(new string[] {
                        "Landstrasse",
                        "0.0",
                        "2.5",
                        "50000",
                        "0",
                        "7250",
                        "7250"});
            table29.AddRow(new string[] {
                        "Hauptstrasse",
                        "1.2",
                        "2.5",
                        "23400",
                        "1820",
                        "3900",
                        "5720"});
            table29.AddRow(new string[] {
                        "Hauptstrasse",
                        "0.4",
                        "1.2",
                        "6760",
                        "",
                        "",
                        ""});
            table29.AddRow(new string[] {
                        "Hauptstrasse",
                        "0.0",
                        "0.4",
                        "5148",
                        "0",
                        "0",
                        "0"});
#line 245
testRunner.Then("werden folgende Flächen berechnet:", ((string)(null)), table29, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann ein Beispiel-Excel herunterladen")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannEinBeispiel_ExcelHerunterladen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann ein Beispiel-Excel herunterladen", new string[] {
                        "Manuell"});
#line 257
this.ScenarioSetup(scenarioInfo);
#line 258
testRunner.When("ich das Excel-Template herunterlade", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Strassenname",
                        "Bezeichnung von",
                        "Bezeichnung bis",
                        "Abschnittsnummer",
                        "Strasseneigentümer",
                        "Ortsbezeichnung",
                        "Belastungskategorie",
                        "Belag",
                        "Breite Fahrbahn (m)",
                        "Gesamtlänge (m)",
                        "Trottoir",
                        "Breite Trottoir links (m)",
                        "Breite Trottoir rechts (m)"});
#line 259
testRunner.Then("bekomme ich eine XLSX-Datei mit folgenden Zeilen (im ersten Tab):", ((string)(null)), table30, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
