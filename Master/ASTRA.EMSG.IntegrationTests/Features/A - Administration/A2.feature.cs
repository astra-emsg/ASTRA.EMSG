// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ASTRA.EMSG.IntegrationTests.Features.A_Administration
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("A2 - Einen Jahresabschluss machen", SourceFile="Features\\A - Administration\\A2.feature", SourceLine=0)]
    public partial class A2_EinenJahresabschlussMachenFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "A2.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "A2 - Einen Jahresabschluss machen", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 2
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table1.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 3
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table1, "Gegeben sei ");
#line 6
testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis"});
            table2.AddRow(new string[] {
                        "1",
                        "Kantonsstrasse",
                        "0.0",
                        "1.0"});
            table2.AddRow(new string[] {
                        "2",
                        "Landstrasse",
                        "0.0",
                        "1.0"});
#line 7
testRunner.And("folgende Netzinformationen existieren:", ((string)(null)), table2, "Und ");
#line 11
testRunner.And("es wurde noch kein Jahresabschluss für 2010 durchgeführt", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System prüft, ob zu allen Strassenabschnitten eine Zustandsaufnahme vorliegt", new string[] {
                "Manuell"}, SourceLine=15)]
        public virtual void DasSystemPruftObZuAllenStrassenabschnittenEineZustandsaufnahmeVorliegt()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System prüft, ob zu allen Strassenabschnitten eine Zustandsaufnahme vorliegt", new string[] {
                        "Manuell"});
#line 16
this.ScenarioSetup(scenarioInfo);
#line 2
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVonStrasse",
                        "BezeichnungBisStrasse"});
            table3.AddRow(new string[] {
                        "1",
                        "Kantonsstrasse",
                        "0.0",
                        "1.0"});
#line 17
testRunner.Given("folgende Zustandsinformationen existieren:", ((string)(null)), table3, "Gegeben sei ");
#line 20
testRunner.When("ich den Jahresabschluss durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 21
testRunner.Then("bekomme ich die Warnmeldung „Achtung: Nicht für alle Strassenabschnitte wurden Zu" +
                    "standsaufnahmen durchgeführt. Wollen Sie den Jahresabschluss trotzdem durchführe" +
                    "n?“", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System setzt die erfassten Zustandsabschnitte auf read only", new string[] {
                "Manuell"}, SourceLine=25)]
        public virtual void DasSystemSetztDieErfasstenZustandsabschnitteAufReadOnly()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System setzt die erfassten Zustandsabschnitte auf read only", new string[] {
                        "Manuell"});
#line 26
this.ScenarioSetup(scenarioInfo);
#line 2
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System setzt die Realisierten Massnahmen auf read only", new string[] {
                "Manuell"}, SourceLine=30)]
        public virtual void DasSystemSetztDieRealisiertenMassnahmenAufReadOnly()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System setzt die Realisierten Massnahmen auf read only", new string[] {
                        "Manuell"});
#line 31
this.ScenarioSetup(scenarioInfo);
#line 2
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System verwendet die Daten aus dem abgeschlossen Jahr für Auswertungen und Be" +
            "nchmarkauswertungen", new string[] {
                "Manuell"}, SourceLine=35)]
        public virtual void DasSystemVerwendetDieDatenAusDemAbgeschlossenJahrFurAuswertungenUndBenchmarkauswertungen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System verwendet die Daten aus dem abgeschlossen Jahr für Auswertungen und Be" +
                    "nchmarkauswertungen", new string[] {
                        "Manuell"});
#line 36
this.ScenarioSetup(scenarioInfo);
#line 2
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System erzeugt eine Kopie der Strassenabschnitte und setzt die ursprünglichen" +
            " auf read only", new string[] {
                "Manuell"}, SourceLine=40)]
        public virtual void DasSystemErzeugtEineKopieDerStrassenabschnitteUndSetztDieUrsprunglichenAufReadOnly()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System erzeugt eine Kopie der Strassenabschnitte und setzt die ursprünglichen" +
                    " auf read only", new string[] {
                        "Manuell"});
#line 41
this.ScenarioSetup(scenarioInfo);
#line 2
this.FeatureBackground();
#line 42
testRunner.When("ich den Jahresabschluss für das Jahr 2010 durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis"});
            table4.AddRow(new string[] {
                        "1",
                        "Kantonsstrasse",
                        "0.0",
                        "2.0"});
            table4.AddRow(new string[] {
                        "2",
                        "Hauptstrasse",
                        "1.0",
                        "2.0"});
#line 43
testRunner.And("ich die Strassenabschnitte folgendermassen editiere", ((string)(null)), table4, "Und ");
#line 47
testRunner.And("ich den Jahresabschluss für das Jahr 2011 durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis"});
            table5.AddRow(new string[] {
                        "1",
                        "Kantonsstrasse",
                        "0.0",
                        "1.0"});
            table5.AddRow(new string[] {
                        "2",
                        "Landstrasse",
                        "0.0",
                        "1.0"});
#line 48
testRunner.Then("zeigt die Auswertung Strassenabschnitte für das Jahr 2010 folgende Daten:", ((string)(null)), table5, "Dann ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis"});
            table6.AddRow(new string[] {
                        "1",
                        "Kantonsstrasse",
                        "0.0",
                        "1.0"});
            table6.AddRow(new string[] {
                        "2",
                        "Landstrasse",
                        "0.0",
                        "1.0"});
#line 52
testRunner.And("zeigt die Auswertung Strassenabschnitte für das Jahr 2010 folgende Daten:", ((string)(null)), table6, "Und ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System kopiert beim Jahresabschluss die erfassten Mengen und setzt die ursprü" +
            "nglichen auf read only", new string[] {
                "Manuell"}, SourceLine=59)]
        public virtual void DasSystemKopiertBeimJahresabschlussDieErfasstenMengenUndSetztDieUrsprunglichenAufReadOnly()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System kopiert beim Jahresabschluss die erfassten Mengen und setzt die ursprü" +
                    "nglichen auf read only", new string[] {
                        "Manuell"});
#line 60
this.ScenarioSetup(scenarioInfo);
#line 2
this.FeatureBackground();
#line 61
testRunner.When("ich den Arbeitsmodus auf \'summarisch\' ändere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Belastungskategorie",
                        "Mengentyp",
                        "Mittlerer Zustand",
                        "Menge"});
            table7.AddRow(new string[] {
                        "IA",
                        "Gesamtfläche",
                        "3,1",
                        "250"});
#line 62
testRunner.And("ich folgende summarische Zustands- und Netzinformationen eingebe:", ((string)(null)), table7, "Und ");
#line 65
testRunner.And("ich den Jahresabschluss für das Jahr 2010 durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Belastungskategorie",
                        "Mengentyp",
                        "Menge"});
            table8.AddRow(new string[] {
                        "IA",
                        "Gesamtfläche",
                        "250"});
#line 66
testRunner.Then("zeigt die Auswertung Menge pro Belastungskategorie für das Jahr 2010 folgende Dat" +
                    "en:", ((string)(null)), table8, "Dann ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Belastungskategorie",
                        "Mengentyp",
                        "Mittlerer Zustand",
                        "Menge"});
            table9.AddRow(new string[] {
                        "IA",
                        "Gesamtfläche",
                        "-",
                        "250"});
#line 69
testRunner.And("zeigt die Tabelle Zustands- und Netzinformation folgende Daten", ((string)(null)), table9, "Und ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System übernimmt den Mengentypauch für eine neue Erfassungsperiode", new string[] {
                "Manuell"}, SourceLine=75)]
        public virtual void DasSystemUbernimmtDenMengentypauchFurEineNeueErfassungsperiode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System übernimmt den Mengentypauch für eine neue Erfassungsperiode", new string[] {
                        "Manuell"});
#line 76
this.ScenarioSetup(scenarioInfo);
#line 2
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System löscht Daten, die in einem Arbeitsmodus erfasst wurden, der beim Durch" +
            "führen des Jahresabschlusses nicht aktiv war", new string[] {
                "Manuell"}, SourceLine=80)]
        public virtual void DasSystemLoschtDatenDieInEinemArbeitsmodusErfasstWurdenDerBeimDurchfuhrenDesJahresabschlussesNichtAktivWar()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System löscht Daten, die in einem Arbeitsmodus erfasst wurden, der beim Durch" +
                    "führen des Jahresabschlusses nicht aktiv war", new string[] {
                        "Manuell"});
#line 81
this.ScenarioSetup(scenarioInfo);
#line 2
this.FeatureBackground();
#line 82
testRunner.When("ich den Arbeitsmodus auf \'summarisch\' ändere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 83
testRunner.And("ich den Jahresabschluss für das Jahr 2010 durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 84
testRunner.And("ich den Arbeitsmodus auf \'strassennamen\' ändere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis"});
#line 85
testRunner.Then("zeigt die Auswertung Strassenabschnitte für das Jahr 2010 folgende Daten:", ((string)(null)), table10, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System löscht Daten, die in einem Mengentyp erfasst wurden, der beim Durchfüh" +
            "ren des Jahresabschlusses nicht aktiv war", new string[] {
                "Manuell"}, SourceLine=90)]
        public virtual void DasSystemLoschtDatenDieInEinemMengentypErfasstWurdenDerBeimDurchfuhrenDesJahresabschlussesNichtAktivWar()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System löscht Daten, die in einem Mengentyp erfasst wurden, der beim Durchfüh" +
                    "ren des Jahresabschlusses nicht aktiv war", new string[] {
                        "Manuell"});
#line 91
this.ScenarioSetup(scenarioInfo);
#line 2
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System erzeugt eine Kopie von ausgewählten Systemparametern", new string[] {
                "Manuell"}, Description="- Wiederbeschaffungswert\r\n- Alterungsbeiwert\r\n- Massnahmenvorschläge\r\n- Massnahme" +
            "n", SourceLine=95)]
        public virtual void DasSystemErzeugtEineKopieVonAusgewahltenSystemparametern()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System erzeugt eine Kopie von ausgewählten Systemparametern", new string[] {
                        "Manuell"});
#line 96
this.ScenarioSetup(scenarioInfo);
#line 2
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("A2 - Einen Jahresabschluss machen")]
    public partial class A2_EinenJahresabschlussMachenFeature_NUnit
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "A2.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "A2 - Einen Jahresabschluss machen", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 2
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table1.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 3
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table1, "Gegeben sei ");
#line 6
testRunner.And("ich bin Data-Manager von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis"});
            table2.AddRow(new string[] {
                        "1",
                        "Kantonsstrasse",
                        "0.0",
                        "1.0"});
            table2.AddRow(new string[] {
                        "2",
                        "Landstrasse",
                        "0.0",
                        "1.0"});
#line 7
testRunner.And("folgende Netzinformationen existieren:", ((string)(null)), table2, "Und ");
#line 11
testRunner.And("es wurde noch kein Jahresabschluss für 2010 durchgeführt", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System prüft, ob zu allen Strassenabschnitten eine Zustandsaufnahme vorliegt")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemPruftObZuAllenStrassenabschnittenEineZustandsaufnahmeVorliegt()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System prüft, ob zu allen Strassenabschnitten eine Zustandsaufnahme vorliegt", new string[] {
                        "Manuell"});
#line 16
this.ScenarioSetup(scenarioInfo);
#line 2
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVonStrasse",
                        "BezeichnungBisStrasse"});
            table3.AddRow(new string[] {
                        "1",
                        "Kantonsstrasse",
                        "0.0",
                        "1.0"});
#line 17
testRunner.Given("folgende Zustandsinformationen existieren:", ((string)(null)), table3, "Gegeben sei ");
#line 20
testRunner.When("ich den Jahresabschluss durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 21
testRunner.Then("bekomme ich die Warnmeldung „Achtung: Nicht für alle Strassenabschnitte wurden Zu" +
                    "standsaufnahmen durchgeführt. Wollen Sie den Jahresabschluss trotzdem durchführe" +
                    "n?“", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System setzt die erfassten Zustandsabschnitte auf read only")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemSetztDieErfasstenZustandsabschnitteAufReadOnly()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System setzt die erfassten Zustandsabschnitte auf read only", new string[] {
                        "Manuell"});
#line 26
this.ScenarioSetup(scenarioInfo);
#line 2
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System setzt die Realisierten Massnahmen auf read only")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemSetztDieRealisiertenMassnahmenAufReadOnly()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System setzt die Realisierten Massnahmen auf read only", new string[] {
                        "Manuell"});
#line 31
this.ScenarioSetup(scenarioInfo);
#line 2
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System verwendet die Daten aus dem abgeschlossen Jahr für Auswertungen und Be" +
            "nchmarkauswertungen")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemVerwendetDieDatenAusDemAbgeschlossenJahrFurAuswertungenUndBenchmarkauswertungen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System verwendet die Daten aus dem abgeschlossen Jahr für Auswertungen und Be" +
                    "nchmarkauswertungen", new string[] {
                        "Manuell"});
#line 36
this.ScenarioSetup(scenarioInfo);
#line 2
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System erzeugt eine Kopie der Strassenabschnitte und setzt die ursprünglichen" +
            " auf read only")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemErzeugtEineKopieDerStrassenabschnitteUndSetztDieUrsprunglichenAufReadOnly()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System erzeugt eine Kopie der Strassenabschnitte und setzt die ursprünglichen" +
                    " auf read only", new string[] {
                        "Manuell"});
#line 41
this.ScenarioSetup(scenarioInfo);
#line 2
this.FeatureBackground();
#line 42
testRunner.When("ich den Jahresabschluss für das Jahr 2010 durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis"});
            table4.AddRow(new string[] {
                        "1",
                        "Kantonsstrasse",
                        "0.0",
                        "2.0"});
            table4.AddRow(new string[] {
                        "2",
                        "Hauptstrasse",
                        "1.0",
                        "2.0"});
#line 43
testRunner.And("ich die Strassenabschnitte folgendermassen editiere", ((string)(null)), table4, "Und ");
#line 47
testRunner.And("ich den Jahresabschluss für das Jahr 2011 durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis"});
            table5.AddRow(new string[] {
                        "1",
                        "Kantonsstrasse",
                        "0.0",
                        "1.0"});
            table5.AddRow(new string[] {
                        "2",
                        "Landstrasse",
                        "0.0",
                        "1.0"});
#line 48
testRunner.Then("zeigt die Auswertung Strassenabschnitte für das Jahr 2010 folgende Daten:", ((string)(null)), table5, "Dann ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis"});
            table6.AddRow(new string[] {
                        "1",
                        "Kantonsstrasse",
                        "0.0",
                        "1.0"});
            table6.AddRow(new string[] {
                        "2",
                        "Landstrasse",
                        "0.0",
                        "1.0"});
#line 52
testRunner.And("zeigt die Auswertung Strassenabschnitte für das Jahr 2010 folgende Daten:", ((string)(null)), table6, "Und ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System kopiert beim Jahresabschluss die erfassten Mengen und setzt die ursprü" +
            "nglichen auf read only")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemKopiertBeimJahresabschlussDieErfasstenMengenUndSetztDieUrsprunglichenAufReadOnly()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System kopiert beim Jahresabschluss die erfassten Mengen und setzt die ursprü" +
                    "nglichen auf read only", new string[] {
                        "Manuell"});
#line 60
this.ScenarioSetup(scenarioInfo);
#line 2
this.FeatureBackground();
#line 61
testRunner.When("ich den Arbeitsmodus auf \'summarisch\' ändere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Belastungskategorie",
                        "Mengentyp",
                        "Mittlerer Zustand",
                        "Menge"});
            table7.AddRow(new string[] {
                        "IA",
                        "Gesamtfläche",
                        "3,1",
                        "250"});
#line 62
testRunner.And("ich folgende summarische Zustands- und Netzinformationen eingebe:", ((string)(null)), table7, "Und ");
#line 65
testRunner.And("ich den Jahresabschluss für das Jahr 2010 durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Belastungskategorie",
                        "Mengentyp",
                        "Menge"});
            table8.AddRow(new string[] {
                        "IA",
                        "Gesamtfläche",
                        "250"});
#line 66
testRunner.Then("zeigt die Auswertung Menge pro Belastungskategorie für das Jahr 2010 folgende Dat" +
                    "en:", ((string)(null)), table8, "Dann ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Belastungskategorie",
                        "Mengentyp",
                        "Mittlerer Zustand",
                        "Menge"});
            table9.AddRow(new string[] {
                        "IA",
                        "Gesamtfläche",
                        "-",
                        "250"});
#line 69
testRunner.And("zeigt die Tabelle Zustands- und Netzinformation folgende Daten", ((string)(null)), table9, "Und ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System übernimmt den Mengentypauch für eine neue Erfassungsperiode")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemUbernimmtDenMengentypauchFurEineNeueErfassungsperiode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System übernimmt den Mengentypauch für eine neue Erfassungsperiode", new string[] {
                        "Manuell"});
#line 76
this.ScenarioSetup(scenarioInfo);
#line 2
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System löscht Daten, die in einem Arbeitsmodus erfasst wurden, der beim Durch" +
            "führen des Jahresabschlusses nicht aktiv war")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemLoschtDatenDieInEinemArbeitsmodusErfasstWurdenDerBeimDurchfuhrenDesJahresabschlussesNichtAktivWar()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System löscht Daten, die in einem Arbeitsmodus erfasst wurden, der beim Durch" +
                    "führen des Jahresabschlusses nicht aktiv war", new string[] {
                        "Manuell"});
#line 81
this.ScenarioSetup(scenarioInfo);
#line 2
this.FeatureBackground();
#line 82
testRunner.When("ich den Arbeitsmodus auf \'summarisch\' ändere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 83
testRunner.And("ich den Jahresabschluss für das Jahr 2010 durchführe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 84
testRunner.And("ich den Arbeitsmodus auf \'strassennamen\' ändere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Id",
                        "Strassenname",
                        "BezeichnungVon",
                        "BezeichnungBis"});
#line 85
testRunner.Then("zeigt die Auswertung Strassenabschnitte für das Jahr 2010 folgende Daten:", ((string)(null)), table10, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System löscht Daten, die in einem Mengentyp erfasst wurden, der beim Durchfüh" +
            "ren des Jahresabschlusses nicht aktiv war")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemLoschtDatenDieInEinemMengentypErfasstWurdenDerBeimDurchfuhrenDesJahresabschlussesNichtAktivWar()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System löscht Daten, die in einem Mengentyp erfasst wurden, der beim Durchfüh" +
                    "ren des Jahresabschlusses nicht aktiv war", new string[] {
                        "Manuell"});
#line 91
this.ScenarioSetup(scenarioInfo);
#line 2
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System erzeugt eine Kopie von ausgewählten Systemparametern")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemErzeugtEineKopieVonAusgewahltenSystemparametern()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System erzeugt eine Kopie von ausgewählten Systemparametern", new string[] {
                        "Manuell"});
#line 96
this.ScenarioSetup(scenarioInfo);
#line 2
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
