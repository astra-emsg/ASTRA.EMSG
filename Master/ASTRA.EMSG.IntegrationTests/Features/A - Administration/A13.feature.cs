// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ASTRA.EMSG.IntegrationTests.Features.A_Administration
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("A13 - Für den summarischen Modus auswählen, welcher Mengentyp für meinen Mandante" +
        "n am UI angezeigt wird", Description="\tAls Benutzeradministrator,\r\n\twill ich für den summarischen Modus auswählen welch" +
        "er Mengentyp für meinen Mandanten am UI angezeigt wird\r\n\tdamit ich den Arbeitsau" +
        "fwand für die summarische Erfassung meines Mandanten steuern kann", SourceFile="Features\\A - Administration\\A13.feature", SourceLine=0)]
    public partial class A13_FurDenSummarischenModusAuswahlenWelcherMengentypFurMeinenMandantenAmUIAngezeigtWirdFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "A13.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "A13 - Für den summarischen Modus auswählen, welcher Mengentyp für meinen Mandante" +
                    "n am UI angezeigt wird", "\tAls Benutzeradministrator,\r\n\twill ich für den summarischen Modus auswählen welch" +
                    "er Mengentyp für meinen Mandanten am UI angezeigt wird\r\n\tdamit ich den Arbeitsau" +
                    "fwand für die summarische Erfassung meines Mandanten steuern kann", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Benutzeradministrator muss im Rahmen eines Moduswechsels zum summarischen Mod" +
            "us angeben, welcher Mengentyp für seinen Mandanten am UI angezeigt wird", new string[] {
                "Manuell"}, SourceLine=8)]
        public virtual void DerBenutzeradministratorMussImRahmenEinesModuswechselsZumSummarischenModusAngebenWelcherMengentypFurSeinenMandantenAmUIAngezeigtWird()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Benutzeradministrator muss im Rahmen eines Moduswechsels zum summarischen Mod" +
                    "us angeben, welcher Mengentyp für seinen Mandanten am UI angezeigt wird", new string[] {
                        "Manuell"});
#line 9
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table1.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 10
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table1, "Gegeben sei ");
#line 13
testRunner.And("ich bin Benutzeradministrator von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 14
testRunner.When("in den \'summarischen Modus\' wechsel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 15
testRunner.Then("kann ich den Mengentyp für meinen Mandanten auswählen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("A13 - Für den summarischen Modus auswählen, welcher Mengentyp für meinen Mandante" +
        "n am UI angezeigt wird")]
    public partial class A13_FurDenSummarischenModusAuswahlenWelcherMengentypFurMeinenMandantenAmUIAngezeigtWirdFeature_NUnit
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "A13.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "A13 - Für den summarischen Modus auswählen, welcher Mengentyp für meinen Mandante" +
                    "n am UI angezeigt wird", "\tAls Benutzeradministrator,\r\n\twill ich für den summarischen Modus auswählen welch" +
                    "er Mengentyp für meinen Mandanten am UI angezeigt wird\r\n\tdamit ich den Arbeitsau" +
                    "fwand für die summarische Erfassung meines Mandanten steuern kann", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Benutzeradministrator muss im Rahmen eines Moduswechsels zum summarischen Mod" +
            "us angeben, welcher Mengentyp für seinen Mandanten am UI angezeigt wird")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerBenutzeradministratorMussImRahmenEinesModuswechselsZumSummarischenModusAngebenWelcherMengentypFurSeinenMandantenAmUIAngezeigtWird()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Benutzeradministrator muss im Rahmen eines Moduswechsels zum summarischen Mod" +
                    "us angeben, welcher Mengentyp für seinen Mandanten am UI angezeigt wird", new string[] {
                        "Manuell"});
#line 9
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Modus"});
            table1.AddRow(new string[] {
                        "Mandant_1",
                        "strassennamen"});
#line 10
testRunner.Given("folgende Einstellungen existieren:", ((string)(null)), table1, "Gegeben sei ");
#line 13
testRunner.And("ich bin Benutzeradministrator von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 14
testRunner.When("in den \'summarischen Modus\' wechsel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 15
testRunner.Then("kann ich den Mengentyp für meinen Mandanten auswählen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
