// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ASTRA.EMSG.IntegrationTests.Features.A_Administration
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("A10 - Andere Benutzerrollen einnehmen können", Description="\tAls Applikationssupporter,\r\n\twill ich andere Benutzerrollen einnehmen können\r\n\td" +
        "amit ich bei Supportanfragen besser unterstützen kann", SourceFile="Features\\A - Administration\\A10.feature", SourceLine=0)]
    public partial class A10_AndereBenutzerrollenEinnehmenKonnenFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "A10.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "A10 - Andere Benutzerrollen einnehmen können", "\tAls Applikationssupporter,\r\n\twill ich andere Benutzerrollen einnehmen können\r\n\td" +
                    "amit ich bei Supportanfragen besser unterstützen kann", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line 8
testRunner.Given("ich bin Applikationssupporter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line hidden
        }
        
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen(string tF, string seite, string data_Manager, string data_Reader, string benutzeradministrator, string benchmarkteilnehmer, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Manuell"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen", @__tags);
#line 13
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Rolle"});
            table1.AddRow(new string[] {
                        "DataManager"});
            table1.AddRow(new string[] {
                        "DataReader"});
            table1.AddRow(new string[] {
                        "Benutzeradministrator"});
            table1.AddRow(new string[] {
                        "Benchmarkteilnehmer"});
#line 14
 testRunner.When("ich folgende Rolle einnehme", ((string)(null)), table1, "Wenn ");
#line 21
 testRunner.And(string.Format("ich die Seite \'{0}\' öffne", seite), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "DataManager",
                        "DataReader",
                        "Benutzeradministrator",
                        "Benchmarkteilnehmer"});
            table2.AddRow(new string[] {
                        string.Format("{0}", data_Manager),
                        string.Format("{0}", data_Reader),
                        string.Format("{0}", benutzeradministrator),
                        string.Format("{0}", benchmarkteilnehmer)});
#line 23
 testRunner.Then("habe ich Zugriff als", ((string)(null)), table2, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 1", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_1()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("1", "Strassenmenge und Zustand", "ja", "nein", "nein", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 3", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_3()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("3", "Netzdefinition (strassennamen)", "ja", "nein", "nein", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 4", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_4()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("4", "Netzdefinition (gis)", "ja", "nein", "nein", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 5", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_5()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("5", "Zustände und Massnahmenvorschläge (strassennamen)", "ja", "nein", "nein", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 6", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_6()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("6", "Zustände und Massnahmenvorschläge (gis)", "ja", "nein", "nein", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 7", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_7()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("7", "Inspektionsrouten", "ja", "nein", "nein", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 8", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_8()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("8", "Massnahmenvorschläge anderer Teilsysteme", "ja", "nein", "nein", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 9", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_9()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("9", "Koordinierte Massnahmen", "ja", "nein", "nein", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 10", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_10()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("10", "Realisierte Massnehmen (summarisch)", "ja", "nein", "nein", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 11", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_11()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("11", "Realisierte Massnehmen (strassennamen)", "ja", "nein", "nein", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 12", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_12()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("12", "Realisierte Massnehmen (gis)", "ja", "nein", "nein", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 13", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_13()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("13", "Kenngrössen früherer Jahre (summarisch)", "ja", "nein", "nein", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 14", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_14()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("14", "Kenngrössen früherer Jahre (strassennamen)", "ja", "nein", "nein", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 15", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_15()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("15", "Kenngrössen früherer Jahre (gis)", "ja", "nein", "nein", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 16", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_16()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("16", "Inventarauswertungen (summarisch)", "nein", "ja", "nein", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 17", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_17()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("17", "Inventarauswertungen (strassennamen)", "nein", "ja", "nein", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 18", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_18()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("18", "Inventarauswertungen (gis)", "nein", "ja", "nein", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 19", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_19()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("19", "Wiederbeschaffungswert- und Wertverlust-Auswertungen (summarisch)", "nein", "ja", "nein", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 20", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_20()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("20", "Wiederbeschaffungswert- und Wertverlust-Auswertungen (strassennamen)", "nein", "ja", "nein", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 21", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_21()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("21", "Wiederbeschaffungswert- und Wertverlust-Auswertungen (gis)", "nein", "ja", "nein", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 22", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_22()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("22", "Zustands- und Massnahmenvorschläge-Auswertungen (summarisch)", "nein", "ja", "nein", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 23", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_23()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("23", "Zustands- und Massnahmenvorschläge-Auswertungen (strassennamen)", "nein", "ja", "nein", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 24", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_24()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("24", "Zustands- und Massnahmenvorschläge-Auswertungen (gis)", "nein", "ja", "nein", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 25", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_25()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("25", "Massnahmenvorschläge anderer Teilsysteme und koordinierte Massnahmenvorschläge-Au" +
                    "swertungen (strassennamen)", "nein", "ja", "nein", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 26", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_26()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("26", "Massnahmenvorschläge anderer Teilsysteme und koordinierte Massnahmenvorschläge-Au" +
                    "swertungen (strassennamen)", "nein", "ja", "nein", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 27", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_27()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("27", "Massnahmenvorschläge anderer Teilsysteme und koordinierte Massnahmenvorschläge-Au" +
                    "swertungen (gis)", "nein", "ja", "nein", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 28", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_28()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("28", "Fortschreibungs-Auswertungen (summarisch)", "nein", "ja", "nein", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 29", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_29()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("29", "Fortschreibungs-Auswertungen (strassennamen)", "nein", "ja", "nein", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 30", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_30()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("30", "Fortschreibungs-Auswertungen (gis)", "nein", "ja", "nein", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 31", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_31()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("31", "Arbeitsmodus wechseln (summarisch)", "nein", "nein", "ja", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 32", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_32()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("32", "Arbeitsmodus wechseln (strassennamen)", "nein", "nein", "ja", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 33", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_33()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("33", "Arbeitsmodus wechseln (gis)", "nein", "nein", "ja", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 34", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_34()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("34", "Jahresabschluss (summarisch)", "nein", "nein", "ja", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 35", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_35()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("35", "Jahresabschluss (strassennamen)", "nein", "nein", "ja", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 36", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_36()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("36", "Jahresabschluss (gis)", "nein", "nein", "ja", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 37", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_37()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("37", "Achsenupdates", "nein", "nein", "ja", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 38", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_38()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("38", "Benchmarkteilnehmer (summarisch)", "nein", "nein", "ja", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 39", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_39()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("39", "Benchmarkteilnehmer (strassennamen)", "nein", "nein", "ja", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 40", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_40()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("40", "Benchmarkteilnehmer (gis)", "nein", "nein", "ja", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 41", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_41()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("41", "Mandantenspezifische Werte (summarisch)", "nein", "nein", "ja", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 42", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_42()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("42", "Mandantenspezifische Werte (strassennamen)", "nein", "nein", "ja", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 43", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_43()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("43", "Mandantenspezifische Werte (gis)", "nein", "nein", "ja", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 44", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_44()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("44", "Benchmarking (summarisch)", "nein", "nein", "nein", "ja", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 45", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_45()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("45", "Benchmarking (strassennamen)", "nein", "nein", "nein", "ja", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 46", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_46()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("46", "Benchmarking (gis)", "nein", "nein", "nein", "ja", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 47", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_47()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("47", "Systmparameter", "nein", "nein", "nein", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 48", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_48()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("48", "Mandanten-Einstellungen", "nein", "nein", "nein", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 49", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_49()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("49", "Applikations-Log", "nein", "nein", "nein", "nein", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen, 50", new string[] {
                "Manuell"}, SourceLine=28)]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen_50()
        {
            this.DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen("50", "Rolle einnehmen", "ja", "ja", "ja", "ja", ((string[])(null)));
#line hidden
        }
        
        public virtual void DasSystemLiefertDemApplikationssupporterDieselbeSichtAufEMSGDieAuchDerBenutzerDesMandantenHatDerDieEntsprechendeRolleInnehat(string tF, string mandant, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Manuell"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System liefert dem Applikationssupporter dieselbe Sicht auf EMSG, die auch de" +
                    "r Benutzer des Mandanten hat, der die entsprechende Rolle innehat", @__tags);
#line 82
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 83
testRunner.When(string.Format("ich die Rolle von \'{0}\' einnehme", mandant), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 84
testRunner.Then(string.Format("habe ich Zugriff als \'{0}\'", mandant), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System liefert dem Applikationssupporter dieselbe Sicht auf EMSG, die auch de" +
            "r Benutzer des Mandanten hat, der die entsprechende Rolle innehat, 1", new string[] {
                "Manuell"}, SourceLine=87)]
        public virtual void DasSystemLiefertDemApplikationssupporterDieselbeSichtAufEMSGDieAuchDerBenutzerDesMandantenHatDerDieEntsprechendeRolleInnehat_1()
        {
            this.DasSystemLiefertDemApplikationssupporterDieselbeSichtAufEMSGDieAuchDerBenutzerDesMandantenHatDerDieEntsprechendeRolleInnehat("1", "Mandant1", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System liefert dem Applikationssupporter dieselbe Sicht auf EMSG, die auch de" +
            "r Benutzer des Mandanten hat, der die entsprechende Rolle innehat, 2", new string[] {
                "Manuell"}, SourceLine=87)]
        public virtual void DasSystemLiefertDemApplikationssupporterDieselbeSichtAufEMSGDieAuchDerBenutzerDesMandantenHatDerDieEntsprechendeRolleInnehat_2()
        {
            this.DasSystemLiefertDemApplikationssupporterDieselbeSichtAufEMSGDieAuchDerBenutzerDesMandantenHatDerDieEntsprechendeRolleInnehat("2", "Mandant2", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System liefert dem Applikationssupporter dieselbe Sicht auf EMSG, die auch de" +
            "r Benutzer des Mandanten hat, der die entsprechende Rolle innehat, 3", new string[] {
                "Manuell"}, SourceLine=87)]
        public virtual void DasSystemLiefertDemApplikationssupporterDieselbeSichtAufEMSGDieAuchDerBenutzerDesMandantenHatDerDieEntsprechendeRolleInnehat_3()
        {
            this.DasSystemLiefertDemApplikationssupporterDieselbeSichtAufEMSGDieAuchDerBenutzerDesMandantenHatDerDieEntsprechendeRolleInnehat("3", "Mandant3", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Führt der Applikationssupporter mit einer Rolle des Mandanten Objektmutationen du" +
            "rch, die im Anwendungs-Log protokolliert werden, so protokolliert das System jed" +
            "enfalls den Namen des Applikationssupporters zur jeweiligen Objektmutation", new string[] {
                "Manuell"}, SourceLine=94)]
        public virtual void FuhrtDerApplikationssupporterMitEinerRolleDesMandantenObjektmutationenDurchDieImAnwendungs_LogProtokolliertWerdenSoProtokolliertDasSystemJedenfallsDenNamenDesApplikationssupportersZurJeweiligenObjektmutation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Führt der Applikationssupporter mit einer Rolle des Mandanten Objektmutationen du" +
                    "rch, die im Anwendungs-Log protokolliert werden, so protokolliert das System jed" +
                    "enfalls den Namen des Applikationssupporters zur jeweiligen Objektmutation", new string[] {
                        "Manuell"});
#line 95
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("A10 - Andere Benutzerrollen einnehmen können")]
    public partial class A10_AndereBenutzerrollenEinnehmenKonnenFeature_NUnit
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "A10.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "A10 - Andere Benutzerrollen einnehmen können", "\tAls Applikationssupporter,\r\n\twill ich andere Benutzerrollen einnehmen können\r\n\td" +
                    "amit ich bei Supportanfragen besser unterstützen kann", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 7
#line 8
testRunner.Given("ich bin Applikationssupporter", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Gegeben sei ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        [NUnit.Framework.TestCaseAttribute("1", "Strassenmenge und Zustand", "ja", "nein", "nein", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("3", "Netzdefinition (strassennamen)", "ja", "nein", "nein", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("4", "Netzdefinition (gis)", "ja", "nein", "nein", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("5", "Zustände und Massnahmenvorschläge (strassennamen)", "ja", "nein", "nein", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("6", "Zustände und Massnahmenvorschläge (gis)", "ja", "nein", "nein", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("7", "Inspektionsrouten", "ja", "nein", "nein", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("8", "Massnahmenvorschläge anderer Teilsysteme", "ja", "nein", "nein", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("9", "Koordinierte Massnahmen", "ja", "nein", "nein", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("10", "Realisierte Massnehmen (summarisch)", "ja", "nein", "nein", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("11", "Realisierte Massnehmen (strassennamen)", "ja", "nein", "nein", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("12", "Realisierte Massnehmen (gis)", "ja", "nein", "nein", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("13", "Kenngrössen früherer Jahre (summarisch)", "ja", "nein", "nein", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("14", "Kenngrössen früherer Jahre (strassennamen)", "ja", "nein", "nein", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("15", "Kenngrössen früherer Jahre (gis)", "ja", "nein", "nein", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("16", "Inventarauswertungen (summarisch)", "nein", "ja", "nein", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("17", "Inventarauswertungen (strassennamen)", "nein", "ja", "nein", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("18", "Inventarauswertungen (gis)", "nein", "ja", "nein", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("19", "Wiederbeschaffungswert- und Wertverlust-Auswertungen (summarisch)", "nein", "ja", "nein", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("20", "Wiederbeschaffungswert- und Wertverlust-Auswertungen (strassennamen)", "nein", "ja", "nein", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("21", "Wiederbeschaffungswert- und Wertverlust-Auswertungen (gis)", "nein", "ja", "nein", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("22", "Zustands- und Massnahmenvorschläge-Auswertungen (summarisch)", "nein", "ja", "nein", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("23", "Zustands- und Massnahmenvorschläge-Auswertungen (strassennamen)", "nein", "ja", "nein", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("24", "Zustands- und Massnahmenvorschläge-Auswertungen (gis)", "nein", "ja", "nein", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("25", "Massnahmenvorschläge anderer Teilsysteme und koordinierte Massnahmenvorschläge-Au" +
            "swertungen (strassennamen)", "nein", "ja", "nein", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("26", "Massnahmenvorschläge anderer Teilsysteme und koordinierte Massnahmenvorschläge-Au" +
            "swertungen (strassennamen)", "nein", "ja", "nein", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("27", "Massnahmenvorschläge anderer Teilsysteme und koordinierte Massnahmenvorschläge-Au" +
            "swertungen (gis)", "nein", "ja", "nein", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("28", "Fortschreibungs-Auswertungen (summarisch)", "nein", "ja", "nein", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("29", "Fortschreibungs-Auswertungen (strassennamen)", "nein", "ja", "nein", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("30", "Fortschreibungs-Auswertungen (gis)", "nein", "ja", "nein", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("31", "Arbeitsmodus wechseln (summarisch)", "nein", "nein", "ja", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("32", "Arbeitsmodus wechseln (strassennamen)", "nein", "nein", "ja", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("33", "Arbeitsmodus wechseln (gis)", "nein", "nein", "ja", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("34", "Jahresabschluss (summarisch)", "nein", "nein", "ja", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("35", "Jahresabschluss (strassennamen)", "nein", "nein", "ja", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("36", "Jahresabschluss (gis)", "nein", "nein", "ja", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("37", "Achsenupdates", "nein", "nein", "ja", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("38", "Benchmarkteilnehmer (summarisch)", "nein", "nein", "ja", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("39", "Benchmarkteilnehmer (strassennamen)", "nein", "nein", "ja", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("40", "Benchmarkteilnehmer (gis)", "nein", "nein", "ja", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("41", "Mandantenspezifische Werte (summarisch)", "nein", "nein", "ja", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("42", "Mandantenspezifische Werte (strassennamen)", "nein", "nein", "ja", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("43", "Mandantenspezifische Werte (gis)", "nein", "nein", "ja", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("44", "Benchmarking (summarisch)", "nein", "nein", "nein", "ja", new string[0])]
        [NUnit.Framework.TestCaseAttribute("45", "Benchmarking (strassennamen)", "nein", "nein", "nein", "ja", new string[0])]
        [NUnit.Framework.TestCaseAttribute("46", "Benchmarking (gis)", "nein", "nein", "nein", "ja", new string[0])]
        [NUnit.Framework.TestCaseAttribute("47", "Systmparameter", "nein", "nein", "nein", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("48", "Mandanten-Einstellungen", "nein", "nein", "nein", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("49", "Applikations-Log", "nein", "nein", "nein", "nein", new string[0])]
        [NUnit.Framework.TestCaseAttribute("50", "Rolle einnehmen", "ja", "ja", "ja", "ja", new string[0])]
        public virtual void DerApplikationssupporterKannBeliebigeRollenEinesMandantenEinnehmen(string tF, string seite, string data_Manager, string data_Reader, string benutzeradministrator, string benchmarkteilnehmer, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Manuell"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Applikationssupporter kann beliebige Rollen eines Mandanten einnehmen", @__tags);
#line 13
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Rolle"});
            table1.AddRow(new string[] {
                        "DataManager"});
            table1.AddRow(new string[] {
                        "DataReader"});
            table1.AddRow(new string[] {
                        "Benutzeradministrator"});
            table1.AddRow(new string[] {
                        "Benchmarkteilnehmer"});
#line 14
 testRunner.When("ich folgende Rolle einnehme", ((string)(null)), table1, "Wenn ");
#line 21
 testRunner.And(string.Format("ich die Seite \'{0}\' öffne", seite), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "DataManager",
                        "DataReader",
                        "Benutzeradministrator",
                        "Benchmarkteilnehmer"});
            table2.AddRow(new string[] {
                        string.Format("{0}", data_Manager),
                        string.Format("{0}", data_Reader),
                        string.Format("{0}", benutzeradministrator),
                        string.Format("{0}", benchmarkteilnehmer)});
#line 23
 testRunner.Then("habe ich Zugriff als", ((string)(null)), table2, "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System liefert dem Applikationssupporter dieselbe Sicht auf EMSG, die auch de" +
            "r Benutzer des Mandanten hat, der die entsprechende Rolle innehat")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        [NUnit.Framework.TestCaseAttribute("1", "Mandant1", new string[0])]
        [NUnit.Framework.TestCaseAttribute("2", "Mandant2", new string[0])]
        [NUnit.Framework.TestCaseAttribute("3", "Mandant3", new string[0])]
        public virtual void DasSystemLiefertDemApplikationssupporterDieselbeSichtAufEMSGDieAuchDerBenutzerDesMandantenHatDerDieEntsprechendeRolleInnehat(string tF, string mandant, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "Manuell"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System liefert dem Applikationssupporter dieselbe Sicht auf EMSG, die auch de" +
                    "r Benutzer des Mandanten hat, der die entsprechende Rolle innehat", @__tags);
#line 82
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line 83
testRunner.When(string.Format("ich die Rolle von \'{0}\' einnehme", mandant), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 84
testRunner.Then(string.Format("habe ich Zugriff als \'{0}\'", mandant), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Führt der Applikationssupporter mit einer Rolle des Mandanten Objektmutationen du" +
            "rch, die im Anwendungs-Log protokolliert werden, so protokolliert das System jed" +
            "enfalls den Namen des Applikationssupporters zur jeweiligen Objektmutation")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void FuhrtDerApplikationssupporterMitEinerRolleDesMandantenObjektmutationenDurchDieImAnwendungs_LogProtokolliertWerdenSoProtokolliertDasSystemJedenfallsDenNamenDesApplikationssupportersZurJeweiligenObjektmutation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Führt der Applikationssupporter mit einer Rolle des Mandanten Objektmutationen du" +
                    "rch, die im Anwendungs-Log protokolliert werden, so protokolliert das System jed" +
                    "enfalls den Namen des Applikationssupporters zur jeweiligen Objektmutation", new string[] {
                        "Manuell"});
#line 95
this.ScenarioSetup(scenarioInfo);
#line 7
this.FeatureBackground();
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
