// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ASTRA.EMSG.IntegrationTests.Features.A_Administration
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("A3 - Den Arbeitsmodus für meinen Mandanten wechseln", Description="\tAls Benutzeradministrator,\r\n\twill ich den Arbeitsmodus für meinen Mandanten wech" +
        "seln\r\n\tdamit meine Gemeinde Daten in einer anderer Detaillierungsstufe erfassen " +
        "kann", SourceFile="Features\\A - Administration\\A3.feature", SourceLine=0)]
    public partial class A3_DenArbeitsmodusFurMeinenMandantenWechselnFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "A3.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "A3 - Den Arbeitsmodus für meinen Mandanten wechseln", "\tAls Benutzeradministrator,\r\n\twill ich den Arbeitsmodus für meinen Mandanten wech" +
                    "seln\r\n\tdamit meine Gemeinde Daten in einer anderer Detaillierungsstufe erfassen " +
                    "kann", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Benutzeradministrator kann den Arbeitsmodus seines Mandanten jederzeit ändern" +
            "", new string[] {
                "Manuell"}, SourceLine=8)]
        public virtual void DerBenutzeradministratorKannDenArbeitsmodusSeinesMandantenJederzeitAndern()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Benutzeradministrator kann den Arbeitsmodus seines Mandanten jederzeit ändern" +
                    "", new string[] {
                        "Manuell"});
#line 9
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Das System ändert den Arbeitsmodus für das aktuelle Jahr", new string[] {
                "Manuell"}, SourceLine=13)]
        public virtual void DasSystemAndertDenArbeitsmodusFurDasAktuelleJahr()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System ändert den Arbeitsmodus für das aktuelle Jahr", new string[] {
                        "Manuell"});
#line 14
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Der Data-Manager kann historische Daten immer noch einsehen", new string[] {
                "Manuell"}, SourceLine=18)]
        public virtual void DerData_ManagerKannHistorischeDatenImmerNochEinsehen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann historische Daten immer noch einsehen", new string[] {
                        "Manuell"});
#line 19
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Bei Änderung des Arbeitsmodus bleiben vorhandene Daten von anderen Arbeitsmodi ge" +
            "speichert", new string[] {
                "Manuell"}, SourceLine=23)]
        public virtual void BeiAnderungDesArbeitsmodusBleibenVorhandeneDatenVonAnderenArbeitsmodiGespeichert()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Bei Änderung des Arbeitsmodus bleiben vorhandene Daten von anderen Arbeitsmodi ge" +
                    "speichert", new string[] {
                        "Manuell"});
#line 24
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("A3 - Den Arbeitsmodus für meinen Mandanten wechseln")]
    public partial class A3_DenArbeitsmodusFurMeinenMandantenWechselnFeature_NUnit
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "A3.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "A3 - Den Arbeitsmodus für meinen Mandanten wechseln", "\tAls Benutzeradministrator,\r\n\twill ich den Arbeitsmodus für meinen Mandanten wech" +
                    "seln\r\n\tdamit meine Gemeinde Daten in einer anderer Detaillierungsstufe erfassen " +
                    "kann", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Benutzeradministrator kann den Arbeitsmodus seines Mandanten jederzeit ändern" +
            "")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerBenutzeradministratorKannDenArbeitsmodusSeinesMandantenJederzeitAndern()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Benutzeradministrator kann den Arbeitsmodus seines Mandanten jederzeit ändern" +
                    "", new string[] {
                        "Manuell"});
#line 9
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Das System ändert den Arbeitsmodus für das aktuelle Jahr")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DasSystemAndertDenArbeitsmodusFurDasAktuelleJahr()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Das System ändert den Arbeitsmodus für das aktuelle Jahr", new string[] {
                        "Manuell"});
#line 14
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Der Data-Manager kann historische Daten immer noch einsehen")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void DerData_ManagerKannHistorischeDatenImmerNochEinsehen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Der Data-Manager kann historische Daten immer noch einsehen", new string[] {
                        "Manuell"});
#line 19
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Bei Änderung des Arbeitsmodus bleiben vorhandene Daten von anderen Arbeitsmodi ge" +
            "speichert")]
        [NUnit.Framework.CategoryAttribute("Manuell")]
        public virtual void BeiAnderungDesArbeitsmodusBleibenVorhandeneDatenVonAnderenArbeitsmodiGespeichert()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Bei Änderung des Arbeitsmodus bleiben vorhandene Daten von anderen Arbeitsmodi ge" +
                    "speichert", new string[] {
                        "Manuell"});
#line 24
this.ScenarioSetup(scenarioInfo);
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
