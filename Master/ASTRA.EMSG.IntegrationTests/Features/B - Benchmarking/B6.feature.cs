// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ASTRA.EMSG.IntegrationTests.Features.B_Benchmarking
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("B6 – eine Benchmarkauswertung zu meinen Kennwerten der realisierten Massnahmen er" +
        "halten", new string[] {
            "Automatisch"}, Description="\tAls Benchmarkteilnehmer,\r\n    will ich eine Benchmarkauswertung zu meinen Kennwe" +
        "rten der realisierten Massnahmen erhalten\r\n    damit die Werte meiner Gemeinde m" +
        "it anderen Gemeinden vergleichen kann", SourceFile="Features\\B - Benchmarking\\B6.feature", SourceLine=1)]
    public partial class B6EineBenchmarkauswertungZuMeinenKennwertenDerRealisiertenMassnahmenErhaltenFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "B6.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "B6 – eine Benchmarkauswertung zu meinen Kennwerten der realisierten Massnahmen er" +
                    "halten", "\tAls Benchmarkteilnehmer,\r\n    will ich eine Benchmarkauswertung zu meinen Kennwe" +
                    "rten der realisierten Massnahmen erhalten\r\n    damit die Werte meiner Gemeinde m" +
                    "it anderen Gemeinden vergleichen kann", ProgrammingLanguage.CSharp, new string[] {
                        "Automatisch"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute(@"Das System stellt sicher, dass die Benchmarkauswertung zu meinen Kennwerten der realisierten Massnahmen nur dann erzeugt wird, wenn zumindest 5 Gemeinden (4 zusätzliche zu der Gemeinde des Benchmarkteilnehmers) für die Benchmarkauswertung herangezogen werden können", SourceLine=8)]
        public virtual void DasSystemStelltSicherDassDieBenchmarkauswertungZuMeinenKennwertenDerRealisiertenMassnahmenNurDannErzeugtWirdWennZumindest5Gemeinden4ZusatzlicheZuDerGemeindeDesBenchmarkteilnehmersFurDieBenchmarkauswertungHerangezogenWerdenKonnen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"Das System stellt sicher, dass die Benchmarkauswertung zu meinen Kennwerten der realisierten Massnahmen nur dann erzeugt wird, wenn zumindest 5 Gemeinden (4 zusätzliche zu der Gemeinde des Benchmarkteilnehmers) für die Benchmarkauswertung herangezogen werden können", ((string[])(null)));
#line 9
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Einwohner",
                        "Siedlungsflaeche",
                        "Gemeindeflaeche",
                        "Gemeindetyp",
                        "MittlereHöhenlageSiedlungsgebiete",
                        "DifferenzHöhenlageSiedlungsgebiete",
                        "Steuerertrag",
                        "OeffentlicheVerkehrsmittel"});
            table1.AddRow(new string[] {
                        "Mandant_1",
                        "1420",
                        "25",
                        "26",
                        "Zentrum",
                        "167",
                        "23",
                        "12345",
                        "Vorhanden"});
            table1.AddRow(new string[] {
                        "Mandant_2",
                        "5000",
                        "71",
                        "100",
                        "Periurbane",
                        "279",
                        "17",
                        "54321",
                        "Vorhanden"});
            table1.AddRow(new string[] {
                        "Mandant_3",
                        "1500",
                        "12",
                        "20",
                        "Agrargemischte",
                        "920",
                        "55",
                        "99999",
                        "Vorhanden"});
            table1.AddRow(new string[] {
                        "Mandant_4",
                        "2533",
                        "14",
                        "15",
                        "Industrielle",
                        "860",
                        "150",
                        "10000",
                        "Vorhanden"});
            table1.AddRow(new string[] {
                        "Mandant_5",
                        "1378",
                        "5",
                        "7",
                        "Agrargemischte",
                        "550",
                        "8",
                        "12000",
                        "Vorhanden"});
            table1.AddRow(new string[] {
                        "Mandant_6",
                        "1234",
                        "21",
                        "25",
                        "Agrargemischte",
                        "620",
                        "45",
                        "80000",
                        "Vorhanden"});
            table1.AddRow(new string[] {
                        "Mandant_7",
                        "160",
                        "11",
                        "16",
                        "Laendliche",
                        "1100",
                        "120",
                        "5000",
                        "NichtVorhanden"});
            table1.AddRow(new string[] {
                        "Mandant_8",
                        "40000",
                        "33",
                        "123",
                        "Einkommensstarke",
                        "170",
                        "2",
                        "777000",
                        "Vorhanden"});
#line 10
testRunner.Given("folgende Einstellungen für Benchmarkauswertung existieren:", ((string)(null)), table1, "Gegeben sei ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Jahr",
                        "Projektname",
                        "Belastungskategorie",
                        "Fahrbahnflaeche",
                        "KostenFahrbahn"});
            table2.AddRow(new string[] {
                        "Mandant_2",
                        "2012",
                        "Projektname1",
                        "IA",
                        "15000",
                        "15000"});
            table2.AddRow(new string[] {
                        "Mandant_2",
                        "2012",
                        "Projektname2",
                        "IB",
                        "20000",
                        "20000"});
            table2.AddRow(new string[] {
                        "Mandant_2",
                        "2012",
                        "Projektname3",
                        "IC",
                        "30000",
                        "30000"});
#line 22
testRunner.And("die folgende RealisierteMassnahmeSummarsich existieren:", ((string)(null)), table2, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Jahr",
                        "Projektname",
                        "Belastungskategorie",
                        "Laenge",
                        "BreiteFahrbahn",
                        "KostenFahrbahn"});
            table3.AddRow(new string[] {
                        "Mandant_1",
                        "2012",
                        "Projektname1",
                        "IA",
                        "1500",
                        "10",
                        "15000"});
            table3.AddRow(new string[] {
                        "Mandant_1",
                        "2012",
                        "Projektname2",
                        "IB",
                        "2000",
                        "20",
                        "20000"});
            table3.AddRow(new string[] {
                        "Mandant_1",
                        "2012",
                        "Projektname3",
                        "IC",
                        "3000",
                        "30",
                        "30000"});
#line 27
testRunner.And("die folgende RealisierteMassnahme existieren:", ((string)(null)), table3, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Jahr",
                        "Projektname",
                        "Belastungskategorie",
                        "Laenge",
                        "BreiteFahrbahn",
                        "KostenFahrbahn"});
            table4.AddRow(new string[] {
                        "Mandant_2",
                        "2012",
                        "Projektname1",
                        "IA",
                        "1500",
                        "10",
                        "15000"});
            table4.AddRow(new string[] {
                        "Mandant_2",
                        "2012",
                        "Projektname2",
                        "IB",
                        "2000",
                        "20",
                        "20000"});
            table4.AddRow(new string[] {
                        "Mandant_2",
                        "2012",
                        "Projektname3",
                        "IC",
                        "3000",
                        "30",
                        "30000"});
#line 32
testRunner.And("die folgende RealisierteMassnahmeGIS existieren:", ((string)(null)), table4, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Jahr",
                        "Belastungskategorie",
                        "MittlererZustand",
                        "Fahrbahnlaenge",
                        "Fahrbahnflaeche",
                        "KostenFuerWerterhaltung"});
            table5.AddRow(new string[] {
                        "Mandant_2",
                        "2012",
                        "IA",
                        "1,3",
                        "100",
                        "475",
                        "15000"});
            table5.AddRow(new string[] {
                        "Mandant_2",
                        "2012",
                        "IB",
                        "2,6",
                        "300",
                        "1725",
                        "20000"});
            table5.AddRow(new string[] {
                        "Mandant_2",
                        "2012",
                        "IC",
                        "4,6",
                        "10000",
                        "70000",
                        "30000"});
#line 37
testRunner.And("die folgenden KenngroessenFruehererJahre existieren:", ((string)(null)), table5, "Und ");
#line 43
testRunner.And("ich bin Benchmarkteilnehmer von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 44
testRunner.When("ich die Benchmarkauswertung zu meinen Kennwerten der realisierten Massnahmen für " +
                    "das Jahre \'2012\' unter Berücksichtigung der Klassen \'Netzgrosse,Gemeinde\' generi" +
                    "ere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 58
testRunner.Then("informiert mich das System, dass zu wenige Mandanten für die Benchmarkauswertung " +
                    "zur Verfügung stehen und die Auswertung nicht generiert werden kann", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("B6 – eine Benchmarkauswertung zu meinen Kennwerten der realisierten Massnahmen er" +
        "halten")]
    [NUnit.Framework.CategoryAttribute("Automatisch")]
    public partial class B6EineBenchmarkauswertungZuMeinenKennwertenDerRealisiertenMassnahmenErhaltenFeature_NUnit
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "B6.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-AT"), "B6 – eine Benchmarkauswertung zu meinen Kennwerten der realisierten Massnahmen er" +
                    "halten", "\tAls Benchmarkteilnehmer,\r\n    will ich eine Benchmarkauswertung zu meinen Kennwe" +
                    "rten der realisierten Massnahmen erhalten\r\n    damit die Werte meiner Gemeinde m" +
                    "it anderen Gemeinden vergleichen kann", ProgrammingLanguage.CSharp, new string[] {
                        "Automatisch"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute(@"Das System stellt sicher, dass die Benchmarkauswertung zu meinen Kennwerten der realisierten Massnahmen nur dann erzeugt wird, wenn zumindest 5 Gemeinden (4 zusätzliche zu der Gemeinde des Benchmarkteilnehmers) für die Benchmarkauswertung herangezogen werden können")]
        public virtual void DasSystemStelltSicherDassDieBenchmarkauswertungZuMeinenKennwertenDerRealisiertenMassnahmenNurDannErzeugtWirdWennZumindest5Gemeinden4ZusatzlicheZuDerGemeindeDesBenchmarkteilnehmersFurDieBenchmarkauswertungHerangezogenWerdenKonnen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"Das System stellt sicher, dass die Benchmarkauswertung zu meinen Kennwerten der realisierten Massnahmen nur dann erzeugt wird, wenn zumindest 5 Gemeinden (4 zusätzliche zu der Gemeinde des Benchmarkteilnehmers) für die Benchmarkauswertung herangezogen werden können", ((string[])(null)));
#line 9
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Einwohner",
                        "Siedlungsflaeche",
                        "Gemeindeflaeche",
                        "Gemeindetyp",
                        "MittlereHöhenlageSiedlungsgebiete",
                        "DifferenzHöhenlageSiedlungsgebiete",
                        "Steuerertrag",
                        "OeffentlicheVerkehrsmittel"});
            table1.AddRow(new string[] {
                        "Mandant_1",
                        "1420",
                        "25",
                        "26",
                        "Zentrum",
                        "167",
                        "23",
                        "12345",
                        "Vorhanden"});
            table1.AddRow(new string[] {
                        "Mandant_2",
                        "5000",
                        "71",
                        "100",
                        "Periurbane",
                        "279",
                        "17",
                        "54321",
                        "Vorhanden"});
            table1.AddRow(new string[] {
                        "Mandant_3",
                        "1500",
                        "12",
                        "20",
                        "Agrargemischte",
                        "920",
                        "55",
                        "99999",
                        "Vorhanden"});
            table1.AddRow(new string[] {
                        "Mandant_4",
                        "2533",
                        "14",
                        "15",
                        "Industrielle",
                        "860",
                        "150",
                        "10000",
                        "Vorhanden"});
            table1.AddRow(new string[] {
                        "Mandant_5",
                        "1378",
                        "5",
                        "7",
                        "Agrargemischte",
                        "550",
                        "8",
                        "12000",
                        "Vorhanden"});
            table1.AddRow(new string[] {
                        "Mandant_6",
                        "1234",
                        "21",
                        "25",
                        "Agrargemischte",
                        "620",
                        "45",
                        "80000",
                        "Vorhanden"});
            table1.AddRow(new string[] {
                        "Mandant_7",
                        "160",
                        "11",
                        "16",
                        "Laendliche",
                        "1100",
                        "120",
                        "5000",
                        "NichtVorhanden"});
            table1.AddRow(new string[] {
                        "Mandant_8",
                        "40000",
                        "33",
                        "123",
                        "Einkommensstarke",
                        "170",
                        "2",
                        "777000",
                        "Vorhanden"});
#line 10
testRunner.Given("folgende Einstellungen für Benchmarkauswertung existieren:", ((string)(null)), table1, "Gegeben sei ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Jahr",
                        "Projektname",
                        "Belastungskategorie",
                        "Fahrbahnflaeche",
                        "KostenFahrbahn"});
            table2.AddRow(new string[] {
                        "Mandant_2",
                        "2012",
                        "Projektname1",
                        "IA",
                        "15000",
                        "15000"});
            table2.AddRow(new string[] {
                        "Mandant_2",
                        "2012",
                        "Projektname2",
                        "IB",
                        "20000",
                        "20000"});
            table2.AddRow(new string[] {
                        "Mandant_2",
                        "2012",
                        "Projektname3",
                        "IC",
                        "30000",
                        "30000"});
#line 22
testRunner.And("die folgende RealisierteMassnahmeSummarsich existieren:", ((string)(null)), table2, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Jahr",
                        "Projektname",
                        "Belastungskategorie",
                        "Laenge",
                        "BreiteFahrbahn",
                        "KostenFahrbahn"});
            table3.AddRow(new string[] {
                        "Mandant_1",
                        "2012",
                        "Projektname1",
                        "IA",
                        "1500",
                        "10",
                        "15000"});
            table3.AddRow(new string[] {
                        "Mandant_1",
                        "2012",
                        "Projektname2",
                        "IB",
                        "2000",
                        "20",
                        "20000"});
            table3.AddRow(new string[] {
                        "Mandant_1",
                        "2012",
                        "Projektname3",
                        "IC",
                        "3000",
                        "30",
                        "30000"});
#line 27
testRunner.And("die folgende RealisierteMassnahme existieren:", ((string)(null)), table3, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Jahr",
                        "Projektname",
                        "Belastungskategorie",
                        "Laenge",
                        "BreiteFahrbahn",
                        "KostenFahrbahn"});
            table4.AddRow(new string[] {
                        "Mandant_2",
                        "2012",
                        "Projektname1",
                        "IA",
                        "1500",
                        "10",
                        "15000"});
            table4.AddRow(new string[] {
                        "Mandant_2",
                        "2012",
                        "Projektname2",
                        "IB",
                        "2000",
                        "20",
                        "20000"});
            table4.AddRow(new string[] {
                        "Mandant_2",
                        "2012",
                        "Projektname3",
                        "IC",
                        "3000",
                        "30",
                        "30000"});
#line 32
testRunner.And("die folgende RealisierteMassnahmeGIS existieren:", ((string)(null)), table4, "Und ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Mandant",
                        "Jahr",
                        "Belastungskategorie",
                        "MittlererZustand",
                        "Fahrbahnlaenge",
                        "Fahrbahnflaeche",
                        "KostenFuerWerterhaltung"});
            table5.AddRow(new string[] {
                        "Mandant_2",
                        "2012",
                        "IA",
                        "1,3",
                        "100",
                        "475",
                        "15000"});
            table5.AddRow(new string[] {
                        "Mandant_2",
                        "2012",
                        "IB",
                        "2,6",
                        "300",
                        "1725",
                        "20000"});
            table5.AddRow(new string[] {
                        "Mandant_2",
                        "2012",
                        "IC",
                        "4,6",
                        "10000",
                        "70000",
                        "30000"});
#line 37
testRunner.And("die folgenden KenngroessenFruehererJahre existieren:", ((string)(null)), table5, "Und ");
#line 43
testRunner.And("ich bin Benchmarkteilnehmer von \'Mandant_1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Und ");
#line 44
testRunner.When("ich die Benchmarkauswertung zu meinen Kennwerten der realisierten Massnahmen für " +
                    "das Jahre \'2012\' unter Berücksichtigung der Klassen \'Netzgrosse,Gemeinde\' generi" +
                    "ere", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Wenn ");
#line 58
testRunner.Then("informiert mich das System, dass zu wenige Mandanten für die Benchmarkauswertung " +
                    "zur Verfügung stehen und die Auswertung nicht generiert werden kann", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
